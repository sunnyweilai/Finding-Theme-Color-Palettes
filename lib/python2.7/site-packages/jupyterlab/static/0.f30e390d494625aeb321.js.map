{"version":3,"sources":["webpack:///./~/vega/src/core/View.js","webpack:///./~/datalib/src/aggregate/collector.js","webpack:///./~/vega-lite/src/shorthand.js","webpack:///./~/vega-scenegraph/src/path/arc.js","webpack:///./~/vega/src/transforms/Sort.js","webpack:///./~/vega-lite/src/compile/mark/mark.js","webpack:///./~/d3-format/build/d3-format.js","webpack:///./~/vega-scenegraph/src/util/Gradient.js","webpack:///./~/vega-lite/src/compile/data/filter.js","webpack:///./~/datalib/src/aggregate/measures.js","webpack:///./~/vega-scenegraph/src/render/canvas/CanvasHandler.js","webpack:///./~/vega/src/transforms/Voronoi.js","webpack:///./~/vega-dataflow/src/Node.js","webpack:///./~/vega-scenegraph/src/util/scene.js","webpack:///./~/vega-scenegraph/src/util/text.js","webpack:///./~/vega/src/transforms/Aggregate.js","webpack:///./~/datalib/src/accessor.js","webpack:///./~/vega/src/transforms/Transform.js","webpack:///./~/vega-expression/src/codegen.js","webpack:///./~/vega/src/transforms/Pie.js","webpack:///./~/datalib/src/import/load.js","webpack:///./~/vega/src/transforms/CountPattern.js","webpack:///./~/vega/src/parse/streams.js","webpack:///./~/vega-lite/src/compile/data/timeunit.js","webpack:///./~/vega-lite/src/vega.schema.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/path.js","webpack:///./~/vega-scenegraph/src/util/BoundsContext.js","webpack:///./~/vega/src/core/config.js","webpack:///./~/vega-lite/src/compile/mark/rule.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/image.js","webpack:///./~/vega/src/parse/marks.js","webpack:///./~/vega-scenegraph/src/render/svg/index.js","webpack:///./~/vega-scenegraph/src/render/svg/SVGStringRenderer.js","webpack:///./~/vega-dataflow/src/Graph.js","webpack:///./~/vega/src/transforms/Treemap.js","webpack:///./~/vega-dataflow/src/Collector.js","webpack:///./~/vega/src/scene/GroupBuilder.js","webpack:///./~/vega/src/transforms/Filter.js","webpack:///./~/vega-scenegraph/src/util/bound.js","webpack:///./~/vega/src/transforms/index.js","webpack:///./~/vega/src/scene/legend.js","webpack:///./~/vega/src/core/schema.js","webpack:///./~/vega-dataflow/src/Dependencies.js","webpack:///./~/vega/src/parse/transforms.js","webpack:///./~/vega-lite/src/spec.js","webpack:///./~/vega-lite/src/bin.js","webpack:///./~/vega-lite/src/scale.js","webpack:///./~/vega-lite/src/compile/mark/text.js","webpack:///./~/vega/src/transforms/Wordcloud.js","webpack:///./~/datalib/src/format.js","webpack:///./~/vega-expression/src/parser.js","webpack:///./~/vega-lite/src/compile/mark/line.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/rect.js","webpack:///./~/vega-lite/src/compile/axis.js","webpack:///./~/vega-dataflow/src/index.js","webpack:///./~/vega-lite/src/compile/facet.js","webpack:///./~/vega-logging/index.js","webpack:///./~/vega-dataflow/src/Signal.js","webpack:///./~/vega-dataflow/src/Heap.js","webpack:///./~/vega-scenegraph/src/index.js","webpack:///./~/vega/src/scene/Transition.js","webpack:///./~/vega/src/transforms/screen.js","webpack:///./~/vega-expression/src/constants.js","webpack:///./~/vega/src/transforms/Fold.js","webpack:///./~/vega-lite/src/compile/common.js","webpack:///./~/vega/src/scene/Scale.js","webpack:///./~/datalib/package.json","webpack:///./~/d3-cloud/index.js","webpack:///./~/vega/src/parse/padding.js","webpack:///./~/vega/src/parse/data.js","webpack:///./~/vega-lite/src/channel.js","webpack:///./~/vega/src/transforms/Impute.js","webpack:///./~/vega/src/core/Model.js","webpack:///./~/vega-lite/src/config.js","webpack:///./~/vega-lite/src/compile/data/summary.js","webpack:///./~/vega-lite/src/encoding.js","webpack:///./~/vega/src/scene/visit.js","webpack:///./~/vega/src/transforms/Facetor.js","webpack:///./~/vega-embed/src/post.js","webpack:///./~/vega/src/transforms/Bin.js","webpack:///./~/vega/src/parse/signals.js","webpack:///./~/datalib/~/d3-dsv/build/d3-dsv.js","webpack:///./~/vega-lite/src/compile/mark/bar.js","webpack:///./~/vega/src/parse/mark.js","webpack:///./~/vega/src/transforms/Hierarchy.js","webpack:///./~/vega-lite/src/compile/scale.js","webpack:///./~/vega/src/transforms/Formula.js","webpack:///./~/vega/src/parse/expr.js","webpack:///./~/vega/src/parse/index.js","webpack:///./~/vega/src/transforms/Facet.js","webpack:///./~/vega-lite/src/validate.js","webpack:///./~/vega-lite/src/compile/data/data.js","webpack:///./~/vega-scenegraph/src/render/Handler.js","webpack:///./~/vega/src/scene/Builder.js","webpack:///./~/vega/src/parse/axes.js","webpack:///./~/vega-scenegraph/src/render/index.js","webpack:///./~/vega-scenegraph/src/util/canvas.js","webpack:///./~/vega-lite/src/type.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/text.js","webpack:///./~/vega-lite/src/compile/layer.js","webpack:///./~/vega-lite/src/compile/mark/tick.js","webpack:///./~/vega-event-selector/index.js","webpack:///./~/vega/src/scene/Encoder.js","webpack:///./~/vega-lite/src/compile/layout.js","webpack:///./~/datalib/src/import/read.js","webpack:///./~/vega-embed/src/embed.js","webpack:///./~/datalib/src/generate.js","webpack:///./~/vega/src/util/theme-val.js","webpack:///./~/vega/index.js","webpack:///./~/datalib/src/import/formats/topojson.js","webpack:///./~/vega-lite/src/util.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/group.js","webpack:///./~/vega-lite/src/legend.js","webpack:///./~/d3/d3.js","webpack:///./~/vega-scenegraph/src/render/Renderer.js","webpack:///./~/d3-time/build/d3-time.js","webpack:///./~/vega/src/transforms/BatchTransform.js","webpack:///./~/vega-scenegraph/src/path/render.js","webpack:///./~/d3-time-format/build/d3-time-format.js","webpack:///./~/vega-lite/src/axis.js","webpack:///./~/vega/src/transforms/Geo.js","webpack:///./~/datalib/src/import/formats/json.js","webpack:///./~/vega-scenegraph/src/path/parse.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/line.js","webpack:///./~/vega/src/transforms/Lookup.js","webpack:///./~/vega/src/transforms/Treeify.js","webpack:///./~/vega-dataflow/src/ChangeSet.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/arc.js","webpack:///./~/vega-lite/src/stack.js","webpack:///./~/vega/src/transforms/Parameter.js","webpack:///./~/vega/src/parse/background.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/util.js","webpack:///./~/datalib/src/import/type.js","webpack:///./~/datalib/src/import/readers.js","webpack:///./~/vega-dataflow/src/Tuple.js","webpack:///./~/vega-lite/src/aggregate.js","webpack:///./~/vega/src/parse/properties.js","webpack:///./~/vega-lite/src/compile/data/formatparse.js","webpack:///./~/vega/src/util/format.js","webpack:///./~/vega-scenegraph/src/util/Item.js","webpack:///./~/vega-lite/src/mark.js","webpack:///./~/vega-lite/src/compile/model.js","webpack:///./~/vega-lite/src/compile/data/source.js","webpack:///./~/vega-expression/src/index.js","webpack:///./~/datalib/src/import/formats/treejson.js","webpack:///./~/vega/src/transforms/Cross.js","webpack:///./~/vega-lite/src/compile/legend.js","webpack:///./~/d3-dispatch/src/dispatch.js","webpack:///./~/vega-lite/src/compile/mark/area.js","webpack:///./~/vega-lite/src/compile/data/timeunitdomain.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/index.js","webpack:///./~/vega-lite/src/compile/data/stackscale.js","webpack:///./~/vega/src/scene/axis.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/area.js","webpack:///./~/datalib/src/aggregate/groupby.js","webpack:///./~/vega-scenegraph/src/util/Bounds.js","webpack:///./~/vega-scenegraph/src/render/svg/SVGRenderer.js","webpack:///./~/datalib/src/time.js","webpack:///./~/datalib/src/import/formats/index.js","webpack:///./~/vega-lite/src/compile/data/bin.js","webpack:///./~/topojson/build/topojson.js","webpack:///./~/datalib/src/format-tables.js","webpack:///./~/vega-expression/src/functions.js","webpack:///./~/vega-lite/src/fielddef.js","webpack:///./~/vega-scenegraph/src/render/canvas/index.js","webpack:///./~/vega/src/core/HeadlessView.js","webpack:///./~/vega-lite/src/compile/data/formula.js","webpack:///./~/vega-scenegraph/src/render/canvas/CanvasRenderer.js","webpack:///./~/vega/src/transforms/Force.js","webpack:///./~/datalib/src/import/formats/dsv.js","webpack:///./~/vega-scenegraph/src/path/index.js","webpack:///./~/datalib/src/bins/bins.js","webpack:///./~/vega-lite/src/compile/config.js","webpack:///./~/datalib/src/bins/histogram.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/rule.js","webpack:///./~/vega/src/parse/modify.js","webpack:///./~/vega/src/transforms/LinkPath.js","webpack:///./~/vega-lite/src/compile/mark/point.js","webpack:///./~/vega-embed/src/parameter.js","webpack:///./~/vega-scenegraph/src/render/svg/marks.js","webpack:///./~/vega/src/scene/Bounder.js","webpack:///./~/vega-scenegraph/src/util/dom.js","webpack:///./~/vega/src/transforms/GeoPath.js","webpack:///./~/vega-lite/src/compile/data/nullfilter.js","webpack:///./~/datalib/src/aggregate/aggregator.js","webpack:///./~/datalib/src/stats.js","webpack:///./~/vega/src/util/index.js","webpack:///./~/vega/src/parse/legends.js","webpack:///./~/vega-lite/src/compile/data/colorrank.js","webpack:///./~/vega-lite/src/compile/time.js","webpack:///./~/vega/src/transforms/Stack.js","webpack:///./~/vega-lite/src/vl.js","webpack:///./~/vega-lite/src/data.js","webpack:///./~/vega-dataflow/src/DataSource.js","webpack:///./~/vega/src/transforms/Rank.js","webpack:///./~/vega-lite/src/sort.js","webpack:///./~/datalib/src/template.js","webpack:///./~/vega/src/parse/predicates.js","webpack:///./~/vega/src/parse/spec.js","webpack:///./~/vega-lite/src/compile/data/nonpositivenullfilter.js","webpack:///./~/vega-scenegraph/src/render/svg/SVGHandler.js","webpack:///./~/vega-lite/src/compile/compile.js","webpack:///./~/vega-lite/src/timeunit.js","webpack:///./~/datalib/src/util.js","webpack:///./~/vega-scenegraph/src/util/ImageLoader.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/symbol.js","webpack:///./~/vega-lite/src/compile/unit.js","webpack:///./~/vega-scenegraph/src/util/svg.js","webpack:///./~/datalib/src/index.js"],"names":["d3","__webpack_require__","dl","df","scene","sg","render","bound","log","Deps","Dependencies","parseStreams","Encoder","Transition","View","el","width","height","this","_el","_model","_width","__width","_height","__height","_bgcolor","_cursor","_autopad","_padding","top","left","bottom","right","_viewport","_renderer","_handler","_streamer","_skipSignals","_changeset","_repaint","_renderers","_io","_api","prototype","model","arguments","length","Node","_rank","ChangeSet","create","streaming","src","view","ds","data","error","listener","pipeline","streamer","api","insert","vals","duplicate","addListener","update","apply","remove","values","v","isString","call","isObject","keys","forEach","k","VIEW_SIGNALS","toMap","signal","name","value","skip","m","key","SIGNALS","setSignal","cs","signals","reflow","initialize","_strict","background","bgcolor","padding","pad","resize","viewBounds","s","legends","items","legendItems","i","len","b","lb","mark","bounds","add","x1","x2","autopad","opt","config","inset","autopadInset","l","Math","ceil","t","y1","r","y2","max","reset","props","viewport","size","renderer","type","Error","_build","prevHandler","w","h","bg","parentNode","select","append","attr","style","node","canvas","Renderer","RETINA","retina","load","Handler","handlers","on","handler","_detach","destroy","build","_renderNode","router","evaluate","input","debug","trans","start","dirty","_dirty","duration","ease","undefined","request","built","listeners","propagate","disconnect","fire","toImageURL","svg","string","ren","blob","Blob","window","URL","createObjectURL","toDataURL","onSignal","off","offSignal","factory","HeadlessView","defs","hover","evt","item","hasPropertySet","cursor","body","default","module","exports","util","stats","REM","Collector","_add","_rem","_key","_last","proto","push","rem","_get","a","x","Array","j","n","count","map","hasOwnProperty","extent","get","_ext","index","argmin","argmax","min","Infinity","quartile","_q","q1","q2","q3","aggregate_1","timeunit_1","type_1","vlEncoding","mark_1","DELIM","ASSIGN","TYPE","FUNC","shorten","spec","shortenEncoding","encoding","parse","shorthand","split","shift","trim","parseEncoding","join","Mark","fieldDef","channel","shortenFieldDef","encodingShorthand","reduce","e","enctype","fieldDefShorthand","parseFieldDef","aggregate","timeUnit","bin","field","SHORT_TYPE","shortenFieldDefs","fieldDefs","delim","TYPE_FROM_SHORT_TYPE","AGGREGATE_OPS","indexOf","substr","toString","AggregateOp","COUNT","TIMEUNITS","tu","segmentCache","bezierCache","segments","y","rx","ry","large","sweep","rotateX","ox","oy","th","PI","sin_th","sin","cos_th","cos","abs","px","py","pl","sqrt","a00","a01","a10","a11","x0","y0","d","sfactor_sq","sfactor","xc","yc","th0","atan2","th1","th_arc","segs","result","th2","th3","bezier","params","cx","cy","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","x3","y3","cache","Transform","Sort","graph","init","addParameters","by","Object","constructor","transform","mod","sort","comparator","param","schema","$schema","title","description","properties","enum","oneOf","required","channel_1","encoding_1","fielddef_1","scale_1","util_1","area_1","bar_1","common_1","line_1","point_1","rule_1","text_1","tick_1","markCompiler","area","bar","line","point","text","tick","rule","circle","square","parseMark","contains","LINE","AREA","parsePathMark","parseNonPathMark","isFaceted","parent","isFacet","dataFrom","dataTable","details","detailFields","pathMarks","markType","from","extend","sortPathBy","facetTransform","groupby","stack","stackTransforms","concat","has","ORDER","sortBy","group","marks","TEXT","COLOR","applyColorToBackground","X","Y","LABEL","labels","labelProperties","channelDef","order","sortField","PATH","path","orient","binSuffix","DETAIL","OPACITY","SHAPE","impute","stackByFields","getStackByFields","imputeTransform","stackTransform","STACK_GROUP_CHANNELS","fields","channelEncoding","isArray","scale","ScaleType","ORDINAL","stackFields","fieldChannel","orderby","groupbyChannel","method","sortby","valName","output","end","offset","global","define","amd","d3_format","formatDecimal","p","toExponential","coefficient","slice","exponent","NaN","formatGroup","grouping","thousands","g","substring","reverse","prefixExponent","formatPrefixAuto","floor","formatRounded","formatDefault","toPrecision","out","i0","i1","formatTypes","","%","toFixed","round","c","f","o","toUpperCase","re","formatSpecifier","specifier","FormatSpecifier","match","exec","fill","align","sign","symbol","zero","comma","precision","prefixes","identity","locale","currency","decimal","format","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","formatPrefix","pow","defaultLocale","caES","csCZ","deCH","deDE","enCA","enGB","esES","fiFI","frCA","frFR","heIL","huHU","itIT","jaJP","koKR","mkMK","nlNL","plPL","ptBR","ruRU","svSE","zhCN","precisionFixed","step","precisionPrefix","precisionRound","version","localeCaEs","localeCsCz","localeDeCh","localeDeDe","localeEnCa","localeEnGb","localeEnUs","localeEsEs","localeFiFi","localeFrCa","localeFrFr","localeHeIl","localeHuHu","localeItIt","localeJaJp","localeKoKr","localeMkMk","localeNlNl","localePlPl","localePtBr","localeRuRu","localeSvSe","localeZhCn","gradient_id","Gradient","id","stops","stop","color","filter","filter_1","parseUnit","parseFacet","filterComponent","childDataComponent","child","component","source","parseLayer","children","compatibleSource","assemble","types","measure","set","idx","missing","valid","sum","mean","average","req","variance","variancep","stdev","stdevp","stderr","median","distinct","str","modeskew","base","resolve","agg","stream","collect","helper","accessor","mutator","all","ctr","Function","assign","isValid","$","DOM","CanvasHandler","_down","_touch","_first","obj","_canvas","find","that","events","addEventListener","context","getContext","DOMMouseScroll","move","moveEvent","overEvent","outEvent","_active","pickEvent","inactive","mousemove","dragover","mouseout","dragleave","mousedown","click","touchstart","changedTouches","touchmove","touchend","touch","_handlers","vegaType","_obj","eventName","splice","rect","getBoundingClientRect","pick","_scene","clientX","clientY","gx","gy","marktype","Tuple","BatchTransform","Voronoi","clipExtent","_layout","geom","voronoi","_output","mutates","batchTransform","pathname","polygons","$ref","minItems","maxItems","additionalProperties","DEPS","ALL","nodeID","Flags","Router","Produces","Mutates","Reflows","Batch","_id","_graph","rank","_qrank","_stamp","_listeners","_ids","_deps","_flags","rerank","q","cur","unshift","qrank","last","stamp","_setf","state","collector","produces","reflows","batch","dependency","deps","_names","dep","removeListener","pulse","reevaluate","prop","sets","toJSON","indent","JSON","stringify","fromJSON","json","fontSize","String","font","quote","replace","fontStyle","fontVariant","fontWeight","baseline","Facetor","Aggregate","summarize","signalDeps","tx","_transform","ops","array","as","_fields","_aggr","_input","_args","_out","_type","TYPES","TUPLE","_acc","true","VALUE","MULTI","VALID_OPS","accessors","acc","aggr","hasGetter","args","signalRef","*","getFields","dims","meas","_dims","measures","reeval","prev","clear","prev_init","_mod","_markMod","gby","val","_mark","changes","time","utc","u","$year","$func","year","unit","$month","months","$date","dates","$day","weekdays","$hour","hours","$minute","minutes","$second","seconds","$utcYear","$utcMonth","$utcDate","$utcDay","$utcHour","$utcMinute","$utcSecond","Base","Parameter","_parameters","bind","list","object","constants","functions","codegen","functionDefs","idWhiteList","idBlackList","memberDepth","FIELD_VAR","fieldVar","GLOBAL_VAR","globalVar","globals","dataSources","codegen_wrap","ast","retval","code","lookupGlobal","generator","CODEGEN_TYPES","Literal","raw","Identifier","Program","MemberExpression","computed","property","CallExpression","callee","fn","ArrayExpression","elements","BinaryExpression","operator","UnaryExpression","argument","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","Property","ExpressionStatement","expression","Pie","startAngle","endAngle","mid","ones","range","minimum","maximum","protocol_re","fileProtocol","sanitizeUrl","url","file","baseURL","startsWith","useXHR","defaultProtocol","domainWhiteList","domain","origin","document","createElement","href","host","hostname","location","parts","whiteListed","some","lastIndexOf","callback","loader","err","xhr","http","xhrHasResponse","responseType","response","responseText","async","XMLHttpRequest","XDomainRequest","respond","status","onload","onerror","onreadystatechange","readyState","open","setRequestHeader","headers","send","filename","fs","readFileSync","readFile","options","gzip","getBody","statusCode","searchString","CountPattern","pattern","case","stopwords","_stop","_stop_re","RegExp","_pattern","_match","_counts","curr","counts","tuples","_tuples","change","ingest","_tokenize","tok","selector","parseSignals","GATEKEEPER","EVALUATOR","vgEvent","getItem","getGroup","interactive","getXY","getX","getY","trueFn","expr","falseFn","registry","nodes","internal","external","sig","streams","sel","exp","mergedStream","preventDefault","extendEvent","datum","elt","querySelectorAll","detach","removeEventListener","mouse","event","names","def","root","vg","filtered","invoke","filters","verbose","domEvent","orderedStream","ms","target","doNotPropagate","gk","middle","gatekeeper","time_1","timeUnitComponent","ref","nofn","TEMPORAL","hash","parseExpression","isUnionedDomain","isDataRefDomain","pathCache","draw","drawAll","pickPath","noop","_","beginPath","closePath","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","fillOpacity","stroke","strokeOpacity","strokeWidth","strokeDash","strokeDashOffset","axis","layer","ticks","axisColor","axisWidth","gridColor","gridOpacity","tickColor","tickLabelColor","tickWidth","tickSize","tickLabelFontSize","tickLabelFont","titleColor","titleFont","titleFontSize","titleFontWeight","titleOffset","titleOffsetAutoMin","titleOffsetAutoMax","titleOffsetAutoMargin","legend","margin","gradientStrokeColor","gradientStrokeWidth","gradientHeight","gradientWidth","labelColor","labelFontSize","labelFont","labelAlign","labelBaseline","labelOffset","symbolShape","symbolSize","symbolColor","symbolStrokeWidth","rgb","lab","hcl","hsl","category10","category20","category20b","category20c","shapes","scaleName","Y2","X2","applyColorAndOpacity","SIZE","sizeValue","ruleSize","intersects","image","loadImage","opac","loaded","globalAlpha","opacity","drawImage","parseProperties","parseRootMark","defaults","scales","axes","PROPERTIES","container","groupMark","allOf","visualMark","not","ImageLoader","SVG","openTag","closeTag","MARKS","SVGStringRenderer","loadConfig","_loader","_text","head","foot","_defs","clip_id","gradient","clipping","class","metadata","buildDefs","stop-color","imageURL","emit","ns","prefixed","attributes","mdef","tag","nest","cssClass","styles","escape_text","markGroup","axisItems","styleProperties","Heap","DataSource","Signal","Graph","_data","_signals","_requestedIndexes","dataValues","DATA","signalValues","facet","db","requestIndex","ri","reg","buildIndexes","jlen","getIndex","skipSignals","pulses","next","nplse","tpls","ntpls","isSg","pq","peek","pop","done","synchronize","preprocess","branch","collects","_collector","connect","ids","prev_update","reflowed","run","defaultRatio","Treemap","sticky","ratio","mode","layout","treemap","depth","dx","dy","idFilter","Builder","Scale","parseAxes","parseLegends","GroupBuilder","_children","_scaler","_recursor","_scales","Types","GROUP","MARK","AXIS","LEGEND","builder","recurse","shape","SCALES","fullUpdate","_def","buildGroup","_bounder","group_id","hasMarks","hasAxes","hasLegends","inline","buildMarks","buildAxes","buildLegends","removeTemp","updateAxis","updateLegend","disconnectChildren","_parent","inherit","_facetID","_scaleRefs","Filter","_skip","BoundsContext","Bounds","paths","drawPath","areaPath","linePath","halfpi","sqrt3","tan30","tan","g2D","bc","instance","strokeBounds","stokeOpacity","expand","pathBounds","arc","ir","innerRadius","or","outerRadius","sa","ea","xmin","xmax","ymin","ymax","ix","iy","angles","textMark","noRotate","radius","theta","measureText","angle","rotate","includeLegends","clip","union","translate","methods","itemBounds","func","DUMMY_ITEM","markBounds","hasi","cross","countpattern","linkpath","fold","force","formula","geo","geopath","hierarchy","lookup","pie","treeify","wordcloud","lgnd","spacing","formatString","tickArguments","legendStyle","symbolStyle","gradientStyle","titleStyle","labelStyle","titles","symbols","legendDef","discrete","quantDef","ordinalDef","o_legend_def","fmt","getTickFormat","z","sz","ts","points","tdata","label","legendTitle","legendSymbols","vLegendLabels","legendSymbolExtend","enter","legendPosition","encode","q_legend_def","dom","layoutSpec","legendGradient","hLegendLabels","grad","copy","gp","gh","hh","tp","LEGEND_ORIENT","legendProperties","symbolProperties","gradientProperties","titleProperties","top-left","top-right","bottom-left","bottom-right","predicates","ao","lw","lh","pos","_legendPositions","totalHeight","currItem","interpolate","enc","exit","mult","compile","refs","propset","propertySets","transforms","parseTransforms","config_1","stack_1","isFacetSpec","isExtendedUnitSpec","isSomeUnitSpec","hasRow","ROW","hasColumn","COLUMN","isUnitSpec","isLayerSpec","normalize","normalizeExtendedUnitSpec","normalizeUnitSpec","column","row","overlayConfig","overlay","overlayWithLine","AreaOverlay","LINEPOINT","overlayWithPoint","ERRORBAR","normalizeErrorBarUnitSpec","isRanged","normalizeRangedUnitSpec","isStacked","normalizeOverlay","hasX","hasY","hasX2","hasY2","normalizedSpec","layerSpec","layers","ruleSpec","RULE","lowerTickSpec","TICK","upperTickSpec","outerProps","baseSpec","omit","baseConfig","lineSpec","markConfig","defaultOverlayConfig","lineStyle","pointSpec","POINT","pointStyle","alwaysNoOcclusion","isAggregate","getCleanSpec","transpose","oldenc","autoMaxBins","NiceTime","defaultScaleConfig","textBandWidth","bandSize","useRawDomain","nominalColorRange","sequentialColorRange","shapeRange","fontSizeRange","ruleSizeRange","tickSizeRange","defaultFacetScaleConfig","prefn","applyMarkConfig","textFieldDef","xFieldDef","QUANTITATIVE","yFieldDef","sizeFieldDef","numberFormat","template","timeTemplate","shortTimeLabels","d3_cloud","Wordcloud","fontScale","spiral","wrap","tuple","_tuple","functor","words","weight","d3_time","d3_timeF","d3_numberF","numberF","timeF","tmpDate","Date","monthFull","monthAbbr","dayFull","dayAbbr","numberLocale","number","numberPrefix","timeLocale","utcFormat","auto","autoNumberFormat","linear","linearNumberFormat","timeAutoFormat","utcAutoFormat","month","monthFormat","day","dayFormat","quarter","quarterFormat","utcQuarter","utcQuarterFormat","localeRef","e10","e5","e2","linearRange","span","LN10","trimZero","rightmostDigit","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","date","second","minute","hour","week","utcSecond","utcMinute","utcHour","utcDay","utcMonth","utcWeek","utcYear","abbreviate","setMonth","setDate","getMonth","getUTCMonth","Token","TokenName","Syntax","PropertyKind","Messages","Regex","strict","lineNumber","lineStart","lookahead","extra","BooleanLiteral","EOF","Keyword","NullLiteral","NumericLiteral","Punctuator","StringLiteral","RegularExpression","AssignmentExpression","Data","Get","Set","UnexpectedToken","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","UnexpectedEOS","NewlineAfterThrow","InvalidRegExp","UnterminatedRegExp","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictOctalLiteral","StrictDelete","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","StrictReservedWord","NonAsciiIdentifierStart","NonAsciiIdentifierPart","assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","fromCharCode","isIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isKeyword","skipComment","scanHexEscape","scanUnicodeCodePointEscape","cu1","cu2","throwError","getEscapedIdentifier","getIdentifier","scanIdentifier","scanPunctuator","code2","ch1","ch2","ch3","ch4","tokenize","openParenToken","tokens","openCurlyToken","scanHexLiteral","parseInt","scanOctalLiteral","octal","scanNumericLiteral","parseFloat","scanStringLiteral","unescaped","restore","startLineNumber","startLineStart","testRegExp","flags","tmp","$0","$1","exception","scanRegExpBody","classMarker","terminated","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","regex","collectRegex","loc","token","isIdentifierName","advanceSlash","prevToken","checkToken","advance","collectToken","entry","lex","Position","SourceLocation","WrappingSourceLocation","startToken","WrappingNode","finish","finishArrayExpression","finishAssignmentExpression","finishBinaryExpression","finishCallExpression","finishConditionalExpression","finishExpressionStatement","finishIdentifier","finishLiteral","finishMemberExpression","finishObjectExpression","finishProgram","finishProperty","kind","finishUnaryExpression","peekLineTerminator","found","messageFormat","msg","whole","errors","throwUnexpected","expect","expectTolerant","matchKeyword","keyword","consumeSemicolon","parseArrayInitialiser","parseAssignmentExpression","parseObjectPropertyKey","parseObjectProperty","parseObjectInitialiser","parseGroupExpression","parenthesisCount","legalKeywords","if","parsePrimaryExpression","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","parsePostfixExpression","parseUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","parseConditionalExpression","oldParenthesisCount","parseExpressionStatement","parseStatement","parseSourceElement","parseSourceElements","sourceElement","sourceElements","directive","firstRestricted","parseProgram","filterTokenLocation","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","_size","lineSize","fillRect","strokeRect","axis_1","parseAxisComponent","axisChannels","parseAxis","parseInnerAxis","isCol","isRow","grid","gridShow","isOrdinalScale","AxisOrient","TOP","tickSizeEnd","fieldTitle","maxLength","titleMaxLength","unitModel","cell","characterWidth","truncate","axisPropsSpec","gridPropsSpec","gridWidth","gridDash","labelsSpec","NOMINAL","labelMaxLength","labelAngle","isDimension","ticksPropsSpec","titlePropsSpec","__extends","__","data_1","axis_2","data_2","layout_1","model_1","scale_2","FacetModel","_super","parentGivenName","_config","_initConfig","_child","buildModel","_facet","_initFacet","_scale","_initScale","_axis","_initAxis","specConfig","mergeDeep","defaultConfig","channelMappingForEach","channels","addWarning","getFullName","scaleSpec","axisSpec","modelAxis","yAxis","RIGHT","hasSummary","summary","SUMMARY","SOURCE","parseData","parseFacetData","parseSelectionData","parseLayoutData","parseFacetLayout","parseScale","scaleComponent","parseScaleComponent","scaleNameWithoutPrefix","newName","renameScale","getFacetGroupProperties","assembleGroup","parseAxisGroup","xAxisGroup","yAxisGroup","axisGroup","parseGridGroup","gridGroup","getColumnGridGroups","getRowGridGroups","parseLegend","assembleParentGroupProperties","assembleData","assembleLayout","layoutData","assembleMarks","flatten","mapping","Model","mergedCellConfig","sizeName","getXAxesGroup","getYAxesGroup","hasCol","facetGridConfig","rowGrid","columnGrid","now","write","console","enable","prevTime","initialValue","_name","_value","_verbose","cmp","_siftdown","_siftup","pushpop","pidx","cidx","ridx","Item","Status","STATUS","updates","interp","isFinite","EXIT","UPDATE","timer","elapsed","delay","E","LN2","LOG2E","LOG10E","SQRT1_2","SQRT2","Fold","_cache","_reset","rederive","derive","_fn","uniqueItems","sort_1","facet_1","layer_1","unit_1","spec_1","LayerModel","UnitModel","STROKE_CONFIG","FILL_CONFIG","FILL_STROKE_CONFIG","filled","colorFieldDef","opacityFieldDef","colorValue","opacityValue","applyConfig","propsList","marksProperties","orderChannelDef","SortOrder","DESCENDING","templateField","_format","timeFormat","Properties","LINEAR","LOG","POWER","SQRT","TIME","TIME_UTC","QUANTILE","QUANTIZE","THRESHOLD","DataRef","DOMAIN","RANGE","GROUPBY","MIN","MAX","ASC","DESC","_updated","self","ordinal","quantitative","rng","ctor","_prev","dataDrivenRange","outer","outerPadding","spatial","dataRef","equal","bw","space","rangeRoundPoints","rangePoints","rangeRoundBands","rangeBands","invert","invertOrdinal","bisect","bisector","numcmp","findAsc","findDsc","asc","isNumber","clamp","nice","interval","domainMinMax","rangeRound","isUniques","getRefs","inherits","aggrType","getCache","which","atype","uniques","ck","op","_lastUpdate","rlen","flen","addDep","_values","domainMin","domainMax","rangeVal","rangeMin","rangeMax","rev","rangeDef","anyOf","keywords","repository","author","contributors","license","dependencies","d3-dsv","d3-format","d3-time","d3-time-format","topojson","sync-request","devDependencies","browserify","chai","istanbul","jshint","mocha","uglify-js","main","scripts","deploy","lint","cover","postbuild","browser","buffer","dispatch","cloudRadians","cw","cloudText","cloudFont","cloudFontSize","cloudFontNormal","cloudRotate","cloudPadding","archimedeanSpiral","timeInterval","random","cloud","cloudCanvas","contextAndRatio","board","zeroArray","tags","clearInterval","setInterval","cloudSprite","hasText","place","cloudBounds","getImageData","fillStyle","strokeStyle","textAlign","perimeter","startX","startY","maxDelta","dt","dxdy","cloudCollide","collideRects","sprite","sw","lx","sx","msx","spirals","di","clearRect","maxh","save","sr","cr","wcr","wsr","hcr","hsr","fillText","lineWidth","strokeText","xoff","yoff","pixels","w32","seen","seenRow","b0","b1","rectangularSpiral","archimedean","rectangular","parsePadding","parseModify","onError","onLoad","read","datasource","setTimeout","modify","parseDef","feature","mesh","Channel","CHANNELS","UNIT_CHANNELS","without","UNIT_SCALE_CHANNELS","NONSPATIAL_CHANNELS","NONSPATIAL_SCALE_CHANNELS","supportMark","getSupportedMark","getSupportedRole","dimension","hasScale","Impute","_imputed","groups","partition","getval","gb","gv","ob","ov","lut","N","unique","visit","compiler","cfg","_predicates","_groups","_node","_builder","pred","predicate","_groupBuilder","legend_1","defaultCellConfig","defaultFacetCellConfig","defaultFacetGridConfig","defaultFacetConfig","defaultFacetAxisConfig","FontWeight","Shape","HorizontalAlign","VerticalAlign","FontStyle","Interpolate","defaultMarkConfig","CIRCLE","barThinSize","tickThickness","MIDDLE","countTitle","defaultAxisConfig","defaultLegendConfig","addDimension","dataName","dimensions","summaryComponents","summaryComponent","summaryNameWithoutPrefix","renameData","mergeMeasures","parentMeasures","childMeasures","field_1","summaries","childSummary","summaryData","aggregator","fnDictSet","countRetinal","arr","thisArg","channelMappingMap","channelMappingReduce","Aggregator","facetID","_ingest","_assign","disconnect_cell","_newcell","_newtuple","_cells","_on_add","_on_rem","_on_mod","cell0","cell1","_on_drop","_on_keep","editor","wait","listen","postMessage","Bin","maxbins","steps","minstep","div","bins","RESERVED","exprVal","scope","_expr","scopedScale","d3_dsv","dsv","delimiter","Dsv","objectConverter","columns","customConverter","inferColumns","rows","columnSet","reFormat","delimiterCode","convert","parseRows","EOL","I","eol","formatValue","formatRows","formatRow","csv","tsv","x2FieldDef","xIsMeasure","isMeasure","y2FieldDef","yIsMeasure","barSize","applyDefaults","colorMap","colorProp","Hierarchy","nodesize","_mode","PARTITION","SEPARATION","cartesian","radial","nodesz","separation","nodeSize","COLOR_LEGEND","COLOR_LEGEND_LABEL","parseMainScale","colorLegend","parseColorLegendScale","binColorLegend","parseBinColorLegendLabel","scaleDef","rangeMixins","scaleType","TimeUnit","HOURS","DAY","MONTH","QUARTER","rawDomain","StackOffset","NORMALIZE","STACKED_SCALE","_useRawDomain","domainSort","noAggregate","SHARED_DOMAIN_OPS","UTC","scaleConfig","BAR","barSizeRange","pointSizeRange","pointBandSize","POW","smallestUnit","Formula","updated","eventItem","eventGroup","eventX","eventY","openGen","scaleGen","iscale","inrange","indata","indataGen","windowOpen","uri","exclusive","dataname","Facet","_pipeline","DEFAULT_REQUIRED_CHANNEL_MAP","DEFAULT_SUPPORTED_CHANNEL_TYPE","getEncodingMappingError","requiredChannelMap","supportedChannelMap","requiredChannels","supportedChannels","source_1","formatparse_1","nullfilter_1","bin_1","formula_1","nonpositivenullfilter_1","summary_1","stackscale_1","timeunitdomain_1","colorrank_1","parseUnitData","formatParse","nullFilter","nonPositiveFilter","calculate","timeUnitDomain","stackScale","colorRank","parseLayerData","sourceData","colorRankTransform","nonPositiveFilterTransform","stackData","timeUnitDomainData","element","Sentinel","Bounder","ENTER","CONNECTED","DISCONNECTED","parent_id","inheritFrom","_from","_ds","_map","_status","_parent_id","inlineDs","_isSuper","_encoder","sibling","sout","encoder","disconnectScales","fcs","isFunction","nested","newItem","keyf","keyFunction","idMap","diff","axs","themeVal","ORIENT","tickValues","tickFormat","tickFormatType","tickSubdivide","subdivide","tickPadding","tickCount","majorTickProperties","majorTicks","minorTickProperties","minorTicks","tickLabelProperties","gridLineProperties","domainProperties","axis_x","axis_y","tickSizeMajor","tickSizeMinor","Canvas","lineDash","_ctx","HTMLElement","pixelratio","pixelRatio","setTransform","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","vgLineDash","NOOP","NODASH","setLineDash","dash","vgLineDashOffset","lineDashOffset","webkitLineDash","webkitLineDashOffset","mozDash","Type","temporal","nominal","Q","T","O","typeString","textBounds","tempBounds","hit","vega_schema_1","_this","parseLayerLayout","childScales","modelScales","modelDomain","childDomain","unionedFields","axisComponent","legendComponent","isLayer","childData","compatible","scaleBandSize","peg$subclass","peg$SyntaxError","expected","captureStackTrace","peg$parse","parser","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","f1","f2","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$currPos","peg$savedPos","peg$posDetailsCache","seenCR","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","peg$computeLocation","peg$buildException","peg$computePosDetails","charAt","startPos","endPos","startPosDetails","endPosDetails","peg$fail","cleanupExpected","buildMessage","stringEscape","hex","expectedDescs","expectedDesc","foundDesc","s0","peg$parsemerged","s1","s2","s3","s4","s5","peg$parseordered","peg$parsesep","s6","s7","s8","s9","s10","s11","s12","s13","peg$parsefiltered","peg$parsestream","peg$parsefilter","peg$parsename","peg$parseeventType","peg$parsemarkType","peg$parsecss","peg$parseexpr","SyntaxError","EMPTY","FIELDS","preds","guide","update_status","wasDirty","isDirty","nestedRefs","level","layoutComponent","distinctFields","LAYOUT","parseUnitLayout","parseUnitSizeLayout","cellConfig","nonOrdinalSize","getDistinct","channelSizeName","unitSizeExpr","cardinalityFormula","parseFacetSizeLayout","childLayoutComponent","sizeType","childSizeComponent","facetSizeFormula","innerSize","parseLayerSizeLayout","sizeType_1","distinctField","formats","cols","parsers","clen","inferAll","annotation","vl","parameter","post","editor_url","source_header","source_footer","MODES","vega","vega-lite","PREPROCESSOR","vgjson","vljson","arg","embed","cb","actions","classed","html","parameters","elp","parameter_el","pdiv","chart","ctrl","export","ext","viewSource","header","footer","win","gen","repeat","zeros","uniform","samples","pdf","cdf","icdf","integer","normal","rds","cd","Z","bootstrap","smooth","defaultVal","dataflow","logging","reader","objects","features","isBoolean","util_2","generate_1","util_3","excludedItems","other","every","arrays","dest","_i","deepMerge_","dlBin","getbins","results","warning","warn","differ","dict","subscene","hits","interative","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_arraySlice","d3_array","d3_document","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","setProperty","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","local","priority","ascending","d3_ascending","descending","d3_number","d3_numeric","isNaN","quantile","H","numbers","deviation","d3_bisector","compare","lo","hi","d3_bisect","bisectLeft","bisectRight","shuffle","permute","indexes","permutes","pairs","p0","p1","matrix","d3_transposeLength","zip","entries","merge","merged","d3_range_integerScale","d3_class","defineProperty","enumerable","d3_Map","d3_map_proto","d3_map_zero","d3_map_has","d3_map_escape","d3_map_remove","d3_map_keys","d3_map_unescape","d3_map_size","empty","d3_map_empty","sortKeys","sortValues","rollup","mapType","keyValue","setter","valuesByKey","sortKey","keyMap","d3_Set","behavior","d3_identity","rebind","d3_rebind","d3_vendorSymbol","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","listenerByName","d3_eventPreventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","__proto__","d3_selection","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","subgroups","subgroup","subnode","d3_selection_selector","__data__","selectAll","d3_selection_selectorAll","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","qualify","getAttributeNS","getAttribute","each","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","attrConstant","attrConstantNS","attrFunction","attrFunctionNS","d3_collapse","d3_selection_classes","classList","d3_selection_classedRe","d3_selection_classed","d3_selection_classedName","classedConstant","classedFunction","lastIndex","d3_selection_style","getComputedStyle","getPropertyValue","styleNull","removeProperty","styleConstant","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","textContent","innerHTML","d3_selection_creator","appendChild","namespace","namespaceURI","createElementNS","createNS","before","insertBefore","d3_selectionRemove","removeChild","groupData","n0","updateNodes","enterNodes","exitNodes","nodeData","nodeByKeyValue","keyValues","d3_selection_dataNode","d3_selection_enter","d3_selection_filter","nextSibling","d3_selection_sortComparator","d3_selection_each","d3_selection_enterPrototype","upgroup","d3_selection_enterInsertBefore","j0","capture","d3_selection_on","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","onRemove","onAdd","removeAll","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","suppressClick","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","ownerSVGElement","createSVGPoint","scrollX","scrollY","position","border","ctm","getScreenCTM","pageX","pageY","matrixTransform","inverse","clientLeft","clientTop","touches","identifier","drag","dragstart","d3_behavior_dragTouchId","subject","correspondingElement","dragged","dragId","dragName","dragOffset","dragSubject","moved","ended","dragRestore","position0","position1","ε","ε2","π","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_sinh","d3_cosh","d3_tanh","d3_haversin","ρ","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","d2","S","d1","r0","r1","coshr0","zoom","translate0","center0","center","scaleExtent","d3_behavior_zoomInfinity","zooming","mouseup","mousewheelTimer","touchtime","d3_behavior_zoomWheel","d3_behavior_zoomDelta","deltaY","deltaMode","wheelDelta","detail","mousedowned","mousewheeled","dblclicked","touchstarted","view1","d3_transitionInheritId","transition","__chart__","zoomstarted","tween","zoomed","zoomended","rescale","scaleTo","translateTo","zoomTo","location0","d3_selection_interrupt","locations0","distance0","scale0","zoomName","targets","started","relocate","changed","l0","l1","distance1","scale1","clearTimeout","shiftKey","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hslPrototype","brighter","darker","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","d3_hclPrototype","d3_lab_K","d3_hcl_lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_lab_xyz","d3_xyz_rgb","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","mimeType","d3_xhr","d3_xhrHasResponse","onprogress","progress","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","typedResponse","fieldSet","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","then","d3_timer_step","d3_timer_mark","d3_timer_sweep","flush","t0","t1","d3_format_precision","d3_formatPrefixes","d3_formatPrefix","d3_locale_numberFormat","locale_decimal","locale_thousands","locale_grouping","locale_currency","d3_format_re","zfill","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","after","d3_date","d3_date_utc","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","d0","times","range_utc","d3_time_interval_utc","years","days","dayOfYear","sunday","weeks","weekOfYear","sundayOfYear","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","locale_shortMonths","shortMonths","d3_time_format","d3_time_formatPads","d3_time_formats","M","L","d3_time_parse","localZ","W","U","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","d3_time_formatPad","mondayOfYear","d3_time_zone","d3_time_parseWeekdayAbbrev","d3_time_parseWeekday","d3_time_parseMonthAbbrev","d3_time_parseMonth","d3_time_parseLocaleFull","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseAmPm","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseLocaleDate","d3_time_parseLocaleTime","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","-","0","d3_time_numberRe","d3_time_percentRe","d3_time_expandYear","zs","zh","zm","d3_locale_enUS","d3_adder","d3_adderSum","d3_adderTemp","bv","av","d3_geo_streamObjectType","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","Feature","FeatureCollection","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineEnd","polygonStart","polygonEnd","d3_geo_areaSum","d3_geo_area","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","λ","φ","nextPoint","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","d3_geo_sphericalEqual","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","ringPoint","ringStart","ringEnd","linePoint","equatorial","inflection","λi","antimeridian","φi","compareRanges","withinRange","best","centroid","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","clipStartInside","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","current","isSubject","d3_geo_clip","pointVisible","clipLine","clipStart","rotatedClipStart","pointRing","polygon","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","d3_geo_clipBufferListener","ringListener","ring","clean","ringSegments","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","d3_geo_clipAntimeridianLine","d3_geo_clipAntimeridianInterpolate","sλ0","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","point0","intersection","φarc","d3_geo_clipCircle","smallRadius","notHemisphere","d3_geo_circleInterpolate","visible","c0","v0","v00","point1","point2","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","δλ","polar","d3_geom_clipLine","ax","ay","bx","d3_geo_clipExtentMAX","d3_geo_clipExtent","listener_","bufferListener","insidePolygon","inside","wn","a1","corner","comparePoints","x__","y__","v__","x_","y_","v_","first","ca","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","conicEqualArea","albers","albersUsa","lower48","alaska","hawaii","pointStream","lower48Point","alaskaPoint","hawaiiPoint","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathBounds","d3_geo_pathBoundsPoint","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","resampleRecursive","resampleNone","d3_geo_transformPoint","b00","c00","a0","resampleLineTo","φ2","λ2","dx2","dy2","dz","projection","projectStream","contextStream","cacheStream","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projectionMutator","projectRotate","projectResample","δx","δy","δφ","δγ","preclip","postclip","clipAngle","invalidate","d3_geo_rotation","d3_geo_equirectangular","equirectangular","rotation","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","cosδφ","sinδφ","cosδγ","sinδγ","d3_geo_circleAngle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","minorExtent","majorExtent","minorStep","majorStep","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","greatArc","source_","target_","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_lengthSum","d3_geo_length","d3_geo_lengthLineStart","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","conicConformal","d3_geo_conicEquidistant","G","conicEquidistant","d3_geo_gnomonic","gnomonic","d3_geo_mercatorProjection","clipAuto","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","d3_geo_transverseMercator","transverseMercator","d3_geom_pointX","d3_geom_pointY","hull","vertices","fx","fy","flippedPoints","d3_geom_hullOrder","upper","d3_geom_hullUpper","lower","skipLeft","skipRight","hs","d3_geom_polygonPrototype","d3_geom_polygonClosed","d3_geom_polygonInside","d3_geom_polygonIntersect","x21","x43","y21","y43","ua","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiBeachPool","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","rArc","nArcs","iArc","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","directrix","dxl","dxr","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","prepare","halfEdges","iHalfEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCloseCells","cells","iCell","nHalfEdges","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiClipEdges","d3_geom_voronoiConnectEdge","vb","va","ly","fm","fb","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","grandpa","uncle","d3_geom_voronoiRedBlackFirst","d3_geom_voronoiRedBlackRotateLeft","d3_geom_voronoiRedBlackRotateRight","tree","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiClipExtent","links","triangles","d3_geom_voronoiTriangleArea","delaunay","quadtree","compat","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","d3_geom_quadtreeNode","d3_geom_quadtreeVisit","d3_geom_quadtreeFind","sy","minDistance2","closestPoint","distance2","interpolateRgb","d3_interpolateRgb","ar","ag","ab","br","bb","interpolateObject","d3_interpolateObject","d3_interpolate","interpolateNumber","d3_interpolateNumber","interpolateString","d3_interpolateString","bi","d3_interpolate_numberA","d3_interpolate_numberB","am","bm","bs","interpolators","d3_interpolateArray","interpolateArray","na","nb","d3_ease_default","d3_ease","poly","d3_ease_poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","d3_ease_elastic","back","d3_ease_back","bounce","d3_ease_bounce","d3_ease_mode","in","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_clamp","d3_ease_cubicInOut","t3","interpolateHcl","d3_interpolateHcl","ah","ac","al","bh","bl","interpolateHsl","d3_interpolateHsl","interpolateLab","d3_interpolateLab","aa","ba","interpolateRound","d3_interpolateRound","baseVal","consolidate","d3_transform","d3_transformIdentity","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","interpolateTransform","d3_interpolateTransform","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","bundle","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","dj","subindex","resort","alpha","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","distances","strengths","charges","repulse","dw","dn","pointCharge","d3_layout_forceAccumulate","fixed","chargeDistance","neighbors","candidates","resume","d3_layout_forceDragstart","dragmove","d3_layout_forceDragend","d3_layout_forceMouseover","d3_layout_forceMouseout","d3_layout_hierarchySort","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","childs","d3_layout_hierarchyVisitAfter","revalue","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyRebind","d3_layout_hierarchyLinks","nodes2","Number","d3_layout_pieSortByValue","padAngle","da","arcs","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackOut","d3_layout_stackX","d3_layout_stackY","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","tops","bottoms","silhouette","wiggle","o0","d3_layout_stackSum","histogram","frequency","valuer","ranger","d3_layout_histogramRange","binner","d3_layout_histogramBinSturges","thresholds","d3_layout_histogramBinFixed","pack","d3_layout_packSort","d3_layout_packSiblings","dr","d3_layout_packTransform","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","dc","d3_layout_treeSeparation","root0","root1","wrapTree","firstWalk","secondWalk","sizeNode","queue","node1","siblings","d3_layout_treeShift","midpoint","apportion","ancestor","vip","vop","vim","vom","sip","sop","sim","som","d3_layout_treeRight","d3_layout_treeLeft","d3_layout_treeMove","d3_layout_treeAncestor","wm","wp","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","stickies","squarify","remaining","score","worst","stickify","rmax","rmin","padFunction","d3_layout_treemapPad","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","d3_scale_linear","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","rangeBand","xi","d3_category10","d3_category20","d3_category20b","d3_category20c","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","d3_svg_lineStep","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","d3_svg_lineBasisOpen","basis-closed","d3_svg_lineBasisClosed","d3_svg_lineBundle","cardinal","d3_svg_lineCardinal","cardinal-open","d3_svg_lineCardinalOpen","cardinal-closed","d3_svg_lineCardinalClosed","monotone","d3_svg_lineMonotone","d3_svg_lineHermite","d3_svg_lineCardinalTangents","tangents","pi","lp","p2","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","equals","curve","diagonal","d3_svg_diagonalProjection","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbolType","d3_svg_symbolSize","d3_svg_symbols","d3_svg_symbolCircle","diamond","d3_svg_symbolTan30","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","d3_transitionPrototype","subnodes","d3_transition_tween","nameNS","attrTween","attrTweenNS","styleString","styleTween","d3_transition_text","inheritId","id0","id1","tweens","schedule","cancelId","cancel","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","tickTransform","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","brush","xExtent","yExtent","xExtentDomain","yExtentDomain","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","event_","extent1","extent0","yi","eventTarget","resizing","resizingX","resizingY","dragging","keydown","keyup","brushmove","brushend","ex","ey","altKey","keyCode","move1","nw","ne","se","d3_time_formatUtc","d3_time_formatIso","iso","toISOString","d3_time_formatIsoNative","timezone","d3_time_scale","d3_time_scaleDate","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","skipped","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","createContextualFragment","responseXML","firstChild","newInterval","floori","offseti","millisecond","weekday","monday","tuesday","wednesday","thursday","friday","saturday","utcWeekday","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","milliseconds","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","utcMillisecond","utcMilliseconds","utcSeconds","utcMinutes","utcHours","utcDays","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcWeeks","utcMonths","utcYears","controlX","controlY","tempX","tempY","tempControlX","tempControlY","drawArc","coords","seg","bez","d3Time","localDate","utcDate","newYear","locale$1","locale_weekdays","locale_shortWeekdays","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formatShortWeekday","formatWeekday","formatShortMonth","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatPeriod","formatSeconds","formatWeekdayNumber","formatWeekNumberMonday","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCPeriod","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parsePeriod","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseLocaleDate","parseLocaleTime","parseFullYear","parseZone","parseLiteralPercent","newFormat","pads","newParse","newDate","parseSpecifier","numberRe","percentRe","requoteRe","parseYear","parseSeconds","formatWeekNumberSunday","isoSpecifier","formatIsoNative","formatIso","isoFormat","Geo","Parameters","lon","lat","d3Projection","proj","_projection","ll","xy","baseSchema","isBuffer","cmdlen","regexp","pathstr","chunks","parsed","cmd","testPath","drawOne","Lookup","onKey","onLast","onData","onF","defaultValue","_lut","_on","Treeify","childField","parentField","aggrs","_internal","execute","stacked","NONE","stackByChannels","sc","hasXField","hasYField","xIsAggregate","yIsAggregate","ZERO","arrayType","dataType","fieldType","exprType","valType","_accessors","_resolution","isData","isField","isExpr","parseBg","drawPathOne","drawPathAll","pathFunc","trueFunc","isPointInStroke","strokeCap","lineCap","isPointInPath","createLinearGradient","addColorStop","PARSERS","boolean","TESTS","isDate","fieldNames","bracket","fieldName","typeAll","infer","ignore","tupleID","VALUES","VALID","MISSING","DISTINCT","SUM","MEAN","AVERAGE","VARIANCE","VARIANCEP","STDEV","STDEVP","MEDIAN","Q1","Q3","MODESKEW","ARGMIN","ARGMAX","SUM_OPS","exprs","vars","_nRefs","handleDep","handleNestedRefs","parseShape","valueRef","hasPath","tpl","rules","inputs","exprFn","predName","predicateArg","colorRef","sgRef","fRef","sRef","tmpl","fieldRef","scaleRef","band","xx","yy","zz","fr","valueSchema","modType","valRef","stringModifiers","numberModifiers","numberValue","stringValue","booleanValue","arrayValue","calcFieldMap","fieldMap","parseComponent","isCount","STRING","NUMBER","tickFormatString","inferFormatType","getFormatter","logFilter","cousin","iidx","midx","SQUARE","PRIMITIVE_MARKS","NameMap","_nameMap","rename","oldName","_warnings","_dataNameMap","_scaleNameMap","_sizeNameMap","_description","assembleScales","assembleAxes","assembleLegends","dataSourceType","renameSize","_legend","warnings","isUnit","defaultExtension","dataFormat","canMerge","toTable","childrenField","table","Cross","with","_lastWith","_cids","_cid","diag","mids","cids","oadd","fltrd","cid","rids","omod","orem","purge","selfCross","woutput","wdata","parseLegendComponent","getLegendDefWithScale","useColorLegendScale","symbolsSpec","titleSpec","Dispatch","parseTypenames","typenames","typename","__webpack_exports__","_x","_y","_x2","_y2","timeUnitDomainMap","timeUnitData","stackProps","stackComponent","axisBounds","axisDef","tickMajorSize","tickMinorSize","tickEndSize","gridLineStyle","tickLabelStyle","majorTickStyle","minorTickStyle","domainStyle","gridLines","tickLabels","getTicks","major","minor","axisSubdivide","axis_def","titleAutoOffset","newScale","oldScale","axisScaleRange","axisTicks","axisTickLabels","axisDomain","axisTitle","axisTicksExtend","axisLabelExtend","axisDomainExtend","axisTitleExtend","axisUpdate","axisOrients","subticks","axisScaleExtent","axisAlign","axisBaseline","oldRef","newRef","tickPlacement","tickOffset","ofx","ofy","clone","MAX_VALUE","encloses","alignsWith","SVGRenderer","_dirtyID","_svg","_root","_dirtyCheck","_dirtyAll","_resetDefs","updateDefs","drawMark","updateGradient","updateClipping","_update","dirtyParents","isGroup","className","_recurse","__values__","mark_extras","tempDate","baseDate","utcBaseDate","STEPS","units","minb","maxb","toUnitMap","treejson","bin_2","binComponent","binTrans","isOrdinalColor","transformAbsolute","transformRelative","topology","feature$1","absolute","geometryType","stitchArcs","stitchedArcs","fragmentByStart","fragmentByEnd","fragments","emptyIndex","ends","fg","gf","dp","meshArcs","geomsByArc","geoms","cartesianTriangleArea","triangle","mergeArcs","polygonsByArc","components","register","ring$$","ki","indexesByArc","ij","ik","compareArea","minAreaHeap","heap","up","removed","down","presimplify","triangleArea","relative","maxArea","formatTable","formatSummary","FMT","POS","separator","minwidth","maxwidth","limit","lens","__summary__","printCategoricalProfile","printQuantitativeProfile","fncall","cast","DATE","REGEXP","datetime","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","supportedEnums","supportedTypes","_isFieldDimension","cardinality","filterNull","stat","SECONDS","MINUTES","YEAR","yearstat","canvasAsync","pendingImages","formulaComponent","CanvasRenderer","pending","clipToBounds","ctx","renderAsync","_async_id","Force","_interactive","_setup","_nodes","_links","iterations","nodeInput","linkSource","linkInput","configure","tickHandler","EPSILON","logb","eps","date_value","date_index","dmin","dmax","minbins","initMarkConfig","qtype","$bin","numerical","categorical","INSERT","REMOVE","UPSERT","TOGGLE","CLEAR","signalName","exprTrigger","isClear","getters","setters","LinkPath","sourceX","sourceY","targetX","targetY","ty","cornerX","cornerY","cornerR","tr","ss","tc","sf","diagonalX","diagonalY","diagonalR","mr","fixedShape","rewrite","handle","__vega__","form","checkbox","radio","checked","sl","selectedIndex","rg","option","rn","lbl","translateItem","pathStr","isGrp","rebound","ilen","doc","tagName","GeoPath","geojson","DEFAULT_NULL_FILTERS","nullFilterComponent","filteredFields","Measures","_stream","ADD_CELL","MOD_CELL","summarize_args","_count","_cellkey","_cell","num","flag","aggs","_rems","_consolidate","delta","geometric","harmonic","M2","avg","med","std","dot","dist","L2","cohensd","covariance","vx","vy","tie","mu","cor","mua","mub","sda","sdb","mat","linearRegression","slope","icept","fit","intercept","rss","res","ci","means","SE","paired","ztestP","ztest2","ztest1","nullH","nullh","gaussian","diffs","meanDiff","entropy","mutual","info","profile","sd","colorRankComponent","containsTimeUnit","onlyRef","fun","addComma","MILLISECONDS","Stack","validate","DataFormatType","DataTable","_source","_indexes","_indexFields","_inputNode","_outputNode","_mutates","where","DataSourceInput","DataSourceOutput","DataSourceListener","updateIndices","_srcMap","Rank","norm","klen","format_map","get_format","clearFormatCache","variable","template_re","template_escaper","template_escapeChar","template_var","filter_re","stringCast","strcall","formatter","template_format","args_re","template_escapes","'","\\","\r","\n"," "," ","=","parseComparator","==","!=",">",">=","<","<=","and","parseLogical","&&","||","parseIn","nullScale","parsePredicates","parseSignal","parseOperands","operands","decl","setData","operand","parseSpec","arglen","argidx","viewFactory","opts","nonPositiveFilter_1","nonPositiveComponent","nonPositiveFilterComponent","SVGHandler","inputSpec","assembleRootGroup","rootGroup","YEARMONTH","YEARMONTHDAY","YEARMONTHDATE","YEARDAY","YEARDATE","YEARMONTHDAYHOURS","YEARMONTHDAYHOURSMINUTES","YEARMONTHDAYHOURSMINUTESSECONDS","HOURSMINUTES","HOURSMINUTESSECONDS","MINUTESSECONDS","SECONDSMILLISECONDS","YEARQUARTER","QUARTERMONTH","YEARQUARTERMONTH","dateComponents","timeComponents","template_1","fullTimeUnit","fullTimeUnitStr","timeUnitStr","Buffer","FNAME","namedfunc","false","keystr","field_re","$valid","$length","$in","stablesort","keyFn","indices","sb","swap","padchar","strrep","word","ellipsis","truncateOnWord","l2","cnt","truncate_word_re","_pending","Config","Image","server","pathArray","config_2","mark_2","_encoding","_initEncoding","_initLegend","_stack","_scaleType","legendSpec","toSpec","excludeConfig","excludeData","d3_svg","xw","yh","areav","areah","xmlns:xlink","newPath","command","textBaseline","print"],"mappings":"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","file":"0.f30e390d494625aeb321.js","sourcesContent":["var d3 = require('d3'),\n    dl = require('datalib'),\n    df = require('vega-dataflow'),\n        scene = require('vega-scenegraph'),\n    sg = scene.render,\n    bound = scene.bound,\n    log = require('vega-logging'),\n    Deps = df.Dependencies,\n    parseStreams = require('../parse/streams'),\n    Encoder = require('../scene/Encoder'),\n    Transition = require('../scene/Transition');\n\nfunction View(el, width, height) {\n  this._el    = null;\n  this._model = null;\n  this._width   = this.__width = width || 500;\n  this._height  = this.__height = height || 300;\n  this._bgcolor = null;\n  this._cursor  = true; // Set cursor based on hover propset?\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler  = null;\n  this._streamer = null; // Targeted update for streaming changes\n  this._skipSignals = false; // Batch set signals can skip reevaluation.\n  this._changeset = null;\n  this._repaint = true; // Full re-render on every re-init\n  this._renderers = sg;\n  this._io  = null;\n  this._api = {}; // Stash streaming data API sandboxes.\n}\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    this._streamer = new df.Node(model);\n    this._streamer._rank = -1;  // HACK: To reduce re-ranking churn.\n    this._changeset = df.ChangeSet.create();\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\n// Sandboxed streaming data API\nfunction streaming(src) {\n  var view = this,\n      ds = this._model.data(src);\n  if (!ds) return log.error('Data source \"'+src+'\" is not defined.');\n\n  var listener = ds.pipeline()[0],\n      streamer = this._streamer,\n      api = {};\n\n  // If we have it stashed, don't create a new closure.\n  if (this._api[src]) return this._api[src];\n\n  api.insert = function(vals) {\n    ds.insert(dl.duplicate(vals));  // Don't pollute the environment\n    streamer.addListener(listener);\n    view._changeset.data[src] = 1;\n    return api;\n  };\n\n  api.update = function() {\n    streamer.addListener(listener);\n    view._changeset.data[src] = 1;\n    return (ds.update.apply(ds, arguments), api);\n  };\n\n  api.remove = function() {\n    streamer.addListener(listener);\n    view._changeset.data[src] = 1;\n    return (ds.remove.apply(ds, arguments), api);\n  };\n\n  api.values = function() { return ds.values(); };\n\n  return (this._api[src] = api);\n}\n\nprototype.data = function(data) {\n  var v = this;\n  if (!arguments.length) return v._model.values();\n  else if (dl.isString(data)) return streaming.call(v, data);\n  else if (dl.isObject(data)) {\n    dl.keys(data).forEach(function(k) {\n      var api = streaming.call(v, k);\n      data[k](api);\n    });\n  }\n  return this;\n};\n\nvar VIEW_SIGNALS = dl.toMap(['width', 'height', 'padding']);\n\nprototype.signal = function(name, value, skip) {\n  var m = this._model,\n      key, values;\n\n  // Getter. Returns the value for the specified signal, or\n  // returns all signal values.\n  if (!arguments.length) {\n    return m.values(Deps.SIGNALS);\n  } else if (arguments.length === 1 && dl.isString(name)) {\n    return m.values(Deps.SIGNALS, name);\n  }\n\n  // Setter. Can be done in batch or individually. In either case,\n  // the final argument determines if set signals should be skipped.\n  if (dl.isObject(name)) {\n    values = name;\n    skip = value;\n  } else {\n    values = {};\n    values[name] = value;\n  }\n  for (key in values) {\n    if (VIEW_SIGNALS[key]) {\n      this[key](values[key]);\n    } else {\n      setSignal.call(this, key, values[key]);\n    }\n  }\n  return (this._skipSignals = skip, this);\n};\n\nfunction setSignal(name, value) {\n  var cs = this._changeset,\n      sg = this._model.signal(name);\n  if (!sg) return log.error('Signal \"'+name+'\" is not defined.');\n\n  this._streamer.addListener(sg.value(value));\n  cs.signals[name] = 1;\n  cs.reflow = true;\n}\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    this.model().width(width);\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n    setSignal.call(this, 'width', width);\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    this.model().height(height);\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n    setSignal.call(this, 'height', height);\n  }\n  return this;\n};\n\nprototype.background = function(bgcolor) {\n  if (!arguments.length) return this._bgcolor;\n  if (this._bgcolor !== bgcolor) {\n    this._bgcolor = bgcolor;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === 'strict');\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._renderer) this._renderer.resize(this._width, this._height, this._padding);\n    if (this._handler)  this._handler.padding(this._padding);\n    setSignal.call(this, 'padding', this._padding);\n  }\n  return (this._repaint = true, this);\n};\n\nfunction viewBounds() {\n  var s = this.model().scene(),\n      legends = s.items[0].legendItems,\n      i = 0, len = legends.length,\n      b, lb;\n\n  // For strict padding, clip legend height to prevent a tiny data rectangle.\n  if (this._strict) {\n    b = bound.mark(s, null, false);\n    for (; i<len; ++i) {\n      lb = legends[i].bounds;\n      b.add(lb.x1, 0).add(lb.x2, 0);\n    }\n    return b;\n  }\n\n  return s.bounds;\n}\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var b = viewBounds.call(this),\n      pad = this._padding,\n      config = this.model().config(),\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0;\n  b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n\n    this._model.width(this._width).height(this._height).reset();\n    setSignal.call(this, 'width', this._width);\n    setSignal.call(this, 'height', this._height);\n    setSignal.call(this, 'padding', pad);\n\n    this.initialize().update({props:'enter'}).update({props:'update'});\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (this._renderers[type]) type = this._renderers[type];\n  else if (dl.isString(type)) throw new Error('Unknown renderer: ' + type);\n  else if (!type) throw new Error('No renderer specified');\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    this.initialize();\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding, bg = v._bgcolor,\n      config = this.model().config();\n\n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n    if (!el) return this;  // This View cannot init w/o an\n  }\n\n  // clear pre-existing container\n  d3.select(el).select('div.vega').remove();\n\n  // add div container\n  this._el = el = d3.select(el)\n    .append('div')\n    .attr('class', 'vega')\n    .style('position', 'relative')\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style('width',  (v._viewport[0] || w)+'px')\n      .style('height', (v._viewport[1] || h)+'px')\n      .style('overflow', 'auto');\n  }\n\n  // renderer\n  sg.canvas.Renderer.RETINA = config.render.retina;\n  v._renderer = (v._renderer || new this._io.Renderer(config.load))\n    .initialize(el, w, h, pad)\n    .background(bg);\n\n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    v._detach = parseStreams(this);\n  }\n\n  return (this._repaint = true, this);\n};\n\nprototype.destroy = function() {\n  if (this._detach) this._detach();\n};\n\nfunction build() {\n  var v = this;\n  v._renderNode = new df.Node(v._model)\n    .router(true);\n\n  v._renderNode.evaluate = function(input) {\n    log.debug(input, ['rendering']);\n\n    var s = v._model.scene(),\n        h = v._handler;\n\n    if (h && h.scene) h.scene(s);\n\n    if (input.trans) {\n      input.trans.start(function(items) { v._renderer.render(s, items); });\n    } else if (v._repaint) {\n      v._renderer.render(s);\n    } else if (input.dirty.length) {\n      v._renderer.render(s, input.dirty);\n    }\n\n    if (input.dirty.length) {\n      input.dirty.forEach(function(i) { i._dirty = false; });\n      s.items[0]._dirty = false;\n    }\n\n    v._repaint = v._skipSignals = false;\n    return input;\n  };\n\n  return (v._model.scene(v._renderNode), true);\n}\n\nprototype.update = function(opt) {\n  opt = opt || {};\n  var v = this,\n      model = this._model,\n      streamer = this._streamer,\n      cs = this._changeset,\n      trans = opt.duration ? new Transition(opt.duration, opt.ease) : null;\n\n  if (trans) cs.trans = trans;\n  if (opt.props !== undefined) {\n    if (dl.keys(cs.data).length > 0) {\n      throw Error(\n        'New data values are not reflected in the visualization.' +\n        ' Please call view.update() before updating a specified property set.'\n      );\n    }\n\n    cs.reflow  = true;\n    cs.request = opt.props;\n  }\n\n  var built = v._build;\n  v._build = v._build || build.call(this);\n\n  // If specific items are specified, short-circuit dataflow graph.\n  // Else-If there are streaming updates, perform a targeted propagation.\n  // Otherwise, re-evaluate the entire model (datasources + scene).\n  if (opt.items && built) {\n    Encoder.update(model, opt.trans, opt.props, opt.items, cs.dirty);\n    v._renderNode.evaluate(cs);\n  } else if (streamer.listeners().length && built) {\n    // Include re-evaluation entire model when repaint flag is set\n    if (this._repaint) streamer.addListener(model.node());\n    model.propagate(cs, streamer, null, this._skipSignals);\n    streamer.disconnect();\n  } else {\n    model.fire(cs);\n  }\n\n  v._changeset = df.ChangeSet.create();\n\n  return v.autopad(opt);\n};\n\nprototype.toImageURL = function(type) {\n  var v = this, Renderer;\n\n  // lookup appropriate renderer\n  switch (type || 'png') {\n    case 'canvas':\n    case 'png':\n      Renderer = sg.canvas.Renderer; break;\n    case 'svg':\n      Renderer = sg.svg.string.Renderer; break;\n    default: throw Error('Unrecognized renderer type: ' + type);\n  }\n\n  var retina = sg.canvas.Renderer.RETINA;\n  sg.canvas.Renderer.RETINA = false; // ignore retina screen\n\n  // render the scenegraph\n  var ren = new Renderer(v._model.config.load)\n    .initialize(null, v._width, v._height, v._padding)\n    .background(v._bgcolor)\n    .render(v._model.scene());\n\n  sg.canvas.Renderer.RETINA = retina; // restore retina settings\n\n  // return data url\n  if (type === 'svg') {\n    var blob = new Blob([ren.svg()], {type: 'image/svg+xml'});\n    return window.URL.createObjectURL(blob);\n  } else {\n    return ren.canvas().toDataURL('image/png');\n  }\n};\n\nprototype.render = function(items) {\n  this._renderer.render(this._model.scene(), items);\n  return this;\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.onSignal = function(name, handler) {\n  var sg = this._model.signal(name);\n  return (sg ?\n    sg.on(handler) : log.error('Signal \"'+name+'\" is not defined.'), this);\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.offSignal = function(name, handler) {\n  var sg = this._model.signal(name);\n  return (sg ?\n    sg.off(handler) : log.error('Signal \"'+name+'\" is not defined.'), this);\n};\n\nView.factory = function(model) {\n  var HeadlessView = require('./HeadlessView');\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = (opt.el ? new View() : new HeadlessView())\n      .model(model)\n      .renderer(opt.renderer || 'canvas')\n      .width(defs.width)\n      .height(defs.height)\n      .background(defs.background)\n      .padding(defs.padding)\n      .viewport(defs.viewport)\n      .initialize(opt.el);\n\n    if (opt.data) v.data(opt.data);\n\n    // Register handlers for the hover propset and cursors.\n    if (opt.el) {\n      if (opt.hover !== false) {\n        v.on('mouseover', function(evt, item) {\n          if (item && item.hasPropertySet('hover')) {\n            this.update({props:'hover', items:item});\n          }\n        })\n        .on('mouseout', function(evt, item) {\n          if (item && item.hasPropertySet('hover')) {\n            this.update({props:'update', items:item});\n          }\n        });\n      }\n\n      if (opt.cursor !== false) {\n        // If value is a string, it is a custom value set by the user.\n        // In this case, the user is responsible for maintaining the cursor state\n        // and control only reverts back to this handler if set back to 'default'.\n        v.onSignal('cursor', function(name, value) {\n          var body = d3.select('body');\n          if (dl.isString(value)) {\n            v._cursor = value === 'default';\n            body.style('cursor', value);\n          } else if (dl.isObject(value) && v._cursor) {\n            body.style('cursor', value.default);\n          }\n        });\n      }\n    }\n\n    return v;\n  };\n};\n\nmodule.exports = View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/View.js\n// module id = +5nH\n// module chunks = 0","var util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '__dl_rem__';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n  this._last = null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  this._get = null;\n  if (this._rem.length === 0) return this._add;\n\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n, m;\n\n  if (!util.isObject(r[0])) {\n    // processing raw values\n    m = stats.count.map(r);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (m[a[i]] > 0) {\n        m[a[i]] -= 1;\n      } else {\n        x[j++] = a[i];\n      }\n    }\n  } else if (k) {\n    // has unique key field, so use that\n    m = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!m.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._get !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._get = get;\n  }\n  return this._ext;\n};\n\nproto.argmin = function(get) {\n  return this.extent(get)[0];\n};\n\nproto.argmax = function(get) {\n  return this.extent(get)[1];\n};\n\nproto.min = function(get) {\n  var m = this.extent(get)[0];\n  return m != null ? get(m) : +Infinity;\n};\n\nproto.max = function(get) {\n  var m = this.extent(get)[1];\n  return m != null ? get(m) : -Infinity;\n};\n\nproto.quartile = function(get) {\n  if (this._get !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._get = get;\n  }\n  return this._q;\n};\n\nproto.q1 = function(get) {\n  return this.quartile(get)[0];\n};\n\nproto.q2 = function(get) {\n  return this.quartile(get)[1];\n};\n\nproto.q3 = function(get) {\n  return this.quartile(get)[2];\n};\n\nmodule.exports = Collector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/collector.js\n// module id = /2vj\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('./aggregate');\nvar timeunit_1 = require('./timeunit');\nvar type_1 = require('./type');\nvar vlEncoding = require('./encoding');\nvar mark_1 = require('./mark');\nexports.DELIM = '|';\nexports.ASSIGN = '=';\nexports.TYPE = ',';\nexports.FUNC = '_';\nfunction shorten(spec) {\n    return 'mark' + exports.ASSIGN + spec.mark +\n        exports.DELIM + shortenEncoding(spec.encoding);\n}\nexports.shorten = shorten;\nfunction parse(shorthand, data, config) {\n    var split = shorthand.split(exports.DELIM), mark = split.shift().split(exports.ASSIGN)[1].trim(), encoding = parseEncoding(split.join(exports.DELIM));\n    var spec = {\n        mark: mark_1.Mark[mark],\n        encoding: encoding\n    };\n    if (data !== undefined) {\n        spec.data = data;\n    }\n    if (config !== undefined) {\n        spec.config = config;\n    }\n    return spec;\n}\nexports.parse = parse;\nfunction shortenEncoding(encoding) {\n    return vlEncoding.map(encoding, function (fieldDef, channel) {\n        return channel + exports.ASSIGN + shortenFieldDef(fieldDef);\n    }).join(exports.DELIM);\n}\nexports.shortenEncoding = shortenEncoding;\nfunction parseEncoding(encodingShorthand) {\n    return encodingShorthand.split(exports.DELIM).reduce(function (m, e) {\n        var split = e.split(exports.ASSIGN), enctype = split[0].trim(), fieldDefShorthand = split[1];\n        m[enctype] = parseFieldDef(fieldDefShorthand);\n        return m;\n    }, {});\n}\nexports.parseEncoding = parseEncoding;\nfunction shortenFieldDef(fieldDef) {\n    return (fieldDef.aggregate ? fieldDef.aggregate + exports.FUNC : '') +\n        (fieldDef.timeUnit ? fieldDef.timeUnit + exports.FUNC : '') +\n        (fieldDef.bin ? 'bin' + exports.FUNC : '') +\n        (fieldDef.field || '') + exports.TYPE + type_1.SHORT_TYPE[fieldDef.type];\n}\nexports.shortenFieldDef = shortenFieldDef;\nfunction shortenFieldDefs(fieldDefs, delim) {\n    if (delim === void 0) { delim = exports.DELIM; }\n    return fieldDefs.map(shortenFieldDef).join(delim);\n}\nexports.shortenFieldDefs = shortenFieldDefs;\nfunction parseFieldDef(fieldDefShorthand) {\n    var split = fieldDefShorthand.split(exports.TYPE);\n    var fieldDef = {\n        field: split[0].trim(),\n        type: type_1.TYPE_FROM_SHORT_TYPE[split[1].trim()]\n    };\n    for (var i = 0; i < aggregate_1.AGGREGATE_OPS.length; i++) {\n        var a = aggregate_1.AGGREGATE_OPS[i];\n        if (fieldDef.field.indexOf(a + '_') === 0) {\n            fieldDef.field = fieldDef.field.substr(a.toString().length + 1);\n            if (a === aggregate_1.AggregateOp.COUNT && fieldDef.field.length === 0) {\n                fieldDef.field = '*';\n            }\n            fieldDef.aggregate = a;\n            break;\n        }\n    }\n    for (var i = 0; i < timeunit_1.TIMEUNITS.length; i++) {\n        var tu = timeunit_1.TIMEUNITS[i];\n        if (fieldDef.field && fieldDef.field.indexOf(tu + '_') === 0) {\n            fieldDef.field = fieldDef.field.substr(fieldDef.field.length + 1);\n            fieldDef.timeUnit = tu;\n            break;\n        }\n    }\n    if (fieldDef.field && fieldDef.field.indexOf('bin_') === 0) {\n        fieldDef.field = fieldDef.field.substr(4);\n        fieldDef.bin = true;\n    }\n    return fieldDef;\n}\nexports.parseFieldDef = parseFieldDef;\n//# sourceMappingURL=shorthand.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/shorthand.js\n// module id = /7Ur\n// module chunks = 0","var segmentCache = {},\n    bezierCache = {},\n    join = [].join;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction segments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  var key = join.call(arguments);\n  if (segmentCache[key]) {\n    return segmentCache[key];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep === 1){\n    th_arc += 2 * Math.PI;\n  } else if (th_arc > 0 && sweep === 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segs = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segs; ++i) {\n    var th2 = th0 + i * th_arc / segs;\n    var th3 = th0 + (i+1) * th_arc / segs;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (segmentCache[key] = result);\n}\n\nfunction bezier(params) {\n  var key = join.call(params);\n  if (bezierCache[key]) {\n    return bezierCache[key];\n  }\n  \n  var cx = params[0],\n      cy = params[1],\n      th0 = params[2],\n      th1 = params[3],\n      rx = params[4],\n      ry = params[5],\n      sin_th = params[6],\n      cos_th = params[7];\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (bezierCache[key] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nmodule.exports = {\n  segments: segments,\n  bezier: bezier,\n  cache: {\n    segments: segmentCache,\n    bezier: bezierCache\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/path/arc.js\n// module id = /MHv\n// module chunks = 0","var dl = require('datalib'),\n    log  = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: 'array<field>'} });\n  this.router(true);\n}\n\nvar prototype = (Sort.prototype = Object.create(Transform.prototype));\nprototype.constructor = Sort;\n\nprototype.transform = function(input) {\n  log.debug(input, ['sorting']);\n\n  if (input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.param('by').field);\n  }\n  return input;\n};\n\nmodule.exports = Sort;\n\nSort.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Sort transform\",\n  \"description\": \"Sorts the values of a data set.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"sort\"]},\n    \"by\": {\n      \"oneOf\": [\n        {\"type\": \"string\"},\n        {\"type\": \"array\", \"items\": {\"type\": \"string\"}}\n      ],\n      \"description\": \"A list of fields to use as sort criteria.\"\n    }\n  },\n  \"required\": [\"type\", \"by\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Sort.js\n// module id = /lc5\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar encoding_1 = require('../../encoding');\nvar fielddef_1 = require('../../fielddef');\nvar mark_1 = require('../../mark');\nvar scale_1 = require('../../scale');\nvar util_1 = require('../../util');\nvar area_1 = require('./area');\nvar bar_1 = require('./bar');\nvar common_1 = require('../common');\nvar line_1 = require('./line');\nvar point_1 = require('./point');\nvar rule_1 = require('./rule');\nvar text_1 = require('./text');\nvar tick_1 = require('./tick');\nvar markCompiler = {\n    area: area_1.area,\n    bar: bar_1.bar,\n    line: line_1.line,\n    point: point_1.point,\n    text: text_1.text,\n    tick: tick_1.tick,\n    rule: rule_1.rule,\n    circle: point_1.circle,\n    square: point_1.square\n};\nfunction parseMark(model) {\n    if (util_1.contains([mark_1.LINE, mark_1.AREA], model.mark())) {\n        return parsePathMark(model);\n    }\n    else {\n        return parseNonPathMark(model);\n    }\n}\nexports.parseMark = parseMark;\nfunction parsePathMark(model) {\n    var mark = model.mark();\n    var isFaceted = model.parent() && model.parent().isFacet();\n    var dataFrom = { data: model.dataTable() };\n    var details = detailFields(model);\n    var pathMarks = [\n        {\n            name: model.name('marks'),\n            type: markCompiler[mark].markType(),\n            from: util_1.extend(isFaceted || details.length > 0 ? {} : dataFrom, { transform: [{ type: 'sort', by: sortPathBy(model) }] }),\n            properties: { update: markCompiler[mark].properties(model) }\n        }\n    ];\n    if (details.length > 0) {\n        var facetTransform = { type: 'facet', groupby: details };\n        var transform = mark === mark_1.AREA && model.stack() ?\n            stackTransforms(model, true).concat(facetTransform) :\n            [].concat(facetTransform, model.has(channel_1.ORDER) ? [{ type: 'sort', by: sortBy(model) }] : []);\n        return [{\n                name: model.name('pathgroup'),\n                type: 'group',\n                from: util_1.extend(isFaceted ? {} : dataFrom, { transform: transform }),\n                properties: {\n                    update: {\n                        width: { field: { group: 'width' } },\n                        height: { field: { group: 'height' } }\n                    }\n                },\n                marks: pathMarks\n            }];\n    }\n    else {\n        return pathMarks;\n    }\n}\nfunction parseNonPathMark(model) {\n    var mark = model.mark();\n    var isFaceted = model.parent() && model.parent().isFacet();\n    var dataFrom = { data: model.dataTable() };\n    var marks = [];\n    if (mark === mark_1.TEXT &&\n        model.has(channel_1.COLOR) &&\n        model.config().mark.applyColorToBackground && !model.has(channel_1.X) && !model.has(channel_1.Y)) {\n        marks.push(util_1.extend({\n            name: model.name('background'),\n            type: 'rect'\n        }, isFaceted ? {} : { from: dataFrom }, { properties: { update: text_1.text.background(model) } }));\n    }\n    marks.push(util_1.extend({\n        name: model.name('marks'),\n        type: markCompiler[mark].markType()\n    }, (!isFaceted || model.stack() || model.has(channel_1.ORDER)) ? {\n        from: util_1.extend(isFaceted ? {} : dataFrom, model.stack() ?\n            { transform: stackTransforms(model, false) } :\n            model.has(channel_1.ORDER) ?\n                { transform: [{ type: 'sort', by: sortBy(model) }] } :\n                {})\n    } : {}, { properties: { update: markCompiler[mark].properties(model) } }));\n    if (model.has(channel_1.LABEL) && markCompiler[mark].labels) {\n        var labelProperties = markCompiler[mark].labels(model);\n        if (labelProperties !== undefined) {\n            marks.push(util_1.extend({\n                name: model.name('label'),\n                type: 'text'\n            }, isFaceted ? {} : { from: dataFrom }, { properties: { update: labelProperties } }));\n        }\n    }\n    return marks;\n}\nfunction sortBy(model) {\n    if (model.has(channel_1.ORDER)) {\n        var channelDef = model.encoding().order;\n        if (channelDef instanceof Array) {\n            return channelDef.map(common_1.sortField);\n        }\n        else {\n            return common_1.sortField(channelDef);\n        }\n    }\n    return null;\n}\nfunction sortPathBy(model) {\n    if (model.mark() === mark_1.LINE && model.has(channel_1.PATH)) {\n        var channelDef = model.encoding().path;\n        if (channelDef instanceof Array) {\n            return channelDef.map(common_1.sortField);\n        }\n        else {\n            return common_1.sortField(channelDef);\n        }\n    }\n    else {\n        return '-' + model.field(model.config().mark.orient === 'horizontal' ? channel_1.Y : channel_1.X, { binSuffix: '_mid' });\n    }\n}\nfunction detailFields(model) {\n    return [channel_1.COLOR, channel_1.DETAIL, channel_1.OPACITY, channel_1.SHAPE].reduce(function (details, channel) {\n        if (model.has(channel) && !model.fieldDef(channel).aggregate) {\n            details.push(model.field(channel));\n        }\n        return details;\n    }, []);\n}\nfunction stackTransforms(model, impute) {\n    var stackByFields = getStackByFields(model);\n    if (impute) {\n        return [imputeTransform(model, stackByFields), stackTransform(model, stackByFields)];\n    }\n    return [stackTransform(model, stackByFields)];\n}\nfunction getStackByFields(model) {\n    var encoding = model.encoding();\n    return channel_1.STACK_GROUP_CHANNELS.reduce(function (fields, channel) {\n        var channelEncoding = encoding[channel];\n        if (encoding_1.has(encoding, channel)) {\n            if (util_1.isArray(channelEncoding)) {\n                channelEncoding.forEach(function (fieldDef) {\n                    fields.push(fielddef_1.field(fieldDef));\n                });\n            }\n            else {\n                var fieldDef = channelEncoding;\n                var scale = model.scale(channel);\n                fields.push(fielddef_1.field(fieldDef, {\n                    binSuffix: scale && scale.type === scale_1.ScaleType.ORDINAL ? '_range' : '_start'\n                }));\n            }\n        }\n        return fields;\n    }, []);\n}\nfunction imputeTransform(model, stackFields) {\n    var stack = model.stack();\n    return {\n        type: 'impute',\n        field: model.field(stack.fieldChannel),\n        groupby: stackFields,\n        orderby: [model.field(stack.groupbyChannel, { binSuffix: '_mid' })],\n        method: 'value',\n        value: 0\n    };\n}\nfunction stackTransform(model, stackFields) {\n    var stack = model.stack();\n    var encoding = model.encoding();\n    var sortby = model.has(channel_1.ORDER) ?\n        (util_1.isArray(encoding[channel_1.ORDER]) ? encoding[channel_1.ORDER] : [encoding[channel_1.ORDER]]).map(common_1.sortField) :\n        stackFields.map(function (field) {\n            return '-' + field;\n        });\n    var valName = model.field(stack.fieldChannel);\n    var transform = {\n        type: 'stack',\n        groupby: [model.field(stack.groupbyChannel, { binSuffix: '_mid' })],\n        field: model.field(stack.fieldChannel),\n        sortby: sortby,\n        output: {\n            start: valName + '_start',\n            end: valName + '_end'\n        }\n    };\n    if (stack.offset) {\n        transform.offset = stack.offset;\n    }\n    return transform;\n}\n//# sourceMappingURL=mark.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/mark.js\n// module id = 0ZZw\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-format', ['exports'], factory) :\n  factory((global.d3_format = {}));\n}(this, function (exports) { 'use strict';\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  };\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  };\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  };\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  };\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  };\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  };\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  };\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function locale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function format(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      return function(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            var i = -1, n = value.length, c;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            var i = -1, n = value.length, c;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      };\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = format((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: format,\n      formatPrefix: formatPrefix\n    };\n  };\n\n  var defaultLocale = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  var caES = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var csCZ = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0Kč\"],\n  });\n\n  var deCH = locale({\n    decimal: \",\",\n    thousands: \"'\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0CHF\"]\n  });\n\n  var deDE = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var enCA = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  var enGB = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"£\", \"\"]\n  });\n\n  var esES = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var fiFI = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var frCA = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"$\"]\n  });\n\n  var frFR = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var heIL = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₪\", \"\"]\n  });\n\n  var huHU = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0Ft\"]\n  });\n\n  var itIT = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\", \"\"]\n  });\n\n  var jaJP = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"\", \"円\"]\n  });\n\n  var koKR = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₩\", \"\"]\n  });\n\n  var mkMK = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0ден.\"]\n  });\n\n  var nlNL = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\\xa0\", \"\"]\n  });\n\n  var plPL = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"zł\"]\n  });\n\n  var ptBR = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"R$\", \"\"]\n  });\n\n  var ruRU = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0руб.\"]\n  });\n\n  var svSE = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"SEK\"]\n  });\n\n  var zhCN = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"¥\", \"\"]\n  });\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  };\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  };\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  };\n\n  var format = defaultLocale.format;\n  var formatPrefix = defaultLocale.formatPrefix;\n\n  var version = \"0.4.2\";\n\n  exports.version = version;\n  exports.format = format;\n  exports.formatPrefix = formatPrefix;\n  exports.locale = locale;\n  exports.localeCaEs = caES;\n  exports.localeCsCz = csCZ;\n  exports.localeDeCh = deCH;\n  exports.localeDeDe = deDE;\n  exports.localeEnCa = enCA;\n  exports.localeEnGb = enGB;\n  exports.localeEnUs = defaultLocale;\n  exports.localeEsEs = esES;\n  exports.localeFiFi = fiFI;\n  exports.localeFrCa = frCA;\n  exports.localeFrFr = frFR;\n  exports.localeHeIl = heIL;\n  exports.localeHuHu = huHU;\n  exports.localeItIt = itIT;\n  exports.localeJaJp = jaJP;\n  exports.localeKoKr = koKR;\n  exports.localeMkMk = mkMK;\n  exports.localeNlNl = nlNL;\n  exports.localePlPl = plPL;\n  exports.localePtBr = ptBR;\n  exports.localeRuRu = ruRU;\n  exports.localeSvSe = svSE;\n  exports.localeZhCn = zhCN;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-format/build/d3-format.js\n// module id = 1/F5\n// module chunks = 0","var gradient_id = 0;\n\nfunction Gradient(type) {\n  this.id = 'gradient_' + (gradient_id++);\n  this.type = type || 'linear';\n  this.stops = [];\n  this.x1 = 0;\n  this.x2 = 1;\n  this.y1 = 0;\n  this.y2 = 0;\n}\n\nvar prototype = Gradient.prototype;\n\nprototype.stop = function(offset, color) {\n  this.stops.push({\n    offset: offset,\n    color: color\n  });\n  return this;\n};\n\nmodule.exports = Gradient;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/Gradient.js\n// module id = 1C2Q\n// module chunks = 0","\"use strict\";\nvar filter;\n(function (filter_1) {\n    function parse(model) {\n        return model.transform().filter;\n    }\n    filter_1.parseUnit = parse;\n    function parseFacet(model) {\n        var filterComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source && childDataComponent.filter) {\n            filterComponent =\n                (filterComponent ? filterComponent + ' && ' : '') +\n                    childDataComponent.filter;\n            delete childDataComponent.filter;\n        }\n        return filterComponent;\n    }\n    filter_1.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var filterComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && childDataComponent.filter && childDataComponent.filter === filterComponent) {\n                delete childDataComponent.filter;\n            }\n        });\n        return filterComponent;\n    }\n    filter_1.parseLayer = parseLayer;\n    function assemble(component) {\n        var filter = component.filter;\n        return filter ? [{\n                type: 'filter',\n                test: filter\n            }] : [];\n    }\n    filter_1.assemble = assemble;\n})(filter = exports.filter || (exports.filter = {}));\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/filter.js\n// module id = 1PdY\n// module chunks = 0","var util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= this.valid ? d / this.valid : this.mean;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.valid > 1 ? this.dev / (this.valid-1) : 0',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.valid > 1 ? this.dev / this.valid : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid-1)) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / this.valid) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stderr': measure({\n    name: 'stderr',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid * (this.valid-1))) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'if (v <= this.min) this.argmin = null;',\n    set:  'this.argmin = this.argmin || cell.data.argmin(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'if (v >= this.max) this.argmax = null;',\n    set:  'this.argmax = this.argmax || cell.data.argmax(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'if (v <= this.min) this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'if (v >= this.max) this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'variance', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; ++this.valid;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; --this.valid;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  ctr.fields = agg.map(util.$('out'));\n  return ctr;\n}\n\ntypes.create = create;\nmodule.exports = types;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/measures.js\n// module id = 2I0S\n// module chunks = 0","var DOM = require('../../util/dom'),\n    Handler = require('../Handler'),\n    marks = require('./marks');\n\nfunction CanvasHandler() {\n  Handler.call(this);\n  this._down = null;\n  this._touch = null;\n  this._first = true;\n}\n\nvar base = Handler.prototype;\nvar prototype = (CanvasHandler.prototype = Object.create(base));\nprototype.constructor = CanvasHandler;\n\nprototype.initialize = function(el, pad, obj) {\n  // add event listeners\n  var canvas = this._canvas = DOM.find(el, 'canvas');\n  if (canvas) {\n    var that = this;\n    this.events.forEach(function(type) {\n      canvas.addEventListener(type, function(evt) {\n        if (prototype[type]) {\n          prototype[type].call(that, evt);\n        } else {\n          that.fire(type, evt);\n        }\n      });\n    });\n  }\n\n  return base.initialize.call(this, el, pad, obj);\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext('2d');\n};\n\n// supported events\nprototype.events = [\n  'keydown',\n  'keypress',\n  'keyup',\n  'dragenter',\n  'dragleave',\n  'dragover',\n  'mousedown',\n  'mouseup',\n  'mousemove',\n  'mouseout',\n  'mouseover',\n  'click',\n  'dblclick',\n  'wheel',\n  'mousewheel',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire('mousewheel', evt);\n};\n\nfunction move(moveEvent, overEvent, outEvent) {\n  return function(evt) {\n    var a = this._active,\n        p = this.pickEvent(evt);\n\n    if (p === a) {\n      // active item and picked item are the same\n      this.fire(moveEvent, evt); // fire move\n    } else {\n      // active item and picked item are different\n      this.fire(outEvent, evt);  // fire out for prior active item\n      this._active = p;            // set new active item\n      this.fire(overEvent, evt); // fire over for new active item\n      this.fire(moveEvent, evt); // fire move for new active item\n    }\n  };\n}\n\nfunction inactive(type) {\n  return function(evt) {\n    this.fire(type, evt);\n    this._active = null;\n  };\n}\n\nprototype.mousemove = move('mousemove', 'mouseover', 'mouseout');\nprototype.dragover  = move('dragover', 'dragenter', 'dragleave');\n\nprototype.mouseout  = inactive('mouseout');\nprototype.dragleave = inactive('dragleave');\n\nprototype.mousedown = function(evt) {\n  this._down = this._active;\n  this.fire('mousedown', evt);\n};\n\nprototype.click = function(evt) {\n  if (this._down === this._active) {\n    this.fire('click', evt);\n    this._down = null;\n  }\n};\n\nprototype.touchstart = function(evt) {\n  this._touch = this.pickEvent(evt.changedTouches[0]);\n\n  if (this._first) {\n    this._active = this._touch;\n    this._first = false;\n  }\n\n  this.fire('touchstart', evt, true);\n};\n\nprototype.touchmove = function(evt) {\n  this.fire('touchmove', evt, true);\n};\n\nprototype.touchend = function(evt) {\n  this.fire('touchend', evt, true);\n  this._touch = null;\n};\n\n// fire an event\nprototype.fire = function(type, evt, touch) {\n  var a = touch ? this._touch : this._active,\n      h = this._handlers[type], i, len;\n  if (h) {\n    evt.vegaType = type;\n    for (i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = this.eventName(type),\n      h = this._handlers;\n  (h[name] || (h[name] = [])).push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = this.eventName(type),\n      h = this._handlers[name], i;\n  if (!h) return;\n  for (i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\nprototype.pickEvent = function(evt) {\n  var rect = this._canvas.getBoundingClientRect(),\n      pad = this._padding, x, y;\n  return this.pick(this._scene,\n    x = (evt.clientX - rect.left),\n    y = (evt.clientY - rect.top),\n    x - pad.left, y - pad.top);\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      mark = marks[scene.marktype];\n  return mark.pick.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = CanvasHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/CanvasHandler.js\n// module id = 2zc7\n// module chunks = 0","var d3 = require('d3'),\n    Tuple = require('vega-dataflow/src/Tuple'),\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Voronoi(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    clipExtent: {type: 'array<value>', default: require('./screen').extent},\n    x: {type: 'field', default: 'layout_x'},\n    y: {type: 'field', default: 'layout_y'}\n  });\n\n  this._layout = d3.geom.voronoi();\n  this._output = {'path': 'layout_path'};\n\n  return this.mutates(true);\n}\n\nvar prototype = (Voronoi.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Voronoi;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['voronoi']);\n\n  // get variables\n  var pathname = this._output.path;\n\n  // configure layout\n  var polygons = this._layout\n    .clipExtent(this.param('clipExtent'))\n    .x(this.param('x').accessor)\n    .y(this.param('y').accessor)\n    (data);\n\n  // build and assign path strings\n  for (var i=0; i<data.length; ++i) {\n    if (polygons[i]) Tuple.set(data[i], pathname, 'M' + polygons[i].join('L') + 'Z');\n  }\n\n  // return changeset\n  input.fields[pathname] = 1;\n  return input;\n};\n\nmodule.exports = Voronoi;\n\nVoronoi.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Voronoi transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"voronoi\"]},\n    \"clipExtent\": {\n      \"description\": \"The min and max points at which to clip the voronoi diagram.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n                \"minItems\": 2,\n                \"maxItems\": 2\n              },\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [[-1e5,-1e5],[1e5,1e5]]\n    },\n    \"x\": {\n      \"description\": \"The input x coordinates.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"y\": {\n      \"description\": \"The input y coordinates.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"path\": {\"type\": \"string\", \"default\": \"layout_path\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Voronoi.js\n// module id = 3C/O\n// module chunks = 0","var DEPS = require('./Dependencies').ALL,\n    nodeID = 0;\n\nfunction Node(graph) {\n  if (graph) this.init(graph);\n}\n\nvar Flags = Node.Flags = {\n  Router:     0x01, // Responsible for propagating tuples, cannot be skipped.\n  Collector:  0x02, // Holds a materialized dataset, pulse node to reflow.\n  Produces:   0x04, // Produces new tuples. \n  Mutates:    0x08, // Sets properties of incoming tuples.\n  Reflows:    0x10, // Forwards a reflow pulse.\n  Batch:      0x20  // Performs batch data processing, needs collector.\n};\n\nvar prototype = Node.prototype;\n\nprototype.init = function(graph) {\n  this._id = ++nodeID;\n  this._graph = graph;\n  this._rank  = graph.rank(); // Topological sort by rank\n  this._qrank = null; // Rank when enqueued for propagation\n  this._stamp = 0;    // Last stamp seen\n\n  this._listeners = [];\n  this._listeners._ids = {}; // To prevent duplicate listeners\n\n  // Initialize dependencies.\n  this._deps = {};\n  for (var i=0, n=DEPS.length; i<n; ++i) {\n    this._deps[DEPS[i]] = [];\n  }\n\n  // Initialize status flags.\n  this._flags = 0;\n\n  return this;\n};\n\nprototype.rank = function() {\n  return this._rank;\n};\n\nprototype.rerank = function() {\n  var g = this._graph, \n      q = [this],\n      cur;\n\n  while (q.length) {\n    cur = q.shift();\n    cur._rank = g.rank();\n    q.unshift.apply(q, cur.listeners());\n  }\n\n  return this;\n};\n\nprototype.qrank = function(/* set */) {\n  if (!arguments.length) return this._qrank;\n  return (this._qrank = this._rank, this);\n};\n\nprototype.last = function(stamp) { \n  if (!arguments.length) return this._stamp;\n  return (this._stamp = stamp, this);\n};\n\n// -- status flags ---\n\nprototype._setf = function(v, b) {\n  if (b) { this._flags |= v; } else { this._flags &= ~v; }\n  return this;\n};\n\nprototype.router = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Router);\n  return this._setf(Flags.Router, state);\n};\n\nprototype.collector = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Collector);\n  return this._setf(Flags.Collector, state);\n};\n\nprototype.produces = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Produces);\n  return this._setf(Flags.Produces, state);\n};\n\nprototype.mutates = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Mutates);\n  return this._setf(Flags.Mutates, state);\n};\n\nprototype.reflows = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Reflows);\n  return this._setf(Flags.Reflows, state);\n};\n\nprototype.batch = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Batch);\n  return this._setf(Flags.Batch, state);\n};\n\nprototype.dependency = function(type, deps) {\n  var d = this._deps[type],\n      n = d._names || (d._names = {});  // To prevent dupe deps\n\n  // Get dependencies of the given type\n  if (arguments.length === 1) {\n    return d;\n  }\n\n  if (deps === null) {\n    // Clear dependencies of the given type\n    d.splice(0, d.length);\n    d._names = {};\n  } else if (!Array.isArray(deps)) {\n    // Separate this case to avoid cost of array creation\n    if (n[deps]) return this;\n    d.push(deps);\n    n[deps] = 1;\n  } else {\n    for (var i=0, len=deps.length, dep; i<len; ++i) {\n      dep = deps[i];\n      if (n[dep]) continue;\n      d.push(dep);\n      n[dep] = 1;\n    }\n  }\n\n  return this;\n};\n\nprototype.listeners = function() {\n  return this._listeners;\n};\n\nprototype.addListener = function(l) {\n  if (!(l instanceof Node)) {\n    throw Error('Listener is not a Node');\n  }\n  if (this._listeners._ids[l._id]) return this;\n\n  this._listeners.push(l);\n  this._listeners._ids[l._id] = 1;\n  if (this._rank > l._rank) {\n    l.rerank();\n  }\n\n  return this;\n};\n\nprototype.removeListener = function(l) {\n  if (!this._listeners._ids[l._id]) return false;\n  \n  var idx = this._listeners.indexOf(l),\n      b = idx >= 0;\n\n  if (b) {\n    this._listeners.splice(idx, 1);\n    this._listeners._ids[l._id] = null;\n  }\n  return b;\n};\n\nprototype.disconnect = function() {\n  this._listeners = [];\n  this._listeners._ids = {};\n};\n\n// Evaluate this dataflow node for the current pulse.\n// Subclasses should override to perform custom processing.\nprototype.evaluate = function(pulse) {\n  return pulse;\n};\n\n// Should this node be re-evaluated for the current pulse?\n// Searches pulse to see if any dependencies have updated.\nprototype.reevaluate = function(pulse) {\n  var prop, dep, i, n, j, m;\n\n  for (i=0, n=DEPS.length; i<n; ++i) {\n    prop = DEPS[i];\n    dep = this._deps[prop];\n    for (j=0, m=dep.length; j<m; ++j) {\n      if (pulse[prop][dep[j]]) return true;\n    }\n  }\n\n  return false;\n};\n\nNode.reset = function() { nodeID = 0; };\n\nmodule.exports = Node;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Node.js\n// module id = 3FFs\n// module chunks = 0","var bound = require('../util/bound');\n\nvar sets = [\n  'items',\n  'axisItems',\n  'legendItems'\n];\n\nvar keys = [\n  'marktype', 'name', 'interactive', 'clip',\n  'items', 'axisItems', 'legendItems', 'layer',\n  'x', 'y', 'width', 'height', 'align', 'baseline',             // layout\n  'fill', 'fillOpacity', 'opacity',                             // fill\n  'stroke', 'strokeOpacity', 'strokeWidth', 'strokeCap',        // stroke\n  'strokeDash', 'strokeDashOffset',                             // stroke dash\n  'startAngle', 'endAngle', 'innerRadius', 'outerRadius',       // arc\n  'interpolate', 'tension', 'orient',                           // area, line\n  'url',                                                        // image\n  'path',                                                       // path\n  'x2', 'y2',                                                   // rule\n  'size', 'shape',                                              // symbol\n  'text', 'angle', 'theta', 'radius', 'dx', 'dy',               // text\n  'font', 'fontSize', 'fontWeight', 'fontStyle', 'fontVariant'  // font\n];\n\nfunction toJSON(scene, indent) {\n  return JSON.stringify(scene, keys, indent);\n}\n\nfunction fromJSON(json) {\n  var scene = (typeof json === 'string' ? JSON.parse(json) : json);\n  return initialize(scene);\n}\n\nfunction initialize(scene) {\n  var type = scene.marktype,\n      i, n, s, m, items;\n\n  for (s=0, m=sets.length; s<m; ++s) {\n    if ((items = scene[sets[s]])) {\n      for (i=0, n=items.length; i<n; ++i) {\n        items[i][type ? 'mark' : 'group'] = scene;\n        if (!type || type === 'group') {\n          initialize(items[i]);\n        }\n      }\n    }\n  }\n\n  if (type) bound.mark(scene);\n  return scene;\n}\n\nmodule.exports = {\n  toJSON:   toJSON,\n  fromJSON: fromJSON\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/scene.js\n// module id = 3Gpk\n// module chunks = 0","function size(item) {\n  return item.fontSize != null ? item.fontSize : 11;\n}\n\nmodule.exports = {\n  size: size,\n  value: function(s) {\n    return s != null ? String(s) : '';\n  },\n  font: function(item, quote) {\n    var font = item.font;\n    if (quote && font) {\n      font = String(font).replace(/\\\"/g, '\\'');\n    }\n    return '' +\n      (item.fontStyle ? item.fontStyle + ' ' : '') +\n      (item.fontVariant ? item.fontVariant + ' ' : '') +\n      (item.fontWeight ? item.fontWeight + ' ' : '') +\n      size(item) + 'px ' +\n      (font || 'sans-serif');\n  },\n  offset: function(item) {\n    // perform our own font baseline calculation\n    // why? not all browsers support SVG 1.1 'alignment-baseline' :(\n    var baseline = item.baseline,\n        h = size(item);\n    return Math.round(\n      baseline === 'top'    ?  0.93*h :\n      baseline === 'middle' ?  0.30*h :\n      baseline === 'bottom' ? -0.21*h : 0\n    );\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/text.js\n// module id = 3Scv\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    log = require('vega-logging'),\n    ChangeSet = df.ChangeSet,\n    Tuple = df.Tuple,\n    Deps = df.Dependencies,\n    Transform = require('./Transform'),\n    Facetor = require('./Facetor');\n\nfunction Aggregate(graph) {\n  Transform.prototype.init.call(this, graph);\n\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'},\n    summarize: {\n      type: 'custom',\n      set: function(summarize) {\n        var signalDeps = {},\n            tx = this._transform,\n            i, len, f, fields, name, ops;\n\n        if (!dl.isArray(fields = summarize)) { // Object syntax from dl\n          fields = [];\n          for (name in summarize) {\n            ops = dl.array(summarize[name]);\n            fields.push({field: name, ops: ops});\n          }\n        }\n\n        function sg(x) { if (x.signal) signalDeps[x.signal] = 1; }\n\n        for (i=0, len=fields.length; i<len; ++i) {\n          f = fields[i];\n          if (f.field.signal) { signalDeps[f.field.signal] = 1; }\n          dl.array(f.ops).forEach(sg);\n          dl.array(f.as).forEach(sg);\n        }\n\n        tx._fields = fields;\n        tx._aggr = null;\n        tx.dependency(Deps.SIGNALS, dl.keys(signalDeps));\n        return tx;\n      }\n    }\n  });\n\n  this._aggr  = null; // dl.Aggregator\n  this._input = null; // Used by Facetor._on_keep.\n  this._args  = null; // To cull re-computation.\n  this._fields = [];\n  this._out = [];\n\n  this._type = TYPES.TUPLE;\n  this._acc = {groupby: dl.true, value: dl.true};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Aggregate.prototype = Object.create(Transform.prototype));\nprototype.constructor = Aggregate;\n\nvar TYPES = Aggregate.TYPES = {\n  VALUE: 1,\n  TUPLE: 2,\n  MULTI: 3\n};\n\nAggregate.VALID_OPS = [\n  'values', 'count', 'valid', 'missing', 'distinct',\n  'sum', 'mean', 'average', 'variance', 'variancep', 'stdev',\n  'stdevp', 'median', 'q1', 'q3', 'modeskew', 'min', 'max',\n  'argmin', 'argmax'\n];\n\nprototype.type = function(type) {\n  return (this._type = type, this);\n};\n\nprototype.accessors = function(groupby, value) {\n  var acc = this._acc;\n  acc.groupby = dl.$(groupby) || dl.true;\n  acc.value = dl.$(value) || dl.true;\n};\n\nprototype.aggr = function() {\n  if (this._aggr) return this._aggr;\n\n  var g = this._graph,\n      hasGetter = false,\n      args = [],\n      groupby = this.param('groupby').field,\n      value = function(x) { return x.signal ? g.signalRef(x.signal) : x; };\n\n  // Prepare summarize fields.\n  var fields = this._fields.map(function(f) {\n    var field = {\n      name: value(f.field),\n      as:   dl.array(f.as),\n      ops:  dl.array(value(f.ops)).map(value),\n      get:  f.get\n    };\n    hasGetter = hasGetter || field.get != null;\n    args.push(field.name);\n    return field;\n  });\n\n  // If there is an arbitrary getter, all bets are off.\n  // Otherwise, we can check argument fields to cull re-computation.\n  groupby.forEach(function(g) {\n    if (g.get) hasGetter = true;\n    args.push(g.name || g);\n  });\n  this._args = hasGetter || !fields.length ? null : args;\n\n  if (!fields.length) fields = {'*': 'values'};\n\n  // Instantiate our aggregator instance.\n  // Facetor is a special subclass that can facet into data pipelines.\n  var aggr = this._aggr = new Facetor()\n    .groupby(groupby)\n    .stream(true)\n    .summarize(fields);\n\n  // Collect output fields sets by this aggregate.\n  this._out = getFields(aggr);\n\n  // If we are processing tuples, key them by '_id'.\n  if (this._type !== TYPES.VALUE) { aggr.key('_id'); }\n\n  return aggr;\n};\n\nfunction getFields(aggr) {\n  // Collect the output fields set by this aggregate.\n  var f = [], i, n, j, m, dims, vals, meas;\n\n  dims = aggr._dims;\n  for (i=0, n=dims.length; i<n; ++i) {\n    f.push(dims[i].name);\n  }\n\n  vals = aggr._aggr;\n  for (i=0, n=vals.length; i<n; ++i) {\n    meas = vals[i].measures.fields;\n    for (j=0, m=meas.length; j<m; ++j) {\n      f.push(meas[j]);\n    }\n  }\n\n  return f;\n}\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['aggregate']);\n\n  var output = ChangeSet.create(input),\n      aggr = this.aggr(),\n      out = this._out,\n      args = this._args,\n      reeval = true,\n      p = Tuple.prev,\n      add, rem, mod, mark, i;\n\n  // Upon reset, retract prior tuples and re-initialize.\n  if (reset) {\n    output.rem.push.apply(output.rem, aggr.result());\n    aggr.clear();\n    this._aggr = null;\n    aggr = this.aggr();\n  }\n\n  // Get update methods according to input type.\n  if (this._type === TYPES.TUPLE) {\n    add  = function(x) { aggr._add(x); Tuple.prev_init(x); };\n    rem  = function(x) { aggr._rem(p(x)); };\n    mod  = function(x) { aggr._mod(x, p(x)); };\n    mark = function(x) { aggr._markMod(x, p(x)); };\n  } else {\n    var gby = this._acc.groupby,\n        val = this._acc.value,\n        get = this._type === TYPES.VALUE ? val : function(x) {\n          return { _id: x._id, groupby: gby(x), value: val(x) };\n        };\n    add  = function(x) { aggr._add(get(x)); Tuple.prev_init(x); };\n    rem  = function(x) { aggr._rem(get(p(x))); };\n    mod  = function(x) { aggr._mod(get(x), get(p(x))); };\n    mark = function(x) { aggr._mark(get(x), get(p(x))); };\n  }\n\n  input.add.forEach(add);\n  if (reset) {\n    // A signal change triggered reflow. Add everything.\n    // No need for rem, we cleared the aggregator.\n    input.mod.forEach(add);\n  } else {\n    input.rem.forEach(rem);\n\n    // If possible, check argument fields to see if we need to re-process mods.\n    if (args) for (i=0, reeval=false; i<args.length; ++i) {\n      if (input.fields[args[i]]) { reeval = true; break; }\n    }\n    input.mod.forEach(reeval ? mod : mark);\n  }\n\n  // Indicate output fields and return aggregate tuples.\n  for (i=0; i<out.length; ++i) {\n    output.fields[out[i]] = 1;\n  }\n  return (aggr._input = input, aggr.changes(output));\n};\n\nmodule.exports = Aggregate;\n\nvar VALID_OPS = Aggregate.VALID_OPS;\n\nAggregate.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Aggregate transform\",\n  \"description\": \"Compute summary aggregate statistics\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"aggregate\"]},\n    \"groupby\": {\n      \"type\": \"array\",\n      \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]},\n      \"description\": \"A list of fields to split the data into groups.\"\n    },\n    \"summarize\": {\n      \"oneOf\": [\n        {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"array\",\n            \"description\": \"An array of aggregate functions.\",\n            \"items\": {\"oneOf\": [{\"enum\": VALID_OPS}, {\"$ref\": \"#/refs/signal\"}]}\n          }\n        },\n        {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"field\": {\n                \"description\": \"The name of the field to aggregate.\",\n                \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n              },\n              \"ops\": {\n                \"type\": \"array\",\n                \"description\": \"An array of aggregate functions.\",\n                \"items\": {\"oneOf\": [{\"enum\": VALID_OPS}, {\"$ref\": \"#/refs/signal\"}]}\n              },\n              \"as\": {\n                \"type\": \"array\",\n                \"description\": \"An optional array of names to use for the output fields.\",\n                \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n              }\n            },\n            \"additionalProperties\": false,\n            \"required\": [\"field\", \"ops\"]\n          }\n        }\n      ]\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Aggregate.js\n// module id = 3Y21\n// module chunks = 0","var util = require('./util'),\n    time = require('./time'),\n    utc = time.utc;\n\nvar u = module.exports;\n\nu.$year   = util.$func('year', time.year.unit);\nu.$month  = util.$func('month', time.months.unit);\nu.$date   = util.$func('date', time.dates.unit);\nu.$day    = util.$func('day', time.weekdays.unit);\nu.$hour   = util.$func('hour', time.hours.unit);\nu.$minute = util.$func('minute', time.minutes.unit);\nu.$second = util.$func('second', time.seconds.unit);\n\nu.$utcYear   = util.$func('utcYear', utc.year.unit);\nu.$utcMonth  = util.$func('utcMonth', utc.months.unit);\nu.$utcDate   = util.$func('utcDate', utc.dates.unit);\nu.$utcDay    = util.$func('utcDay', utc.weekdays.unit);\nu.$utcHour   = util.$func('utcHour', utc.hours.unit);\nu.$utcMinute = util.$func('utcMinute', utc.minutes.unit);\nu.$utcSecond = util.$func('utcSecond', utc.seconds.unit);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/accessor.js\n// module id = 3bKu\n// module chunks = 0","var df = require('vega-dataflow'),\n    Base = df.Node.prototype, // jshint ignore:line\n    Deps = df.Dependencies,\n    Parameter = require('./Parameter');\n\nfunction Transform(graph) {\n  if (graph) Base.init.call(this, graph);\n}\n\nTransform.addParameters = function(proto, params) {\n  proto._parameters = proto._parameters || {};\n  for (var name in params) {\n    var p = params[name],\n        param = new Parameter(name, p.type, proto);\n\n    proto._parameters[name] = param;\n\n    if (p.type === 'custom') {\n      if (p.set) param.set = p.set.bind(param);\n      if (p.get) param.get = p.get.bind(param);\n    }\n\n    if (p.hasOwnProperty('default')) param.set(p.default);\n  }\n};\n\nvar prototype = (Transform.prototype = Object.create(Base));\nprototype.constructor = Transform;\n\nprototype.param = function(name, value) {\n  var param = this._parameters[name];\n  return (param === undefined) ? this :\n    (arguments.length === 1) ? param.get() : param.set(value);\n};\n\n// Perform transformation. Subclasses should override.\nprototype.transform = function(input/*, reset */) {\n  return input;\n};\n\nprototype.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed.\n  var reset = this._stamp < input.stamp &&\n    this.dependency(Deps.SIGNALS).reduce(function(c, s) {\n      return c += input.signals[s] ? 1 : 0;\n    }, 0);\n  return this.transform(input, reset);\n};\n\nprototype.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Transform.js\n// module id = 4JPs\n// module chunks = 0","function toMap(list) {\n  var map = {}, i, n;\n  for (i=0, n=list.length; i<n; ++i) map[list[i]] = 1;\n  return map;\n}\n\nfunction keys(object) {\n  var list = [], k;\n  for (k in object) list.push(k);\n  return list;\n}\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants'),\n      functions = (opt.functions || require('./functions'))(codegen),\n      functionDefs = opt.functionDefs ? opt.functionDefs(codegen) : {},\n      idWhiteList = opt.idWhiteList ? toMap(opt.idWhiteList) : null,\n      idBlackList = opt.idBlackList ? toMap(opt.idBlackList) : null,\n      memberDepth = 0,\n      FIELD_VAR = opt.fieldVar || 'datum',\n      GLOBAL_VAR = opt.globalVar || 'signals',\n      globals = {},\n      fields = {},\n      dataSources = {};\n\n  function codegen_wrap(ast) {\n    var retval = {\n      code: codegen(ast),\n      globals: keys(globals),\n      fields: keys(fields),\n      dataSources: keys(dataSources),\n      defs: functionDefs\n    };\n    globals = {};\n    fields = {};\n    dataSources = {};\n    return retval;\n  }\n\n  /* istanbul ignore next */\n  var lookupGlobal = typeof GLOBAL_VAR === 'function' ? GLOBAL_VAR :\n    function (id) {\n      return GLOBAL_VAR + '[\"' + id + '\"]';\n    };\n\n  function codegen(ast) {\n    if (typeof ast === 'string') return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error('Unsupported type: ' + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    'Literal': function(n) {\n        return n.raw;\n      },\n    'Identifier': function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            globals[id] = 1;\n            return lookupGlobal(id);\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error('Illegal identifier: ' + id);\n        }\n        return id;\n      },\n    'Program': function(n) {\n        return n.body.map(codegen).join('\\n');\n      },\n    'MemberExpression': function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === FIELD_VAR) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? '.'+p : '['+p+']');\n      },\n    'CallExpression': function(n) {\n        if (n.callee.type !== 'Identifier') {\n          throw new Error('Illegal callee type: ' + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error('Unrecognized function: ' + callee);\n        return fn instanceof Function ?\n          fn(args, globals, fields, dataSources) :\n          fn + '(' + args.map(codegen).join(',') + ')';\n      },\n    'ArrayExpression': function(n) {\n        return '[' + n.elements.map(codegen).join(',') + ']';\n      },\n    'BinaryExpression': function(n) {\n        return '(' + codegen(n.left) + n.operator + codegen(n.right) + ')';\n      },\n    'UnaryExpression': function(n) {\n        return '(' + n.operator + codegen(n.argument) + ')';\n      },\n    'ConditionalExpression': function(n) {\n        return '(' + codegen(n.test) +\n          '?' + codegen(n.consequent) +\n          ':' + codegen(n.alternate) +\n          ')';\n      },\n    'LogicalExpression': function(n) {\n        return '(' + codegen(n.left) + n.operator + codegen(n.right) + ')';\n      },\n    'ObjectExpression': function(n) {\n        return '{' + n.properties.map(codegen).join(',') + '}';\n      },\n    'Property': function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + ':' + codegen(n.value);\n      },\n    'ExpressionStatement': function(n) {\n        return codegen(n.expression);\n      }\n  };\n\n  codegen_wrap.functions = functions;\n  codegen_wrap.functionDefs = functionDefs;\n  codegen_wrap.constants = constants;\n  return codegen_wrap;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-expression/src/codegen.js\n// module id = 4XOj\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field:      {type: 'field', default: null},\n    startAngle: {type: 'value', default: 0},\n    endAngle:   {type: 'value', default: 2 * Math.PI},\n    sort:       {type: 'value', default: false}\n  });\n\n  this._output = {\n    'start': 'layout_start',\n    'end':   'layout_end',\n    'mid':   'layout_mid'\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Pie.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Pie;\n\nfunction ones() { return 1; }\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['pie']);\n\n  var output = this._output,\n      field = this.param('field').accessor || ones,\n      start = this.param('startAngle'),\n      stop = this.param('endAngle'),\n      sort = this.param('sort');\n\n  var values = data.map(field),\n      a = start,\n      k = (stop - start) / dl.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    Tuple.set(t, output.start, a);\n    Tuple.set(t, output.mid, (a + 0.5 * v * k));\n    Tuple.set(t, output.end, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.end] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n\nPie.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Pie transform\",\n  \"description\": \"Computes a pie chart layout.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"pie\"]},\n    \"field\": {\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The data values to encode as angular spans. \" +\n        \"If this property is omitted, all pie slices will have equal spans.\"\n    },\n    \"startAngle\": {\n      \"oneOf\": [\n        {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"maximum\": 2 * Math.PI\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0\n    },\n    \"endAngle\": {\n      \"oneOf\": [\n        {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"maximum\": 2 * Math.PI\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 2 * Math.PI,\n    },\n    \"sort\": {\n      \"description\": \" If true, will sort the data prior to computing angles.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"start\": {\"type\": \"string\", \"default\": \"layout_start\"},\n        \"end\": {\"type\": \"string\", \"default\": \"layout_end\"},\n        \"mid\": {\"type\": \"string\", \"default\": \"layout_mid\"}\n      }\n    }\n  },\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Pie.js\n// module id = 58eP\n// module chunks = 0","var util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (!load.useXHR && startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (load.useXHR) {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    } else {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  return load.loader(opt, callback);\n}\n\nfunction loader(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + opt.url);\n  } else if (load.useXHR) {\n    // on client, use xhr\n    return load.xhr(url, opt, callback);\n  } else if (startsWith(url, fileProtocol)) {\n    // on server, if url starts with 'file://', strip it and load from file\n    return load.file(url.slice(fileProtocol.length), opt, callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // on server, if no protocol assume file\n    return load.file(url, opt, callback);\n  } else {\n    // for regular URLs on server\n    return load.http(url, opt, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, opt, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (typeof XDomainRequest !== 'undefined' &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n\n  request.open('GET', url, async);\n  /* istanbul ignore else */\n  if (request.setRequestHeader) {\n    var headers = util.extend({}, load.headers, opt.headers);\n    for (var name in headers) {\n      request.setRequestHeader(name, headers[name]);\n    }\n  }\n  request.send();\n\n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, opt, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  fs.readFile(filename, callback);\n}\n\nfunction http(url, opt, callback) {\n  var headers = util.extend({}, load.headers, opt.headers);\n\n  var options = {url: url, encoding: null, gzip: true, headers: headers};\n  if (!callback) {\n    return require('sync-request')('GET', url, options).getBody();\n  }\n  require('request')(options, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      error = error ||\n        'Load failed with response code ' + response.statusCode + '.';\n      callback(error, null);\n    }\n  });\n}\n\nfunction startsWith(string, searchString) {\n  return string == null ? false : string.lastIndexOf(searchString, 0) === 0;\n}\n\n// Allow these functions to be overriden by the user of the library\nload.loader = loader;\nload.sanitizeUrl = sanitizeUrl;\nload.xhr = xhr;\nload.file = file;\nload.http = http;\n\n// Default settings\nload.useXHR = (typeof XMLHttpRequest !== 'undefined');\nload.headers = {};\n\nmodule.exports = load;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/load.js\n// module id = 5AQc\n// module chunks = 0","var df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction CountPattern(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field:     {type: 'field', default: 'data'},\n    pattern:   {type: 'value', default: '[\\\\w\\']+'},\n    case:      {type: 'value', default: 'lower'},\n    stopwords: {type: 'value', default: ''}\n  });\n\n  this._output = {text: 'text', count: 'count'};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (CountPattern.prototype = Object.create(Transform.prototype));\nprototype.constructor = CountPattern;\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['countpattern']);\n\n  var get = this.param('field').accessor,\n      pattern = this.param('pattern'),\n      stop = this.param('stopwords'),\n      rem = false;\n\n  // update parameters\n  if (this._stop !== stop) {\n    this._stop = stop;\n    this._stop_re = new RegExp('^' + stop + '$', 'i');\n    reset = true;\n  }\n\n  if (this._pattern !== pattern) {\n    this._pattern = pattern;\n    this._match = new RegExp(this._pattern, 'g');\n    reset = true;\n  }\n\n  if (reset) this._counts = {};\n\n  function curr(t) { return (Tuple.prev_init(t), get(t)); }\n  function prev(t) { return get(Tuple.prev(t)); }\n\n  this._add(input.add, curr);\n  if (!reset) this._rem(input.rem, prev);\n  if (reset || (rem = input.fields[get.field])) {\n    if (rem) this._rem(input.mod, prev);\n    this._add(input.mod, curr);\n  }\n\n  // generate output tuples\n  return this._changeset(input);\n};\n\nprototype._changeset = function(input) {\n  var counts = this._counts,\n      tuples = this._tuples || (this._tuples = {}),\n      change = df.ChangeSet.create(input),\n      out = this._output, w, t, c;\n\n  for (w in counts) {\n    t = tuples[w];\n    c = counts[w] || 0;\n    if (!t && c) {\n      tuples[w] = (t = Tuple.ingest({}));\n      t[out.text] = w;\n      t[out.count] = c;\n      change.add.push(t);\n    } else if (c === 0) {\n      if (t) change.rem.push(t);\n      delete counts[w];\n      delete tuples[w];\n    } else if (t[out.count] !== c) {\n      Tuple.set(t, out.count, c);\n      change.mod.push(t);\n    }\n  }\n  return change;\n};\n\nprototype._tokenize = function(text) {\n  switch (this.param('case')) {\n    case 'upper': text = text.toUpperCase(); break;\n    case 'lower': text = text.toLowerCase(); break;\n  }\n  return text.match(this._match);\n};\n\nprototype._add = function(tuples, get) {\n  var counts = this._counts,\n      stop = this._stop_re,\n      tok, i, j, t;\n\n  for (j=0; j<tuples.length; ++j) {\n    tok = this._tokenize(get(tuples[j]));\n    for (i=0; i<tok.length; ++i) {\n      if (!stop.test(t=tok[i])) {\n        counts[t] = 1 + (counts[t] || 0);\n      }\n    }\n  }\n};\n\nprototype._rem = function(tuples, get) {\n  var counts = this._counts,\n      stop = this._stop_re,\n      tok, i, j, t;\n\n  for (j=0; j<tuples.length; ++j) {\n    tok = this._tokenize(get(tuples[j]));\n    for (i=0; i<tok.length; ++i) {\n      if (!stop.test(t=tok[i])) {\n        counts[t] -= 1;\n      }\n    }\n  }\n};\n\nmodule.exports = CountPattern;\n\nCountPattern.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"CountPattern transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"countpattern\"]},\n    \"field\": {\n      \"description\": \"The field containing the text to analyze.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 'data'\n    },\n    \"pattern\": {\n      \"description\": \"A regexp pattern for matching words in text.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"[\\\\w\\']+\"\n    },\n    \"case\": {\n      \"description\": \"Text case transformation to apply.\",\n      \"oneOf\": [{\"enum\": [\"lower\", \"upper\", \"none\"]}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"lower\"\n    },\n    \"stopwords\": {\n      \"description\": \"A regexp pattern for matching stopwords to omit.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"text\": {\"type\": \"string\", \"default\": \"text\"},\n        \"count\": {\"type\": \"string\", \"default\": \"count\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/CountPattern.js\n// module id = 6+LD\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    df = require('vega-dataflow'),\n    selector = require('vega-event-selector'),\n    parseSignals = require('./signals');\n\nvar GATEKEEPER = '_vgGATEKEEPER',\n    EVALUATOR  = '_vgEVALUATOR';\n\nvar vgEvent = {\n  getItem: function() { return this.item; },\n  getGroup: function(name) {\n    var group = name ? this.name[name] : this.group,\n        mark = group && group.mark,\n        interactive = mark && (mark.interactive || mark.interactive === undefined);\n    return interactive ? group : {};\n  },\n  getXY: function(item) {\n      var p = {x: this.x, y: this.y};\n      if (typeof item === 'string') {\n        item = this.name[item];\n      }\n      for (; item; item = item.mark && item.mark.group) {\n        p.x -= item.x || 0;\n        p.y -= item.y || 0;\n      }\n      return p;\n    },\n  getX: function(item) { return this.getXY(item).x; },\n  getY: function(item) { return this.getXY(item).y; }\n};\n\nfunction parseStreams(view) {\n  var model = view.model(),\n      trueFn  = model.expr('true'),\n      falseFn = model.expr('false'),\n      spec    = model.defs().signals,\n      registry = {handlers: {}, nodes: {}},\n      internal = dl.duplicate(registry),  // Internal event processing\n      external = dl.duplicate(registry);  // External event processing\n\n  dl.array(spec).forEach(function(sig) {\n    var signal = model.signal(sig.name);\n    if (sig.expr) return;  // Cannot have an expr and stream definition.\n\n    dl.array(sig.streams).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = model.expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse.\n  dl.keys(internal.handlers).forEach(function(type) {\n    view.on(type, function(evt, item) {\n      evt.preventDefault(); // stop text selection\n      extendEvent(evt, item);\n      fire(internal, type, (item && item.datum) || {}, (item && item.mark && item.mark.group && item.mark.group.datum) || {}, evt);\n    });\n  });\n\n  // add external event listeners\n  dl.keys(external.handlers).forEach(function(type) {\n    if (typeof window === 'undefined') return; // No external support\n\n    var h = external.handlers[type],\n        t = type.split(':'), // --> no element pseudo-selectors\n        elt = (t[0] === 'window') ? [window] :\n              window.document.querySelectorAll(t[0]);\n\n    function handler(evt) {\n      extendEvent(evt);\n      fire(external, type, d3.select(this).datum(), this.parentNode && d3.select(this.parentNode).datum(), evt);\n    }\n\n    for (var i=0; i<elt.length; ++i) {\n      elt[i].addEventListener(t[1], handler);\n    }\n\n    h.elements = elt;\n    h.listener = handler;\n  });\n\n  // remove external event listeners\n  external.detach = function() {\n    dl.keys(external.handlers).forEach(function(type) {\n      var h = external.handlers[type],\n          t = type.split(':'),\n          elt = dl.array(h.elements);\n\n      for (var i=0; i<elt.length; ++i) {\n        elt[i].removeEventListener(t[1], h.listener);\n      }\n    });\n  };\n\n  // export detach method\n  return external.detach;\n\n  // -- helper functions -----\n\n  function extendEvent(evt, item) {\n    var mouse = d3.mouse((d3.event=evt, view.renderer().scene())),\n        pad = view.padding(),\n        names = {}, mark, group, i;\n\n    if (item) {\n      mark = item.mark;\n      group = mark.marktype === 'group' ? item : mark.group;\n      for (i=item; i!=null; i=i.mark.group) {\n        if (i.mark.def.name) {\n          names[i.mark.def.name] = i;\n        }\n      }\n    }\n    names.root = view.model().scene().items[0];\n\n    evt.vg = Object.create(vgEvent);\n    evt.vg.group = group;\n    evt.vg.item = item || {};\n    evt.vg.name = names;\n    evt.vg.x = mouse[0] - pad.left;\n    evt.vg.y = mouse[1] - pad.top;\n  }\n\n  function fire(registry, type, datum, parent, evt) {\n    var handlers = registry.handlers[type],\n        node = registry.nodes[type],\n        cs = df.ChangeSet.create(null, true),\n        filtered = false,\n        val, i, n, h;\n\n    function invoke(f) {\n      return !f.fn(datum, parent, evt);\n    }\n\n    for (i=0, n=handlers.length; i<n; ++i) {\n      h = handlers[i];\n      filtered = h.filters.some(invoke);\n      if (filtered) continue;\n\n      val = h.exp.fn(datum, parent, evt);\n      if (h.spec.scale) {\n        val = parseSignals.scale(model, h.spec, val, datum, evt);\n      }\n\n      if (val !== h.signal.value() || h.signal.verbose()) {\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n    }\n\n    model.propagate(cs, node);\n  }\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if (s.event)       domEvent(sig, s, exp, spec);\n      else if (s.signal) signal(sig, s, exp, spec);\n      else if (s.start)  orderedStream(sig, s, exp, spec);\n      else if (s.stream) {\n        if (s.filters) s.stream.forEach(function(ms) {\n          ms.filters = dl.array(ms.filters).concat(s.filters);\n        });\n        mergedStream(sig, s.stream, exp, spec);\n      }\n    });\n  }\n\n  function domEvent(sig, selector, exp, spec) {\n    var evt = selector.event,\n        name = selector.name,\n        mark = selector.mark,\n        target   = selector.target,\n        filters  = dl.array(selector.filters),\n        registry = target ? external : internal,\n        type = target ? target+':'+evt : evt,\n        node = registry.nodes[type] || (registry.nodes[type] = new df.Node(model)),\n        handlers = registry.handlers[type] || (registry.handlers[type] = []);\n\n    if (name) {\n      filters.push('!!event.vg.name[\"' + name + '\"]'); // Mimic event bubbling\n    } else if (mark) {\n      filters.push('event.vg.item.mark && event.vg.item.mark.marktype==='+dl.str(mark));\n    }\n\n    handlers.push({\n      signal: sig,\n      exp: exp,\n      spec: spec,\n      filters: filters.map(function(f) { return model.expr(f); })\n    });\n\n    node.addListener(sig);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = sig.name(), s = model.signal(n+EVALUATOR, null);\n    s.evaluate = function(input) {\n      if (!input.signals[selector.signal]) return model.doNotPropagate;\n      var val = exp.fn();\n      if (spec.scale) {\n        val = parseSignals.scale(model, spec, val);\n      }\n\n      if (val !== sig.value() || sig.verbose()) {\n        sig.value(val);\n        input.signals[n] = 1;\n        input.reflow = true;\n      }\n\n      return input;\n    };\n    s.dependency(df.Dependencies.SIGNALS, selector.signal);\n    s.addListener(sig);\n    model.signal(selector.signal).addListener(s);\n  }\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(),\n        gk = name + GATEKEEPER,\n        middle  = selector.middle,\n        filters = middle.filters || (middle.filters = []),\n        gatekeeper = model.signal(gk) || model.signal(gk, false);\n\n    // Register an anonymous signal to act as a gatekeeper. Its value is\n    // true or false depending on whether the start or end streams occur.\n    // The middle signal then simply filters for the gatekeeper's value.\n    mergedStream(gatekeeper, [selector.start], trueFn, {});\n    mergedStream(gatekeeper, [selector.end], falseFn, {});\n\n    filters.push(gatekeeper.name());\n    mergedStream(sig, [selector.middle], exp, spec);\n  }\n}\n\nmodule.exports = parseStreams;\nparseStreams.schema = {\n  \"defs\": {\n    \"streams\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n\n        \"properties\": {\n          \"type\": {\"type\": \"string\"},\n          \"expr\": {\"type\": \"string\"},\n          \"scale\": {\"$ref\": \"#/refs/scopedScale\"}\n        },\n\n        \"additionalProperties\": false,\n        \"required\": [\"type\", \"expr\"]\n      }\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/streams.js\n// module id = 6gf1\n// module chunks = 0","\"use strict\";\nvar fielddef_1 = require('../../fielddef');\nvar type_1 = require('../../type');\nvar util_1 = require('../../util');\nvar time_1 = require('./../time');\nvar timeUnit;\n(function (timeUnit) {\n    function parse(model) {\n        return model.reduce(function (timeUnitComponent, fieldDef, channel) {\n            var ref = fielddef_1.field(fieldDef, { nofn: true, datum: true });\n            if (fieldDef.type === type_1.TEMPORAL && fieldDef.timeUnit) {\n                var hash = fielddef_1.field(fieldDef);\n                timeUnitComponent[hash] = {\n                    type: 'formula',\n                    field: fielddef_1.field(fieldDef),\n                    expr: time_1.parseExpression(fieldDef.timeUnit, ref)\n                };\n            }\n            return timeUnitComponent;\n        }, {});\n    }\n    timeUnit.parseUnit = parse;\n    function parseFacet(model) {\n        var timeUnitComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(timeUnitComponent, childDataComponent.timeUnit);\n            delete childDataComponent.timeUnit;\n        }\n        return timeUnitComponent;\n    }\n    timeUnit.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var timeUnitComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source) {\n                util_1.extend(timeUnitComponent, childDataComponent.timeUnit);\n                delete childDataComponent.timeUnit;\n            }\n        });\n        return timeUnitComponent;\n    }\n    timeUnit.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.vals(component.timeUnit);\n    }\n    timeUnit.assemble = assemble;\n})(timeUnit = exports.timeUnit || (exports.timeUnit = {}));\n//# sourceMappingURL=timeunit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/timeunit.js\n// module id = 736r\n// module chunks = 0","\"use strict\";\nvar util_1 = require('./util');\nfunction isUnionedDomain(domain) {\n    if (!util_1.isArray(domain)) {\n        return 'fields' in domain;\n    }\n    return false;\n}\nexports.isUnionedDomain = isUnionedDomain;\nfunction isDataRefDomain(domain) {\n    if (!util_1.isArray(domain)) {\n        return 'data' in domain;\n    }\n    return false;\n}\nexports.isDataRefDomain = isDataRefDomain;\n//# sourceMappingURL=vega.schema.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/vega.schema.js\n// module id = 7YRp\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render');\n\nfunction path(g, o) {\n  if (o.path == null) return true;\n  var p = o.pathCache || (o.pathCache = parse(o.path));\n  render(g, p, o.x, o.y);\n}\n\nmodule.exports = {\n  draw: util.drawAll(path),\n  pick: util.pickPath(path)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/path.js\n// module id = 7Zus\n// module chunks = 0","module.exports = function(b) {\n  function noop() { }\n  function add(x,y) { b.add(x, y); }\n\n  return {\n    bounds: function(_) {\n      if (!arguments.length) return b;\n      return (b = _, this);\n    },\n    beginPath: noop,\n    closePath: noop,\n    moveTo: add,\n    lineTo: add,\n    quadraticCurveTo: function(x1, y1, x2, y2) {\n      b.add(x1, y1);\n      b.add(x2, y2);\n    },\n    bezierCurveTo: function(x1, y1, x2, y2, x3, y3) {\n      b.add(x1, y1);\n      b.add(x2, y2);\n      b.add(x3, y3);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/BoundsContext.js\n// module id = 81R7\n// module chunks = 0","var d3 = require('d3'),\n    config = {};\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: '',\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  retina: true\n};\n\n// root scenegraph group\nconfig.scene = {\n  fill: undefined,\n  fillOpacity: undefined,\n  stroke: undefined,\n  strokeOpacity: undefined,\n  strokeWidth: undefined,\n  strokeDash: undefined,\n  strokeDashOffset: undefined\n};\n\n// default axis properties\nconfig.axis = {\n  layer: 'back',\n  ticks: 10,\n  padding: 3,\n  axisColor: '#000',\n  axisWidth: 1,\n  gridColor: '#000',\n  gridOpacity: 0.15,\n  tickColor: '#000',\n  tickLabelColor: '#000',\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: 'sans-serif',\n  titleColor: '#000',\n  titleFont: 'sans-serif',\n  titleFontSize: 11,\n  titleFontWeight: 'bold',\n  titleOffset: 'auto',\n  titleOffsetAutoMin: 30,\n  titleOffsetAutoMax: 10000,\n  titleOffsetAutoMargin: 4\n};\n\n// default legend properties\nconfig.legend = {\n  orient: 'right',\n  offset: 20,\n  padding: 3, // padding between legend items and border\n  margin: 2,  // extra margin between two consecutive legends\n  gradientStrokeColor: '#888',\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: '#000',\n  labelFontSize: 10,\n  labelFont: 'sans-serif',\n  labelAlign: 'left',\n  labelBaseline: 'middle',\n  labelOffset: 8,\n  symbolShape: 'circle',\n  symbolSize: 50,\n  symbolColor: '#888',\n  symbolStrokeWidth: 1,\n  titleColor: '#000',\n  titleFont: 'sans-serif',\n  titleFontSize: 11,\n  titleFontWeight: 'bold'\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10:  d3.scale.category10().range(),\n  category20:  d3.scale.category20().range(),\n  category20b: d3.scale.category20b().range(),\n  category20c: d3.scale.category20c().range(),\n  shapes: [\n    'circle',\n    'cross',\n    'diamond',\n    'square',\n    'triangle-down',\n    'triangle-up'\n  ]\n};\n\nmodule.exports = config;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/config.js\n// module id = 8NMF\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar common_1 = require('../common');\nvar rule;\n(function (rule) {\n    function markType() {\n        return 'rule';\n    }\n    rule.markType = markType;\n    function properties(model) {\n        var p = {};\n        if (model.config().mark.orient === 'vertical') {\n            if (model.has(channel_1.X)) {\n                p.x = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.x = { value: 0 };\n            }\n            if (model.has(channel_1.Y)) {\n                p.y = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.y = { field: { group: 'height' } };\n            }\n            if (model.has(channel_1.Y2)) {\n                p.y2 = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y2, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.y2 = { value: 0 };\n            }\n        }\n        else {\n            if (model.has(channel_1.Y)) {\n                p.y = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.y = { value: 0 };\n            }\n            if (model.has(channel_1.X)) {\n                p.x = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.x = { value: 0 };\n            }\n            if (model.has(channel_1.X2)) {\n                p.x2 = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X2, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.x2 = { field: { group: 'width' } };\n            }\n        }\n        common_1.applyColorAndOpacity(p, model);\n        if (model.has(channel_1.SIZE)) {\n            p.strokeWidth = {\n                scale: model.scaleName(channel_1.SIZE),\n                field: model.field(channel_1.SIZE)\n            };\n        }\n        else {\n            p.strokeWidth = { value: sizeValue(model) };\n        }\n        return p;\n    }\n    rule.properties = properties;\n    function sizeValue(model) {\n        var fieldDef = model.fieldDef(channel_1.SIZE);\n        if (fieldDef && fieldDef.value !== undefined) {\n            return fieldDef.value;\n        }\n        return model.config().mark.ruleSize;\n    }\n    function labels(model) {\n        return undefined;\n    }\n    rule.labels = labels;\n})(rule = exports.rule || (exports.rule = {}));\n//# sourceMappingURL=rule.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/rule.js\n// module id = 8lgt\n// module chunks = 0","var util = require('./util');\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x = o.x || 0,\n        y = o.y || 0,\n        w = o.width || (o.image && o.image.width) || 0,\n        h = o.height || (o.image && o.image.height) || 0,\n        opac;\n    x = x - (o.align==='center' ? w/2 : o.align==='right' ? w : 0);\n    y = y - (o.baseline==='middle' ? h/2 : o.baseline==='bottom' ? h : 0);\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick()\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/image.js\n// module id = 9+55\n// module chunks = 0","var parseMark = require('./mark'),\n    parseProperties = require('./properties');\n\nfunction parseRootMark(model, spec, width, height) {\n  return {\n    type:       'group',\n    width:      width,\n    height:     height,\n    properties: defaults(spec.scene || {}, model),\n    scales:     spec.scales  || [],\n    axes:       spec.axes    || [],\n    legends:    spec.legends || [],\n    marks:      (spec.marks || []).map(function(m) { return parseMark(model, m, true); })\n  };\n}\n\nvar PROPERTIES = [\n  'fill', 'fillOpacity', 'stroke', 'strokeOpacity',\n  'strokeWidth', 'strokeDash', 'strokeDashOffset'\n];\n\nfunction defaults(spec, model) {\n  var config = model.config().scene,\n      props = {}, i, n, m, p, s;\n\n  for (i=0, n=m=PROPERTIES.length; i<n; ++i) {\n    p = PROPERTIES[i];\n    if ((s=spec[p]) !== undefined) {\n      props[p] = s.signal ? s : {value: s};\n    } else if (config[p]) {\n      props[p] = {value: config[p]};\n    } else {\n      --m;\n    }\n  }\n\n  return m ? {update: parseProperties(model, 'group', props)} : {};\n}\n\nmodule.exports = parseRootMark;\n\nparseRootMark.schema = {\n  \"defs\": {\n    \"container\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"scene\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"fill\": {\n              \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"fillOpacity\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"stroke\": {\n              \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"strokeOpacity\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"strokeWidth\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"strokeDash\": {\n              \"oneOf\": [\n                {\"type\": \"array\", \"items\": {\"type\": \"number\"}}, \n                {\"$ref\": \"#/refs/signal\"}\n              ]\n            },\n            \"strokeDashOffset\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n          }\n        },\n        \"scales\": {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/defs/scale\"}\n        },\n        \"axes\": {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/defs/axis\"}\n        },\n        \"legends\": {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/defs/legend\"}\n        },\n        \"marks\": {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\":[{\"$ref\": \"#/defs/groupMark\"}, {\"$ref\": \"#/defs/visualMark\"}]}\n        }\n      }\n    },\n\n\n    \"groupMark\": {\n      \"allOf\": [\n        {\n          \"properties\": { \"type\": {\"enum\": [\"group\"]} },\n          \"required\": [\"type\"]\n        },\n        {\"$ref\": \"#/defs/mark\"},\n        {\"$ref\": \"#/defs/container\"}\n      ]\n    },\n\n    \"visualMark\": {\n      \"allOf\": [\n        {\n          \"not\": { \"properties\": { \"type\": {\"enum\": [\"group\"]} } },\n        },\n        {\"$ref\": \"#/defs/mark\"}\n      ]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/marks.js\n// module id = 92+E\n// module chunks = 0","module.exports = {\n  Handler:  require('./SVGHandler'),\n  Renderer: require('./SVGRenderer'),\n  string: {\n    Renderer : require('./SVGStringRenderer')\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/svg/index.js\n// module id = 95dH\n// module chunks = 0","var Renderer = require('../Renderer'),\n    ImageLoader = require('../../util/ImageLoader'),\n    SVG = require('../../util/svg'),\n    text = require('../../util/text'),\n    DOM = require('../../util/dom'),\n    openTag = DOM.openTag,\n    closeTag = DOM.closeTag,\n    MARKS = require('./marks');\n\nfunction SVGStringRenderer(loadConfig) {\n  Renderer.call(this);\n\n  this._loader = new ImageLoader(loadConfig);\n\n  this._text = {\n    head: '',\n    root: '',\n    foot: '',\n    defs: '',\n    body: ''\n  };\n\n  this._defs = {\n    clip_id:  1,\n    gradient: {},\n    clipping: {}\n  };\n}\n\nvar base = Renderer.prototype;\nvar prototype = (SVGStringRenderer.prototype = Object.create(base));\nprototype.constructor = SVGStringRenderer;\n\nprototype.resize = function(width, height, padding) {\n  base.resize.call(this, width, height, padding);\n  var p = this._padding,\n      t = this._text;\n\n  var attr = {\n    'class':  'marks',\n    'width':  this._width + p.left + p.right,\n    'height': this._height + p.top + p.bottom,\n  };\n  for (var key in SVG.metadata) {\n    attr[key] = SVG.metadata[key];\n  }\n\n  t.head = openTag('svg', attr);\n  t.root = openTag('g', {\n    transform: 'translate(' + p.left + ',' + p.top + ')'\n  });\n  t.foot = closeTag('g') + closeTag('svg');\n\n  return this;\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.render = function(scene) {\n  this._text.body = this.mark(scene);\n  this._text.defs = this.buildDefs();\n  return this;\n};\n\nprototype.reset = function() {\n  this._defs.clip_id = 0;\n  return this;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      defs = '',\n      i, id, def, stops;\n\n  for (id in all.gradient) {\n    def = all.gradient[id];\n    stops = def.stops;\n\n    defs += openTag('linearGradient', {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (i=0; i<stops.length; ++i) {\n      defs += openTag('stop', {\n        offset: stops[i].offset,\n        'stop-color': stops[i].color\n      }) + closeTag('stop');\n    }\n    \n    defs += closeTag('linearGradient');\n  }\n  \n  for (id in all.clipping) {\n    def = all.clipping[id];\n\n    defs += openTag('clipPath', {id: id});\n\n    defs += openTag('rect', {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + closeTag('rect');\n\n    defs += closeTag('clipPath');\n  }\n  \n  return (defs.length > 0) ? openTag('defs') + defs + closeTag('defs') : '';\n};\n\nprototype.imageURL = function(url) {\n  return this._loader.imageURL(url);\n};\n\nvar object;\n\nfunction emit(name, value, ns, prefixed) {\n  object[prefixed || name] = value;\n}\n\nprototype.attributes = function(attr, item) {\n  object = {};\n  attr(emit, item, this);\n  return object;\n};\n\nprototype.mark = function(scene) {\n  var mdef = MARKS[scene.marktype],\n      tag  = mdef.tag,\n      attr = mdef.attr,\n      nest = mdef.nest || false,\n      data = nest ?\n          (scene.items && scene.items.length ? [scene.items[0]] : []) :\n          (scene.items || []),\n      defs = this._defs,\n      str = '',\n      style, i, item;\n\n  if (tag !== 'g' && scene.interactive === false) {\n    style = 'style=\"pointer-events: none;\"';\n  }\n\n  // render opening group tag\n  str += openTag('g', {\n    'class': DOM.cssClass(scene)\n  }, style);\n\n  // render contained elements\n  for (i=0; i<data.length; ++i) {\n    item = data[i];\n    style = (tag !== 'g') ? styles(item, scene, tag, defs) : null;\n    str += openTag(tag, this.attributes(attr, item), style);\n    if (tag === 'text') {\n      str += escape_text(text.value(item.text));\n    } else if (tag === 'g') {\n      str += openTag('rect',\n        this.attributes(mdef.background, item),\n        styles(item, scene, 'bgrect', defs)) + closeTag('rect');\n      str += this.markGroup(item);\n    }\n    str += closeTag(tag);\n  }\n\n  // render closing group tag\n  return str + closeTag('g');\n};\n\nprototype.markGroup = function(scene) {\n  var str = '',\n      axes = scene.axisItems || [],\n      items = scene.items || [],\n      legends = scene.legendItems || [],\n      j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer === 'back') {\n      str += this.mark(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    str += this.mark(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer !== 'back') {\n      str += this.mark(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    str += this.mark(legends[j]);\n  }\n\n  return str;\n};\n\nfunction styles(o, mark, tag, defs) {\n  if (o == null) return '';\n  var i, n, prop, name, value, s = '';\n\n  if (tag === 'bgrect' && mark.interactive === false) {\n    s += 'pointer-events: none;';\n  }\n\n  if (tag === 'text') {\n    s += 'font: ' + text.font(o) + ';';\n  }\n\n  for (i=0, n=SVG.styleProperties.length; i<n; ++i) {\n    prop = SVG.styleProperties[i];\n    name = SVG.styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === 'fill') {\n        s += (s.length ? ' ' : '') + 'fill: none;';\n      }\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = 'url(#' + value.id + ')';\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';';\n    }\n  }\n\n  return s ? 'style=\"' + s + '\"' : null;\n}\n\nfunction escape_text(s) {\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nmodule.exports = SVGStringRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/svg/SVGStringRenderer.js\n// module id = 9eLo\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    Heap = require('./Heap'),\n    ChangeSet = require('./ChangeSet'),\n    DataSource = require('./DataSource'),\n    Collector = require('./Collector'),\n    Tuple = require('./Tuple'),\n    Signal = require('./Signal'),\n    Deps = require('./Dependencies');\n\nfunction Graph() {\n}\n\nvar prototype = Graph.prototype;\n\nprototype.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n  this._requestedIndexes = {};\n\n  this.doNotPropagate = {};\n};\n\nprototype.rank = function() {\n  return ++this._rank;\n};\n\nprototype.values = function(type, names, hash) {\n  var data = (type === Deps.SIGNALS ? this._signals : this._data),\n      n = (names !== undefined ? names : dl.keys(data)),\n      vals, i;\n\n  if (Array.isArray(n)) {\n    vals = hash || {};\n    for (i=0; i<n.length; ++i) {\n      vals[n[i]] = data[n[i]].values();\n    }\n    return vals;\n  } else {\n    return data[n].values();\n  }\n};\n\n// Retain for backwards-compatibility\nprototype.dataValues = function(names) {\n  return this.values(Deps.DATA, names);\n};\n\n// Retain for backwards-compatibility\nprototype.signalValues = function(names) {\n  return this.values(Deps.SIGNALS, names);\n};\n\nprototype.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if (!arguments.length) {\n    var all = [], key;\n    for (key in db) { all.push(db[key]); }\n    return all;\n  } else if (arguments.length === 1) {\n    return db[name];\n  } else {\n    return (db[name] = new DataSource(this, name, facet).pipeline(pipeline));\n  }\n};\n\nprototype.signal = function(name, init) {\n  if (arguments.length === 1) {\n    var m = this;\n    return Array.isArray(name) ?\n      name.map(function(n) { return m._signals[n]; }) :\n      this._signals[name];\n  } else {\n    return (this._signals[name] = new Signal(this, name, init));\n  }\n};\n\nprototype.signalRef = function(ref) {\n  if (!Array.isArray(ref)) {\n    ref = dl.field(ref);\n  }\n\n  var value = this.signal(ref[0]).value();\n  if (ref.length > 1) {\n    for (var i=1, n=ref.length; i<n; ++i) {\n      value = value[ref[i]];\n    }\n  }\n  return value;\n};\n\nprototype.requestIndex = function(data, field) {\n  var ri  = this._requestedIndexes,\n      reg = ri[data] || (ri[data] = {}); \n  return (reg[field] = true, this);\n};\n\nprototype.buildIndexes = function() {\n  var ri = this._requestedIndexes,\n      data = dl.keys(ri),\n      i, len, j, jlen, d, src, fields, f;\n\n  for (i=0, len=data.length; i<len; ++i) {\n    src = this.data(d=data[i]);\n    if (!src) throw Error('Data source '+dl.str(d)+' does not exist.');\n\n    fields = dl.keys(ri[d]);\n    for (j=0, jlen=fields.length; j<jlen; ++j) {\n      if ((f=fields[j]) === null) continue;\n      src.getIndex(f);\n      ri[d][f] = null;\n    }\n  }\n\n  return this;\n};\n\n// Stamp should be specified with caution. It is necessary for inline datasources,\n// which need to be populated during the same cycle even though propagation has\n// passed that part of the dataflow graph. \n// If skipSignals is true, Signal nodes do not get reevaluated but their listeners\n// are queued for propagation. This is useful when setting signal values in batch\n// (e.g., time travel to the initial state).\nprototype.propagate = function(pulse, node, stamp, skipSignals) {\n  var pulses = {},\n      listeners, next, nplse, tpls, ntpls, i, len, isSg;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(function(a, b) {\n    // Sort on qrank (queue-rank).\n    // Rank can change during propagation due to rewiring.\n    return a._qrank - b._qrank;\n  });\n\n  if (pulse.stamp) throw Error('Pulse already has a non-zero stamp.');\n\n  pulse.stamp = stamp || ++this._stamp;\n  pulses[node._id] = pulse;\n  pq.push(node.qrank(true));\n\n  while (pq.size() > 0) {\n    node  = pq.peek();\n    isSg  = node instanceof Signal;\n    pulse = pulses[node._id];\n\n    if (node.rank() !== node.qrank()) {\n      // A node's rank might change during a propagation. Re-queue if so.\n      pq.replace(node.qrank(true));\n    } else {\n      // Evaluate node and propagate pulse.\n      pq.pop();\n      pulses[node._id] = null;\n      listeners = node._listeners;\n\n      if (!isSg || (isSg && !skipSignals)) {\n        pulse = this.evaluate(pulse, node);\n      }\n\n      // Propagate the pulse.\n      if (pulse !== this.doNotPropagate) {\n        // Ensure reflow pulses always send reflow pulses even if skipped.\n        if (!pulse.reflow && node.reflows()) {\n          pulse = ChangeSet.create(pulse, true);\n        }\n\n        for (i=0, len=listeners.length; i<len; ++i) {\n          next = listeners[i];\n\n          if ((nplse = pulses[next._id]) !== undefined) {\n            if (nplse === null) throw Error('Already propagated to node.');\n            if (nplse === pulse) continue;  // Re-queueing the same pulse.\n\n            // We've already queued this node. Ensure there should be at most one\n            // pulse with tuples (add/mod/rem), and the remainder will be reflows.\n            tpls  = pulse.add.length || pulse.mod.length || pulse.rem.length;\n            ntpls = nplse.add.length || nplse.mod.length || nplse.rem.length;\n\n            if (tpls && ntpls) throw Error('Multiple changeset pulses to same node');\n\n            // Combine reflow and tuples into a single pulse.\n            pulses[next._id] = tpls ? pulse : nplse;\n            pulses[next._id].reflow = pulse.reflow || nplse.reflow;\n          } else {\n            // First time we're seeing this node, queue it for propagation.\n            pq.push(next.qrank(true));\n            pulses[next._id] = pulse;\n          }\n        }\n      }\n    }\n  }\n\n  return this.done(pulse);\n};\n\n// Perform final bookkeeping on the graph, after propagation is complete.\n//  - For all updated datasources, synchronize their previous values.\nprototype.done = function(pulse) {\n  log.debug(pulse, ['bookkeeping']);\n  for (var d in pulse.data) { this.data(d).synchronize(); }\n  return this;\n};\n\n// Process a new branch of the dataflow graph prior to connection:\n// (1) Insert new Collector nodes as needed.\n// (2) Track + return mutation/routing status of the branch.\nprototype.preprocess = function(branch) {\n  var graph = this,\n      mutates = 0,\n      node, router, collector, collects;\n\n  for (var i=0; i<branch.length; ++i) {\n    node = branch[i];\n\n    // Batch nodes need access to a materialized dataset.\n    if (node.batch() && !node._collector) {\n      if (router || !collector) {\n        node = new Collector(graph);\n        branch.splice(i, 0, node);\n        router = false;\n      } else {\n        node._collector = collector;\n      }\n    }\n\n    if ((collects = node.collector())) collector = node;\n    router  = router  || node.router() && !collects;\n    mutates = mutates || node.mutates();\n\n    // A collector needs to be inserted after tuple-producing\n    // nodes for correct previous value tracking.\n    if (node.produces()) {\n      branch.splice(i+1, 0, new Collector(graph));\n      router = false;\n    }\n  }\n\n  return {router: router, collector: collector, mutates: mutates};\n};\n\nprototype.connect = function(branch) {\n  var collector, node, data, signals, i, n, j, m, x, y;\n\n  // connect the pipeline\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (node.collector()) collector = node;\n\n    data = node.dependency(Deps.DATA);\n    for (j=0, m=data.length; j<m; ++j) {\n      if (!(x=this.data(y=data[j]))) {\n        throw new Error('Unknown data source ' + dl.str(y));\n      }\n\n      x.addListener(collector);\n    }\n\n    signals = node.dependency(Deps.SIGNALS);\n    for (j=0, m=signals.length; j<m; ++j) {\n      if (!(x=this.signal(y=signals[j]))) {\n        throw new Error('Unknown signal ' + dl.str(y));\n      }\n\n      x.addListener(collector);\n    }\n\n    if (i > 0) branch[i-1].addListener(node);\n  }\n\n  return branch;\n};\n\nprototype.disconnect = function(branch) {\n  var collector, node, data, signals, i, n, j, m;\n\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (node.collector()) collector = node;\n\n    data = node.dependency(Deps.DATA);\n    for (j=0, m=data.length; j<m; ++j) {\n      this.data(data[j]).removeListener(collector);\n    }\n\n    signals = node.dependency(Deps.SIGNALS);\n    for (j=0, m=signals.length; j<m; ++j) {\n      this.signal(signals[j]).removeListener(collector);\n    }\n\n    node.disconnect();\n  }\n\n  return branch;\n};\n\nprototype.synchronize = function(branch) {\n  var ids = {},\n      node, data, i, n, j, m, d, id;\n\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (!node.collector()) continue;\n\n    for (j=0, data=node.data(), m=data.length; j<m; ++j) {\n      id = (d = data[j])._id;\n      if (ids[id]) continue;\n      Tuple.prev_update(d);\n      ids[id] = 1;\n    }\n  }\n\n  return this;\n};\n\nprototype.reevaluate = function(pulse, node) {\n  var reflowed = pulse.reflow && node.last() >= pulse.stamp,\n      run = node.router() || pulse.add.length || pulse.rem.length;\n\n  return run || !reflowed || node.reevaluate(pulse);\n};\n\nprototype.evaluate = function(pulse, node) {\n  if (!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse;\n};\n\nmodule.exports = Graph;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Graph.js\n// module id = ARV7\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nvar defaultRatio = 0.5 * (1 + Math.sqrt(5));\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: 'array<field>', default: ['-value']},\n    children: {type: 'field', default: 'children'},\n    parent: {type: 'field', default: 'parent'},\n    field: {type: 'field', default: 'value'},\n    // treemap parameters\n    size: {type: 'array<value>', default: require('./screen').size},\n    round: {type: 'value', default: true},\n    sticky: {type: 'value', default: false},\n    ratio: {type: 'value', default: defaultRatio},\n    padding: {type: 'value', default: null},\n    mode: {type: 'value', default: 'squarify'}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    'x':      'layout_x',\n    'y':      'layout_y',\n    'width':  'layout_width',\n    'height': 'layout_height',\n    'depth':  'layout_depth',\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (Treemap.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Treemap;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['treemap']);\n\n  // get variables\n  var layout = this._layout,\n      output = this._output,\n      sticky = this.param('sticky'),\n      parent = this.param('parent').accessor,\n      root = data.filter(function(d) { return parent(d) === null; })[0];\n\n  // layout.sticky resets state _regardless_ of input value\n  // so, we perform out own check first\n  if (layout.sticky() !== sticky) { layout.sticky(sticky); }\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.param('sort').field))\n    .children(this.param('children').accessor)\n    .value(this.param('field').accessor)\n    .size(this.param('size'))\n    .round(this.param('round'))\n    .ratio(this.param('ratio'))\n    .padding(this.param('padding'))\n    .mode(this.param('mode'))\n    .nodes(root);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    Tuple.set(n, output.x, n.x);\n    Tuple.set(n, output.y, n.y);\n    Tuple.set(n, output.width, n.dx);\n    Tuple.set(n, output.height, n.dy);\n    Tuple.set(n, output.depth, n.depth);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  input.fields[output.depth] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;\n\nTreemap.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Treemap transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"treemap\"]},\n    \"sort\": {\n      \"description\": \"A list of fields to use as sort criteria for sibling nodes.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [\"-value\"]\n    },\n    \"children\": {\n      \"description\": \"The data field for the children node array\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"children\"\n    },\n    \"parent\": {\n      \"description\": \"The data field for the parent node\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"parent\"\n    },\n    \"field\": {\n      \"description\": \"The values to use to determine the area of each leaf-level treemap cell.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"mode\": {\n      \"description\": \"The treemap layout algorithm to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"squarify\", \"slice\", \"dice\", \"slice-dice\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"squarify\"\n    },\n    \"size\": {\n      \"description\": \"The dimensions of the treemap layout\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [500, 500]\n    },\n    \"round\": {\n      \"description\": \"If true, treemap cell dimensions will be rounded to integer pixels.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": true\n    },\n    \"sticky\": {\n      \"description\": \"If true, repeated runs of the treemap will use cached partition boundaries.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"ratio\": {\n      \"description\": \"The target aspect ratio for the layout to optimize.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": defaultRatio\n    },\n    \"padding\": {\n      \"oneOf\": [\n        {\"type\": \"number\"},\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 4,\n          \"maxItems\": 4\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"description\": \"he padding (in pixels) to provide around internal nodes in the treemap.\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"},\n        \"width\": {\"type\": \"string\", \"default\": \"layout_width\"},\n        \"height\": {\"type\": \"string\", \"default\": \"layout_height\"},\n        \"depth\": {\"type\": \"string\", \"default\": \"layout_depth\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Treemap.js\n// module id = Aj/a\n// module chunks = 0","var log = require('vega-logging'),\n    Tuple = require('./Tuple'),\n    Base = require('./Node').prototype,\n    ChangeSet = require('./ChangeSet');\n\nfunction Collector(graph) {\n  Base.init.call(this, graph);\n  this._data = [];\n  this.router(true).collector(true);\n}\n\nvar prototype = (Collector.prototype = Object.create(Base));\nprototype.constructor = Collector;\n\nprototype.data = function() {\n  return this._data;\n};\n\nprototype.evaluate = function(input) {\n  log.debug(input, [\"collecting\"]);\n\n  // Create a new output changeset to prevent pollution when the Graph\n  // merges reflow and regular changesets.\n  var output = ChangeSet.create(input);\n\n  if (input.rem.length) {\n    this._data = Tuple.idFilter(this._data, input.rem);\n    output.rem = input.rem.slice(0);\n  }\n\n  if (input.add.length) {\n    this._data = this._data.concat(input.add);\n    output.add = input.add.slice(0);\n  }\n\n  if (input.mod.length) {\n    output.mod = input.mod.slice(0);\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  if (input.reflow) {\n    output.mod = output.mod.concat(\n      Tuple.idFilter(this._data, output.add, output.mod, output.rem));\n    output.reflow = false;\n  }\n\n  return output;\n};\n\nmodule.exports = Collector;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Collector.js\n// module id = B1p+\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    Node  = df.Node, // jshint ignore:line\n    Deps  = df.Dependencies,\n    Tuple = df.Tuple,\n    Collector = df.Collector,\n    log = require('vega-logging'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    parseLegends = require('../parse/legends');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar Types = GroupBuilder.TYPES = {\n  GROUP:  \"group\",\n  MARK:   \"mark\",\n  AXIS:   \"axis\",\n  LEGEND: \"legend\"\n};\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(graph, def) {\n  var builder = this, name;\n\n  this._scaler = new Node(graph);\n\n  (def.scales||[]).forEach(function(s) {\n    s = builder.scale((name=s.name), new Scale(graph, s, builder));\n    builder.scale(name+\":prev\", s);\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    acc[x.scale] = 1;\n    return acc;\n  }, {});\n\n  scales = (def.legends||[]).reduce(function(acc, x) {\n    acc[x.size || x.shape || x.fill || x.stroke || x.opacity] = 1;\n    return acc;\n  }, scales);\n\n  this._recursor.dependency(Deps.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function() {\n  var output  = Builder.prototype.evaluate.apply(this, arguments),\n      model   = this._graph,\n      builder = this,\n      scales = this._scales,\n      items  = this._mark.items;\n\n  // If scales need to be reevaluated, we need to send all group items forward.\n  if (output.mod.length < items.length) {\n    var fullUpdate = dl.keys(scales).some(function(s) {\n      return scales[s].reevaluate(output);\n    });\n\n    if (!fullUpdate && this._def.axes) {\n      fullUpdate = this._def.axes.reduce(function(acc, a) {\n        return acc || output.scales[a.scale];\n      }, false);\n    }\n\n    if (!fullUpdate && this._def.legends) {\n      fullUpdate = this._def.legends.reduce(function(acc, l) {\n        return acc || output.scales[l.size || l.shape || l.fill || l.stroke];\n      }, false);\n    }\n\n    if (fullUpdate) {\n      output.mod = output.mod.concat(Tuple.idFilter(items,\n          output.mod, output.add, output.rem));\n    }\n  }\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  output.rem.forEach(function(group) { model.group(group._id, null); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    });\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for (; i<len; ++i) {\n    child = children[i];\n    if (child.type == Types.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = dl.array(this._def.marks).length > 0,\n      hasAxes = dl.array(this._def.axes).length > 0,\n      hasLegends = dl.array(this._def.legends).length > 0,\n      i, j, c, len, group, pipeline, def, inline = false;\n\n  for (i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if (hasMarks) buildMarks.call(this, input, group);\n    if (hasAxes)  buildAxes.call(this, input, group);\n    if (hasLegends) buildLegends.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node,\n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== Types.GROUP);\n      inline = inline && (this._graph.data(c.from) !== undefined);\n      inline = inline && (pipeline[pipeline.length-1].listeners().length === 1); // Reactive geom source\n      inline = inline && (def.from && !def.from.mark); // Reactive geom target\n      c.inline = inline;\n\n      if (inline) this._graph.evaluate(input, c.builder);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  function removeTemp(c) {\n    if (c.type == Types.MARK && !c.inline &&\n        builder._graph.data(c.from) !== undefined) {\n      builder._recursor.removeListener(c.builder);\n    }\n  }\n\n  function updateAxis(a) {\n    var scale = a.scale();\n    if (!input.scales[scale.scaleName]) return;\n    a.reset().def();\n  }\n\n  function updateLegend(l) {\n    var scale = l.size() || l.shape() || l.fill() || l.stroke() || l.opacity();\n    if (!input.scales[scale.scaleName]) return;\n    l.reset().def();\n  }\n\n  for (i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n\n    // Remove temporary connection for marks that draw from a source\n    if (hasMarks) builder._children[group._id].forEach(removeTemp);\n\n    // Update axis data defs\n    if (hasAxes) group.axes.forEach(updateAxis);\n\n    // Update legend data defs\n    if (hasLegends) group.legends.forEach(updateLegend);\n  }\n\n  function disconnectChildren(c) {\n    builder._recursor.removeListener(c.builder);\n    c.builder.disconnect();\n  }\n\n  for (i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(disconnectChildren);\n    delete builder._children[group._id];\n  }\n\n  return input;\n}\n\nfunction scale(name, x) {\n  var group = this, s = null;\n  if (arguments.length === 2) return (group._scales[name] = x, x);\n  while (s == null) {\n    s = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if (!group) break;\n  }\n  return s;\n}\n\nfunction buildGroup(input, group) {\n  log.debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};\n  group.scale = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n\n  group.legends = group.legends || [];\n  group.legendItems = group.legendItems || [];\n\n  // Index group by ID to enable safe scoped scale lookups.\n  this._graph.group(group._id, group);\n}\n\nfunction buildMarks(input, group) {\n  log.debug(input, [\"building children marks #\"+group._id]);\n  var marks = this._def.marks,\n      mark, from, inherit, i, len, b;\n\n  for (i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = group.datum._facetID;\n    group.items[i] = {group: group, _scaleRefs: {}};\n    b = (mark.type === Types.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._graph, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({\n      builder: b,\n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit),\n      type: Types.MARK\n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._graph, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axis: a, layer: def.layer};\n    b = (def.type === Types.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, axisItems[i], builder)\n      .dependency(Deps.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: Types.AXIS, scale: scale });\n  });\n}\n\nfunction buildLegends(input, group) {\n  var legends = group.legends,\n      legendItems = group.legendItems,\n      builder = this;\n\n  parseLegends(this._graph, this._def.legends, legends, group);\n  legends.forEach(function(l, i) {\n    var scale = l.size() || l.shape() || l.fill() || l.stroke() || l.opacity(),\n        def = l.def(),\n        b = null;\n\n    legendItems[i] = {group: group, legend: l};\n    b = (def.type === Types.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, legendItems[i], builder)\n      .dependency(Deps.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: Types.LEGEND, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/GroupBuilder.js\n// module id = BB2X\n// module chunks = 0","var df = require('vega-dataflow'),\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: 'expr'}});\n\n  this._skip = {};\n  return this.router(true);\n}\n\nvar prototype = (Filter.prototype = Object.create(Transform.prototype));\nprototype.constructor = Filter;\n\nprototype.transform = function(input) {\n  log.debug(input, ['filtering']);\n\n  var output = df.ChangeSet.create(input),\n      skip = this._skip,\n      test = this.param('test');\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test(x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test(x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;\n\nFilter.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Filter transform\",\n  \"description\": \"Filters elements from a data set to remove unwanted items.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"filter\"]},\n    \"test\": {\n      \"type\": \"string\",\n      \"description\": \"A string containing an expression (in JavaScript syntax) for the filter predicate.\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"test\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Filter.js\n// module id = BO8z\n// module chunks = 0","var BoundsContext = require('./BoundsContext'),\n    Bounds = require('./Bounds'),\n    canvas = require('./canvas'),\n    svg = require('./svg'),\n    text = require('./text'),\n    paths = require('../path'),\n    parse = paths.parse,\n    drawPath = paths.render,\n    areaPath = svg.path.area,\n    linePath = svg.path.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    g2D = null,\n    bc = BoundsContext();\n\nfunction context() {\n  return g2D || (g2D = canvas.instance(1,1).getContext('2d'));\n}\n\nfunction strokeBounds(o, bounds) {\n  if (o.stroke && o.opacity !== 0 && o.stokeOpacity !== 0) {\n    bounds.expand(o.strokeWidth != null ? o.strokeWidth : 1);\n  }\n  return bounds;\n}\n\nfunction pathBounds(o, path, bounds, x, y) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    drawPath(bc.bounds(bounds), path, x, y);\n    strokeBounds(o, bounds);\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path ? o.pathCache || (o.pathCache = parse(o.path)) : null;\n  return pathBounds(o, p, bounds, o.x, o.y);\n}\n\nfunction area(mark, bounds) {\n  if (mark.items.length === 0) return bounds;\n  var items = mark.items,\n      item = items[0],\n      p = item.pathCache || (item.pathCache = parse(areaPath(items)));\n  return pathBounds(item, p, bounds);\n}\n\nfunction line(mark, bounds) {\n  if (mark.items.length === 0) return bounds;\n  var items = mark.items,\n      item = items[0],\n      p = item.pathCache || (item.pathCache = parse(linePath(items)));\n  return pathBounds(item, p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x, y;\n  return strokeBounds(o, bounds.set(\n    x = o.x || 0,\n    y = o.y || 0,\n    (x + o.width) || 0,\n    (y + o.height) || 0\n  ));\n}\n\nfunction image(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = o.width || 0,\n      h = o.height || 0;\n  x = x - (o.align === 'center' ? w/2 : (o.align === 'right' ? w : 0));\n  y = y - (o.baseline === 'middle' ? h/2 : (o.baseline === 'bottom' ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  return strokeBounds(o, bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  ));\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa % halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  return strokeBounds(o, bounds.set(\n    cx + xmin,\n    cy + ymin,\n    cx + xmax,\n    cy + ymax\n  ));\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case 'cross':\n      t = 3 * Math.sqrt(size / 5) / 2;\n      bounds.set(x-t, y-t, x+t, y+t);\n      break;\n\n    case 'diamond':\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case 'square':\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case 'triangle-down':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case 'triangle-up':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n\n  return strokeBounds(o, bounds);\n}\n\nfunction textMark(o, bounds, noRotate) {\n  var g = context(),\n      h = text.size(o),\n      a = o.align,\n      r = o.radius || 0,\n      x = (o.x || 0),\n      y = (o.y || 0),\n      dx = (o.dx || 0),\n      dy = (o.dy || 0) + text.offset(o) - Math.round(0.8*h), // use 4/5 offset\n      w, t;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal alignment\n  g.font = text.font(o);\n  w = g.measureText(text.value(o.text)).width;\n  if (a === 'center') {\n    dx -= (w / 2);\n  } else if (a === 'right') {\n    dx -= w;\n  } else {\n    // left by default, do nothing\n  }\n\n  bounds.set(dx+=x, dy+=y, dx+w, dy+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, x, y);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      items = g.items || [],\n      legends = g.legendItems || [],\n      j, m;\n\n  if (!g.clip) {\n    for (j=0, m=axes.length; j<m; ++j) {\n      bounds.union(axes[j].bounds);\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      if (items[j].bounds) bounds.union(items[j].bounds);\n    }\n    if (includeLegends) {\n      for (j=0, m=legends.length; j<m; ++j) {\n        bounds.union(legends[j].bounds);\n      }\n    }\n  }\n  if (g.clip || g.width || g.height) {\n    strokeBounds(g, bounds\n      .add(0, 0)\n      .add(g.width || 0, g.height || 0));\n  }\n  return bounds.translate(g.x || 0, g.y || 0);\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   textMark,\n  path:   path,\n  area:   area,\n  line:   line\n};\nmethods.area.nest = true;\nmethods.line.nest = true;\n\nfunction itemBounds(item, func, opt) {\n  var type = item.mark.marktype;\n  func = func || methods[type];\n  if (func.nest) item = item.mark;\n\n  var curr = item.bounds,\n      prev = item['bounds:prev'] || (item['bounds:prev'] = new Bounds());\n\n  if (curr) {\n    prev.clear().union(curr);\n    curr.clear();\n  } else {\n    item.bounds = new Bounds();\n  }\n  func(item, item.bounds, opt);\n  if (!curr) prev.clear().union(item.bounds);\n  return item.bounds;\n}\n\nvar DUMMY_ITEM = {mark: null};\n\nfunction markBounds(mark, bounds, opt) {\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      hasi  = items && items.length,\n      i, n, o, b;\n\n  if (func.nest) {\n    o = hasi ? items[0]\n      : (DUMMY_ITEM.mark = mark, DUMMY_ITEM); // no items, so fake it\n    b = itemBounds(o, func, opt);\n    bounds = bounds && bounds.union(b) || b;\n    return bounds;\n  }\n\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  if (hasi) {  \n    for (i=0, n=items.length; i<n; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  return (mark.bounds = bounds);\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  textMark,\n  group: group\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/bound.js\n// module id = BONk\n// module chunks = 0","module.exports = {\n  aggregate:    require('./Aggregate'),\n  bin:          require('./Bin'),\n  cross:        require('./Cross'),\n  countpattern: require('./CountPattern'),\n  linkpath:     require('./LinkPath'),\n  facet:        require('./Facet'),\n  filter:       require('./Filter'),\n  fold:         require('./Fold'),\n  force:        require('./Force'),\n  formula:      require('./Formula'),\n  geo:          require('./Geo'),\n  geopath:      require('./GeoPath'),\n  hierarchy:    require('./Hierarchy'),\n  impute:       require('./Impute'),\n  lookup:       require('./Lookup'),\n  pie:          require('./Pie'),\n  rank:         require('./Rank'),\n  sort:         require('./Sort'),\n  stack:        require('./Stack'),\n  treeify:      require('./Treeify'),\n  treemap:      require('./Treemap'),\n  voronoi:      require('./Voronoi'),\n  wordcloud:    require('./Wordcloud')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/index.js\n// module id = C8zq\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Gradient = require('vega-scenegraph').Gradient,\n    parseProperties = require('../parse/properties'),\n    parseMark = require('../parse/mark'),\n    util = require('../util');\n\nfunction lgnd(model) {\n  var size  = null,\n      shape = null,\n      fill  = null,\n      stroke  = null,\n      opacity = null,\n      spacing = null,\n      values  = null,\n      formatString = null,\n      formatType   = null,\n      title  = null,\n      config = model.config().legend,\n      orient = config.orient,\n      offset = config.offset,\n      padding = config.padding,\n      tickArguments = [5],\n      legendStyle = {},\n      symbolStyle = {},\n      gradientStyle = {},\n      titleStyle = {},\n      labelStyle = {},\n      m = { // Legend marks as references for updates\n        titles:  {},\n        symbols: {},\n        labels:  {},\n        gradient: {}\n      };\n\n  var legend = {},\n      legendDef = {};\n\n  function reset() { legendDef.type = null; }\n  function ingest(d, i) { return {data: d, index: i}; }\n\n  legend.def = function() {\n    var scale = size || shape || fill || stroke || opacity;\n\n    if (!legendDef.type) {\n      legendDef = (scale===fill || scale===stroke) && !discrete(scale.type) ?\n        quantDef(scale) : ordinalDef(scale);\n    }\n    legendDef.orient = orient;\n    legendDef.offset = offset;\n    legendDef.padding = padding;\n    legendDef.margin = config.margin;\n    return legendDef;\n  };\n\n  function discrete(type) {\n    return type==='ordinal' || type==='quantize' ||\n           type==='quantile' || type==='threshold';\n  }\n\n  function ordinalDef(scale) {\n    var def = o_legend_def(size, shape, fill, stroke, opacity);\n\n    // generate data\n    var data = (values == null ?\n      (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) :\n      values).map(ingest);\n\n    var fmt = util.getTickFormat(scale, data.length, formatType, formatString);\n\n    // determine spacing between legend entries\n    var fs, range, offset, pad=5, domain = d3.range(data.length);\n    if (size) {\n      range = data.map(function(x) { return Math.sqrt(size(x.data)); });\n      offset = d3.max(range);\n      range = range.reduce(function(a,b,i,z) {\n          if (i > 0) a[i] = a[i-1] + z[i-1]/2 + pad;\n          return (a[i] += b/2, a); }, [0]).map(Math.round);\n    } else {\n      offset = Math.round(Math.sqrt(config.symbolSize));\n      range = spacing ||\n        (fs = labelStyle.fontSize) && (fs.value + pad) ||\n        (config.labelFontSize + pad);\n      range = domain.map(function(d,i) {\n        return Math.round(offset/2 + i*range);\n      });\n    }\n\n    // account for padding and title size\n    var sz = padding, ts;\n    if (title) {\n      ts = titleStyle.fontSize;\n      sz += 5 + ((ts && ts.value) || config.titleFontSize);\n    }\n    for (var i=0, n=range.length; i<n; ++i) range[i] += sz;\n\n    // build scale for label layout\n    def.scales = def.scales || [{}];\n    dl.extend(def.scales[0], {\n      name: 'legend',\n      type: 'ordinal',\n      points: true,\n      domain: domain,\n      range: range\n    });\n\n    // update legend def\n    var tdata = (title ? [title] : []).map(ingest);\n    data.forEach(function(d) {\n      d.label = fmt(d.data);\n      d.offset = offset;\n    });\n    def.marks[0].from = function() { return tdata; };\n    def.marks[1].from = function() { return data; };\n    def.marks[2].from = def.marks[1].from;\n\n    return def;\n  }\n\n  function o_legend_def(size, shape, fill, stroke, opacity) {\n    // setup legend marks\n    var titles  = dl.extend(m.titles, legendTitle(config)),\n        symbols = dl.extend(m.symbols, legendSymbols(config)),\n        labels  = dl.extend(m.labels, vLegendLabels(config));\n\n    // extend legend marks\n    legendSymbolExtend(symbols, size, shape, fill, stroke, opacity);\n\n    // add / override custom style properties\n    dl.extend(titles.properties.update,  titleStyle);\n    dl.extend(symbols.properties.update, symbolStyle);\n    dl.extend(labels.properties.update,  labelStyle);\n\n    // padding from legend border\n    titles.properties.enter.x.value += padding;\n    titles.properties.enter.y.value += padding;\n    labels.properties.enter.x.offset += padding + 1;\n    symbols.properties.enter.x.offset = padding + 1;\n    labels.properties.update.x.offset += padding + 1;\n    symbols.properties.update.x.offset = padding + 1;\n\n    dl.extend(legendDef, {\n      type: 'group',\n      interactive: false,\n      properties: {\n        enter: parseProperties(model, 'group', legendStyle),\n        legendPosition: {\n          encode: legendPosition.bind(null, config),\n          signals: [], scales:[], data: [], fields: []\n        }\n      }\n    });\n\n    legendDef.marks = [titles, symbols, labels].map(function(m) { return parseMark(model, m); });\n    return legendDef;\n  }\n\n  function quantDef(scale) {\n    var def = q_legend_def(scale),\n        dom = scale.domain(),\n        data  = (values == null ? dom : values).map(ingest),\n        width = (gradientStyle.width && gradientStyle.width.value) || config.gradientWidth,\n        fmt = util.getTickFormat(scale, data.length, formatType, formatString);\n\n    // build scale for label layout\n    def.scales = def.scales || [{}];\n    var layoutSpec = dl.extend(def.scales[0], {\n      name: 'legend',\n      type: scale.type,\n      round: true,\n      zero: false,\n      domain: [dom[0], dom[dom.length-1]],\n      range: [padding, width+padding]\n    });\n    if (scale.type==='pow') layoutSpec.exponent = scale.exponent();\n\n    // update legend def\n    var tdata = (title ? [title] : []).map(ingest);\n    data.forEach(function(d,i) {\n      d.label = fmt(d.data);\n      d.align = i==(data.length-1) ? 'right' : i===0 ? 'left' : 'center';\n    });\n\n    def.marks[0].from = function() { return tdata; };\n    def.marks[1].from = function() { return [1]; };\n    def.marks[2].from = function() { return data; };\n    return def;\n  }\n\n  function q_legend_def(scale) {\n    // setup legend marks\n    var titles = dl.extend(m.titles, legendTitle(config)),\n        gradient = dl.extend(m.gradient, legendGradient(config)),\n        labels = dl.extend(m.labels, hLegendLabels(config)),\n        grad = new Gradient();\n\n    // setup color gradient\n    var dom = scale.domain(),\n        min = dom[0],\n        max = dom[dom.length-1],\n        f = scale.copy().domain([min, max]).range([0,1]);\n\n    var stops = (scale.type !== 'linear' && scale.ticks) ?\n      scale.ticks.call(scale, 15) : dom;\n    if (min !== stops[0]) stops.unshift(min);\n    if (max !== stops[stops.length-1]) stops.push(max);\n\n    for (var i=0, n=stops.length; i<n; ++i) {\n      grad.stop(f(stops[i]), scale(stops[i]));\n    }\n    gradient.properties.enter.fill = {value: grad};\n\n    // add / override custom style properties\n    dl.extend(titles.properties.update, titleStyle);\n    dl.extend(gradient.properties.update, gradientStyle);\n    dl.extend(labels.properties.update, labelStyle);\n\n    // account for gradient size\n    var gp = gradient.properties, gh = gradientStyle.height,\n        hh = (gh && gh.value) || gp.enter.height.value;\n    labels.properties.enter.y.value = hh;\n    labels.properties.update.y.value = hh;\n\n    // account for title size as needed\n    if (title) {\n      var tp = titles.properties, fs = titleStyle.fontSize,\n          sz = 4 + ((fs && fs.value) || tp.enter.fontSize.value);\n      gradient.properties.enter.y.value += sz;\n      labels.properties.enter.y.value += sz;\n      gradient.properties.update.y.value += sz;\n      labels.properties.update.y.value += sz;\n    }\n\n    // padding from legend border\n    titles.properties.enter.x.value += padding;\n    titles.properties.enter.y.value += padding;\n    gradient.properties.enter.x.value += padding;\n    gradient.properties.enter.y.value += padding;\n    labels.properties.enter.y.value += padding;\n    gradient.properties.update.x.value += padding;\n    gradient.properties.update.y.value += padding;\n    labels.properties.update.y.value += padding;\n\n    dl.extend(legendDef, {\n      type: 'group',\n      interactive: false,\n      properties: {\n        enter: parseProperties(model, 'group', legendStyle),\n        legendPosition: {\n          encode: legendPosition.bind(null, config),\n          signals: [], scales: [], data: [], fields: []\n        }\n      }\n    });\n\n    legendDef.marks = [titles, gradient, labels].map(function(m) { return parseMark(model, m); });\n    return legendDef;\n  }\n\n  legend.size = function(x) {\n    if (!arguments.length) return size;\n    if (size !== x) { size = x; reset(); }\n    return legend;\n  };\n\n  legend.shape = function(x) {\n    if (!arguments.length) return shape;\n    if (shape !== x) { shape = x; reset(); }\n    return legend;\n  };\n\n  legend.fill = function(x) {\n    if (!arguments.length) return fill;\n    if (fill !== x) { fill = x; reset(); }\n    return legend;\n  };\n\n  legend.stroke = function(x) {\n    if (!arguments.length) return stroke;\n    if (stroke !== x) { stroke = x; reset(); }\n    return legend;\n  };\n\n  legend.opacity = function(x) {\n    if (!arguments.length) return opacity;\n    if (opacity !== x) { opacity = x; reset(); }\n    return legend;\n  };\n\n  legend.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return legend;\n  };\n\n  legend.format = function(x) {\n    if (!arguments.length) return formatString;\n    if (formatString !== x) {\n      formatString = x;\n      reset();\n    }\n    return legend;\n  };\n\n  legend.formatType = function(x) {\n    if (!arguments.length) return formatType;\n    if (formatType !== x) {\n      formatType = x;\n      reset();\n    }\n    return legend;\n  };\n\n  legend.spacing = function(x) {\n    if (!arguments.length) return spacing;\n    if (spacing !== +x) { spacing = +x; reset(); }\n    return legend;\n  };\n\n  legend.orient = function(x) {\n    if (!arguments.length) return orient;\n    orient = x in LEGEND_ORIENT ? x + '' : config.orient;\n    return legend;\n  };\n\n  legend.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = +x;\n    return legend;\n  };\n\n  legend.values = function(x) {\n    if (!arguments.length) return values;\n    values = x;\n    return legend;\n  };\n\n  legend.legendProperties = function(x) {\n    if (!arguments.length) return legendStyle;\n    legendStyle = x;\n    return legend;\n  };\n\n  legend.symbolProperties = function(x) {\n    if (!arguments.length) return symbolStyle;\n    symbolStyle = x;\n    return legend;\n  };\n\n  legend.gradientProperties = function(x) {\n    if (!arguments.length) return gradientStyle;\n    gradientStyle = x;\n    return legend;\n  };\n\n  legend.labelProperties = function(x) {\n    if (!arguments.length) return labelStyle;\n    labelStyle = x;\n    return legend;\n  };\n\n  legend.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    titleStyle = x;\n    return legend;\n  };\n\n  legend.reset = function() {\n    reset();\n    return legend;\n  };\n\n  return legend;\n}\n\nvar LEGEND_ORIENT = {\n  'left': 'x1',\n  'right': 'x2',\n  'top-left': 'x1',\n  'top-right': 'x2',\n  'bottom-left': 'x1',\n  'bottom-right': 'x2'\n};\n\nfunction legendPosition(config, item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item, i,\n      def = item.mark.def,\n      offset = def.offset,\n      orient = def.orient,\n      pad = def.padding * 2,\n      ao  = orient === 'left' ? 0 : group.width,\n      lw  = ~~item.bounds.width() + (item.width ? 0 : pad),\n      lh  = ~~item.bounds.height() + (item.height ? 0 : pad),\n      pos = group._legendPositions ||\n        (group._legendPositions = {right: 0.5, left: 0.5});\n\n  o.x = 0.5;\n  o.y = 0.5;\n  o.width = lw;\n  o.height = lh;\n\n  if (orient === 'left' || orient === 'right') {\n    o.y = pos[orient];\n    pos[orient] += lh + def.margin;\n\n    // Calculate axis offset.\n    var axes  = group.axes,\n        items = group.axisItems,\n        bound = LEGEND_ORIENT[orient];\n    for (i=0; i<axes.length; ++i) {\n      if (axes[i].orient() === orient) {\n        ao = Math.max(ao, Math.abs(items[i].bounds[bound]));\n      }\n    }\n  }\n\n  switch (orient) {\n    case 'left':\n      o.x -= ao + offset + lw;\n      break;\n    case 'right':\n      o.x += ao + offset;\n      break;\n    case 'top-left':\n      o.x += offset;\n      o.y += offset;\n      break;\n    case 'top-right':\n      o.x += group.width - lw - offset;\n      o.y += offset;\n      break;\n    case 'bottom-left':\n      o.x += offset;\n      o.y += group.height - lh - offset;\n      break;\n    case 'bottom-right':\n      o.x += group.width - lw - offset;\n      o.y += group.height - lh - offset;\n      break;\n  }\n\n  var baseline = config.baseline,\n      totalHeight = 0;\n  for (i=0; i<group.legendItems.length; i++) {\n    var currItem = group.legendItems[i];\n    totalHeight += currItem.bounds.height() + (item.height ? 0 : pad);\n  }\n\n  if (baseline === 'middle') {\n    o.y += offset + (group.height / 2) - (totalHeight / 2);\n  } else if (baseline === 'bottom') {\n    o.y += offset + group.height - totalHeight;\n  }\n\n  if (trans) trans.interpolate(item, o);\n  var enc = item.mark.def.properties.enter.encode;\n  enc.call(enc, item, group, trans, db, signals, predicates);\n  return true;\n}\n\nfunction legendSymbolExtend(mark, size, shape, fill, stroke, opacity) {\n  var e = mark.properties.enter,\n      u = mark.properties.update;\n  if (size)    e.size    = u.size    = {scale: size.scaleName,   field: 'data'};\n  if (shape)   e.shape   = u.shape   = {scale: shape.scaleName,  field: 'data'};\n  if (fill)    e.fill    = u.fill    = {scale: fill.scaleName,   field: 'data'};\n  if (stroke)  e.stroke  = u.stroke  = {scale: stroke.scaleName, field: 'data'};\n  if (opacity) u.opacity = {scale: opacity.scaleName, field: 'data'};\n}\n\nfunction legendTitle(config) {\n  return {\n    type: 'text',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {value: 0},\n        y: {value: 0},\n        fill: {value: config.titleColor},\n        font: {value: config.titleFont},\n        fontSize: {value: config.titleFontSize},\n        fontWeight: {value: config.titleFontWeight},\n        baseline: {value: 'top'},\n        text: {field: 'data'},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction legendSymbols(config) {\n  return {\n    type: 'symbol',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {field: 'offset', mult: 0.5},\n        y: {scale: 'legend', field: 'index'},\n        shape: {value: config.symbolShape},\n        size: {value: config.symbolSize},\n        stroke: {value: config.symbolColor},\n        strokeWidth: {value: config.symbolStrokeWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {field: 'offset', mult: 0.5},\n        y: {scale: 'legend', field: 'index'},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nfunction vLegendLabels(config) {\n  return {\n    type: 'text',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {field: 'offset', offset: 5},\n        y: {scale: 'legend', field: 'index'},\n        fill: {value: config.labelColor},\n        font: {value: config.labelFont},\n        fontSize: {value: config.labelFontSize},\n        align: {value: config.labelAlign},\n        baseline: {value: config.labelBaseline},\n        text: {field: 'label'},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        opacity: {value: 1},\n        x: {field: 'offset', offset: 5},\n        y: {scale: 'legend', field: 'index'},\n      }\n    }\n  };\n}\n\nfunction legendGradient(config) {\n  return {\n    type: 'rect',\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0},\n        y: {value: 0},\n        width: {value: config.gradientWidth},\n        height: {value: config.gradientHeight},\n        stroke: {value: config.gradientStrokeColor},\n        strokeWidth: {value: config.gradientStrokeWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {value: 0},\n        y: {value: 0},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nfunction hLegendLabels(config) {\n  return {\n    type: 'text',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {scale: 'legend', field: 'data'},\n        y: {value: 20},\n        dy: {value: 2},\n        fill: {value: config.labelColor},\n        font: {value: config.labelFont},\n        fontSize: {value: config.labelFontSize},\n        align: {field: 'align'},\n        baseline: {value: 'top'},\n        text: {field: 'label'},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {scale: 'legend', field: 'data'},\n        y: {value: 20},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nmodule.exports = lgnd;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/legend.js\n// module id = CXWl\n// module chunks = 0","var dl = require('datalib'),\n    parse = require('../parse'),\n    Scale = require('../scene/Scale'),\n    config = require('./config');\n\nfunction compile(module, opt, schema) {\n  var s = module.schema;\n  if (!s) return;\n  if (s.refs) dl.extend(schema.refs, s.refs);\n  if (s.defs) dl.extend(schema.defs, s.defs);\n}\n\nmodule.exports = function(opt) {\n  var schema = null;\n  opt = opt || {};\n\n  // Compile if we're not loading the schema from a URL.\n  // Load from a URL to extend the existing base schema.\n  if (opt.url) {\n    schema = dl.json(dl.extend({url: opt.url}, config.load));\n  } else {\n    schema = {\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n      \"title\": \"Vega Visualization Specification Language\",\n      \"defs\": {},\n      \"refs\": {},\n      \"$ref\": \"#/defs/spec\"\n    };\n\n    dl.keys(parse).forEach(function(k) { compile(parse[k], opt, schema); });\n\n    // Scales aren't in the parser, add schema manually\n    compile(Scale, opt, schema);\n  }\n\n  // Extend schema to support custom mark properties or property sets.\n  if (opt.properties) dl.keys(opt.properties).forEach(function(k) {\n    schema.defs.propset.properties[k] = {\"$ref\": \"#/refs/\"+opt.properties[k]+\"Value\"};\n  });\n\n  if (opt.propertySets) dl.keys(opt.propertySets).forEach(function(k) {\n    schema.defs.mark.properties.properties.properties[k] = {\"$ref\": \"#/defs/propset\"};\n  });\n\n  return schema;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/schema.js\n// module id = CiyH\n// module chunks = 0","var deps = module.exports = {\n  ALL: ['data', 'fields', 'scales', 'signals']\n};\ndeps.ALL.forEach(function(k) { deps[k.toUpperCase()] = k; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Dependencies.js\n// module id = D3vM\n// module chunks = 0","var dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nfunction parseTransforms(model, def) {\n  var transform = transforms[def.type],\n      tx;\n\n  if (!transform) throw new Error('\"' + def.type + '\" is not a valid transformation');\n\n  tx = new transform(model);\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    tx.param(k, def[k]);\n  });\n\n  return tx;\n}\n\nmodule.exports = parseTransforms;\n\nvar keys = dl.keys(transforms)\n  .filter(function(k) { return transforms[k].schema; });\n\nvar defs = keys.reduce(function(acc, k) {\n  return (acc[k+'Transform'] = transforms[k].schema, acc);\n}, {});\n\nparseTransforms.schema = {\n  \"defs\": dl.extend(defs, {\n    \"transform\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": keys.map(function(k) {\n          return {\"$ref\": \"#/defs/\"+k+\"Transform\"};\n        })\n      }\n    }\n  })\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/transforms.js\n// module id = DUWk\n// module chunks = 0","\"use strict\";\nvar config_1 = require('./config');\nvar encoding_1 = require('./encoding');\nvar mark_1 = require('./mark');\nvar stack_1 = require('./stack');\nvar channel_1 = require('./channel');\nvar vlEncoding = require('./encoding');\nvar util_1 = require('./util');\nfunction isFacetSpec(spec) {\n    return spec['facet'] !== undefined;\n}\nexports.isFacetSpec = isFacetSpec;\nfunction isExtendedUnitSpec(spec) {\n    if (isSomeUnitSpec(spec)) {\n        var hasRow = encoding_1.has(spec.encoding, channel_1.ROW);\n        var hasColumn = encoding_1.has(spec.encoding, channel_1.COLUMN);\n        return hasRow || hasColumn;\n    }\n    return false;\n}\nexports.isExtendedUnitSpec = isExtendedUnitSpec;\nfunction isUnitSpec(spec) {\n    if (isSomeUnitSpec(spec)) {\n        return !isExtendedUnitSpec(spec);\n    }\n    return false;\n}\nexports.isUnitSpec = isUnitSpec;\nfunction isSomeUnitSpec(spec) {\n    return spec['mark'] !== undefined;\n}\nexports.isSomeUnitSpec = isSomeUnitSpec;\nfunction isLayerSpec(spec) {\n    return spec['layers'] !== undefined;\n}\nexports.isLayerSpec = isLayerSpec;\nfunction normalize(spec) {\n    if (isExtendedUnitSpec(spec)) {\n        return normalizeExtendedUnitSpec(spec);\n    }\n    if (isUnitSpec(spec)) {\n        return normalizeUnitSpec(spec);\n    }\n    return spec;\n}\nexports.normalize = normalize;\nfunction normalizeExtendedUnitSpec(spec) {\n    var hasRow = encoding_1.has(spec.encoding, channel_1.ROW);\n    var hasColumn = encoding_1.has(spec.encoding, channel_1.COLUMN);\n    var encoding = util_1.duplicate(spec.encoding);\n    delete encoding.column;\n    delete encoding.row;\n    return util_1.extend(spec.name ? { name: spec.name } : {}, spec.description ? { description: spec.description } : {}, { data: spec.data }, spec.transform ? { transform: spec.transform } : {}, {\n        facet: util_1.extend(hasRow ? { row: spec.encoding.row } : {}, hasColumn ? { column: spec.encoding.column } : {}),\n        spec: normalizeUnitSpec({\n            mark: spec.mark,\n            encoding: encoding\n        })\n    }, spec.config ? { config: spec.config } : {});\n}\nexports.normalizeExtendedUnitSpec = normalizeExtendedUnitSpec;\nfunction normalizeUnitSpec(spec) {\n    var config = spec.config;\n    var overlayConfig = config && config.overlay;\n    var overlayWithLine = overlayConfig && spec.mark === mark_1.AREA &&\n        util_1.contains([config_1.AreaOverlay.LINEPOINT, config_1.AreaOverlay.LINE], overlayConfig.area);\n    var overlayWithPoint = overlayConfig && ((overlayConfig.line && spec.mark === mark_1.LINE) ||\n        (overlayConfig.area === config_1.AreaOverlay.LINEPOINT && spec.mark === mark_1.AREA));\n    if (spec.mark === mark_1.ERRORBAR) {\n        return normalizeErrorBarUnitSpec(spec);\n    }\n    if (encoding_1.isRanged(spec.encoding)) {\n        return normalizeRangedUnitSpec(spec);\n    }\n    if (isStacked(spec)) {\n        return spec;\n    }\n    if (overlayWithPoint || overlayWithLine) {\n        return normalizeOverlay(spec, overlayWithPoint, overlayWithLine);\n    }\n    return spec;\n}\nexports.normalizeUnitSpec = normalizeUnitSpec;\nfunction normalizeRangedUnitSpec(spec) {\n    if (spec.encoding) {\n        var hasX = encoding_1.has(spec.encoding, channel_1.X);\n        var hasY = encoding_1.has(spec.encoding, channel_1.Y);\n        var hasX2 = encoding_1.has(spec.encoding, channel_1.X2);\n        var hasY2 = encoding_1.has(spec.encoding, channel_1.Y2);\n        if ((hasX2 && !hasX) || (hasY2 && !hasY)) {\n            var normalizedSpec = util_1.duplicate(spec);\n            if (hasX2 && !hasX) {\n                normalizedSpec.encoding.x = normalizedSpec.encoding.x2;\n                delete normalizedSpec.encoding.x2;\n            }\n            if (hasY2 && !hasY) {\n                normalizedSpec.encoding.y = normalizedSpec.encoding.y2;\n                delete normalizedSpec.encoding.y2;\n            }\n            return normalizedSpec;\n        }\n    }\n    return spec;\n}\nexports.normalizeRangedUnitSpec = normalizeRangedUnitSpec;\nfunction normalizeErrorBarUnitSpec(spec) {\n    var layerSpec = util_1.extend(spec.name ? { name: spec.name } : {}, spec.description ? { description: spec.description } : {}, spec.data ? { data: spec.data } : {}, spec.transform ? { transform: spec.transform } : {}, spec.config ? { config: spec.config } : {}, { layers: [] });\n    if (!spec.encoding) {\n        return layerSpec;\n    }\n    if (spec.mark === mark_1.ERRORBAR) {\n        var ruleSpec = {\n            mark: mark_1.RULE,\n            encoding: util_1.extend(spec.encoding.x ? { x: util_1.duplicate(spec.encoding.x) } : {}, spec.encoding.y ? { y: util_1.duplicate(spec.encoding.y) } : {}, spec.encoding.x2 ? { x2: util_1.duplicate(spec.encoding.x2) } : {}, spec.encoding.y2 ? { y2: util_1.duplicate(spec.encoding.y2) } : {}, {})\n        };\n        var lowerTickSpec = {\n            mark: mark_1.TICK,\n            encoding: util_1.extend(spec.encoding.x ? { x: util_1.duplicate(spec.encoding.x) } : {}, spec.encoding.y ? { y: util_1.duplicate(spec.encoding.y) } : {}, spec.encoding.size ? { size: util_1.duplicate(spec.encoding.size) } : {}, {})\n        };\n        var upperTickSpec = {\n            mark: mark_1.TICK,\n            encoding: util_1.extend({\n                x: spec.encoding.x2 ? util_1.duplicate(spec.encoding.x2) : util_1.duplicate(spec.encoding.x),\n                y: spec.encoding.y2 ? util_1.duplicate(spec.encoding.y2) : util_1.duplicate(spec.encoding.y)\n            }, spec.encoding.size ? { size: util_1.duplicate(spec.encoding.size) } : {})\n        };\n        layerSpec.layers.push(normalizeUnitSpec(ruleSpec));\n        layerSpec.layers.push(normalizeUnitSpec(lowerTickSpec));\n        layerSpec.layers.push(normalizeUnitSpec(upperTickSpec));\n    }\n    return layerSpec;\n}\nexports.normalizeErrorBarUnitSpec = normalizeErrorBarUnitSpec;\nfunction normalizeOverlay(spec, overlayWithPoint, overlayWithLine) {\n    var outerProps = ['name', 'description', 'data', 'transform'];\n    var baseSpec = util_1.omit(spec, outerProps.concat('config'));\n    var baseConfig = util_1.duplicate(spec.config);\n    delete baseConfig.overlay;\n    var layerSpec = util_1.extend(util_1.pick(spec, outerProps), { layers: [baseSpec] }, util_1.keys(baseConfig).length > 0 ? { config: baseConfig } : {});\n    if (overlayWithLine) {\n        var lineSpec = util_1.duplicate(baseSpec);\n        lineSpec.mark = mark_1.LINE;\n        var markConfig = util_1.extend({}, config_1.defaultOverlayConfig.lineStyle, spec.config.overlay.lineStyle);\n        if (util_1.keys(markConfig).length > 0) {\n            lineSpec.config = { mark: markConfig };\n        }\n        layerSpec.layers.push(lineSpec);\n    }\n    if (overlayWithPoint) {\n        var pointSpec = util_1.duplicate(baseSpec);\n        pointSpec.mark = mark_1.POINT;\n        var markConfig = util_1.extend({}, config_1.defaultOverlayConfig.pointStyle, spec.config.overlay.pointStyle);\n        ;\n        if (util_1.keys(markConfig).length > 0) {\n            pointSpec.config = { mark: markConfig };\n        }\n        layerSpec.layers.push(pointSpec);\n    }\n    return layerSpec;\n}\nexports.normalizeOverlay = normalizeOverlay;\nfunction alwaysNoOcclusion(spec) {\n    return vlEncoding.isAggregate(spec.encoding);\n}\nexports.alwaysNoOcclusion = alwaysNoOcclusion;\nfunction fieldDefs(spec) {\n    return vlEncoding.fieldDefs(spec.encoding);\n}\nexports.fieldDefs = fieldDefs;\n;\nfunction getCleanSpec(spec) {\n    return spec;\n}\nexports.getCleanSpec = getCleanSpec;\nfunction isStacked(spec) {\n    return stack_1.stack(spec.mark, spec.encoding, spec.config) !== null;\n}\nexports.isStacked = isStacked;\nfunction transpose(spec) {\n    var oldenc = spec.encoding;\n    var encoding = util_1.duplicate(spec.encoding);\n    encoding.x = oldenc.y;\n    encoding.y = oldenc.x;\n    encoding.row = oldenc.column;\n    encoding.column = oldenc.row;\n    spec.encoding = encoding;\n    return spec;\n}\nexports.transpose = transpose;\n//# sourceMappingURL=spec.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/spec.js\n// module id = F9eC\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('./channel');\nfunction autoMaxBins(channel) {\n    switch (channel) {\n        case channel_1.ROW:\n        case channel_1.COLUMN:\n        case channel_1.SIZE:\n        case channel_1.SHAPE:\n            return 6;\n        default:\n            return 10;\n    }\n}\nexports.autoMaxBins = autoMaxBins;\n//# sourceMappingURL=bin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/bin.js\n// module id = FmT5\n// module chunks = 0","\"use strict\";\n(function (ScaleType) {\n    ScaleType[ScaleType[\"LINEAR\"] = 'linear'] = \"LINEAR\";\n    ScaleType[ScaleType[\"LOG\"] = 'log'] = \"LOG\";\n    ScaleType[ScaleType[\"POW\"] = 'pow'] = \"POW\";\n    ScaleType[ScaleType[\"SQRT\"] = 'sqrt'] = \"SQRT\";\n    ScaleType[ScaleType[\"QUANTILE\"] = 'quantile'] = \"QUANTILE\";\n    ScaleType[ScaleType[\"QUANTIZE\"] = 'quantize'] = \"QUANTIZE\";\n    ScaleType[ScaleType[\"ORDINAL\"] = 'ordinal'] = \"ORDINAL\";\n    ScaleType[ScaleType[\"TIME\"] = 'time'] = \"TIME\";\n    ScaleType[ScaleType[\"UTC\"] = 'utc'] = \"UTC\";\n})(exports.ScaleType || (exports.ScaleType = {}));\nvar ScaleType = exports.ScaleType;\n(function (NiceTime) {\n    NiceTime[NiceTime[\"SECOND\"] = 'second'] = \"SECOND\";\n    NiceTime[NiceTime[\"MINUTE\"] = 'minute'] = \"MINUTE\";\n    NiceTime[NiceTime[\"HOUR\"] = 'hour'] = \"HOUR\";\n    NiceTime[NiceTime[\"DAY\"] = 'day'] = \"DAY\";\n    NiceTime[NiceTime[\"WEEK\"] = 'week'] = \"WEEK\";\n    NiceTime[NiceTime[\"MONTH\"] = 'month'] = \"MONTH\";\n    NiceTime[NiceTime[\"YEAR\"] = 'year'] = \"YEAR\";\n})(exports.NiceTime || (exports.NiceTime = {}));\nvar NiceTime = exports.NiceTime;\nexports.defaultScaleConfig = {\n    round: true,\n    textBandWidth: 90,\n    bandSize: 21,\n    padding: 1,\n    useRawDomain: false,\n    opacity: [0.3, 0.8],\n    nominalColorRange: 'category10',\n    sequentialColorRange: ['#AFC6A3', '#09622A'],\n    shapeRange: 'shapes',\n    fontSizeRange: [8, 40],\n    ruleSizeRange: [1, 5],\n    tickSizeRange: [1, 20]\n};\nexports.defaultFacetScaleConfig = {\n    round: true,\n    padding: 16\n};\n//# sourceMappingURL=scale.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/scale.js\n// module id = Fw/k\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar common_1 = require('../common');\nvar fielddef_1 = require('../../fielddef');\nvar type_1 = require('../../type');\nvar text;\n(function (text_1) {\n    function markType() {\n        return 'text';\n    }\n    text_1.markType = markType;\n    function background(model) {\n        return {\n            x: { value: 0 },\n            y: { value: 0 },\n            width: { field: { group: 'width' } },\n            height: { field: { group: 'height' } },\n            fill: {\n                scale: model.scaleName(channel_1.COLOR),\n                field: model.field(channel_1.COLOR, model.fieldDef(channel_1.COLOR).type === type_1.ORDINAL ? { prefn: 'rank_' } : {})\n            }\n        };\n    }\n    text_1.background = background;\n    function properties(model) {\n        var p = {};\n        common_1.applyMarkConfig(p, model, ['angle', 'align', 'baseline', 'dx', 'dy', 'font', 'fontWeight',\n            'fontStyle', 'radius', 'theta', 'text']);\n        var config = model.config();\n        var textFieldDef = model.fieldDef(channel_1.TEXT);\n        p.x = x(model.encoding().x, model.scaleName(channel_1.X), config, textFieldDef);\n        p.y = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        p.fontSize = size(model.encoding().size, model.scaleName(channel_1.SIZE), config);\n        p.text = text(model.encoding().text, model.scaleName(channel_1.TEXT), config);\n        if (model.config().mark.applyColorToBackground && !model.has(channel_1.X) && !model.has(channel_1.Y)) {\n            p.fill = { value: 'black' };\n            var opacity = model.config().mark.opacity;\n            if (opacity) {\n                p.opacity = { value: opacity };\n            }\n            ;\n        }\n        else {\n            common_1.applyColorAndOpacity(p, model);\n        }\n        return p;\n    }\n    text_1.properties = properties;\n    function x(xFieldDef, scaleName, config, textFieldDef) {\n        if (xFieldDef) {\n            if (xFieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(xFieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        if (textFieldDef && textFieldDef.type === type_1.QUANTITATIVE) {\n            return { field: { group: 'width' }, offset: -5 };\n        }\n        else {\n            return { value: config.scale.textBandWidth / 2 };\n        }\n    }\n    function y(yFieldDef, scaleName, config) {\n        if (yFieldDef) {\n            if (yFieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(yFieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function size(sizeFieldDef, scaleName, config) {\n        if (sizeFieldDef) {\n            if (sizeFieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(sizeFieldDef)\n                };\n            }\n            if (sizeFieldDef.value) {\n                return { value: sizeFieldDef.value };\n            }\n        }\n        return { value: config.mark.fontSize };\n    }\n    function text(textFieldDef, scaleName, config) {\n        if (textFieldDef) {\n            if (textFieldDef.field) {\n                if (type_1.QUANTITATIVE === textFieldDef.type) {\n                    var format = common_1.numberFormat(textFieldDef, config.mark.format, config);\n                    var filter = 'number' + (format ? ':\\'' + format + '\\'' : '');\n                    return {\n                        template: '{{' + fielddef_1.field(textFieldDef, { datum: true }) + ' | ' + filter + '}}'\n                    };\n                }\n                else if (type_1.TEMPORAL === textFieldDef.type) {\n                    return {\n                        template: common_1.timeTemplate(fielddef_1.field(textFieldDef, { datum: true }), textFieldDef.timeUnit, config.mark.format, config.mark.shortTimeLabels, config)\n                    };\n                }\n                else {\n                    return { field: textFieldDef.field };\n                }\n            }\n            else if (textFieldDef.value) {\n                return { value: textFieldDef.value };\n            }\n        }\n        return { value: config.mark.text };\n    }\n})(text = exports.text || (exports.text = {}));\n//# sourceMappingURL=text.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/text.js\n// module id = G+HP\n// module chunks = 0","var dl = require('datalib'),\n    d3 = require('d3'),\n    d3_cloud = require('d3-cloud'),\n    canvas = require('vega-scenegraph').canvas,\n    Tuple = require('vega-dataflow/src/Tuple'),\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Wordcloud(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: 'array<value>', default: require('./screen').size},\n    text: {type: 'field', default: 'data'},\n    rotate: {type: 'field|value', default: 0},\n    font: {type: 'field|value', default: {value: 'sans-serif'}},\n    fontSize: {type: 'field|value', default: 14},\n    fontStyle: {type: 'field|value', default: {value: 'normal'}},\n    fontWeight: {type: 'field|value', default: {value: 'normal'}},\n    fontScale: {type: 'array<value>', default: [10, 50]},\n    padding: {type: 'value', default: 1},\n    spiral: {type: 'value', default: 'archimedean'}\n  });\n\n  this._layout = d3_cloud().canvas(canvas.instance);\n\n  this._output = {\n    'x':          'layout_x',\n    'y':          'layout_y',\n    'font':       'layout_font',\n    'fontSize':   'layout_fontSize',\n    'fontStyle':  'layout_fontStyle',\n    'fontWeight': 'layout_fontWeight',\n    'rotate':     'layout_rotate',\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Wordcloud.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Wordcloud;\n\nfunction get(p) {\n  return (p && p.accessor) || p;\n}\n\nfunction wrap(tuple) {\n  var x = Object.create(tuple);\n  x._tuple = tuple;\n  return x;\n}\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['wordcloud']);\n\n  // get variables\n  var layout = this._layout,\n      output = this._output,\n      fontSize = this.param('fontSize'),\n      range = fontSize.accessor && this.param('fontScale'),\n      size, scale;\n  fontSize = fontSize.accessor || d3.functor(fontSize);\n\n  // create font size scaling function as needed\n  if (range.length) {\n    scale = d3.scale.sqrt()\n      .domain(dl.extent(data, size=fontSize))\n      .range(range);\n    fontSize = function(x) { return scale(size(x)); };\n  }\n\n  // configure layout\n  layout\n    .size(this.param('size'))\n    .text(get(this.param('text')))\n    .padding(this.param('padding'))\n    .spiral(this.param('spiral'))\n    .rotate(get(this.param('rotate')))\n    .font(get(this.param('font')))\n    .fontStyle(get(this.param('fontStyle')))\n    .fontWeight(get(this.param('fontWeight')))\n    .fontSize(fontSize)\n    .words(data.map(wrap)) // wrap to avoid tuple writes\n    .on('end', function(words) {\n      var size = layout.size(),\n          dx = size[0] >> 1,\n          dy = size[1] >> 1,\n          w, t, i, len;\n\n      for (i=0, len=words.length; i<len; ++i) {\n        w = words[i];\n        t = w._tuple;\n        Tuple.set(t, output.x, w.x + dx);\n        Tuple.set(t, output.y, w.y + dy);\n        Tuple.set(t, output.font, w.font);\n        Tuple.set(t, output.fontSize, w.size);\n        Tuple.set(t, output.fontStyle, w.style);\n        Tuple.set(t, output.fontWeight, w.weight);\n        Tuple.set(t, output.rotate, w.rotate);\n      }\n    })\n    .start();\n\n  // return changeset\n  for (var key in output) input.fields[output[key]] = 1;\n  return input;\n};\n\nmodule.exports = Wordcloud;\n\nvar Parameter = require('./Parameter');\nWordcloud.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Wordcloud transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"wordcloud\"]},\n    \"size\": {\n      \"description\": \"The dimensions of the wordcloud layout\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [900, 500]\n    },\n    \"font\": {\n      \"description\": \"The font face to use for a word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"sans-serif\"\n    },\n    \"fontStyle\": {\n      \"description\": \"The font style to use for a word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"normal\"\n    },\n    \"fontWeight\": {\n      \"description\": \"The font weight to use for a word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"normal\"\n    },\n    \"fontSize\": {\n      \"description\": \"The font size to use for a word.\",\n      \"oneOf\": [{\"type\": \"number\"}, Parameter.schema, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 14\n    },\n    \"fontScale\": {\n      \"description\": \"The minimum and maximum scaled font sizes, or null to prevent scaling.\",\n      \"oneOf\": [\n        { \"type\": \"null\" },\n        {\n          \"type\": \"array\",\n          \"minItems\": 2,\n          \"maxItems\": 2,\n          \"items\": {\"oneOf\": [{\"type\":\"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n        }\n      ],\n      \"default\": [10, 50]\n    },\n    \"rotate\": {\n      \"description\": \"The field or number to set the roration angle (in degrees).\",\n      \"oneOf\": [\n        {\"type\": \"number\"}, {\"type\": \"string\"},\n        Parameter.schema, {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0\n    },\n    \"text\": {\n      \"description\": \"The field containing the text to use for each word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 'data'\n    },\n    \"spiral\": {\n      \"description\": \"The type of spiral used for positioning words, either 'archimedean' or 'rectangular'.\",\n      \"oneOf\": [{\"enum\": [\"archimedean\", \"rectangular\"]}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"archimedean\"\n    },\n    \"padding\": {\n      \"description\": \"The padding around each word.\",\n      \"oneOf\": [{\"type\": \"number\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 1\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"},\n        \"font\": {\"type\": \"string\", \"default\": \"layout_font\"},\n        \"fontSize\": {\"type\": \"string\", \"default\": \"layout_fontSize\"},\n        \"fontStyle\": {\"type\": \"string\", \"default\": \"layout_fontStyle\"},\n        \"fontWeight\": {\"type\": \"string\", \"default\": \"layout_fontWeight\"},\n        \"rotate\": {\"type\": \"string\", \"default\": \"layout_rotate\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Wordcloud.js\n// module id = GXXi\n// module chunks = 0","var util = require('./util'),\n    d3_time = require('d3-time'),\n    d3_timeF = require('d3-time-format'),\n    d3_numberF = require('d3-format'),\n    numberF = d3_numberF, // defaults to EN-US\n    timeF = d3_timeF,     // defaults to EN-US\n    tmpDate = new Date(2000, 0, 1),\n    monthFull, monthAbbr, dayFull, dayAbbr;\n\n\nmodule.exports = {\n  // Update number formatter to use provided locale configuration.\n  // For more see https://github.com/d3/d3-format\n  numberLocale: numberLocale,\n  number:       function(f) { return numberF.format(f); },\n  numberPrefix: function(f, v) { return numberF.formatPrefix(f, v); },\n\n  // Update time formatter to use provided locale configuration.\n  // For more see https://github.com/d3/d3-time-format\n  timeLocale:   timeLocale,\n  time:         function(f) { return timeF.format(f); },\n  utc:          function(f) { return timeF.utcFormat(f); },\n\n  // Set number and time locale simultaneously.\n  locale:       function(l) { numberLocale(l); timeLocale(l); },\n\n  // automatic formatting functions\n  auto: {\n    number:   autoNumberFormat,\n    linear:   linearNumberFormat,\n    time:     function() { return timeAutoFormat(); },\n    utc:      function() { return utcAutoFormat(); }\n  },\n\n  month:      monthFormat,      // format month name from integer code\n  day:        dayFormat,        // format week day name from integer code\n  quarter:    quarterFormat,    // format quarter name from timestamp\n  utcQuarter: utcQuarterFormat  // format quarter name from utc timestamp\n};\n\n// -- Locales ----\n\n// transform 'en-US' style locale string to match d3-format v0.4+ convention\nfunction localeRef(l) {\n  return l.length > 4 && 'locale' + (\n    l[0].toUpperCase() + l[1].toLowerCase() +\n    l[3].toUpperCase() + l[4].toLowerCase()\n  );\n}\n\nfunction numberLocale(l) {\n  var f = util.isString(l) ? d3_numberF[localeRef(l)] : d3_numberF.locale(l);\n  if (f == null) throw Error('Unrecognized locale: ' + l);\n  numberF = f;\n}\n\nfunction timeLocale(l) {\n  var f = util.isString(l) ? d3_timeF[localeRef(l)] : d3_timeF.locale(l);\n  if (f == null) throw Error('Unrecognized locale: ' + l);\n  timeF = f;\n  monthFull = monthAbbr = dayFull = dayAbbr = null;\n}\n\n// -- Number Formatting ----\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction linearRange(domain, count) {\n  if (!domain.length) domain = [0];\n  if (count == null) count = 10;\n\n  var start = domain[0],\n      stop = domain[domain.length - 1];\n\n  if (stop < start) { error = stop; stop = start; start = error; }\n\n  var span = (stop - start) || (count = 1, start || stop || 1),\n      step = Math.pow(10, Math.floor(Math.log(span / count) / Math.LN10)),\n      error = span / count / step;\n\n  // Filter ticks to get closer to the desired count.\n  if (error >= e10) step *= 10;\n  else if (error >= e5) step *= 5;\n  else if (error >= e2) step *= 2;\n\n  // Round start and stop values to step interval.\n  return [\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  ];\n}\n\nfunction trimZero(f, decimal) {\n  return function(x) {\n    var s = f(x),\n        n = s.indexOf(decimal);\n    if (n < 0) return s;\n\n    var idx = rightmostDigit(s, n),\n        end = idx < s.length ? s.slice(idx) : '';\n\n    while (--idx > n) {\n      if (s[idx] !== '0') { ++idx; break; }\n    }\n    return s.slice(0, idx) + end;\n  };\n}\n\nfunction rightmostDigit(s, n) {\n  var i = s.lastIndexOf('e'), c;\n  if (i > 0) return i;\n  for (i=s.length; --i > n;) {\n    c = s.charCodeAt(i);\n    if (c >= 48 && c <= 57) return i+1; // is digit\n  }\n}\n\nfunction autoNumberFormat(f) {\n  var decimal = numberF.format('.1f')(1)[1]; // get decimal char\n  if (f == null) f = ',';\n  f = d3_numberF.formatSpecifier(f);\n  if (f.precision == null) f.precision = 12;\n  switch (f.type) {\n    case '%': f.precision -= 2; break;\n    case 'e': f.precision -= 1; break;\n  }\n  return trimZero(numberF.format(f), decimal);\n}\n\nfunction linearNumberFormat(domain, count, f) {\n  var range = linearRange(domain, count);\n\n  if (f == null) f = ',f';\n\n  switch (f = d3_numberF.formatSpecifier(f), f.type) {\n    case 's': {\n      var value = Math.max(Math.abs(range[0]), Math.abs(range[1]));\n      if (f.precision == null) f.precision = d3_numberF.precisionPrefix(range[2], value);\n      return numberF.formatPrefix(f, value);\n    }\n    case '':\n    case 'e':\n    case 'g':\n    case 'p':\n    case 'r': {\n      if (f.precision == null) f.precision = d3_numberF.precisionRound(range[2], Math.max(Math.abs(range[0]), Math.abs(range[1]))) - (f.type === 'e');\n      break;\n    }\n    case 'f':\n    case '%': {\n      if (f.precision == null) f.precision = d3_numberF.precisionFixed(range[2]) - 2 * (f.type === '%');\n      break;\n    }\n  }\n  return numberF.format(f);\n}\n\n// -- Datetime Formatting ----\n\nfunction timeAutoFormat() {\n  var f = timeF.format,\n      formatMillisecond = f('.%L'),\n      formatSecond = f(':%S'),\n      formatMinute = f('%I:%M'),\n      formatHour = f('%I %p'),\n      formatDay = f('%a %d'),\n      formatWeek = f('%b %d'),\n      formatMonth = f('%B'),\n      formatYear = f('%Y');\n\n  return function(date) {\n    var d = +date;\n    return (d3_time.second(date) < d ? formatMillisecond\n        : d3_time.minute(date) < d ? formatSecond\n        : d3_time.hour(date) < d ? formatMinute\n        : d3_time.day(date) < d ? formatHour\n        : d3_time.month(date) < d ?\n          (d3_time.week(date) < d ? formatDay : formatWeek)\n        : d3_time.year(date) < d ? formatMonth\n        : formatYear)(date);\n  };\n}\n\nfunction utcAutoFormat() {\n  var f = timeF.utcFormat,\n      formatMillisecond = f('.%L'),\n      formatSecond = f(':%S'),\n      formatMinute = f('%I:%M'),\n      formatHour = f('%I %p'),\n      formatDay = f('%a %d'),\n      formatWeek = f('%b %d'),\n      formatMonth = f('%B'),\n      formatYear = f('%Y');\n\n  return function(date) {\n    var d = +date;\n    return (d3_time.utcSecond(date) < d ? formatMillisecond\n        : d3_time.utcMinute(date) < d ? formatSecond\n        : d3_time.utcHour(date) < d ? formatMinute\n        : d3_time.utcDay(date) < d ? formatHour\n        : d3_time.utcMonth(date) < d ?\n          (d3_time.utcWeek(date) < d ? formatDay : formatWeek)\n        : d3_time.utcYear(date) < d ? formatMonth\n        : formatYear)(date);\n  };\n}\n\nfunction monthFormat(month, abbreviate) {\n  var f = abbreviate ?\n    (monthAbbr || (monthAbbr = timeF.format('%b'))) :\n    (monthFull || (monthFull = timeF.format('%B')));\n  return (tmpDate.setMonth(month), f(tmpDate));\n}\n\nfunction dayFormat(day, abbreviate) {\n  var f = abbreviate ?\n    (dayAbbr || (dayAbbr = timeF.format('%a'))) :\n    (dayFull || (dayFull = timeF.format('%A')));\n  return (tmpDate.setMonth(0), tmpDate.setDate(2 + day), f(tmpDate));\n}\n\nfunction quarterFormat(date) {\n  return Math.floor(date.getMonth() / 3) + 1;\n}\n\nfunction utcQuarterFormat(date) {\n  return Math.floor(date.getUTCMonth() / 3) + 1;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/format.js\n// module id = GXhC\n// module chunks = 0","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/* istanbul ignore next */\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-expression/src/parser.js\n// module id = H3bJ\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar line;\n(function (line) {\n    function markType() {\n        return 'line';\n    }\n    line.markType = markType;\n    function properties(model) {\n        var p = {};\n        var config = model.config();\n        p.x = x(model.encoding().x, model.scaleName(channel_1.X), config);\n        p.y = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        var _size = size(model.encoding().size, config);\n        if (_size) {\n            p.strokeWidth = _size;\n        }\n        common_1.applyColorAndOpacity(p, model);\n        common_1.applyMarkConfig(p, model, ['interpolate', 'tension']);\n        return p;\n    }\n    line.properties = properties;\n    function x(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: 0 };\n    }\n    function y(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { field: { group: 'height' } };\n    }\n    function size(fieldDef, config) {\n        if (fieldDef && fieldDef.value !== undefined) {\n            return { value: fieldDef.value };\n        }\n        return { value: config.mark.lineSize };\n    }\n    function labels(model) {\n        return undefined;\n    }\n    line.labels = labels;\n})(line = exports.line || (exports.line = {}));\n//# sourceMappingURL=line.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/line.js\n// module id = HES2\n// module chunks = 0","var util = require('./util');\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var items = scene.items,\n      o, opac, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac === 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    if (o.fill && util.fill(g, o, opac)) {\n      g.fillRect(x, y, w, h);\n    }\n    if (o.stroke && util.stroke(g, o, opac)) {\n      g.strokeRect(x, y, w, h);\n    }\n  }\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick()\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/rect.js\n// module id = HaGw\n// module chunks = 0","\"use strict\";\nvar axis_1 = require('../axis');\nvar channel_1 = require('../channel');\nvar fielddef_1 = require('../fielddef');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar common_1 = require('./common');\nfunction parseAxisComponent(model, axisChannels) {\n    return axisChannels.reduce(function (axis, channel) {\n        if (model.axis(channel)) {\n            axis[channel] = parseAxis(channel, model);\n        }\n        return axis;\n    }, {});\n}\nexports.parseAxisComponent = parseAxisComponent;\nfunction parseInnerAxis(channel, model) {\n    var isCol = channel === channel_1.COLUMN, isRow = channel === channel_1.ROW, type = isCol ? 'x' : isRow ? 'y' : channel;\n    var def = {\n        type: type,\n        scale: model.scaleName(channel),\n        grid: true,\n        tickSize: 0,\n        properties: {\n            labels: {\n                text: { value: '' }\n            },\n            axis: {\n                stroke: { value: 'transparent' }\n            }\n        }\n    };\n    var axis = model.axis(channel);\n    ['layer', 'ticks', 'values', 'subdivide'].forEach(function (property) {\n        var method;\n        var value = (method = exports[property]) ?\n            method(model, channel, def) :\n            axis[property];\n        if (value !== undefined) {\n            def[property] = value;\n        }\n    });\n    var props = model.axis(channel).properties || {};\n    ['grid'].forEach(function (group) {\n        var value = properties[group] ?\n            properties[group](model, channel, props[group] || {}, def) :\n            props[group];\n        if (value !== undefined && util_1.keys(value).length > 0) {\n            def.properties = def.properties || {};\n            def.properties[group] = value;\n        }\n    });\n    return def;\n}\nexports.parseInnerAxis = parseInnerAxis;\nfunction parseAxis(channel, model) {\n    var isCol = channel === channel_1.COLUMN, isRow = channel === channel_1.ROW, type = isCol ? 'x' : isRow ? 'y' : channel;\n    var axis = model.axis(channel);\n    var def = {\n        type: type,\n        scale: model.scaleName(channel)\n    };\n    [\n        'format', 'grid', 'layer', 'offset', 'orient', 'tickSize', 'ticks', 'tickSizeEnd', 'title', 'titleOffset',\n        'tickPadding', 'tickSize', 'tickSizeMajor', 'tickSizeMinor', 'values', 'subdivide'\n    ].forEach(function (property) {\n        var method;\n        var value = (method = exports[property]) ?\n            method(model, channel, def) :\n            axis[property];\n        if (value !== undefined) {\n            def[property] = value;\n        }\n    });\n    var props = model.axis(channel).properties || {};\n    [\n        'axis', 'labels',\n        'grid', 'title', 'ticks', 'majorTicks', 'minorTicks'\n    ].forEach(function (group) {\n        var value = properties[group] ?\n            properties[group](model, channel, props[group] || {}, def) :\n            props[group];\n        if (value !== undefined && util_1.keys(value).length > 0) {\n            def.properties = def.properties || {};\n            def.properties[group] = value;\n        }\n    });\n    return def;\n}\nexports.parseAxis = parseAxis;\nfunction format(model, channel) {\n    return common_1.numberFormat(model.fieldDef(channel), model.axis(channel).format, model.config());\n}\nexports.format = format;\nfunction offset(model, channel) {\n    return model.axis(channel).offset;\n}\nexports.offset = offset;\nfunction gridShow(model, channel) {\n    var grid = model.axis(channel).grid;\n    if (grid !== undefined) {\n        return grid;\n    }\n    return !model.isOrdinalScale(channel) && !model.fieldDef(channel).bin;\n}\nexports.gridShow = gridShow;\nfunction grid(model, channel) {\n    if (channel === channel_1.ROW || channel === channel_1.COLUMN) {\n        return undefined;\n    }\n    return gridShow(model, channel) && ((channel === channel_1.Y || channel === channel_1.X) && !(model.parent() && model.parent().isFacet()));\n}\nexports.grid = grid;\nfunction layer(model, channel, def) {\n    var layer = model.axis(channel).layer;\n    if (layer !== undefined) {\n        return layer;\n    }\n    if (def.grid) {\n        return 'back';\n    }\n    return undefined;\n}\nexports.layer = layer;\n;\nfunction orient(model, channel) {\n    var orient = model.axis(channel).orient;\n    if (orient) {\n        return orient;\n    }\n    else if (channel === channel_1.COLUMN) {\n        return axis_1.AxisOrient.TOP;\n    }\n    return undefined;\n}\nexports.orient = orient;\nfunction ticks(model, channel) {\n    var ticks = model.axis(channel).ticks;\n    if (ticks !== undefined) {\n        return ticks;\n    }\n    if (channel === channel_1.X && !model.fieldDef(channel).bin) {\n        return 5;\n    }\n    return undefined;\n}\nexports.ticks = ticks;\nfunction tickSize(model, channel) {\n    var tickSize = model.axis(channel).tickSize;\n    if (tickSize !== undefined) {\n        return tickSize;\n    }\n    return undefined;\n}\nexports.tickSize = tickSize;\nfunction tickSizeEnd(model, channel) {\n    var tickSizeEnd = model.axis(channel).tickSizeEnd;\n    if (tickSizeEnd !== undefined) {\n        return tickSizeEnd;\n    }\n    return undefined;\n}\nexports.tickSizeEnd = tickSizeEnd;\nfunction title(model, channel) {\n    var axis = model.axis(channel);\n    if (axis.title !== undefined) {\n        return axis.title;\n    }\n    var fieldTitle = fielddef_1.title(model.fieldDef(channel), model.config());\n    var maxLength;\n    if (axis.titleMaxLength) {\n        maxLength = axis.titleMaxLength;\n    }\n    else if (channel === channel_1.X && !model.isOrdinalScale(channel_1.X)) {\n        var unitModel = model;\n        maxLength = unitModel.config().cell.width / model.axis(channel_1.X).characterWidth;\n    }\n    else if (channel === channel_1.Y && !model.isOrdinalScale(channel_1.Y)) {\n        var unitModel = model;\n        maxLength = unitModel.config().cell.height / model.axis(channel_1.Y).characterWidth;\n    }\n    return maxLength ? util_1.truncate(fieldTitle, maxLength) : fieldTitle;\n}\nexports.title = title;\nfunction titleOffset(model, channel) {\n    var titleOffset = model.axis(channel).titleOffset;\n    if (titleOffset !== undefined) {\n        return titleOffset;\n    }\n    return undefined;\n}\nexports.titleOffset = titleOffset;\nvar properties;\n(function (properties) {\n    function axis(model, channel, axisPropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.axisColor !== undefined ?\n            { stroke: { value: axis.axisColor } } :\n            {}, axis.axisWidth !== undefined ?\n            { strokeWidth: { value: axis.axisWidth } } :\n            {}, axisPropsSpec || {});\n    }\n    properties.axis = axis;\n    function grid(model, channel, gridPropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.gridColor !== undefined ? { stroke: { value: axis.gridColor } } : {}, axis.gridOpacity !== undefined ? { strokeOpacity: { value: axis.gridOpacity } } : {}, axis.gridWidth !== undefined ? { strokeWidth: { value: axis.gridWidth } } : {}, axis.gridDash !== undefined ? { strokeDashOffset: { value: axis.gridDash } } : {}, gridPropsSpec || {});\n    }\n    properties.grid = grid;\n    function labels(model, channel, labelsSpec, def) {\n        var fieldDef = model.fieldDef(channel);\n        var axis = model.axis(channel);\n        var config = model.config();\n        if (!axis.labels) {\n            return util_1.extend({\n                text: ''\n            }, labelsSpec);\n        }\n        if (util_1.contains([type_1.NOMINAL, type_1.ORDINAL], fieldDef.type) && axis.labelMaxLength) {\n            labelsSpec = util_1.extend({\n                text: {\n                    template: '{{ datum.data | truncate:' + axis.labelMaxLength + ' }}'\n                }\n            }, labelsSpec || {});\n        }\n        else if (fieldDef.type === type_1.TEMPORAL) {\n            labelsSpec = util_1.extend({\n                text: {\n                    template: common_1.timeTemplate('datum.data', fieldDef.timeUnit, axis.format, axis.shortTimeLabels, config)\n                }\n            }, labelsSpec);\n        }\n        if (axis.labelAngle !== undefined) {\n            labelsSpec.angle = { value: axis.labelAngle };\n        }\n        else {\n            if (channel === channel_1.X && (fielddef_1.isDimension(fieldDef) || fieldDef.type === type_1.TEMPORAL)) {\n                labelsSpec.angle = { value: 270 };\n            }\n        }\n        if (axis.labelAlign !== undefined) {\n            labelsSpec.align = { value: axis.labelAlign };\n        }\n        else {\n            if (labelsSpec.angle) {\n                if (labelsSpec.angle.value === 270) {\n                    labelsSpec.align = {\n                        value: def.orient === 'top' ? 'left' :\n                            def.type === 'x' ? 'right' :\n                                'center'\n                    };\n                }\n                else if (labelsSpec.angle.value === 90) {\n                    labelsSpec.align = { value: 'center' };\n                }\n            }\n        }\n        if (axis.labelBaseline !== undefined) {\n            labelsSpec.baseline = { value: axis.labelBaseline };\n        }\n        else {\n            if (labelsSpec.angle) {\n                if (labelsSpec.angle.value === 270) {\n                    labelsSpec.baseline = { value: def.type === 'x' ? 'middle' : 'bottom' };\n                }\n                else if (labelsSpec.angle.value === 90) {\n                    labelsSpec.baseline = { value: 'bottom' };\n                }\n            }\n        }\n        if (axis.tickLabelColor !== undefined) {\n            labelsSpec.stroke = { value: axis.tickLabelColor };\n        }\n        if (axis.tickLabelFont !== undefined) {\n            labelsSpec.font = { value: axis.tickLabelFont };\n        }\n        if (axis.tickLabelFontSize !== undefined) {\n            labelsSpec.fontSize = { value: axis.tickLabelFontSize };\n        }\n        return util_1.keys(labelsSpec).length === 0 ? undefined : labelsSpec;\n    }\n    properties.labels = labels;\n    function ticks(model, channel, ticksPropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.tickColor !== undefined ? { stroke: { value: axis.tickColor } } : {}, axis.tickWidth !== undefined ? { strokeWidth: { value: axis.tickWidth } } : {}, ticksPropsSpec || {});\n    }\n    properties.ticks = ticks;\n    function title(model, channel, titlePropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.titleColor !== undefined ? { stroke: { value: axis.titleColor } } : {}, axis.titleFont !== undefined ? { font: { value: axis.titleFont } } : {}, axis.titleFontSize !== undefined ? { fontSize: { value: axis.titleFontSize } } : {}, axis.titleFontWeight !== undefined ? { fontWeight: { value: axis.titleFontWeight } } : {}, titlePropsSpec || {});\n    }\n    properties.title = title;\n})(properties = exports.properties || (exports.properties = {}));\n//# sourceMappingURL=axis.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/axis.js\n// module id = HeGT\n// module chunks = 0","module.exports = {\n  ChangeSet:    require('./ChangeSet'),\n  Collector:    require('./Collector'),\n  DataSource:   require('./DataSource'),\n  Dependencies: require('./Dependencies'),\n  Graph:        require('./Graph'),\n  Node:         require('./Node'),\n  Signal:       require('./Signal'),\n  Tuple:        require('./Tuple'),\n  debug:        require('vega-logging').debug\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/index.js\n// module id = Hqva\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar axis_1 = require('../axis');\nvar channel_1 = require('../channel');\nvar config_1 = require('../config');\nvar data_1 = require('../data');\nvar encoding_1 = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar scale_1 = require('../scale');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar axis_2 = require('./axis');\nvar common_1 = require('./common');\nvar data_2 = require('./data/data');\nvar layout_1 = require('./layout');\nvar model_1 = require('./model');\nvar scale_2 = require('./scale');\nvar FacetModel = (function (_super) {\n    __extends(FacetModel, _super);\n    function FacetModel(spec, parent, parentGivenName) {\n        _super.call(this, spec, parent, parentGivenName);\n        var config = this._config = this._initConfig(spec.config, parent);\n        var child = this._child = common_1.buildModel(spec.spec, this, this.name('child'));\n        var facet = this._facet = this._initFacet(spec.facet);\n        this._scale = this._initScale(facet, config, child);\n        this._axis = this._initAxis(facet, config, child);\n    }\n    FacetModel.prototype._initConfig = function (specConfig, parent) {\n        return util_1.mergeDeep(util_1.duplicate(config_1.defaultConfig), specConfig, parent ? parent.config() : {});\n    };\n    FacetModel.prototype._initFacet = function (facet) {\n        facet = util_1.duplicate(facet);\n        var model = this;\n        encoding_1.channelMappingForEach(this.channels(), facet, function (fieldDef, channel) {\n            if (!fielddef_1.isDimension(fieldDef)) {\n                model.addWarning(channel + ' encoding should be ordinal.');\n            }\n            if (fieldDef.type) {\n                fieldDef.type = type_1.getFullName(fieldDef.type);\n            }\n        });\n        return facet;\n    };\n    FacetModel.prototype._initScale = function (facet, config, child) {\n        return [channel_1.ROW, channel_1.COLUMN].reduce(function (_scale, channel) {\n            if (facet[channel]) {\n                var scaleSpec = facet[channel].scale || {};\n                _scale[channel] = util_1.extend({\n                    type: scale_1.ScaleType.ORDINAL,\n                    round: config.facet.scale.round,\n                    padding: (channel === channel_1.ROW && child.has(channel_1.Y)) || (channel === channel_1.COLUMN && child.has(channel_1.X)) ?\n                        config.facet.scale.padding : 0\n                }, scaleSpec);\n            }\n            return _scale;\n        }, {});\n    };\n    FacetModel.prototype._initAxis = function (facet, config, child) {\n        return [channel_1.ROW, channel_1.COLUMN].reduce(function (_axis, channel) {\n            if (facet[channel]) {\n                var axisSpec = facet[channel].axis;\n                if (axisSpec !== false) {\n                    var modelAxis = _axis[channel] = util_1.extend({}, config.facet.axis, axisSpec === true ? {} : axisSpec || {});\n                    if (channel === channel_1.ROW) {\n                        var yAxis = child.axis(channel_1.Y);\n                        if (yAxis && yAxis.orient !== axis_1.AxisOrient.RIGHT && !modelAxis.orient) {\n                            modelAxis.orient = axis_1.AxisOrient.RIGHT;\n                        }\n                        if (child.has(channel_1.X) && !modelAxis.labelAngle) {\n                            modelAxis.labelAngle = modelAxis.orient === axis_1.AxisOrient.RIGHT ? 90 : 270;\n                        }\n                    }\n                }\n            }\n            return _axis;\n        }, {});\n    };\n    FacetModel.prototype.facet = function () {\n        return this._facet;\n    };\n    FacetModel.prototype.has = function (channel) {\n        return !!this._facet[channel];\n    };\n    FacetModel.prototype.child = function () {\n        return this._child;\n    };\n    FacetModel.prototype.hasSummary = function () {\n        var summary = this.component.data.summary;\n        for (var i = 0; i < summary.length; i++) {\n            if (util_1.keys(summary[i].measures).length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    FacetModel.prototype.dataTable = function () {\n        return (this.hasSummary() ? data_1.SUMMARY : data_1.SOURCE) + '';\n    };\n    FacetModel.prototype.fieldDef = function (channel) {\n        return this.facet()[channel];\n    };\n    FacetModel.prototype.stack = function () {\n        return null;\n    };\n    FacetModel.prototype.parseData = function () {\n        this.child().parseData();\n        this.component.data = data_2.parseFacetData(this);\n    };\n    FacetModel.prototype.parseSelectionData = function () {\n    };\n    FacetModel.prototype.parseLayoutData = function () {\n        this.child().parseLayoutData();\n        this.component.layout = layout_1.parseFacetLayout(this);\n    };\n    FacetModel.prototype.parseScale = function () {\n        var child = this.child();\n        var model = this;\n        child.parseScale();\n        var scaleComponent = this.component.scale = scale_2.parseScaleComponent(this);\n        util_1.keys(child.component.scale).forEach(function (channel) {\n            if (true) {\n                scaleComponent[channel] = child.component.scale[channel];\n                util_1.vals(scaleComponent[channel]).forEach(function (scale) {\n                    var scaleNameWithoutPrefix = scale.name.substr(child.name('').length);\n                    var newName = model.scaleName(scaleNameWithoutPrefix);\n                    child.renameScale(scale.name, newName);\n                    scale.name = newName;\n                });\n                delete child.component.scale[channel];\n            }\n        });\n    };\n    FacetModel.prototype.parseMark = function () {\n        this.child().parseMark();\n        this.component.mark = util_1.extend({\n            name: this.name('cell'),\n            type: 'group',\n            from: util_1.extend(this.dataTable() ? { data: this.dataTable() } : {}, {\n                transform: [{\n                        type: 'facet',\n                        groupby: [].concat(this.has(channel_1.ROW) ? [this.field(channel_1.ROW)] : [], this.has(channel_1.COLUMN) ? [this.field(channel_1.COLUMN)] : [])\n                    }]\n            }),\n            properties: {\n                update: getFacetGroupProperties(this)\n            }\n        }, this.child().assembleGroup());\n    };\n    FacetModel.prototype.parseAxis = function () {\n        this.child().parseAxis();\n        this.component.axis = axis_2.parseAxisComponent(this, [channel_1.ROW, channel_1.COLUMN]);\n    };\n    FacetModel.prototype.parseAxisGroup = function () {\n        var xAxisGroup = parseAxisGroup(this, channel_1.X);\n        var yAxisGroup = parseAxisGroup(this, channel_1.Y);\n        this.component.axisGroup = util_1.extend(xAxisGroup ? { x: xAxisGroup } : {}, yAxisGroup ? { y: yAxisGroup } : {});\n    };\n    FacetModel.prototype.parseGridGroup = function () {\n        var child = this.child();\n        this.component.gridGroup = util_1.extend(!child.has(channel_1.X) && this.has(channel_1.COLUMN) ? { column: getColumnGridGroups(this) } : {}, !child.has(channel_1.Y) && this.has(channel_1.ROW) ? { row: getRowGridGroups(this) } : {});\n    };\n    FacetModel.prototype.parseLegend = function () {\n        this.child().parseLegend();\n        this.component.legend = this._child.component.legend;\n        this._child.component.legend = {};\n    };\n    FacetModel.prototype.assembleParentGroupProperties = function () {\n        return null;\n    };\n    FacetModel.prototype.assembleData = function (data) {\n        data_2.assembleData(this, data);\n        return this._child.assembleData(data);\n    };\n    FacetModel.prototype.assembleLayout = function (layoutData) {\n        this._child.assembleLayout(layoutData);\n        return layout_1.assembleLayout(this, layoutData);\n    };\n    FacetModel.prototype.assembleMarks = function () {\n        return [].concat(util_1.vals(this.component.axisGroup), util_1.flatten(util_1.vals(this.component.gridGroup)), this.component.mark);\n    };\n    FacetModel.prototype.channels = function () {\n        return [channel_1.ROW, channel_1.COLUMN];\n    };\n    FacetModel.prototype.mapping = function () {\n        return this.facet();\n    };\n    FacetModel.prototype.isFacet = function () {\n        return true;\n    };\n    return FacetModel;\n}(model_1.Model));\nexports.FacetModel = FacetModel;\nfunction getFacetGroupProperties(model) {\n    var child = model.child();\n    var mergedCellConfig = util_1.extend({}, child.config().cell, child.config().facet.cell);\n    return util_1.extend({\n        x: model.has(channel_1.COLUMN) ? {\n            scale: model.scaleName(channel_1.COLUMN),\n            field: model.field(channel_1.COLUMN),\n            offset: model.scale(channel_1.COLUMN).padding / 2\n        } : { value: model.config().facet.scale.padding / 2 },\n        y: model.has(channel_1.ROW) ? {\n            scale: model.scaleName(channel_1.ROW),\n            field: model.field(channel_1.ROW),\n            offset: model.scale(channel_1.ROW).padding / 2\n        } : { value: model.config().facet.scale.padding / 2 },\n        width: { field: { parent: model.child().sizeName('width') } },\n        height: { field: { parent: model.child().sizeName('height') } }\n    }, child.assembleParentGroupProperties(mergedCellConfig));\n}\nfunction parseAxisGroup(model, channel) {\n    var axisGroup = null;\n    var child = model.child();\n    if (child.has(channel)) {\n        if (child.axis(channel)) {\n            if (true) {\n                axisGroup = channel === channel_1.X ? getXAxesGroup(model) : getYAxesGroup(model);\n                if (child.axis(channel) && axis_2.gridShow(child, channel)) {\n                    child.component.axis[channel] = axis_2.parseInnerAxis(channel, child);\n                }\n                else {\n                    delete child.component.axis[channel];\n                }\n            }\n            else {\n            }\n        }\n    }\n    return axisGroup;\n}\nfunction getXAxesGroup(model) {\n    var hasCol = model.has(channel_1.COLUMN);\n    return util_1.extend({\n        name: model.name('x-axes'),\n        type: 'group'\n    }, hasCol ? {\n        from: {\n            data: model.dataTable(),\n            transform: [{\n                    type: 'aggregate',\n                    groupby: [model.field(channel_1.COLUMN)],\n                    summarize: { '*': ['count'] }\n                }]\n        }\n    } : {}, {\n        properties: {\n            update: {\n                width: { field: { parent: model.child().sizeName('width') } },\n                height: {\n                    field: { group: 'height' }\n                },\n                x: hasCol ? {\n                    scale: model.scaleName(channel_1.COLUMN),\n                    field: model.field(channel_1.COLUMN),\n                    offset: model.scale(channel_1.COLUMN).padding / 2\n                } : {\n                    value: model.config().facet.scale.padding / 2\n                }\n            }\n        },\n        axes: [axis_2.parseAxis(channel_1.X, model.child())]\n    });\n}\nfunction getYAxesGroup(model) {\n    var hasRow = model.has(channel_1.ROW);\n    return util_1.extend({\n        name: model.name('y-axes'),\n        type: 'group'\n    }, hasRow ? {\n        from: {\n            data: model.dataTable(),\n            transform: [{\n                    type: 'aggregate',\n                    groupby: [model.field(channel_1.ROW)],\n                    summarize: { '*': ['count'] }\n                }]\n        }\n    } : {}, {\n        properties: {\n            update: {\n                width: {\n                    field: { group: 'width' }\n                },\n                height: { field: { parent: model.child().sizeName('height') } },\n                y: hasRow ? {\n                    scale: model.scaleName(channel_1.ROW),\n                    field: model.field(channel_1.ROW),\n                    offset: model.scale(channel_1.ROW).padding / 2\n                } : {\n                    value: model.config().facet.scale.padding / 2\n                }\n            }\n        },\n        axes: [axis_2.parseAxis(channel_1.Y, model.child())]\n    });\n}\nfunction getRowGridGroups(model) {\n    var facetGridConfig = model.config().facet.grid;\n    var rowGrid = {\n        name: model.name('row-grid'),\n        type: 'rule',\n        from: {\n            data: model.dataTable(),\n            transform: [{ type: 'facet', groupby: [model.field(channel_1.ROW)] }]\n        },\n        properties: {\n            update: {\n                y: {\n                    scale: model.scaleName(channel_1.ROW),\n                    field: model.field(channel_1.ROW)\n                },\n                x: { value: 0, offset: -facetGridConfig.offset },\n                x2: { field: { group: 'width' }, offset: facetGridConfig.offset },\n                stroke: { value: facetGridConfig.color },\n                strokeOpacity: { value: facetGridConfig.opacity },\n                strokeWidth: { value: 0.5 }\n            }\n        }\n    };\n    return [rowGrid, {\n            name: model.name('row-grid-end'),\n            type: 'rule',\n            properties: {\n                update: {\n                    y: { field: { group: 'height' } },\n                    x: { value: 0, offset: -facetGridConfig.offset },\n                    x2: { field: { group: 'width' }, offset: facetGridConfig.offset },\n                    stroke: { value: facetGridConfig.color },\n                    strokeOpacity: { value: facetGridConfig.opacity },\n                    strokeWidth: { value: 0.5 }\n                }\n            }\n        }];\n}\nfunction getColumnGridGroups(model) {\n    var facetGridConfig = model.config().facet.grid;\n    var columnGrid = {\n        name: model.name('column-grid'),\n        type: 'rule',\n        from: {\n            data: model.dataTable(),\n            transform: [{ type: 'facet', groupby: [model.field(channel_1.COLUMN)] }]\n        },\n        properties: {\n            update: {\n                x: {\n                    scale: model.scaleName(channel_1.COLUMN),\n                    field: model.field(channel_1.COLUMN)\n                },\n                y: { value: 0, offset: -facetGridConfig.offset },\n                y2: { field: { group: 'height' }, offset: facetGridConfig.offset },\n                stroke: { value: facetGridConfig.color },\n                strokeOpacity: { value: facetGridConfig.opacity },\n                strokeWidth: { value: 0.5 }\n            }\n        }\n    };\n    return [columnGrid, {\n            name: model.name('column-grid-end'),\n            type: 'rule',\n            properties: {\n                update: {\n                    x: { field: { group: 'width' } },\n                    y: { value: 0, offset: -facetGridConfig.offset },\n                    y2: { field: { group: 'height' }, offset: facetGridConfig.offset },\n                    stroke: { value: facetGridConfig.color },\n                    strokeOpacity: { value: facetGridConfig.opacity },\n                    strokeWidth: { value: 0.5 }\n                }\n            }\n        }];\n}\n//# sourceMappingURL=facet.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/facet.js\n// module id = ISRz\n// module chunks = 0","var ts = Date.now();\n\nfunction write(msg) {\n  console.log('[Vega Log]', msg);\n}\n\nfunction error(msg) {\n  console.error('[Vega Err]', msg);\n}\n\nfunction debug(input, args) {\n  if (!debug.enable) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  var state = {\n    prevTime:  Date.now() - ts,\n    stamp: input.stamp\n  };\n\n  if (input.add) {\n    state.add = input.add.length;\n    state.mod = input.mod.length;\n    state.rem = input.rem.length;\n    state.reflow = !!input.reflow;\n  }\n\n  log.apply(console, (args.push(JSON.stringify(state)), args));\n  ts = Date.now();\n}\n\nmodule.exports = {\n  log:   write,\n  error: error,\n  debug: (debug.enable = false, debug)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-logging/index.js\n// module id = J731\n// module chunks = 0","var ChangeSet = require('./ChangeSet'),\n    Node = require('./Node'), // jshint ignore:line\n    Base = Node.prototype;\n\nfunction Signal(graph, name, initialValue) {\n  Base.init.call(this, graph);\n  this._name  = name;\n  this._value = initialValue;\n  this._verbose = false; // Verbose signals re-pulse the graph even if prev === val.\n  this._handlers = [];\n  return this;\n}\n\nvar prototype = (Signal.prototype = Object.create(Base));\nprototype.constructor = Signal;\n\nprototype.name = function() {\n  return this._name;\n};\n\nprototype.value = function(val) {\n  if (!arguments.length) return this._value;\n  return (this._value = val, this);\n};\n\n// Alias to value, for shared API with DataSource\nprototype.values = prototype.value;\n\nprototype.verbose = function(v) {\n  if (!arguments.length) return this._verbose;\n  return (this._verbose = !!v, this);\n};\n\nprototype.evaluate = function(input) {\n  return input.signals[this._name] ? input : this._graph.doNotPropagate;\n};\n\nprototype.fire = function(cs) {\n  if (!cs) cs = ChangeSet.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nprototype.on = function(handler) {\n  var signal = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    handler(signal.name(), signal.value());\n    return input;\n  };\n\n  this._handlers.push({\n    handler: handler,\n    node: node\n  });\n\n  return this.addListener(node);\n};\n\nprototype.off = function(handler) {\n  var h = this._handlers, i, x;\n\n  for (i=h.length; --i>=0;) {\n    if (!handler || h[i].handler === handler) {\n      x = h.splice(i, 1)[0];\n      this.removeListener(x.node);\n    }\n  }\n\n  return this;\n};\n\nmodule.exports = Signal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Signal.js\n// module id = KMnl\n// module chunks = 0","function Heap(comparator) {\n  this.cmp = comparator;\n  this.nodes = [];\n}\n\nvar prototype = Heap.prototype;\n\nprototype.size = function() {\n  return this.nodes.length;\n};\n\nprototype.clear = function() {\n  return (this.nodes = [], this);\n};\n\nprototype.peek = function() {\n  return this.nodes[0];\n};\n\nprototype.push = function(x) {\n  var array = this.nodes;\n  array.push(x);\n  return _siftdown(array, 0, array.length-1, this.cmp);\n};\n\nprototype.pop = function() {\n  var array = this.nodes,\n      last = array.pop(),\n      item;\n\n  if (array.length) {\n    item = array[0];\n    array[0] = last;\n    _siftup(array, 0, this.cmp);\n  } else {\n    item = last;\n  }\n  return item;\n};\n\nprototype.replace = function(item) {\n  var array = this.nodes,\n      retval = array[0];\n  array[0] = item;\n  _siftup(array, 0, this.cmp);\n  return retval;\n};\n\nprototype.pushpop = function(item) {\n  var array = this.nodes, ref = array[0];\n  if (array.length && this.cmp(ref, item) < 0) {\n    array[0] = item;\n    item = ref;\n    _siftup(array, 0, this.cmp);\n  }\n  return item;\n};\n\nfunction _siftdown(array, start, idx, cmp) {\n  var item, parent, pidx;\n\n  item = array[idx];\n  while (idx > start) {\n    pidx = (idx - 1) >> 1;\n    parent = array[pidx];\n    if (cmp(item, parent) < 0) {\n      array[idx] = parent;\n      idx = pidx;\n      continue;\n    }\n    break;\n  }\n  return (array[idx] = item);\n}\n\nfunction _siftup(array, idx, cmp) {\n  var start = idx,\n      end = array.length,\n      item = array[idx],\n      cidx = 2 * idx + 1, ridx;\n\n  while (cidx < end) {\n    ridx = cidx + 1;\n    if (ridx < end && cmp(array[cidx], array[ridx]) >= 0) {\n      cidx = ridx;\n    }\n    array[idx] = array[cidx];\n    idx = cidx;\n    cidx = 2 * idx + 1;\n  }\n  array[idx] = item;\n  return _siftdown(array, start, idx, cmp);\n}\n\nmodule.exports = Heap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Heap.js\n// module id = KfF0\n// module chunks = 0","module.exports = {\n  path:       require('./path'),\n  render:     require('./render'),\n  Item:       require('./util/Item'),\n  bound:      require('./util/bound'),\n  Bounds:     require('./util/Bounds'),\n  canvas:     require('./util/canvas'),\n  Gradient:   require('./util/Gradient'),\n  toJSON:     require('./util/scene').toJSON,\n  fromJSON:   require('./util/scene').fromJSON\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/index.js\n// module id = LHV8\n// module chunks = 0","var d3 = require('d3'),\n    bound = require('vega-scenegraph').bound,\n    Tuple = require('vega-dataflow').Tuple,\n    Status = require('./Builder').STATUS;\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease('cubic-in-out');\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  'text': 1,\n  'url':  1\n};\n\nprototype.interpolate = function(item, values) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];\n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        Tuple.set(item, key, next);\n      } else if (typeof curr === 'number' && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        Tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === Status.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === Status.EXIT) {\n      // Only mark item as exited when it is removed.\n      curr.item.status = Status.UPDATE;\n      curr.remove = true;\n    }\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    bound.item(item);\n\n    if (f === 1) {\n      if (curr.remove) {\n        item.status = Status.EXIT;\n        item.remove();\n      }\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n}\n\nmodule.exports = Transition;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Transition.js\n// module id = Lp/H\n// module chunks = 0","module.exports = {\n  size:   [{signal: 'width'}, {signal: 'height'}],\n  mid:    [{expr: 'width/2'}, {expr: 'height/2'}],\n  extent: [\n    {expr: '[-padding.left, -padding.top]'},\n    {expr: '[width+padding.right, height+padding.bottom]'}\n  ]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/screen.js\n// module id = MRce\n// module chunks = 0","module.exports = {\n  'NaN':     'NaN',\n  'E':       'Math.E',\n  'LN2':     'Math.LN2',\n  'LN10':    'Math.LN10',\n  'LOG2E':   'Math.LOG2E',\n  'LOG10E':  'Math.LOG10E',\n  'PI':      'Math.PI',\n  'SQRT1_2': 'Math.SQRT1_2',\n  'SQRT2':   'Math.SQRT2'\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-expression/src/constants.js\n// module id = MSrK\n// module chunks = 0","var df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: 'array<field>'}\n  });\n\n  this._output = {key: 'key', value: 'value'};\n  this._cache = {};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Fold.prototype = Object.create(Transform.prototype));\nprototype.constructor = Fold;\n\nprototype._reset = function(input, output) {\n  for (var id in this._cache) {\n    output.rem.push.apply(output.rem, this._cache[id]);\n  }\n  this._cache = {};\n};\n\nprototype._tuple = function(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] ? Tuple.rederive(x, list[i]) : (list[i] = Tuple.derive(x));\n};\n\nprototype._fn = function(data, on, out) {\n  var i, j, n, m, d, t;\n  for (i=0, n=data.length; i<n; ++i) {\n    d = data[i];\n    for (j=0, m=on.field.length; j<m; ++j) {\n      t = this._tuple(d, j, m);\n      Tuple.set(t, this._output.key, on.field[j]);\n      Tuple.set(t, this._output.value, on.accessor[j](d));\n      out.push(t);\n    }\n  }\n};\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['folding']);\n\n  var fold = this,\n      on = this.param('fields'),\n      output = df.ChangeSet.create(input);\n\n  if (reset) this._reset(input, output);\n\n  this._fn(input.add, on, output.add);\n  this._fn(input.mod, on, reset ? output.add : output.mod);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if (input.add.length || input.rem.length ||\n      on.field.some(function(f) { return !!input.fields[f]; })) {\n    output.fields[this._output.key] = 1;\n    output.fields[this._output.value] = 1;\n  }\n  return output;\n};\n\nmodule.exports = Fold;\n\nFold.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Fold transform\",\n  \"description\": \"Collapse (\\\"fold\\\") one or more data properties into two properties.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"fold\"]},\n    \"fields\": {\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"description\": \"An array of field references indicating the data properties to fold.\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"key\": {\"type\": \"string\", \"default\": \"key\"},\n        \"value\": {\"type\": \"string\", \"default\": \"value\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"fields\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Fold.js\n// module id = MZ+b\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar fielddef_1 = require('../fielddef');\nvar sort_1 = require('../sort');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar facet_1 = require('./facet');\nvar layer_1 = require('./layer');\nvar timeunit_1 = require('../timeunit');\nvar unit_1 = require('./unit');\nvar spec_1 = require('../spec');\nfunction buildModel(spec, parent, parentGivenName) {\n    if (spec_1.isFacetSpec(spec)) {\n        return new facet_1.FacetModel(spec, parent, parentGivenName);\n    }\n    if (spec_1.isLayerSpec(spec)) {\n        return new layer_1.LayerModel(spec, parent, parentGivenName);\n    }\n    if (spec_1.isUnitSpec(spec)) {\n        return new unit_1.UnitModel(spec, parent, parentGivenName);\n    }\n    console.error('Invalid spec.');\n    return null;\n}\nexports.buildModel = buildModel;\nexports.STROKE_CONFIG = ['stroke', 'strokeWidth',\n    'strokeDash', 'strokeDashOffset', 'strokeOpacity', 'opacity'];\nexports.FILL_CONFIG = ['fill', 'fillOpacity',\n    'opacity'];\nexports.FILL_STROKE_CONFIG = util_1.union(exports.STROKE_CONFIG, exports.FILL_CONFIG);\nfunction applyColorAndOpacity(p, model) {\n    var filled = model.config().mark.filled;\n    var colorFieldDef = model.fieldDef(channel_1.COLOR);\n    var opacityFieldDef = model.fieldDef(channel_1.OPACITY);\n    if (filled) {\n        applyMarkConfig(p, model, exports.FILL_CONFIG);\n    }\n    else {\n        applyMarkConfig(p, model, exports.STROKE_CONFIG);\n    }\n    var colorValue;\n    var opacityValue;\n    if (model.has(channel_1.COLOR)) {\n        colorValue = {\n            scale: model.scaleName(channel_1.COLOR),\n            field: model.field(channel_1.COLOR, colorFieldDef.type === type_1.ORDINAL ? { prefn: 'rank_' } : {})\n        };\n    }\n    else if (colorFieldDef && colorFieldDef.value) {\n        colorValue = { value: colorFieldDef.value };\n    }\n    if (model.has(channel_1.OPACITY)) {\n        opacityValue = {\n            scale: model.scaleName(channel_1.OPACITY),\n            field: model.field(channel_1.OPACITY, opacityFieldDef.type === type_1.ORDINAL ? { prefn: 'rank_' } : {})\n        };\n    }\n    else if (opacityFieldDef && opacityFieldDef.value) {\n        opacityValue = { value: opacityFieldDef.value };\n    }\n    if (colorValue !== undefined) {\n        if (filled) {\n            p.fill = colorValue;\n        }\n        else {\n            p.stroke = colorValue;\n        }\n    }\n    else {\n        p[filled ? 'fill' : 'stroke'] = p[filled ? 'fill' : 'stroke'] ||\n            { value: model.config().mark.color };\n    }\n    if (opacityValue !== undefined) {\n        p.opacity = opacityValue;\n    }\n}\nexports.applyColorAndOpacity = applyColorAndOpacity;\nfunction applyConfig(properties, config, propsList) {\n    propsList.forEach(function (property) {\n        var value = config[property];\n        if (value !== undefined) {\n            properties[property] = { value: value };\n        }\n    });\n    return properties;\n}\nexports.applyConfig = applyConfig;\nfunction applyMarkConfig(marksProperties, model, propsList) {\n    return applyConfig(marksProperties, model.config().mark, propsList);\n}\nexports.applyMarkConfig = applyMarkConfig;\nfunction numberFormat(fieldDef, format, config) {\n    if (fieldDef.type === type_1.QUANTITATIVE && !fieldDef.bin) {\n        return format || config.numberFormat;\n    }\n    return undefined;\n}\nexports.numberFormat = numberFormat;\nfunction sortField(orderChannelDef) {\n    return (orderChannelDef.sort === sort_1.SortOrder.DESCENDING ? '-' : '') +\n        fielddef_1.field(orderChannelDef, { binSuffix: '_mid' });\n}\nexports.sortField = sortField;\nfunction timeTemplate(templateField, timeUnit, format, shortTimeLabels, config) {\n    if (!timeUnit || format) {\n        var _format = format || config.timeFormat;\n        return '{{' + templateField + ' | time:\\'' + _format + '\\'}}';\n    }\n    else {\n        return timeunit_1.template(timeUnit, templateField, shortTimeLabels);\n    }\n}\nexports.timeTemplate = timeTemplate;\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/common.js\n// module id = MtYt\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    df = require('vega-dataflow'),\n    log = require('vega-logging'),\n    Node = df.Node, // jshint ignore:line\n    Deps = df.Dependencies,\n    Aggregate = require('../transforms/Aggregate');\n\nvar Properties = {\n  width: 1,\n  height: 1\n};\n\nvar Types = {\n  LINEAR: 'linear',\n  ORDINAL: 'ordinal',\n  LOG: 'log',\n  POWER: 'pow',\n  SQRT: 'sqrt',\n  TIME: 'time',\n  TIME_UTC: 'utc',\n  QUANTILE: 'quantile',\n  QUANTIZE: 'quantize',\n  THRESHOLD: 'threshold'\n};\n\nvar DataRef = {\n  DOMAIN: 'domain',\n  RANGE: 'range',\n\n  COUNT: 'count',\n  GROUPBY: 'groupby',\n  MIN: 'min',\n  MAX: 'max',\n  VALUE: 'value',\n\n  ASC: 'asc',\n  DESC: 'desc'\n};\n\nfunction Scale(graph, def, parent) {\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, graph).reflows(true);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times.\n  if (this._updated) {\n    input.scales[this._def.name] = 1;\n    log.debug(input, [\"scale\", this._def.name]);\n  }\n  return df.ChangeSet.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    var method = (type === Deps.DATA ? 'data' : 'signal');\n    deps = dl.array(deps);\n    for (var i=0, len=deps.length; i<len; ++i) {\n      this._graph[method](deps[i]).addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + ':prev',\n      s = instance.call(this, group.scale(name)),\n      m = s.type===Types.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var config = this._graph.config(),\n      type = this._def.type || Types.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) throw Error('Unrecognized scale type: ' + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      dataDrivenRange = false,\n      pad = signal.call(this, def.padding) || 0,\n      outer  = def.outerPadding == null ? pad : signal.call(this, def.outerPadding),\n      points = def.points && signal.call(this, def.points),\n      round  = signal.call(this, def.round) || def.round == null,\n      domain, str, spatial=true;\n\n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, DataRef.RANGE, def.range, scale, group);\n  }\n\n  // domain\n  domain = dataRef.call(this, DataRef.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  }\n\n  // range\n  if (!dl.equal(prev.range, rng)) {\n    // width-defined range\n    if (def.bandSize) {\n      var bw = signal.call(this, def.bandSize),\n          len = domain.length,\n          space = def.points ? (pad*bw) : (pad*bw*(len-1) + 2*outer),\n          start;\n      if (rng[0] > rng[1]) {\n        start = rng[1] || 0;\n        rng = [start + (bw * len + space), start];\n      } else {\n        start = rng[0] || 0;\n        rng = [start, start + (bw * len + space)];\n      }\n\n      if (def.reverse) rng = rng.reverse();\n    }\n\n    str = typeof rng[0] === 'string';\n    if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n      scale.range(rng); // color or shape values\n      spatial = false;\n    } else if (points && round) {\n      scale.rangeRoundPoints(rng, pad);\n    } else if (points) {\n      scale.rangePoints(rng, pad);\n    } else if (round) {\n      scale.rangeRoundBands(rng, pad, outer);\n    } else {\n      scale.rangeBands(rng, pad, outer);\n    }\n\n    prev.range = rng;\n    this._updated = true;\n  }\n\n  if (!scale.invert && spatial) invertOrdinal(scale);\n}\n\n// \"Polyfill\" ordinal scale inversion. Currently, only ordinal scales\n// with ordered numeric ranges are supported.\nvar bisect = d3.bisector(dl.numcmp).right,\n    findAsc = function(a, x) { return bisect(a,x) - 1; },\n    findDsc = d3.bisector(function(a,b) { return -1 * dl.numcmp(a,b); }).left;\n\nfunction invertOrdinal(scale) {\n  scale.invert = function(x, y) {\n    var rng = scale.range(),\n        asc = rng[0] < rng[1],\n        find = asc ? findAsc : findDsc;\n\n    if (arguments.length === 1) {\n      if (!dl.isNumber(x)) {\n        throw Error('Ordinal scale inversion is only supported for numeric input ('+x+').');\n      }\n      return scale.domain()[find(rng, x)];\n\n    } else if (arguments.length === 2) {  // Invert extents\n      if (!dl.isNumber(x) || !dl.isNumber(y)) {\n        throw Error('Extents to ordinal invert are not numbers ('+x+', '+y+').');\n      }\n\n      var domain = scale.domain(),\n          a = find(rng, x),\n          b = find(rng, y),\n          n = rng.length - 1, r;\n      if (b < a) { r = a; a = b; b = a; } // ensure a <= b\n      if (a < 0) a = 0;\n      if (b > n) b = n;\n\n      return (asc ? dl.range(a, b+1) : dl.range(b, a-1, -1))\n        .map(function(i) { return domain[i]; });\n    }\n  };\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      round = signal.call(this, def.round),\n      exponent = signal.call(this, def.exponent),\n      clamp = signal.call(this, def.clamp),\n      nice = signal.call(this, def.nice),\n      domain, interval;\n\n  // domain\n  domain = (def.type === Types.QUANTILE) ?\n    dataRef.call(this, DataRef.DOMAIN, def.domain, scale, group) :\n    domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  }\n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (signal.call(this, def.range) === 'height') rng = rng.reverse();\n  if (rng && !dl.equal(prev.range, rng)) {\n    scale[round && scale.rangeRound ? 'rangeRound' : 'range'](rng);\n    prev.range = rng;\n    this._updated = true;\n  }\n\n  if (exponent && def.type===Types.POWER) scale.exponent(exponent);\n  if (clamp) scale.clamp(true);\n  if (nice) {\n    if (def.type === Types.TIME) {\n      interval = d3.time[nice];\n      if (!interval) log.error('Unrecognized interval: ' + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction isUniques(scale) {\n  return scale.type === Types.ORDINAL || scale.type === Types.QUANTILE;\n}\n\nfunction getRefs(def) {\n  return def.fields || dl.array(def);\n}\n\nfunction inherits(refs) {\n  return refs.some(function(r) {\n    if (!r.data) return true;\n    return r.data && dl.array(r.field).some(function(f) {\n      return f.parent;\n    });\n  });\n}\n\nfunction getFields(ref, group) {\n  return dl.array(ref.field).map(function(f) {\n    return f.parent ?\n      dl.accessor(f.parent)(group.datum) :\n      f; // String or {'signal'}\n  });\n}\n\n// Scale datarefs can be computed over multiple schema types.\n// This function determines the type of aggregator created, and\n// what data is sent to it: values, tuples, or multi-tuples that must\n// be standardized into a consistent schema.\nfunction aggrType(def, scale) {\n  var refs = getRefs(def);\n\n  // If we're operating over only a single domain, send full tuples\n  // through for efficiency (fewer accessor creations/calls)\n  if (refs.length == 1 && dl.array(refs[0].field).length == 1) {\n    return Aggregate.TYPES.TUPLE;\n  }\n\n  // With quantitative scales, we only care about min/max.\n  if (!isUniques(scale)) return Aggregate.TYPES.VALUE;\n\n  // If we don't sort, then we can send values directly to aggrs as well\n  if (!dl.isObject(def.sort)) return Aggregate.TYPES.VALUE;\n\n  return Aggregate.TYPES.MULTI;\n}\n\nfunction getCache(which, def, scale, group) {\n  var refs = getRefs(def),\n      inherit = inherits(refs),\n      atype = aggrType(def, scale),\n      uniques = isUniques(scale),\n      sort = def.sort,\n      ck = '_'+which,\n      fields = getFields(refs[0], group);\n\n  if (scale[ck] || this[ck]) return scale[ck] || this[ck];\n\n  var cache = new Aggregate(this._graph).type(atype),\n      groupby, summarize;\n\n  // If a scale's dataref doesn't inherit data from the group, we can\n  // store the dataref aggregator at the Scale (dataflow node) level.\n  if (inherit) {\n    scale[ck] = cache;\n  } else {\n    this[ck]  = cache;\n  }\n\n  if (uniques) {\n    if (atype === Aggregate.TYPES.VALUE) {\n      groupby = [{ name: DataRef.GROUPBY, get: dl.identity }];\n      summarize = {'*': DataRef.COUNT};\n    } else if (atype === Aggregate.TYPES.TUPLE) {\n      groupby = [{ name: DataRef.GROUPBY, get: dl.$(fields[0]) }];\n      summarize = dl.isObject(sort) ? [{\n        field: DataRef.VALUE,\n        get:  dl.$(sort.field),\n        ops: [sort.op]\n      }] : {'*': DataRef.COUNT};\n    } else {  // atype === Aggregate.TYPES.MULTI\n      groupby   = DataRef.GROUPBY;\n      summarize = [{ field: DataRef.VALUE, ops: [sort.op] }];\n    }\n  } else {\n    groupby = [];\n    summarize = [{\n      field: DataRef.VALUE,\n      get: (atype == Aggregate.TYPES.TUPLE) ? dl.$(fields[0]) : dl.identity,\n      ops: [DataRef.MIN, DataRef.MAX],\n      as:  [DataRef.MIN, DataRef.MAX]\n    }];\n  }\n\n  cache.param('groupby', groupby)\n    .param('summarize', summarize);\n\n  return (cache._lastUpdate = -1, cache);\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = getRefs(def),\n      inherit = inherits(refs),\n      atype = aggrType(def, scale),\n      cache = getCache.apply(this, arguments),\n      sort  = def.sort,\n      uniques = isUniques(scale),\n      i, rlen, j, flen, ref, fields, field, data, from, cmp;\n\n  function addDep(s) {\n    self.dependency(Deps.SIGNALS, s);\n  }\n\n  if (inherit || (!inherit && cache._lastUpdate < this._stamp)) {\n    for (i=0, rlen=refs.length; i<rlen; ++i) {\n      ref = refs[i];\n      from = ref.data || group.datum._facetID;\n      data = graph.data(from).last();\n\n      if (data.stamp <= this._stamp) continue;\n\n      fields = getFields(ref, group);\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        field = fields[j];\n\n        if (atype === Aggregate.TYPES.VALUE) {\n          cache.accessors(null, field);\n        } else if (atype === Aggregate.TYPES.MULTI) {\n          cache.accessors(field, ref.sort || sort.field);\n        } // Else (Tuple-case) is handled by the aggregator accessors by default\n\n        cache.evaluate(data);\n      }\n\n      this.dependency(Deps.DATA, from);\n      cache.dependency(Deps.SIGNALS).forEach(addDep);\n    }\n\n    cache._lastUpdate = this._stamp;\n\n    data = cache.aggr().result();\n    if (uniques) {\n      if (dl.isObject(sort)) {\n        cmp = sort.op + '_' + DataRef.VALUE;\n        cmp = dl.comparator(cmp);\n      } else if (sort === true) {\n        cmp = dl.comparator(DataRef.GROUPBY);\n      }\n\n      if (cmp) data = data.sort(cmp);\n      cache._values = data.map(function(d) { return d[DataRef.GROUPBY]; });\n    } else {\n      data = data[0];\n      cache._values = !dl.isValid(data) ? [] : [data[DataRef.MIN], data[DataRef.MAX]];\n    }\n  }\n\n  return cache._values;\n}\n\nfunction signal(v) {\n  if (!v || !v.signal) return v;\n  var s = v.signal, ref;\n  this.dependency(Deps.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], s, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, DataRef.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = dl.isValid(s=signal.call(this, def.domainMin)) ? s : domain[0];\n      } else {\n        domain[0] = dataRef.call(this, DataRef.DOMAIN+DataRef.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = dl.isValid(s=signal.call(this, def.domainMax)) ? s : domain[z];\n      } else {\n        domain[z] = dataRef.call(this, DataRef.DOMAIN+DataRef.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== Types.LOG && def.type !== Types.TIME && def.type !== Types.TIME_UTC && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      config = this._graph.config(),\n      rangeVal = signal.call(this, def.range),\n      rng = [null, null];\n\n  if (rangeVal !== undefined) {\n    if (typeof rangeVal === 'string') {\n      if (Properties[rangeVal]) {\n        rng = [0, group[rangeVal]];\n      } else if (config.range[rangeVal]) {\n        rng = config.range[rangeVal];\n      } else {\n        log.error('Unrecogized range: ' + rangeVal);\n        return rng;\n      }\n    } else if (dl.isArray(rangeVal)) {\n      rng = dl.duplicate(rangeVal).map(signal.bind(this));\n    } else if (dl.isObject(rangeVal)) {\n      return null; // early exit\n    } else {\n      rng = [0, rangeVal];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ?\n      signal.call(this, def.rangeMin) :\n      def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ?\n      signal.call(this, def.rangeMax) :\n      def.rangeMax;\n  }\n\n  if (def.reverse !== undefined) {\n    var rev = signal.call(this, def.reverse);\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n\n  var start = rng[0], end = rng[rng.length-1];\n  if (start === null && end !== null || start !== null && end === null) {\n    log.error('Range is underspecified. Please ensure either the ' +\n      '\"range\" property or both \"rangeMin\" and \"rangeMax\" are specified.');\n  }\n\n  return rng;\n}\n\nmodule.exports = Scale;\n\nvar rangeDef = [\n  {\"enum\": [\"width\", \"height\", \"shapes\", \"category10\", \"category20\", \"category20b\", \"category20c\"]},\n  {\n    \"type\": \"array\",\n    \"items\": {\"oneOf\": [{\"type\":\"string\"}, {\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n  },\n  {\"$ref\": \"#/refs/signal\"}\n];\n\nScale.schema = {\n  \"refs\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"data\": {\n          \"oneOf\": [\n            {\"type\": \"string\"},\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"fields\": {\n                  \"type\": \"array\",\n                  \"items\": {\"$ref\": \"#/refs/data\"}\n                }\n              },\n              \"required\": [\"fields\"]\n            }\n          ]\n        },\n        \"field\": {\n          \"oneOf\": [\n            {\"type\": \"string\"},\n            {\n              \"type\": \"array\",\n              \"items\": {\"type\": \"string\"}\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"parent\": {\"type\": \"string\"}\n              },\n              \"required\": [\"parent\"]\n            },\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"parent\": {\"type\": \"string\"}\n                },\n                \"required\": [\"parent\"]\n              }\n            }\n          ]\n        },\n        \"sort\": {\n          \"oneOf\": [{\"type\": \"boolean\"}, {\n            \"type\": \"object\",\n            \"properties\": {\n              \"field\": {\"type\": \"string\"},\n              \"op\": {\"enum\": require('../transforms/Aggregate').VALID_OPS}\n            }\n          }]\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n\n  \"defs\": {\n    \"scale\": {\n      \"title\": \"Scale function\",\n      \"type\": \"object\",\n\n      \"allOf\": [{\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n\n          \"type\": {\n            \"enum\": [Types.LINEAR, Types.ORDINAL, Types.TIME, Types.TIME_UTC, Types.LOG,\n              Types.POWER, Types.SQRT, Types.QUANTILE, Types.QUANTIZE, Types.THRESHOLD],\n            \"default\": Types.LINEAR\n          },\n\n          \"domain\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"oneOf\": [\n                    {\"type\":\"string\"},\n                    {\"type\": \"number\"},\n                    {\"$ref\": \"#/refs/signal\"}\n                  ]\n                }\n              },\n              {\"$ref\": \"#/refs/data\"},\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"fields\": {\n                    \"type\": \"array\",\n                    \"items\": {\"$ref\": \"#/refs/data\"}\n                  }\n                },\n                \"required\": [\"fields\"],\n              }\n            ]\n          },\n\n          \"domainMin\": {\n            \"oneOf\": [\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/data\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"domainMax\": {\n            \"oneOf\": [\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/data\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"rangeMin\": {\n            \"oneOf\": [\n              {\"type\":\"string\"},\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"rangeMax\": {\n            \"oneOf\": [\n              {\"type\":\"string\"},\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"reverse\": {\n            \"oneOf\": [\n              {\"type\": \"boolean\"},\n              {\"$ref\": \"#/refs/data\"}\n            ],\n          },\n          \"round\": {\"type\": \"boolean\"}\n        },\n\n        \"required\": [\"name\"]\n      }, {\n        \"oneOf\": [{\n          \"properties\": {\n            \"type\": {\"enum\": [Types.ORDINAL]},\n\n            \"range\": {\n              \"oneOf\": rangeDef.concat({\"$ref\": \"#/refs/data\"})\n            },\n\n            \"points\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"padding\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"outerPadding\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"bandSize\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n          },\n          \"required\": [\"type\"]\n        }, {\n          \"properties\": {\n            \"type\": {\"enum\": [Types.TIME, Types.TIME_UTC]},\n            \"range\": {\"oneOf\": rangeDef},\n            \"clamp\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"nice\": {\"oneOf\": [{\"enum\": [\"second\", \"minute\", \"hour\",\n              \"day\", \"week\", \"month\", \"year\"]}, {\"$ref\": \"#/refs/signal\"}]}\n          },\n          \"required\": [\"type\"]\n        }, {\n          \"anyOf\": [{\n            \"properties\": {\n              \"type\": {\"enum\": [Types.LINEAR, Types.LOG, Types.POWER, Types.SQRT,\n                Types.QUANTILE, Types.QUANTIZE, Types.THRESHOLD], \"default\": Types.LINEAR},\n              \"range\": {\"oneOf\": rangeDef},\n              \"clamp\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n              \"nice\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n              \"zero\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]}\n            }\n          }, {\n            \"properties\": {\n              \"type\": {\"enum\": [Types.POWER]},\n              \"exponent\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n            },\n            \"required\": [\"type\"]\n          }]\n        }]\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Scale.js\n// module id = NNYs\n// module chunks = 0","module.exports = {\"name\":\"datalib\",\"version\":\"1.8.0\",\"description\":\"JavaScript utilites for loading, summarizing and working with data.\",\"keywords\":[\"data\",\"table\",\"statistics\",\"parse\",\"csv\",\"tsv\",\"json\",\"utility\"],\"repository\":{\"type\":\"git\",\"url\":\"http://github.com/vega/datalib.git\"},\"author\":{\"name\":\"Jeffrey Heer\",\"url\":\"http://idl.cs.washington.edu\"},\"contributors\":[{\"name\":\"Michael Correll\",\"url\":\"http://pages.cs.wisc.edu/~mcorrell/\"},{\"name\":\"Ryan Russell\",\"url\":\"https://github.com/RussellSprouts\"}],\"license\":\"BSD-3-Clause\",\"dependencies\":{\"d3-dsv\":\"0.1\",\"d3-format\":\"0.4\",\"d3-time\":\"0.1\",\"d3-time-format\":\"0.2\",\"topojson\":\"^1.6.19\",\"request\":\"^2.67.0\",\"sync-request\":\"^2.1.0\"},\"devDependencies\":{\"browserify\":\"^12.0.1\",\"chai\":\"^3.4.1\",\"istanbul\":\"latest\",\"jshint\":\"^2.9.1-rc1\",\"mocha\":\"^2.3.4\",\"uglify-js\":\"^2.6.1\"},\"main\":\"src/index.js\",\"scripts\":{\"deploy\":\"npm run test && scripts/deploy.sh\",\"lint\":\"jshint src/\",\"test\":\"npm run lint && TZ=America/Los_Angeles mocha --recursive test/\",\"cover\":\"TZ=America/Los_Angeles istanbul cover _mocha -- --recursive test/\",\"build\":\"browserify src/index.js -d -s dl -o datalib.js\",\"postbuild\":\"uglifyjs datalib.js -c -m -o datalib.min.js\"},\"browser\":{\"buffer\":false,\"fs\":false,\"http\":false,\"request\":false,\"sync-request\":false,\"url\":false}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/package.json\n// module id = NdEd\n// module chunks = 0","// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n\nvar dispatch = require(\"d3-dispatch\").dispatch;\n\nvar cloudRadians = Math.PI / 180,\n    cw = 1 << 11 >> 5,\n    ch = 1 << 11;\n\nmodule.exports = function() {\n  var size = [256, 256],\n      text = cloudText,\n      font = cloudFont,\n      fontSize = cloudFontSize,\n      fontStyle = cloudFontNormal,\n      fontWeight = cloudFontNormal,\n      rotate = cloudRotate,\n      padding = cloudPadding,\n      spiral = archimedeanSpiral,\n      words = [],\n      timeInterval = Infinity,\n      event = dispatch(\"word\", \"end\"),\n      timer = null,\n      random = Math.random,\n      cloud = {},\n      canvas = cloudCanvas;\n\n  cloud.canvas = function(_) {\n    return arguments.length ? (canvas = functor(_), cloud) : canvas;\n  };\n\n  cloud.start = function() {\n    var contextAndRatio = getContext(canvas()),\n        board = zeroArray((size[0] >> 5) * size[1]),\n        bounds = null,\n        n = words.length,\n        i = -1,\n        tags = [],\n        data = words.map(function(d, i) {\n          d.text = text.call(this, d, i);\n          d.font = font.call(this, d, i);\n          d.style = fontStyle.call(this, d, i);\n          d.weight = fontWeight.call(this, d, i);\n          d.rotate = rotate.call(this, d, i);\n          d.size = ~~fontSize.call(this, d, i);\n          d.padding = padding.call(this, d, i);\n          return d;\n        }).sort(function(a, b) { return b.size - a.size; });\n\n    if (timer) clearInterval(timer);\n    timer = setInterval(step, 0);\n    step();\n\n    return cloud;\n\n    function step() {\n      var start = Date.now();\n      while (Date.now() - start < timeInterval && ++i < n && timer) {\n        var d = data[i];\n        d.x = (size[0] * (random() + .5)) >> 1;\n        d.y = (size[1] * (random() + .5)) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call(\"word\", cloud, d);\n          if (bounds) cloudBounds(bounds, d);\n          else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];\n          // Temporary hack\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n      if (i >= n) {\n        cloud.stop();\n        event.call(\"end\", cloud, tags, bounds);\n      }\n    }\n  }\n\n  cloud.stop = function() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n    return cloud;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    var ratio = Math.sqrt(canvas.getContext(\"2d\").getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n\n    var context = canvas.getContext(\"2d\");\n    context.fillStyle = context.strokeStyle = \"red\";\n    context.textAlign = \"center\";\n\n    return {context: context, ratio: ratio};\n  }\n\n  function place(board, tag, bounds) {\n    var perimeter = [{x: 0, y: 0}, {x: size[0], y: size[1]}],\n        startX = tag.x,\n        startY = tag.y,\n        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n        s = spiral(size),\n        dt = random() < .5 ? 1 : -1,\n        t = -dt,\n        dxdy,\n        dx,\n        dy;\n\n    while (dxdy = s(t += dt)) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||\n          tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;\n      // TODO only check for collisions within current bounds.\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n              w = tag.width >> 5,\n              sw = size[0] >> 5,\n              lx = tag.x - (w << 4),\n              sx = lx & 0x7f,\n              msx = 32 - sx,\n              h = tag.y1 - tag.y0,\n              x = (tag.y + tag.y0) * sw + (lx >> 5),\n              last;\n          for (var j = 0; j < h; j++) {\n            last = 0;\n            for (var i = 0; i <= w; i++) {\n              board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n            x += sw;\n          }\n          delete tag.sprite;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  cloud.timeInterval = function(_) {\n    return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud) : timeInterval;\n  };\n\n  cloud.words = function(_) {\n    return arguments.length ? (words = _, cloud) : words;\n  };\n\n  cloud.size = function(_) {\n    return arguments.length ? (size = [+_[0], +_[1]], cloud) : size;\n  };\n\n  cloud.font = function(_) {\n    return arguments.length ? (font = functor(_), cloud) : font;\n  };\n\n  cloud.fontStyle = function(_) {\n    return arguments.length ? (fontStyle = functor(_), cloud) : fontStyle;\n  };\n\n  cloud.fontWeight = function(_) {\n    return arguments.length ? (fontWeight = functor(_), cloud) : fontWeight;\n  };\n\n  cloud.rotate = function(_) {\n    return arguments.length ? (rotate = functor(_), cloud) : rotate;\n  };\n\n  cloud.text = function(_) {\n    return arguments.length ? (text = functor(_), cloud) : text;\n  };\n\n  cloud.spiral = function(_) {\n    return arguments.length ? (spiral = spirals[_] || _, cloud) : spiral;\n  };\n\n  cloud.fontSize = function(_) {\n    return arguments.length ? (fontSize = functor(_), cloud) : fontSize;\n  };\n\n  cloud.padding = function(_) {\n    return arguments.length ? (padding = functor(_), cloud) : padding;\n  };\n\n  cloud.random = function(_) {\n    return arguments.length ? (random = _, cloud) : random;\n  };\n\n  cloud.on = function() {\n    var value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n\n  return cloud;\n};\n\nfunction cloudText(d) {\n  return d.text;\n}\n\nfunction cloudFont() {\n  return \"serif\";\n}\n\nfunction cloudFontNormal() {\n  return \"normal\";\n}\n\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n  return (~~(Math.random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n  return 1;\n}\n\n// Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  var c = contextAndRatio.context,\n      ratio = contextAndRatio.ratio;\n\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  var x = 0,\n      y = 0,\n      maxh = 0,\n      n = data.length;\n  --di;\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\n    var w = c.measureText(d.text + \"m\").width * ratio,\n        h = d.size << 1;\n    if (d.rotate) {\n      var sr = Math.sin(d.rotate * cloudRadians),\n          cr = Math.cos(d.rotate * cloudRadians),\n          wcr = w * cr,\n          wsr = w * sr,\n          hcr = h * cr,\n          hsr = h * sr;\n      w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = (w + 0x1f) >> 5 << 5;\n    }\n    if (h > maxh) maxh = h;\n    if (x + w >= (cw << 5)) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n    if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text, 0, 0);\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n      sprite = [];\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n        w32 = w >> 5,\n        h = d.y1 - d.y0;\n    // Zero the buffer\n    for (var i = 0; i < h * w32; i++) sprite[i] = 0;\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    var seen = 0,\n        seenRow = -1;\n    for (var j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        var k = w32 * j + (i >> 5),\n            m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n      if (seen) seenRow = j;\n      else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n}\n\n// Use mask-based collision detection.\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  var sprite = tag.sprite,\n      w = tag.width >> 5,\n      lx = tag.x - (w << 4),\n      sx = lx & 0x7f,\n      msx = 32 - sx,\n      h = tag.y1 - tag.y0,\n      x = (tag.y + tag.y0) * sw + (lx >> 5),\n      last;\n  for (var j = 0; j < h; j++) {\n    last = 0;\n    for (var i = 0; i <= w; i++) {\n      if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))\n          & board[x + i]) return true;\n    }\n    x += sw;\n  }\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  var b0 = bounds[0],\n      b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\n\nfunction archimedeanSpiral(size) {\n  var e = size[0] / size[1];\n  return function(t) {\n    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  var dy = 4,\n      dx = dy * size[0] / size[1],\n      x = 0,\n      y = 0;\n  return function(t) {\n    var sign = t < 0 ? -1 : 1;\n    // See triangular numbers: T_n = n * (n + 1) / 2.\n    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n      case 0:  x += dx; break;\n      case 1:  y += dy; break;\n      case 2:  x -= dx; break;\n      default: y -= dy; break;\n    }\n    return [x, y];\n  };\n}\n\n// TODO reuse arrays?\nfunction zeroArray(n) {\n  var a = [],\n      i = -1;\n  while (++i < n) a[i] = 0;\n  return a;\n}\n\nfunction cloudCanvas() {\n  return document.createElement(\"canvas\");\n}\n\nfunction functor(d) {\n  return typeof d === \"function\" ? d : function() { return d; };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-cloud/index.js\n// module id = NobO\n// module chunks = 0","var dl = require('datalib');\n\nfunction parsePadding(pad) {\n  return pad == null ? 'auto' :\n    dl.isObject(pad) ? pad :\n    dl.isNumber(pad) ? {top:pad, left:pad, right:pad, bottom:pad} :\n    pad === 'strict' ? pad : 'auto';\n}\n\nmodule.exports = parsePadding;\nparsePadding.schema = {\n  \"defs\": {\n    \"padding\": {\n      \"oneOf\": [{\n        \"enum\": [\"strict\", \"auto\"]\n      }, {\n        \"type\": \"number\"\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"top\": {\"type\": \"number\"},\n          \"bottom\": {\"type\": \"number\"},\n          \"left\": {\"type\": \"number\"},\n          \"right\": {\"type\": \"number\"}\n        },\n        \"additionalProperties\": false\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/padding.js\n// module id = O3lN\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nfunction parseData(model, spec, callback) {\n  var config = model.config(),\n      count = 0;\n\n  function onError(error, d) {\n    log.error('PARSE DATA FAILED: ' + d.name + ' ' + error);\n    count = -1;\n    callback(error);\n  }\n\n  function onLoad(d) {\n    return function(error, data) {\n      if (error) {\n        onError(error, d);\n      } else if (count > 0) {\n        try {\n          model.data(d.name).values(dl.read(data, d.format));\n          if (--count === 0) callback();\n        } catch (err) {\n          onError(err, d);\n        }\n      }\n    };\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), onLoad(d));\n    }\n    try {\n      parseData.datasource(model, d);\n    } catch (err) {\n      onError(err, d);\n    }\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n}\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform || []).map(function(t) {\n        return parseTransforms(model, t);\n      }),\n      mod = (d.modify || []).map(function(m) {\n        return parseModify(model, m, d);\n      }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    // Derived ds will be pulsed by its src rather than the model.\n    ds.source(d.source).addListener(ds);\n    model.removeListener(ds.pipeline()[0]);\n  }\n\n  return ds;\n};\n\nmodule.exports = parseData;\n\nvar parseDef = {\n  \"oneOf\": [\n    {\"enum\": [\"auto\"]},\n    {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"enum\": [\"number\", \"boolean\", \"date\", \"string\"]\n      }\n    }\n  ]\n};\n\nparseData.schema = {\n  \"defs\": {\n    \"data\": {\n      \"title\": \"Input data set definition\",\n      \"type\": \"object\",\n\n      \"allOf\": [{\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"transform\": {\"$ref\": \"#/defs/transform\"},\n          \"modify\": {\"$ref\": \"#/defs/modify\"},\n          \"format\": {\n            \"type\": \"object\",\n            \"oneOf\": [{\n              \"properties\": {\n                \"type\": {\"enum\": [\"json\"]},\n                \"parse\": parseDef,\n                \"property\": {\"type\": \"string\"}\n              },\n              \"additionalProperties\": false\n            }, {\n              \"properties\": {\n                \"type\": {\"enum\": [\"csv\", \"tsv\"]},\n                \"parse\": parseDef\n              },\n              \"additionalProperties\": false\n            }, {\n              \"oneOf\": [{\n                \"properties\": {\n                  \"type\": {\"enum\": [\"topojson\"]},\n                  \"feature\": {\"type\": \"string\"}\n                },\n                \"additionalProperties\": false\n              }, {\n                \"properties\": {\n                  \"type\": {\"enum\": [\"topojson\"]},\n                  \"mesh\": {\"type\": \"string\"}\n                },\n                \"additionalProperties\": false\n              }]\n            }, {\n              \"properties\": {\n                \"type\": {\"enum\": [\"treejson\"]},\n                \"children\": {\"type\": \"string\"},\n                \"parse\": parseDef\n              },\n              \"additionalProperties\": false\n            }]\n          }\n        },\n        \"required\": [\"name\"]\n      }, {\n        \"anyOf\": [{\n          \"required\": [\"name\", \"modify\"]\n        }, {\n          \"oneOf\": [{\n            \"properties\": {\"source\": {\"type\": \"string\"}},\n            \"required\": [\"source\"]\n          }, {\n            \"properties\": {\"values\": {\"type\": \"array\"}},\n            \"required\": [\"values\"]\n          }, {\n            \"properties\": {\"url\": {\"type\": \"string\"}},\n            \"required\": [\"url\"]\n          }]\n        }]\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/data.js\n// module id = OTIj\n// module chunks = 0","\"use strict\";\nvar util_1 = require('./util');\n(function (Channel) {\n    Channel[Channel[\"X\"] = 'x'] = \"X\";\n    Channel[Channel[\"Y\"] = 'y'] = \"Y\";\n    Channel[Channel[\"X2\"] = 'x2'] = \"X2\";\n    Channel[Channel[\"Y2\"] = 'y2'] = \"Y2\";\n    Channel[Channel[\"ROW\"] = 'row'] = \"ROW\";\n    Channel[Channel[\"COLUMN\"] = 'column'] = \"COLUMN\";\n    Channel[Channel[\"SHAPE\"] = 'shape'] = \"SHAPE\";\n    Channel[Channel[\"SIZE\"] = 'size'] = \"SIZE\";\n    Channel[Channel[\"COLOR\"] = 'color'] = \"COLOR\";\n    Channel[Channel[\"TEXT\"] = 'text'] = \"TEXT\";\n    Channel[Channel[\"DETAIL\"] = 'detail'] = \"DETAIL\";\n    Channel[Channel[\"LABEL\"] = 'label'] = \"LABEL\";\n    Channel[Channel[\"PATH\"] = 'path'] = \"PATH\";\n    Channel[Channel[\"ORDER\"] = 'order'] = \"ORDER\";\n    Channel[Channel[\"OPACITY\"] = 'opacity'] = \"OPACITY\";\n})(exports.Channel || (exports.Channel = {}));\nvar Channel = exports.Channel;\nexports.X = Channel.X;\nexports.Y = Channel.Y;\nexports.X2 = Channel.X2;\nexports.Y2 = Channel.Y2;\nexports.ROW = Channel.ROW;\nexports.COLUMN = Channel.COLUMN;\nexports.SHAPE = Channel.SHAPE;\nexports.SIZE = Channel.SIZE;\nexports.COLOR = Channel.COLOR;\nexports.TEXT = Channel.TEXT;\nexports.DETAIL = Channel.DETAIL;\nexports.LABEL = Channel.LABEL;\nexports.PATH = Channel.PATH;\nexports.ORDER = Channel.ORDER;\nexports.OPACITY = Channel.OPACITY;\nexports.CHANNELS = [exports.X, exports.Y, exports.X2, exports.Y2, exports.ROW, exports.COLUMN, exports.SIZE, exports.SHAPE, exports.COLOR, exports.PATH, exports.ORDER, exports.OPACITY, exports.TEXT, exports.DETAIL, exports.LABEL];\nexports.UNIT_CHANNELS = util_1.without(exports.CHANNELS, [exports.ROW, exports.COLUMN]);\nexports.UNIT_SCALE_CHANNELS = util_1.without(exports.UNIT_CHANNELS, [exports.PATH, exports.ORDER, exports.DETAIL, exports.TEXT, exports.LABEL, exports.X2, exports.Y2]);\nexports.NONSPATIAL_CHANNELS = util_1.without(exports.UNIT_CHANNELS, [exports.X, exports.Y, exports.X2, exports.Y2]);\nexports.NONSPATIAL_SCALE_CHANNELS = util_1.without(exports.UNIT_SCALE_CHANNELS, [exports.X, exports.Y, exports.X2, exports.Y2]);\nexports.STACK_GROUP_CHANNELS = [exports.COLOR, exports.DETAIL, exports.ORDER, exports.OPACITY, exports.SIZE];\n;\nfunction supportMark(channel, mark) {\n    return !!getSupportedMark(channel)[mark];\n}\nexports.supportMark = supportMark;\nfunction getSupportedMark(channel) {\n    switch (channel) {\n        case exports.X:\n        case exports.Y:\n        case exports.COLOR:\n        case exports.DETAIL:\n        case exports.ORDER:\n        case exports.OPACITY:\n        case exports.ROW:\n        case exports.COLUMN:\n            return {\n                point: true, tick: true, rule: true, circle: true, square: true,\n                bar: true, line: true, area: true, text: true\n            };\n        case exports.X2:\n        case exports.Y2:\n            return {\n                rule: true, bar: true, area: true\n            };\n        case exports.SIZE:\n            return {\n                point: true, tick: true, rule: true, circle: true, square: true,\n                bar: true, text: true\n            };\n        case exports.SHAPE:\n            return { point: true };\n        case exports.TEXT:\n            return { text: true };\n        case exports.PATH:\n            return { line: true };\n    }\n    return {};\n}\nexports.getSupportedMark = getSupportedMark;\n;\nfunction getSupportedRole(channel) {\n    switch (channel) {\n        case exports.X:\n        case exports.Y:\n        case exports.COLOR:\n        case exports.OPACITY:\n        case exports.LABEL:\n        case exports.DETAIL:\n            return {\n                measure: true,\n                dimension: true\n            };\n        case exports.ROW:\n        case exports.COLUMN:\n        case exports.SHAPE:\n            return {\n                measure: false,\n                dimension: true\n            };\n        case exports.X2:\n        case exports.Y2:\n        case exports.SIZE:\n        case exports.TEXT:\n            return {\n                measure: true,\n                dimension: false\n            };\n        case exports.PATH:\n            return {\n                measure: false,\n                dimension: true\n            };\n    }\n    throw new Error('Invalid encoding channel' + channel);\n}\nexports.getSupportedRole = getSupportedRole;\nfunction hasScale(channel) {\n    return !util_1.contains([exports.DETAIL, exports.PATH, exports.TEXT, exports.LABEL, exports.ORDER], channel);\n}\nexports.hasScale = hasScale;\n//# sourceMappingURL=channel.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/channel.js\n// module id = P/aK\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    Tuple = require('vega-dataflow').Tuple,\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Impute(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'},\n    orderby: {type: 'array<field>'},\n    field:   {type: 'field'},\n    method:  {type: 'value', default: 'value'},\n    value:   {type: 'value', default: 0}\n  });\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Impute.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Impute;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['imputing']);\n\n  var groupby = this.param('groupby'),\n      orderby = this.param('orderby'),\n      method = this.param('method'),\n      value = this.param('value'),\n      field = this.param('field'),\n      get = field.accessor,\n      name = field.field,\n      prev = this._imputed || [], curr = [],\n      groups = partition(data, groupby.accessor, orderby.accessor),\n      domain = groups.domain,\n      group, i, j, n, m, t;\n\n  function getval(x) {\n    return x == null ? null : get(x);\n  }\n\n  for (j=0, m=groups.length; j<m; ++j) {\n    group = groups[j];\n\n    // determine imputation value\n    if (method !== 'value') {\n      value = dl[method](group, getval);\n    }\n\n    // add tuples for missing values\n    for (i=0, n=group.length; i<n; ++i) {\n      if (group[i] == null) {\n        t = tuple(groupby.field, group.values, orderby.field, domain[i]);\n        t[name] = value;\n        curr.push(t);\n      }\n    }\n  }\n\n  // update changeset with imputed tuples\n  for (i=0, n=curr.length; i<n; ++i) {\n    input.add.push(curr[i]);\n  }\n  for (i=0, n=prev.length; i<n; ++i) {\n    input.rem.push(prev[i]);\n  }\n  this._imputed = curr;\n\n  return input;\n};\n\nfunction tuple(gb, gv, ob, ov) {\n  var t = {_imputed: true}, i;\n  for (i=0; i<gv.length; ++i) t[gb[i]] = gv[i];\n  for (i=0; i<ov.length; ++i) t[ob[i]] = ov[i];\n  return Tuple.ingest(t);\n}\n\nfunction partition(data, groupby, orderby) {\n  var groups = [],\n      get = function(f) { return f(x); },\n      val = function(d) { return (x=d, orderby.map(get)); },\n      map, i, x, k, g, domain, lut, N;\n\n  domain = groups.domain = dl.unique(data, val);\n  N = domain.length;\n  lut = domain.reduce(function(m, d, i) {\n    return (m[d] = {value:d, index:i}, m);\n  }, {});\n\n  // partition data points into groups\n  for (map={}, i=0; i<data.length; ++i) {\n    x = data[i];\n    k = groupby == null ? [] : groupby.map(get);\n    g = map[k] || (groups.push(map[k] = Array(N)), map[k].values = k, map[k]);\n    g[lut[val(x)].index] = x;\n  }\n\n  return groups;\n}\n\nmodule.exports = Impute;\n\nImpute.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Impute transform\",\n  \"description\": \"Performs imputation of missing values.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"impute\"]},\n    \"method\": {\n      \"description\": \"The imputation method to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"value\", \"mean\", \"median\", \"min\", \"max\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"value\"\n    },\n    \"value\": {\n      \"description\": \"The value to use for missing data if the method is 'value'.\",\n      \"oneOf\": [\n        {\"type\": \"number\"},\n        {\"type\": \"string\"},\n        {\"type\": \"boolean\"},\n        {\"type\": \"null\"},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0\n    },\n    \"field\": {\n      \"description\": \"The data field to impute.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"groupby\": {\n      \"description\": \"A list of fields to group the data into series.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    },\n    \"orderby\": {\n      \"description\": \"A list of fields to determine ordering within series.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"groupby\", \"orderby\", \"field\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Impute.js\n// module id = P7vC\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    ChangeSet = df.ChangeSet,\n    Base = df.Graph.prototype,\n    Node  = df.Node, // jshint ignore:line\n    GroupBuilder = require('../scene/GroupBuilder'),\n    visit = require('../scene/visit'),\n    compiler = require('../parse/expr'),\n    config = require('./config');\n\nfunction Model(cfg) {\n  this._defs = {};\n  this._predicates = {};\n\n  this._scene  = null;  // Root scenegraph node.\n  this._groups = null;  // Index of group items.\n\n  this._node = null;\n  this._builder = null; // Top-level scenegraph builder.\n\n  this._reset = {axes: false, legends: false};\n\n  this.config(cfg);\n  this.expr = compiler(this);\n  Base.init.call(this);\n}\n\nvar prototype = (Model.prototype = Object.create(Base));\nprototype.constructor = Model;\n\nprototype.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nprototype.config = function(cfg) {\n  if (!arguments.length) return this._config;\n  this._config = Object.create(config);\n  for (var name in cfg) {\n    var x = cfg[name], y = this._config[name];\n    if (dl.isObject(x) && dl.isObject(y)) {\n      this._config[name] = dl.extend({}, y, x);\n    } else {\n      this._config[name] = x;\n    }\n  }\n\n  return this;\n};\n\nprototype.width = function(width) {\n  if (this._defs) this._defs.width = width;\n  if (this._defs && this._defs.marks) this._defs.marks.width = width;\n  if (this._scene) {\n    this._scene.items[0].width = width;\n    this._scene.items[0]._dirty = true;\n  }\n  this._reset.axes = true;\n  return this;\n};\n\nprototype.height = function(height) {\n  if (this._defs) this._defs.height = height;\n  if (this._defs && this._defs.marks) this._defs.marks.height = height;\n  if (this._scene) {\n    this._scene.items[0].height = height;\n    this._scene.items[0]._dirty = true;\n  }\n  this._reset.axes = true;\n  return this;\n};\n\nprototype.node = function() {\n  return this._node || (this._node = new Node(this));\n};\n\nprototype.data = function() {\n  var data = Base.data.apply(this, arguments);\n  if (arguments.length > 1) {  // new Datasource\n    this.node().addListener(data.pipeline()[0]);\n  }\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, pred = {};\n  if (!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { pred[n] = m._predicates[n]; });\n  return pred;\n}\n\nprototype.predicate = function(name, predicate) {\n  if (arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nprototype.predicates = function() { return this._predicates; };\n\nprototype.scene = function(renderer) {\n  if (!arguments.length) return this._scene;\n\n  if (this._builder) {\n    this.node().removeListener(this._builder);\n    this._builder._groupBuilder.disconnect();\n  }\n\n  var m = this,\n      b = this._builder = new Node(this);\n\n  b.evaluate = function(input) {\n    if (b._groupBuilder) return input;\n\n    var gb = b._groupBuilder = new GroupBuilder(m, m._defs.marks, m._scene={}),\n        p  = gb.pipeline();\n\n    m._groups = {};\n    this.addListener(gb.connect());\n    p[p.length-1].addListener(renderer);\n    return input;\n  };\n\n  this.addListener(b);\n  return this;\n};\n\nprototype.group = function(id, item) {\n  var groups = this._groups;\n  if (arguments.length === 1) return groups[id];\n  return (groups[id] = item, this);\n};\n\nprototype.reset = function() {\n  if (this._scene && this._reset.axes) {\n    visit(this._scene, function(item) {\n      if (item.axes) item.axes.forEach(function(axis) { axis.reset(); });\n    });\n    this._reset.axes = false;\n  }\n  if (this._scene && this._reset.legends) {\n    visit(this._scene, function(item) {\n      if (item.legends) item.legends.forEach(function(l) { l.reset(); });\n    });\n    this._reset.legends = false;\n  }\n  return this;\n};\n\nprototype.addListener = function(l) {\n  this.node().addListener(l);\n};\n\nprototype.removeListener = function(l) {\n  this.node().removeListener(l);\n};\n\nprototype.fire = function(cs) {\n  if (!cs) cs = ChangeSet.create();\n  this.propagate(cs, this.node());\n};\n\nmodule.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/Model.js\n// module id = PwiD\n// module chunks = 0","\"use strict\";\nvar scale_1 = require('./scale');\nvar axis_1 = require('./axis');\nvar legend_1 = require('./legend');\nexports.defaultCellConfig = {\n    width: 200,\n    height: 200\n};\nexports.defaultFacetCellConfig = {\n    stroke: '#ccc',\n    strokeWidth: 1\n};\nvar defaultFacetGridConfig = {\n    color: '#000000',\n    opacity: 0.4,\n    offset: 0\n};\nexports.defaultFacetConfig = {\n    scale: scale_1.defaultFacetScaleConfig,\n    axis: axis_1.defaultFacetAxisConfig,\n    grid: defaultFacetGridConfig,\n    cell: exports.defaultFacetCellConfig\n};\n(function (FontWeight) {\n    FontWeight[FontWeight[\"NORMAL\"] = 'normal'] = \"NORMAL\";\n    FontWeight[FontWeight[\"BOLD\"] = 'bold'] = \"BOLD\";\n})(exports.FontWeight || (exports.FontWeight = {}));\nvar FontWeight = exports.FontWeight;\n(function (Shape) {\n    Shape[Shape[\"CIRCLE\"] = 'circle'] = \"CIRCLE\";\n    Shape[Shape[\"SQUARE\"] = 'square'] = \"SQUARE\";\n    Shape[Shape[\"CROSS\"] = 'cross'] = \"CROSS\";\n    Shape[Shape[\"DIAMOND\"] = 'diamond'] = \"DIAMOND\";\n    Shape[Shape[\"TRIANGLEUP\"] = 'triangle-up'] = \"TRIANGLEUP\";\n    Shape[Shape[\"TRIANGLEDOWN\"] = 'triangle-down'] = \"TRIANGLEDOWN\";\n})(exports.Shape || (exports.Shape = {}));\nvar Shape = exports.Shape;\n(function (HorizontalAlign) {\n    HorizontalAlign[HorizontalAlign[\"LEFT\"] = 'left'] = \"LEFT\";\n    HorizontalAlign[HorizontalAlign[\"RIGHT\"] = 'right'] = \"RIGHT\";\n    HorizontalAlign[HorizontalAlign[\"CENTER\"] = 'center'] = \"CENTER\";\n})(exports.HorizontalAlign || (exports.HorizontalAlign = {}));\nvar HorizontalAlign = exports.HorizontalAlign;\n(function (VerticalAlign) {\n    VerticalAlign[VerticalAlign[\"TOP\"] = 'top'] = \"TOP\";\n    VerticalAlign[VerticalAlign[\"MIDDLE\"] = 'middle'] = \"MIDDLE\";\n    VerticalAlign[VerticalAlign[\"BOTTOM\"] = 'bottom'] = \"BOTTOM\";\n})(exports.VerticalAlign || (exports.VerticalAlign = {}));\nvar VerticalAlign = exports.VerticalAlign;\n(function (FontStyle) {\n    FontStyle[FontStyle[\"NORMAL\"] = 'normal'] = \"NORMAL\";\n    FontStyle[FontStyle[\"ITALIC\"] = 'italic'] = \"ITALIC\";\n})(exports.FontStyle || (exports.FontStyle = {}));\nvar FontStyle = exports.FontStyle;\n(function (Interpolate) {\n    Interpolate[Interpolate[\"LINEAR\"] = 'linear'] = \"LINEAR\";\n    Interpolate[Interpolate[\"LINEAR_CLOSED\"] = 'linear-closed'] = \"LINEAR_CLOSED\";\n    Interpolate[Interpolate[\"STEP\"] = 'step'] = \"STEP\";\n    Interpolate[Interpolate[\"STEP_BEFORE\"] = 'step-before'] = \"STEP_BEFORE\";\n    Interpolate[Interpolate[\"STEP_AFTER\"] = 'step-after'] = \"STEP_AFTER\";\n    Interpolate[Interpolate[\"BASIS\"] = 'basis'] = \"BASIS\";\n    Interpolate[Interpolate[\"BASIS_OPEN\"] = 'basis-open'] = \"BASIS_OPEN\";\n    Interpolate[Interpolate[\"BASIS_CLOSED\"] = 'basis-closed'] = \"BASIS_CLOSED\";\n    Interpolate[Interpolate[\"CARDINAL\"] = 'cardinal'] = \"CARDINAL\";\n    Interpolate[Interpolate[\"CARDINAL_OPEN\"] = 'cardinal-open'] = \"CARDINAL_OPEN\";\n    Interpolate[Interpolate[\"CARDINAL_CLOSED\"] = 'cardinal-closed'] = \"CARDINAL_CLOSED\";\n    Interpolate[Interpolate[\"BUNDLE\"] = 'bundle'] = \"BUNDLE\";\n    Interpolate[Interpolate[\"MONOTONE\"] = 'monotone'] = \"MONOTONE\";\n})(exports.Interpolate || (exports.Interpolate = {}));\nvar Interpolate = exports.Interpolate;\n(function (AreaOverlay) {\n    AreaOverlay[AreaOverlay[\"LINE\"] = 'line'] = \"LINE\";\n    AreaOverlay[AreaOverlay[\"LINEPOINT\"] = 'linepoint'] = \"LINEPOINT\";\n    AreaOverlay[AreaOverlay[\"NONE\"] = 'none'] = \"NONE\";\n})(exports.AreaOverlay || (exports.AreaOverlay = {}));\nvar AreaOverlay = exports.AreaOverlay;\nexports.defaultOverlayConfig = {\n    line: false,\n    pointStyle: { filled: true },\n    lineStyle: {}\n};\nexports.defaultMarkConfig = {\n    color: '#4682b4',\n    shape: Shape.CIRCLE,\n    strokeWidth: 2,\n    size: 30,\n    barThinSize: 2,\n    ruleSize: 1,\n    tickThickness: 1,\n    fontSize: 10,\n    baseline: VerticalAlign.MIDDLE,\n    text: 'Abc',\n    shortTimeLabels: false,\n    applyColorToBackground: false\n};\nexports.defaultConfig = {\n    numberFormat: 's',\n    timeFormat: '%Y-%m-%d',\n    countTitle: 'Number of Records',\n    cell: exports.defaultCellConfig,\n    mark: exports.defaultMarkConfig,\n    overlay: exports.defaultOverlayConfig,\n    scale: scale_1.defaultScaleConfig,\n    axis: axis_1.defaultAxisConfig,\n    legend: legend_1.defaultLegendConfig,\n    facet: exports.defaultFacetConfig,\n};\n//# sourceMappingURL=config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/config.js\n// module id = Py5Z\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('../../aggregate');\nvar data_1 = require('../../data');\nvar fielddef_1 = require('../../fielddef');\nvar util_1 = require('../../util');\nvar summary;\n(function (summary) {\n    function addDimension(dims, fieldDef) {\n        if (fieldDef.bin) {\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_start' })] = true;\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_mid' })] = true;\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_end' })] = true;\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_range' })] = true;\n        }\n        else {\n            dims[fielddef_1.field(fieldDef)] = true;\n        }\n        return dims;\n    }\n    function parseUnit(model) {\n        var dims = {};\n        var meas = {};\n        model.forEach(function (fieldDef, channel) {\n            if (fieldDef.aggregate) {\n                if (fieldDef.aggregate === aggregate_1.AggregateOp.COUNT) {\n                    meas['*'] = meas['*'] || {};\n                    meas['*']['count'] = true;\n                }\n                else {\n                    meas[fieldDef.field] = meas[fieldDef.field] || {};\n                    meas[fieldDef.field][fieldDef.aggregate] = true;\n                }\n            }\n            else {\n                addDimension(dims, fieldDef);\n            }\n        });\n        return [{\n                name: model.dataName(data_1.SUMMARY),\n                dimensions: dims,\n                measures: meas\n            }];\n    }\n    summary.parseUnit = parseUnit;\n    function parseFacet(model) {\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source && childDataComponent.summary) {\n            var summaryComponents = childDataComponent.summary.map(function (summaryComponent) {\n                summaryComponent.dimensions = model.reduce(addDimension, summaryComponent.dimensions);\n                var summaryNameWithoutPrefix = summaryComponent.name.substr(model.child().name('').length);\n                model.child().renameData(summaryComponent.name, summaryNameWithoutPrefix);\n                summaryComponent.name = summaryNameWithoutPrefix;\n                return summaryComponent;\n            });\n            delete childDataComponent.summary;\n            return summaryComponents;\n        }\n        return [];\n    }\n    summary.parseFacet = parseFacet;\n    function mergeMeasures(parentMeasures, childMeasures) {\n        for (var field_1 in childMeasures) {\n            if (childMeasures.hasOwnProperty(field_1)) {\n                var ops = childMeasures[field_1];\n                for (var op in ops) {\n                    if (ops.hasOwnProperty(op)) {\n                        if (field_1 in parentMeasures) {\n                            parentMeasures[field_1][op] = true;\n                        }\n                        else {\n                            parentMeasures[field_1] = { op: true };\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function parseLayer(model) {\n        var summaries = {};\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source && childDataComponent.summary) {\n                childDataComponent.summary.forEach(function (childSummary) {\n                    var key = util_1.hash(childSummary.dimensions);\n                    if (key in summaries) {\n                        mergeMeasures(summaries[key].measures, childSummary.measures);\n                    }\n                    else {\n                        childSummary.name = model.dataName(data_1.SUMMARY) + '_' + util_1.keys(summaries).length;\n                        summaries[key] = childSummary;\n                    }\n                    child.renameData(child.dataName(data_1.SUMMARY), summaries[key].name);\n                    delete childDataComponent.summary;\n                });\n            }\n        });\n        return util_1.vals(summaries);\n    }\n    summary.parseLayer = parseLayer;\n    function assemble(component, model) {\n        if (!component.summary) {\n            return [];\n        }\n        return component.summary.reduce(function (summaryData, summaryComponent) {\n            var dims = summaryComponent.dimensions;\n            var meas = summaryComponent.measures;\n            var groupby = util_1.keys(dims);\n            var summarize = util_1.reduce(meas, function (aggregator, fnDictSet, field) {\n                aggregator[field] = util_1.keys(fnDictSet);\n                return aggregator;\n            }, {});\n            if (util_1.keys(meas).length > 0) {\n                summaryData.push({\n                    name: summaryComponent.name,\n                    source: model.dataName(data_1.SOURCE),\n                    transform: [{\n                            type: 'aggregate',\n                            groupby: groupby,\n                            summarize: summarize\n                        }]\n                });\n            }\n            return summaryData;\n        }, []);\n    }\n    summary.assemble = assemble;\n})(summary = exports.summary || (exports.summary = {}));\n//# sourceMappingURL=summary.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/summary.js\n// module id = QNWf\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('./channel');\nvar util_1 = require('./util');\nfunction countRetinal(encoding) {\n    var count = 0;\n    if (encoding.color) {\n        count++;\n    }\n    if (encoding.opacity) {\n        count++;\n    }\n    if (encoding.size) {\n        count++;\n    }\n    if (encoding.shape) {\n        count++;\n    }\n    return count;\n}\nexports.countRetinal = countRetinal;\nfunction channels(encoding) {\n    return channel_1.CHANNELS.filter(function (channel) {\n        return has(encoding, channel);\n    });\n}\nexports.channels = channels;\nfunction has(encoding, channel) {\n    var channelEncoding = encoding && encoding[channel];\n    return channelEncoding && (channelEncoding.field !== undefined ||\n        (util_1.isArray(channelEncoding) && channelEncoding.length > 0));\n}\nexports.has = has;\nfunction isAggregate(encoding) {\n    return util_1.some(channel_1.CHANNELS, function (channel) {\n        if (has(encoding, channel) && encoding[channel].aggregate) {\n            return true;\n        }\n        return false;\n    });\n}\nexports.isAggregate = isAggregate;\nfunction isRanged(encoding) {\n    return encoding && ((!!encoding.x && !!encoding.x2) || (!!encoding.y && !!encoding.y2));\n}\nexports.isRanged = isRanged;\nfunction fieldDefs(encoding) {\n    var arr = [];\n    channel_1.CHANNELS.forEach(function (channel) {\n        if (has(encoding, channel)) {\n            if (util_1.isArray(encoding[channel])) {\n                encoding[channel].forEach(function (fieldDef) {\n                    arr.push(fieldDef);\n                });\n            }\n            else {\n                arr.push(encoding[channel]);\n            }\n        }\n    });\n    return arr;\n}\nexports.fieldDefs = fieldDefs;\n;\nfunction forEach(encoding, f, thisArg) {\n    channelMappingForEach(channel_1.CHANNELS, encoding, f, thisArg);\n}\nexports.forEach = forEach;\nfunction channelMappingForEach(channels, mapping, f, thisArg) {\n    var i = 0;\n    channels.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    f.call(thisArg, fieldDef, channel, i++);\n                });\n            }\n            else {\n                f.call(thisArg, mapping[channel], channel, i++);\n            }\n        }\n    });\n}\nexports.channelMappingForEach = channelMappingForEach;\nfunction map(encoding, f, thisArg) {\n    return channelMappingMap(channel_1.CHANNELS, encoding, f, thisArg);\n}\nexports.map = map;\nfunction channelMappingMap(channels, mapping, f, thisArg) {\n    var arr = [];\n    channels.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    arr.push(f.call(thisArg, fieldDef, channel));\n                });\n            }\n            else {\n                arr.push(f.call(thisArg, mapping[channel], channel));\n            }\n        }\n    });\n    return arr;\n}\nexports.channelMappingMap = channelMappingMap;\nfunction reduce(encoding, f, init, thisArg) {\n    return channelMappingReduce(channel_1.CHANNELS, encoding, f, init, thisArg);\n}\nexports.reduce = reduce;\nfunction channelMappingReduce(channels, mapping, f, init, thisArg) {\n    var r = init;\n    channel_1.CHANNELS.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    r = f.call(thisArg, r, fieldDef, channel);\n                });\n            }\n            else {\n                r = f.call(thisArg, r, mapping[channel], channel);\n            }\n        }\n    });\n    return r;\n}\nexports.channelMappingReduce = channelMappingReduce;\n//# sourceMappingURL=encoding.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/encoding.js\n// module id = QSMf\n// module chunks = 0","module.exports = function visit(node, func) {\n  var i, n, s, m, items;\n  if (func(node)) return true;\n\n  var sets = ['items', 'axisItems', 'legendItems'];\n  for (s=0, m=sets.length; s<m; ++s) {\n    if ((items = node[sets[s]])) {\n      for (i=0, n=items.length; i<n; ++i) {\n        if (visit(items[i], func)) return true;\n      }\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/visit.js\n// module id = Qpkz\n// module chunks = 0","var dl = require('datalib'),\n    Aggregator = dl.Aggregator,\n    Base = Aggregator.prototype,\n    df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    facetID = 0;\n\nfunction Facetor() {\n  Aggregator.call(this);\n  this._facet = null;\n  this._facetID = ++facetID;\n}\n\nvar prototype = (Facetor.prototype = Object.create(Base));\nprototype.constructor = Facetor;\n\nprototype.facet = function(f) {\n  return arguments.length ? (this._facet = f, this) : this._facet;\n};\n\nprototype._ingest = function(t) {\n  return Tuple.ingest(t, null);\n};\n\nprototype._assign = Tuple.set;\n\nfunction disconnect_cell(facet) {\n  log.debug({}, ['disconnecting cell', this.tuple._id]);\n  var pipeline = this.ds.pipeline();\n  facet.removeListener(pipeline[0]);\n  facet._graph.removeListener(pipeline[0]);\n  facet._graph.disconnect(pipeline);\n}\n\nprototype._newcell = function(x, key) {\n  var cell  = Base._newcell.call(this, x, key),\n      facet = this._facet;\n\n  if (facet) {\n    var graph = facet._graph,\n        tuple = cell.tuple,\n        pipeline = facet.param('transform');\n    cell.ds = graph.data(tuple._facetID, pipeline, tuple);\n    cell.disconnect = disconnect_cell;\n    facet.addListener(pipeline[0]);\n  }\n\n  return cell;\n};\n\nprototype._newtuple = function(x, key) {\n  var t = Base._newtuple.call(this, x);\n  if (this._facet) {\n    Tuple.set(t, 'key', key);\n    Tuple.set(t, '_facetID', this._facetID + '_' + key);\n  }\n  return t;\n};\n\nprototype.clear = function() {\n  if (this._facet) {\n    for (var k in this._cells) {\n      this._cells[k].disconnect(this._facet);\n    }\n  }\n  return Base.clear.call(this);\n};\n\nprototype._on_add = function(x, cell) {\n  if (this._facet) cell.ds._input.add.push(x);\n};\n\nprototype._on_rem = function(x, cell) {\n  if (this._facet) cell.ds._input.rem.push(x);\n};\n\nprototype._on_mod = function(x, prev, cell0, cell1) {\n  if (this._facet) { // Propagate tuples\n    if (cell0 === cell1) {\n      cell0.ds._input.mod.push(x);\n    } else {\n      cell0.ds._input.rem.push(x);\n      cell1.ds._input.add.push(x);\n    }\n  }\n};\n\nprototype._on_drop = function(cell) {\n  if (this._facet) cell.disconnect(this._facet);\n};\n\nprototype._on_keep = function(cell) {\n  // propagate sort, signals, fields, etc.\n  if (this._facet) df.ChangeSet.copy(this._input, cell.ds._input);\n};\n\nmodule.exports = Facetor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Facetor.js\n// module id = QvNu\n// module chunks = 0","// open editor url in a new window, and pass a message\nmodule.exports = function(window, url, data) {\n  var editor = window.open(url),\n      wait = 10000,\n      step = 250,\n      count = ~~(wait/step);\n\n  function listen(evt) {\n    if (evt.source === editor) {\n      count = 0;\n      window.removeEventListener('message', listen, false);\n    }\n  }\n  window.addEventListener('message', listen, false);\n\n  // send message\n  // periodically resend until ack received or timeout\n  function send() {\n    if (count <= 0) return;\n    editor.postMessage(data, '*');\n    setTimeout(send, step);\n    count -= 1;\n  }\n  setTimeout(send, step);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-embed/src/post.js\n// module id = RA6T\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Bin(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: 'field'},\n    min: {type: 'value'},\n    max: {type: 'value'},\n    base: {type: 'value', default: 10},\n    maxbins: {type: 'value', default: 20},\n    step: {type: 'value'},\n    steps: {type: 'value'},\n    minstep: {type: 'value'},\n    div: {type: 'array<value>', default: [5, 2]}\n  });\n\n  this._output = {\n    start: 'bin_start',\n    end:   'bin_end',\n    mid:   'bin_mid'\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (Bin.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Bin;\n\nprototype.extent = function(data) {\n  // TODO only recompute extent upon data or field change?\n  var e = [this.param('min'), this.param('max')], d;\n  if (e[0] == null || e[1] == null) {\n    d = dl.extent(data, this.param('field').accessor);\n    if (e[0] == null) e[0] = d[0];\n    if (e[1] == null) e[1] = d[1];\n  }\n  return e;\n};\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['binning']);\n\n  var extent  = this.extent(data),\n      output  = this._output,\n      step    = this.param('step'),\n      steps   = this.param('steps'),\n      minstep = this.param('minstep'),\n      get     = this.param('field').accessor,\n      opt = {\n        min: extent[0],\n        max: extent[1],\n        base: this.param('base'),\n        maxbins: this.param('maxbins'),\n        div: this.param('div')\n      };\n\n  if (step) opt.step = step;\n  if (steps) opt.steps = steps;\n  if (minstep) opt.minstep = minstep;\n  var b = dl.bins(opt),\n      s = b.step;\n\n  function update(d) {\n    var v = get(d);\n    v = v == null ? null\n      : b.start + s * ~~((v - b.start) / s);\n    Tuple.set(d, output.start, v);\n    Tuple.set(d, output.end, v + s);\n    Tuple.set(d, output.mid, v + s/2);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  input.fields[output.start] = 1;\n  input.fields[output.end] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Bin;\n\nBin.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Bin transform\",\n  \"description\": \"Bins values into quantitative bins (e.g., for a histogram).\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"bin\"]},\n    \"field\": {\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The name of the field to bin values from.\"\n    },\n    \"min\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The minimum bin value to consider.\"\n    },\n    \"max\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The maximum bin value to consider.\"\n    },\n    \"base\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The number base to use for automatic bin determination.\",\n      \"default\": 10\n    },\n    \"maxbins\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The maximum number of allowable bins.\",\n      \"default\": 20\n    },\n    \"step\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"An exact step size to use between bins. If provided, options such as maxbins will be ignored.\"\n    },\n    \"steps\": {\n      \"description\": \"An array of allowable step sizes to choose from.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"type\": \"number\"}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"minstep\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"A minimum allowable step size (particularly useful for integer values).\"\n    },\n    \"div\": {\n      \"description\": \"An array of scale factors indicating allowable subdivisions.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"type\": \"number\"},\n          \"default\": [5, 2]\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"start\": {\"type\": \"string\", \"default\": \"bin_start\"},\n        \"end\": {\"type\": \"string\", \"default\": \"bin_end\"},\n        \"mid\": {\"type\": \"string\", \"default\": \"bin_mid\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"field\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Bin.js\n// module id = RdYp\n// module chunks = 0","var dl = require('datalib'),\n    expr = require('./expr'),\n    SIGNALS = require('vega-dataflow').Dependencies.SIGNALS;\n\nvar RESERVED = ['datum', 'event', 'signals', 'width', 'height', 'padding']\n    .concat(dl.keys(expr.codegen.functions));\n\nfunction parseSignals(model, spec) {\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    if (RESERVED.indexOf(s.name) !== -1) {\n      throw Error('Signal name \"'+s.name+'\" is a '+\n        'reserved keyword ('+RESERVED.join(', ')+').');\n    }\n\n    var signal = model.signal(s.name, s.init)\n      .verbose(s.verbose);\n\n    if (s.init && s.init.expr) {\n      s.init.expr = model.expr(s.init.expr);\n      signal.value(exprVal(model, s.init));\n    }\n\n    if (s.expr) {\n      s.expr = model.expr(s.expr);\n      signal.evaluate = function(input) {\n        var val = exprVal(model, s),\n            sg  = input.signals;\n        if (val !== signal.value() || signal.verbose()) {\n          signal.value(val);\n          sg[s.name] = 1;\n        }\n        return sg[s.name] ? input : model.doNotPropagate;\n      };\n      signal.dependency(SIGNALS, s.expr.globals);\n      s.expr.globals.forEach(function(dep) {\n        model.signal(dep).addListener(signal);\n      });\n    }\n  });\n\n  return spec;\n}\n\nfunction exprVal(model, spec) {\n  var e = spec.expr, v = e.fn();\n  return spec.scale ? parseSignals.scale(model, spec, v) : v;\n}\n\nparseSignals.scale = function scale(model, spec, value, datum, evt) {\n  var def = spec.scale,\n      name  = def.name || def.signal || def,\n      scope = def.scope, e;\n\n  if (scope) {\n    if (scope.signal) {\n      scope = model.signalRef(scope.signal);\n    } else if (dl.isString(scope)) { // Scope is an expression\n      e = def._expr = (def._expr || model.expr(scope));\n      scope = e.fn(datum, evt);\n    }\n  }\n\n  return expr.scale(model, def.invert, name, value, scope);\n};\n\nmodule.exports = parseSignals;\nparseSignals.schema = {\n  \"refs\": {\n    \"signal\": {\n      \"title\": \"SignalRef\",\n      \"type\": \"object\",\n      \"properties\": {\"signal\": {\"type\": \"string\"}},\n      \"required\": [\"signal\"]\n    },\n\n    \"scopedScale\": {\n      \"oneOf\": [\n        {\"type\": \"string\"},\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"oneOf\": [{\"$ref\": \"#/refs/signal\"}, {\"type\": \"string\"}]\n            },\n            \"scope\": {\n              \"oneOf\": [\n                {\"$ref\": \"#/refs/signal\"},\n                {\"type\": \"string\"}\n              ]\n            },\n            \"invert\": {\"type\": \"boolean\", \"default\": false}\n          },\n\n          \"additionalProperties\": false,\n          \"required\": [\"name\"]\n        }\n      ]\n    }\n  },\n\n  \"defs\": {\n    \"signal\": {\n      \"type\": \"object\",\n\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"not\": {\"enum\": RESERVED}\n        },\n        \"init\": {},\n        \"verbose\": {\"type\": \"boolean\", \"default\": false},\n        \"expr\": {\"type\": \"string\"},\n        \"scale\": {\"$ref\": \"#/refs/scopedScale\"},\n        \"streams\": {\"$ref\": \"#/defs/streams\"}\n      },\n\n      \"additionalProperties\": false,\n      \"required\": [\"name\"]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/signals.js\n// module id = S/OH\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_dsv = {})));\n}(this, function (exports) { 'use strict';\n\n  function dsv(delimiter) {\n    return new Dsv(delimiter);\n  }\n\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"]\";\n    }).join(\",\") + \"}\");\n  }\n\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function(row, i) {\n      return f(object(row), i, columns);\n    };\n  }\n\n  // Compute unique columns in order of discovery.\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n        columns = [];\n\n    rows.forEach(function(row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n\n    return columns;\n  }\n\n  function Dsv(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    this.parse = function(text, f) {\n      var convert, columns, rows = this.parseRows(text, function(row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n      rows.columns = columns;\n      return rows;\n    };\n\n    this.parseRows = function(text, f) {\n      var EOL = {}, // sentinel value for end-of-line\n          EOF = {}, // sentinel value for end-of-file\n          rows = [], // output rows\n          N = text.length,\n          I = 0, // current character index\n          n = 0, // the current line number\n          t, // the current token\n          eol; // is the current token followed by EOL?\n\n      function token() {\n        if (I >= N) return EOF; // special case: end of file\n        if (eol) return eol = false, EOL; // special case: end of line\n\n        // special case: quotes\n        var j = I, c;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // common case: find next delimiter or newline\n        while (I < N) {\n          var k = 1;\n          c = text.charCodeAt(I++);\n          if (c === 10) eol = true; // \\n\n          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n          else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        // special case: last token before EOF\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    }\n\n    this.format = function(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n        return columns.map(function(column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    this.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\" : text;\n    }\n  }\n\n  dsv.prototype = Dsv.prototype;\n\n  var csv = dsv(\",\");\n  var tsv = dsv(\"\\t\");\n\n  var version = \"0.1.14\";\n\n  exports.version = version;\n  exports.dsv = dsv;\n  exports.csv = csv;\n  exports.tsv = tsv;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/~/d3-dsv/build/d3-dsv.js\n// module id = SAbC\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar bar;\n(function (bar) {\n    function markType() {\n        return 'rect';\n    }\n    bar.markType = markType;\n    function properties(model) {\n        var p = {};\n        var orient = model.config().mark.orient;\n        var stack = model.stack();\n        var xFieldDef = model.encoding().x;\n        var x2FieldDef = model.encoding().x2;\n        var xIsMeasure = fielddef_1.isMeasure(xFieldDef) || fielddef_1.isMeasure(x2FieldDef);\n        if (stack && channel_1.X === stack.fieldChannel) {\n            p.x = {\n                scale: model.scaleName(channel_1.X),\n                field: model.field(channel_1.X, { suffix: '_start' })\n            };\n            p.x2 = {\n                scale: model.scaleName(channel_1.X),\n                field: model.field(channel_1.X, { suffix: '_end' })\n            };\n        }\n        else if (xIsMeasure) {\n            if (orient === 'horizontal') {\n                if (model.has(channel_1.X)) {\n                    p.x = {\n                        scale: model.scaleName(channel_1.X),\n                        field: model.field(channel_1.X)\n                    };\n                }\n                else {\n                    p.x = {\n                        scale: model.scaleName(channel_1.X),\n                        value: 0\n                    };\n                }\n                if (model.has(channel_1.X2)) {\n                    p.x2 = {\n                        scale: model.scaleName(channel_1.X),\n                        field: model.field(channel_1.X2)\n                    };\n                }\n                else {\n                    p.x2 = {\n                        scale: model.scaleName(channel_1.X),\n                        value: 0\n                    };\n                }\n            }\n            else {\n                p.xc = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X)\n                };\n                p.width = { value: sizeValue(model, channel_1.X) };\n            }\n        }\n        else if (model.fieldDef(channel_1.X).bin) {\n            if (model.has(channel_1.SIZE) && orient !== 'horizontal') {\n                p.xc = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_mid' })\n                };\n                p.width = {\n                    scale: model.scaleName(channel_1.SIZE),\n                    field: model.field(channel_1.SIZE)\n                };\n            }\n            else {\n                p.x = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_start' }),\n                    offset: 1\n                };\n                p.x2 = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_end' })\n                };\n            }\n        }\n        else {\n            if (model.has(channel_1.X)) {\n                p.xc = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X)\n                };\n            }\n            else {\n                p.x = { value: 0, offset: 2 };\n            }\n            p.width = model.has(channel_1.SIZE) && orient !== 'horizontal' ? {\n                scale: model.scaleName(channel_1.SIZE),\n                field: model.field(channel_1.SIZE)\n            } : {\n                value: sizeValue(model, (channel_1.X))\n            };\n        }\n        var yFieldDef = model.encoding().y;\n        var y2FieldDef = model.encoding().y2;\n        var yIsMeasure = fielddef_1.isMeasure(yFieldDef) || fielddef_1.isMeasure(y2FieldDef);\n        if (stack && channel_1.Y === stack.fieldChannel) {\n            p.y = {\n                scale: model.scaleName(channel_1.Y),\n                field: model.field(channel_1.Y, { suffix: '_start' })\n            };\n            p.y2 = {\n                scale: model.scaleName(channel_1.Y),\n                field: model.field(channel_1.Y, { suffix: '_end' })\n            };\n        }\n        else if (yIsMeasure) {\n            if (orient !== 'horizontal') {\n                if (model.has(channel_1.Y)) {\n                    p.y = {\n                        scale: model.scaleName(channel_1.Y),\n                        field: model.field(channel_1.Y)\n                    };\n                }\n                else {\n                    p.y = {\n                        scale: model.scaleName(channel_1.Y),\n                        value: 0\n                    };\n                }\n                if (model.has(channel_1.Y2)) {\n                    p.y2 = {\n                        scale: model.scaleName(channel_1.Y),\n                        field: model.field(channel_1.Y2)\n                    };\n                }\n                else {\n                    p.y2 = {\n                        scale: model.scaleName(channel_1.Y),\n                        value: 0\n                    };\n                }\n            }\n            else {\n                p.yc = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y)\n                };\n                p.height = { value: sizeValue(model, channel_1.Y) };\n            }\n        }\n        else if (model.fieldDef(channel_1.Y).bin) {\n            if (model.has(channel_1.SIZE) && orient === 'horizontal') {\n                p.yc = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_mid' })\n                };\n                p.height = {\n                    scale: model.scaleName(channel_1.SIZE),\n                    field: model.field(channel_1.SIZE)\n                };\n            }\n            else {\n                p.y = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_start' })\n                };\n                p.y2 = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_end' }),\n                    offset: 1\n                };\n            }\n        }\n        else {\n            if (model.has(channel_1.Y)) {\n                p.yc = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y)\n                };\n            }\n            else {\n                p.y2 = {\n                    field: { group: 'height' },\n                    offset: -1\n                };\n            }\n            p.height = model.has(channel_1.SIZE) && orient === 'horizontal' ? {\n                scale: model.scaleName(channel_1.SIZE),\n                field: model.field(channel_1.SIZE)\n            } : {\n                value: sizeValue(model, channel_1.Y)\n            };\n        }\n        common_1.applyColorAndOpacity(p, model);\n        return p;\n    }\n    bar.properties = properties;\n    function sizeValue(model, channel) {\n        var fieldDef = model.fieldDef(channel_1.SIZE);\n        if (fieldDef && fieldDef.value !== undefined) {\n            return fieldDef.value;\n        }\n        var markConfig = model.config().mark;\n        if (markConfig.barSize) {\n            return markConfig.barSize;\n        }\n        return model.isOrdinalScale(channel) ?\n            model.scale(channel).bandSize - 1 :\n            !model.has(channel) ?\n                model.config().scale.bandSize - 1 :\n                markConfig.barThinSize;\n    }\n    function labels(model) {\n        return undefined;\n    }\n    bar.labels = labels;\n})(bar = exports.bar || (exports.bar = {}));\n//# sourceMappingURL=bar.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/bar.js\n// module id = SIx5\n// module chunks = 0","var dl = require('datalib'),\n    parseProperties = require('./properties');\n\nfunction parseMark(model, mark, applyDefaults) {\n  var props = mark.properties || (applyDefaults && (mark.properties = {})),\n      enter = props.enter || (applyDefaults && (props.enter = {})),\n      group = mark.marks,\n      config = model.config().marks || {};\n\n  if (applyDefaults) {\n    // for scatter plots, set symbol size specified in config if not in spec\n    if (mark.type === 'symbol' && !enter.size && config.symbolSize) {\n        enter.size = {value: config.symbolSize};\n    }\n\n    // Themes define a default \"color\" that maps to fill/stroke based on mark type.\n    var colorMap = {\n      arc: 'fill', area: 'fill', rect: 'fill', symbol: 'fill', text: 'fill',\n      line: 'stroke', path: 'stroke', rule: 'stroke'\n    };\n\n    // Set default mark color if no color is given in spec, and only do so for\n    // user-defined marks (not axis/legend marks).\n    var colorProp = colorMap[mark.type];\n    if (!enter[colorProp] && config.color) {\n      enter[colorProp] = {value: config.color};\n    }\n  }\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g, true); });\n  }\n\n  return mark;\n}\n\nmodule.exports = parseMark;\n\nparseMark.schema = {\n  \"defs\": {\n    \"mark\": {\n      \"type\": \"object\",\n\n      \"properties\": {\n        \"name\": {\"type\": \"string\"},\n        \"key\": {\"type\": \"string\"},\n        \"type\": {\"enum\": [\"rect\", \"symbol\", \"path\", \"arc\",\n          \"area\", \"line\", \"rule\", \"image\", \"text\", \"group\"]},\n\n        \"from\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"data\": {\"type\": \"string\"},\n            \"mark\": {\"type\": \"string\"},\n            \"transform\": {\"$ref\": \"#/defs/transform\"}\n          },\n          \"additionalProperties\": false\n        },\n\n        \"delay\": {\"$ref\": \"#/refs/numberValue\"},\n        \"ease\": {\n          \"enum\": [\"linear\", \"quad\", \"cubic\", \"sin\",\n            \"exp\", \"circle\", \"bounce\"].reduce(function(acc, e) {\n              [\"in\", \"out\", \"in-out\", \"out-in\"].forEach(function(m) {\n                acc.push(e+\"-\"+m);\n              });\n              return acc;\n          }, [])\n        },\n\n        \"interactive\": {\"type\": \"boolean\"},\n\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"enter\":  {\"$ref\": \"#/defs/propset\"},\n            \"update\": {\"$ref\": \"#/defs/propset\"},\n            \"exit\":   {\"$ref\": \"#/defs/propset\"},\n            \"hover\":  {\"$ref\": \"#/defs/propset\"}\n          },\n          \"additionalProperties\": false,\n          \"anyOf\": [{\"required\": [\"enter\"]}, {\"required\": [\"update\"]}]\n        }\n      },\n\n      // \"additionalProperties\": false,\n      \"required\": [\"type\"]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/mark.js\n// module id = SbOu\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Hierarchy(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: 'array<field>', default: null},\n    children: {type: 'field', default: 'children'},\n    parent: {type: 'field', default: 'parent'},\n    field: {type: 'value', default: null},\n    // layout parameters\n    mode: {type: 'value', default: 'tidy'}, // tidy, cluster, partition\n    size: {type: 'array<value>', default: require('./screen').size},\n    nodesize: {type: 'array<value>', default: null},\n    orient: {type: 'value', default: 'cartesian'}\n  });\n\n  this._mode = null;\n  this._output = {\n    'x':      'layout_x',\n    'y':      'layout_y',\n    'width':  'layout_width',\n    'height': 'layout_height',\n    'depth':  'layout_depth'\n  };\n  return this.mutates(true);\n}\n\nvar PARTITION = 'partition';\n\nvar SEPARATION = {\n  cartesian: function(a, b) { return (a.parent === b.parent ? 1 : 2); },\n  radial: function(a, b) { return (a.parent === b.parent ? 1 : 2) / a.depth; }\n};\n\nvar prototype = (Hierarchy.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Hierarchy;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['hierarchy layout']);\n\n  // get variables\n  var layout = this._layout,\n      output = this._output,\n      mode   = this.param('mode'),\n      sort   = this.param('sort'),\n      nodesz = this.param('nodesize'),\n      parent = this.param('parent').accessor,\n      root = data.filter(function(d) { return parent(d) === null; })[0];\n\n  if (mode !== this._mode) {\n    this._mode = mode;\n    if (mode === 'tidy') mode = 'tree';\n    layout = (this._layout = d3.layout[mode]());\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.depth] = 1;\n  if (mode === PARTITION) {\n    input.fields[output.width] = 1;\n    input.fields[output.height] = 1;\n    layout.value(this.param('field').accessor);\n  } else {\n    layout.separation(SEPARATION[this.param('orient')]);\n  }\n\n  if (nodesz.length && mode !== PARTITION) {\n    layout.nodeSize(nodesz);\n  } else {\n    layout.size(this.param('size'));\n  }\n\n  layout\n    .sort(sort.field.length ? dl.comparator(sort.field) : null)\n    .children(this.param('children').accessor)\n    .nodes(root);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    Tuple.set(n, output.x, n.x);\n    Tuple.set(n, output.y, n.y);\n    Tuple.set(n, output.depth, n.depth);\n    if (mode === PARTITION) {\n      Tuple.set(n, output.width, n.dx);\n      Tuple.set(n, output.height, n.dy);\n    }\n  });\n\n  // return changeset\n  return input;\n};\n\nmodule.exports = Hierarchy;\n\nHierarchy.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Hierarchy transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"hierarchy\"]},\n    \"sort\": {\n      \"description\": \"A list of fields to use as sort criteria for sibling nodes.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"children\": {\n      \"description\": \"The data field for the children node array\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"children\"\n    },\n    \"parent\": {\n      \"description\": \"The data field for the parent node\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"parent\"\n    },\n    \"field\": {\n      \"description\": \"The value for the area of each leaf-level node for partition layouts.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"mode\": {\n      \"description\": \"The layout algorithm mode to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"tidy\", \"cluster\", \"partition\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"tidy\"\n    },\n    \"orient\": {\n      \"description\": \"The layout orientation to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"cartesian\", \"radial\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"cartesian\"\n    },\n    \"size\": {\n      \"description\": \"The dimensions of the tree layout\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [500, 500]\n    },\n    \"nodesize\": {\n      \"description\": \"Sets a fixed x,y size for each node (overrides the size parameter)\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": null\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"},\n        \"width\": {\"type\": \"string\", \"default\": \"layout_width\"},\n        \"height\": {\"type\": \"string\", \"default\": \"layout_height\"},\n        \"depth\": {\"type\": \"string\", \"default\": \"layout_depth\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Hierarchy.js\n// module id = Sgrz\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('../aggregate');\nvar channel_1 = require('../channel');\nvar data_1 = require('../data');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar scale_1 = require('../scale');\nvar stack_1 = require('../stack');\nvar timeunit_1 = require('../timeunit');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar time_1 = require('./time');\nexports.COLOR_LEGEND = 'color_legend';\nexports.COLOR_LEGEND_LABEL = 'color_legend_label';\nfunction parseScaleComponent(model) {\n    return model.channels().reduce(function (scale, channel) {\n        if (model.scale(channel)) {\n            var fieldDef = model.fieldDef(channel);\n            var scales = {\n                main: parseMainScale(model, fieldDef, channel)\n            };\n            if (channel === channel_1.COLOR && model.legend(channel_1.COLOR) && (fieldDef.type === type_1.ORDINAL || fieldDef.bin || fieldDef.timeUnit)) {\n                scales.colorLegend = parseColorLegendScale(model, fieldDef);\n                if (fieldDef.bin) {\n                    scales.binColorLegend = parseBinColorLegendLabel(model, fieldDef);\n                }\n            }\n            scale[channel] = scales;\n        }\n        return scale;\n    }, {});\n}\nexports.parseScaleComponent = parseScaleComponent;\nfunction parseMainScale(model, fieldDef, channel) {\n    var scale = model.scale(channel);\n    var sort = model.sort(channel);\n    var scaleDef = {\n        name: model.scaleName(channel),\n        type: scale.type,\n    };\n    if (channel === channel_1.X && model.has(channel_1.X2)) {\n        if (model.has(channel_1.X)) {\n            scaleDef.domain = { fields: [domain(scale, model, channel_1.X), domain(scale, model, channel_1.X2)] };\n        }\n        else {\n            scaleDef.domain = domain(scale, model, channel_1.X2);\n        }\n    }\n    else if (channel === channel_1.Y && model.has(channel_1.Y2)) {\n        if (model.has(channel_1.Y)) {\n            scaleDef.domain = { fields: [domain(scale, model, channel_1.Y), domain(scale, model, channel_1.Y2)] };\n        }\n        else {\n            scaleDef.domain = domain(scale, model, channel_1.Y2);\n        }\n    }\n    else {\n        scaleDef.domain = domain(scale, model, channel);\n    }\n    util_1.extend(scaleDef, rangeMixins(scale, model, channel));\n    if (sort && (typeof sort === 'string' ? sort : sort.order) === 'descending') {\n        scaleDef.reverse = true;\n    }\n    [\n        'round',\n        'clamp', 'nice',\n        'exponent', 'zero',\n        'padding', 'points'\n    ].forEach(function (property) {\n        var value = exports[property](scale, channel, fieldDef, model);\n        if (value !== undefined) {\n            scaleDef[property] = value;\n        }\n    });\n    return scaleDef;\n}\nfunction parseColorLegendScale(model, fieldDef) {\n    return {\n        name: model.scaleName(exports.COLOR_LEGEND),\n        type: scale_1.ScaleType.ORDINAL,\n        domain: {\n            data: model.dataTable(),\n            field: model.field(channel_1.COLOR, (fieldDef.bin || fieldDef.timeUnit) ? {} : { prefn: 'rank_' }),\n            sort: true\n        },\n        range: { data: model.dataTable(), field: model.field(channel_1.COLOR), sort: true }\n    };\n}\nfunction parseBinColorLegendLabel(model, fieldDef) {\n    return {\n        name: model.scaleName(exports.COLOR_LEGEND_LABEL),\n        type: scale_1.ScaleType.ORDINAL,\n        domain: {\n            data: model.dataTable(),\n            field: model.field(channel_1.COLOR),\n            sort: true\n        },\n        range: {\n            data: model.dataTable(),\n            field: fielddef_1.field(fieldDef, { binSuffix: '_range' }),\n            sort: {\n                field: model.field(channel_1.COLOR, { binSuffix: '_start' }),\n                op: 'min'\n            }\n        }\n    };\n}\nfunction scaleType(scale, fieldDef, channel, mark) {\n    if (!channel_1.hasScale(channel)) {\n        return null;\n    }\n    if (util_1.contains([channel_1.ROW, channel_1.COLUMN, channel_1.SHAPE], channel)) {\n        return scale_1.ScaleType.ORDINAL;\n    }\n    if (scale.type !== undefined) {\n        return scale.type;\n    }\n    switch (fieldDef.type) {\n        case type_1.NOMINAL:\n            return scale_1.ScaleType.ORDINAL;\n        case type_1.ORDINAL:\n            if (channel === channel_1.COLOR) {\n                return scale_1.ScaleType.LINEAR;\n            }\n            return scale_1.ScaleType.ORDINAL;\n        case type_1.TEMPORAL:\n            if (channel === channel_1.COLOR) {\n                return scale_1.ScaleType.TIME;\n            }\n            if (fieldDef.timeUnit) {\n                switch (fieldDef.timeUnit) {\n                    case timeunit_1.TimeUnit.HOURS:\n                    case timeunit_1.TimeUnit.DAY:\n                    case timeunit_1.TimeUnit.MONTH:\n                    case timeunit_1.TimeUnit.QUARTER:\n                        return scale_1.ScaleType.ORDINAL;\n                    default:\n                        return scale_1.ScaleType.TIME;\n                }\n            }\n            return scale_1.ScaleType.TIME;\n        case type_1.QUANTITATIVE:\n            if (fieldDef.bin) {\n                return util_1.contains([channel_1.X, channel_1.Y, channel_1.COLOR], channel) ? scale_1.ScaleType.LINEAR : scale_1.ScaleType.ORDINAL;\n            }\n            return scale_1.ScaleType.LINEAR;\n    }\n    return null;\n}\nexports.scaleType = scaleType;\nfunction domain(scale, model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    if (scale.domain) {\n        return scale.domain;\n    }\n    if (fieldDef.type === type_1.TEMPORAL) {\n        if (time_1.rawDomain(fieldDef.timeUnit, channel)) {\n            return {\n                data: fieldDef.timeUnit,\n                field: 'date'\n            };\n        }\n        return {\n            data: model.dataTable(),\n            field: model.field(channel),\n            sort: {\n                field: model.field(channel),\n                op: 'min'\n            }\n        };\n    }\n    var stack = model.stack();\n    if (stack && channel === stack.fieldChannel) {\n        if (stack.offset === stack_1.StackOffset.NORMALIZE) {\n            return [0, 1];\n        }\n        return {\n            data: model.dataName(data_1.STACKED_SCALE),\n            field: model.field(channel, { prefn: 'sum_' })\n        };\n    }\n    var useRawDomain = _useRawDomain(scale, model, channel), sort = domainSort(model, channel, scale.type);\n    if (useRawDomain) {\n        return {\n            data: data_1.SOURCE,\n            field: model.field(channel, { noAggregate: true })\n        };\n    }\n    else if (fieldDef.bin) {\n        if (scale.type === scale_1.ScaleType.ORDINAL) {\n            return {\n                data: model.dataTable(),\n                field: model.field(channel, { binSuffix: '_range' }),\n                sort: {\n                    field: model.field(channel, { binSuffix: '_start' }),\n                    op: 'min'\n                }\n            };\n        }\n        else if (channel === channel_1.COLOR) {\n            return {\n                data: model.dataTable(),\n                field: model.field(channel, { binSuffix: '_start' })\n            };\n        }\n        else {\n            return {\n                data: model.dataTable(),\n                field: [\n                    model.field(channel, { binSuffix: '_start' }),\n                    model.field(channel, { binSuffix: '_end' })\n                ]\n            };\n        }\n    }\n    else if (sort) {\n        return {\n            data: sort.op ? data_1.SOURCE : model.dataTable(),\n            field: (fieldDef.type === type_1.ORDINAL && channel === channel_1.COLOR) ? model.field(channel, { prefn: 'rank_' }) : model.field(channel),\n            sort: sort\n        };\n    }\n    else {\n        return {\n            data: model.dataTable(),\n            field: (fieldDef.type === type_1.ORDINAL && channel === channel_1.COLOR) ? model.field(channel, { prefn: 'rank_' }) : model.field(channel),\n        };\n    }\n}\nexports.domain = domain;\nfunction domainSort(model, channel, scaleType) {\n    if (scaleType !== scale_1.ScaleType.ORDINAL) {\n        return undefined;\n    }\n    var sort = model.sort(channel);\n    if (util_1.contains(['ascending', 'descending', undefined], sort)) {\n        return true;\n    }\n    if (typeof sort !== 'string') {\n        return {\n            op: sort.op,\n            field: sort.field\n        };\n    }\n    return undefined;\n}\nexports.domainSort = domainSort;\nfunction _useRawDomain(scale, model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    return scale.useRawDomain &&\n        fieldDef.aggregate &&\n        aggregate_1.SHARED_DOMAIN_OPS.indexOf(fieldDef.aggregate) >= 0 &&\n        ((fieldDef.type === type_1.QUANTITATIVE && !fieldDef.bin) ||\n            (fieldDef.type === type_1.TEMPORAL && util_1.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.type)));\n}\nfunction rangeMixins(scale, model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    var scaleConfig = model.config().scale;\n    if (scale.type === scale_1.ScaleType.ORDINAL && scale.bandSize && util_1.contains([channel_1.X, channel_1.Y], channel)) {\n        return { bandSize: scale.bandSize };\n    }\n    if (scale.range && !util_1.contains([channel_1.X, channel_1.Y, channel_1.ROW, channel_1.COLUMN], channel)) {\n        return { range: scale.range };\n    }\n    switch (channel) {\n        case channel_1.ROW:\n            return { range: 'height' };\n        case channel_1.COLUMN:\n            return { range: 'width' };\n    }\n    var unitModel = model;\n    switch (channel) {\n        case channel_1.X:\n            return {\n                rangeMin: 0,\n                rangeMax: unitModel.config().cell.width\n            };\n        case channel_1.Y:\n            return {\n                rangeMin: unitModel.config().cell.height,\n                rangeMax: 0\n            };\n        case channel_1.SIZE:\n            if (unitModel.mark() === mark_1.BAR) {\n                if (scaleConfig.barSizeRange !== undefined) {\n                    return { range: scaleConfig.barSizeRange };\n                }\n                var dimension = model.config().mark.orient === 'horizontal' ? channel_1.Y : channel_1.X;\n                return { range: [model.config().mark.barThinSize, model.scale(dimension).bandSize] };\n            }\n            else if (unitModel.mark() === mark_1.TEXT) {\n                return { range: scaleConfig.fontSizeRange };\n            }\n            else if (unitModel.mark() === mark_1.RULE) {\n                return { range: scaleConfig.ruleSizeRange };\n            }\n            else if (unitModel.mark() === mark_1.TICK) {\n                return { range: scaleConfig.tickSizeRange };\n            }\n            if (scaleConfig.pointSizeRange !== undefined) {\n                return { range: scaleConfig.pointSizeRange };\n            }\n            var bandSize = pointBandSize(unitModel);\n            return { range: [9, (bandSize - 2) * (bandSize - 2)] };\n        case channel_1.SHAPE:\n            return { range: scaleConfig.shapeRange };\n        case channel_1.COLOR:\n            if (fieldDef.type === type_1.NOMINAL) {\n                return { range: scaleConfig.nominalColorRange };\n            }\n            return { range: scaleConfig.sequentialColorRange };\n        case channel_1.OPACITY:\n            return { range: scaleConfig.opacity };\n    }\n    return {};\n}\nexports.rangeMixins = rangeMixins;\nfunction pointBandSize(model) {\n    var scaleConfig = model.config().scale;\n    var hasX = model.has(channel_1.X);\n    var hasY = model.has(channel_1.Y);\n    var xIsMeasure = fielddef_1.isMeasure(model.encoding().x);\n    var yIsMeasure = fielddef_1.isMeasure(model.encoding().y);\n    if (hasX && hasY) {\n        return xIsMeasure !== yIsMeasure ?\n            model.scale(xIsMeasure ? channel_1.Y : channel_1.X).bandSize :\n            Math.min(model.scale(channel_1.X).bandSize || scaleConfig.bandSize, model.scale(channel_1.Y).bandSize || scaleConfig.bandSize);\n    }\n    else if (hasY) {\n        return yIsMeasure ? model.config().scale.bandSize : model.scale(channel_1.Y).bandSize;\n    }\n    else if (hasX) {\n        return xIsMeasure ? model.config().scale.bandSize : model.scale(channel_1.X).bandSize;\n    }\n    return model.config().scale.bandSize;\n}\nfunction clamp(scale) {\n    if (util_1.contains([scale_1.ScaleType.LINEAR, scale_1.ScaleType.POW, scale_1.ScaleType.SQRT,\n        scale_1.ScaleType.LOG, scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.type)) {\n        return scale.clamp;\n    }\n    return undefined;\n}\nexports.clamp = clamp;\nfunction exponent(scale) {\n    if (scale.type === scale_1.ScaleType.POW) {\n        return scale.exponent;\n    }\n    return undefined;\n}\nexports.exponent = exponent;\nfunction nice(scale, channel, fieldDef) {\n    if (util_1.contains([scale_1.ScaleType.LINEAR, scale_1.ScaleType.POW, scale_1.ScaleType.SQRT, scale_1.ScaleType.LOG,\n        scale_1.ScaleType.TIME, scale_1.ScaleType.UTC, scale_1.ScaleType.QUANTIZE], scale.type)) {\n        if (scale.nice !== undefined) {\n            return scale.nice;\n        }\n        if (util_1.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.type)) {\n            return time_1.smallestUnit(fieldDef.timeUnit);\n        }\n        return util_1.contains([channel_1.X, channel_1.Y], channel);\n    }\n    return undefined;\n}\nexports.nice = nice;\nfunction padding(scale, channel) {\n    if (scale.type === scale_1.ScaleType.ORDINAL && util_1.contains([channel_1.X, channel_1.Y], channel)) {\n        return scale.padding;\n    }\n    return undefined;\n}\nexports.padding = padding;\nfunction points(scale, channel, __, model) {\n    if (scale.type === scale_1.ScaleType.ORDINAL && util_1.contains([channel_1.X, channel_1.Y], channel)) {\n        return true;\n    }\n    return undefined;\n}\nexports.points = points;\nfunction round(scale, channel) {\n    if (util_1.contains([channel_1.X, channel_1.Y, channel_1.ROW, channel_1.COLUMN, channel_1.SIZE], channel) && scale.round !== undefined) {\n        return scale.round;\n    }\n    return undefined;\n}\nexports.round = round;\nfunction zero(scale, channel, fieldDef) {\n    if (!util_1.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC, scale_1.ScaleType.ORDINAL], scale.type)) {\n        if (scale.zero !== undefined) {\n            return scale.zero;\n        }\n        return !fieldDef.bin && util_1.contains([channel_1.X, channel_1.Y], channel);\n    }\n    return undefined;\n}\nexports.zero = zero;\n//# sourceMappingURL=scale.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/scale.js\n// module id = TLMq\n// module chunks = 0","var df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: 'value'},\n    expr:  {type: 'expr'}\n  });\n\n  return this.mutates(true);\n}\n\nvar prototype = (Formula.prototype = Object.create(Transform.prototype));\nprototype.constructor = Formula;\n\nprototype.transform = function(input) {\n  log.debug(input, ['formulating']);\n\n  var field = this.param('field'),\n      expr = this.param('expr'),\n      updated = false;\n\n  function set(x) {\n    Tuple.set(x, field, expr(x));\n    updated = true;\n  }\n\n  input.add.forEach(set);\n\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  if (updated) input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;\n\nFormula.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Formula transform\",\n  \"description\": \"Extends data elements with new values according to a calculation formula.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"formula\"]},\n    \"field\": {\n      \"type\": \"string\",\n      \"description\": \"The property name in which to store the computed formula value.\"\n    },\n    \"expr\": {\n      \"type\": \"string\",\n      \"description\": \"A string containing an expression (in JavaScript syntax) for the formula.\"\n    }\n  },\n  \"required\": [\"type\", \"field\", \"expr\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Formula.js\n// module id = TXaq\n// module chunks = 0","var dl = require('datalib'),\n    template = dl.template,\n    expr = require('vega-expression'),\n    args = ['datum', 'parent', 'event', 'signals'];\n\nvar compile = expr.compiler(args, {\n  idWhiteList: args,\n  fieldVar:    args[0],\n  globalVar:   function(id) {\n    return 'this.sig[' + dl.str(id) + ']._value';\n  },\n  functions:   function(codegen) {\n    var fn = expr.functions(codegen);\n    fn.eventItem  = 'event.vg.getItem';\n    fn.eventGroup = 'event.vg.getGroup';\n    fn.eventX     = 'event.vg.getX';\n    fn.eventY     = 'event.vg.getY';\n    fn.open       = openGen(codegen);\n    fn.scale      = scaleGen(codegen, false);\n    fn.iscale     = scaleGen(codegen, true);\n    fn.inrange    = 'this.defs.inrange';\n    fn.indata     = indataGen(codegen);\n    fn.format     = 'this.defs.format';\n    fn.timeFormat = 'this.defs.timeFormat';\n    fn.utcFormat  = 'this.defs.utcFormat';\n    return fn;\n  },\n  functionDefs: function(/*codegen*/) {\n    return {\n      'scale':      scale,\n      'inrange':    inrange,\n      'indata':     indata,\n      'format':     numberFormat,\n      'timeFormat': timeFormat,\n      'utcFormat':  utcFormat,\n      'open':       windowOpen\n    };\n  }\n});\n\nfunction openGen(codegen) {\n  return function (args) {\n    args = args.map(codegen);\n    var n = args.length;\n    if (n < 1 || n > 2) {\n      throw Error(\"open takes exactly 1 or 2 arguments.\");\n    }\n    return 'this.defs.open(this.model, ' +\n      args[0] + (n > 1 ? ',' + args[1] : '') + ')';\n  };\n}\n\nfunction windowOpen(model, url, name) {\n  if (typeof window !== 'undefined' && window && window.open) {\n    var opt = dl.extend({type: 'open', url: url, name: name}, model.config().load),\n        uri = dl.load.sanitizeUrl(opt);\n    if (uri) {\n      window.open(uri, name);\n    } else {\n      throw Error('Invalid URL: ' + opt.url);\n    }\n  } else {\n    throw Error('Open function can only be invoked in a browser.');\n  }\n}\n\nfunction scaleGen(codegen, invert) {\n  return function(args) {\n    args = args.map(codegen);\n    var n = args.length;\n    if (n < 2 || n > 3) {\n      throw Error(\"scale takes exactly 2 or 3 arguments.\");\n    }\n    return 'this.defs.scale(this.model, ' + invert + ', ' +\n      args[0] + ',' + args[1] + (n > 2 ? ',' + args[2] : '') + ')';\n  };\n}\n\nfunction scale(model, invert, name, value, scope) {\n  if (!scope || !scope.scale) {\n    scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n  }\n  // Verify scope is valid\n  if (model.group(scope._id) !== scope) {\n    throw Error('Scope for scale \"'+name+'\" is not a valid group item.');\n  }\n  var s = scope.scale(name);\n  return !s ? value : (invert ? s.invert(value) : s(value));\n}\n\nfunction inrange(val, a, b, exclusive) {\n  var min = a, max = b;\n  if (a > b) { min = b; max = a; }\n  return exclusive ?\n    (min < val && max > val) :\n    (min <= val && max >= val);\n}\n\nfunction indataGen(codegen) {\n  return function(args, globals, fields, dataSources) {\n    var data;\n    if (args.length !== 3) {\n      throw Error(\"indata takes 3 arguments.\");\n    }\n    if (args[0].type !== 'Literal') {\n      throw Error(\"Data source name must be a literal for indata.\");\n    }\n\n    data = args[0].value;\n    dataSources[data] = 1;\n    if (args[2].type === 'Literal') {\n      indataGen.model.requestIndex(data, args[2].value);\n    }\n\n    args = args.map(codegen);\n    return 'this.defs.indata(this.model,' +\n      args[0] + ',' + args[1] + ',' + args[2] + ')';\n  };\n}\n\nfunction indata(model, dataname, val, field) {\n  var data = model.data(dataname),\n      index = data.getIndex(field);\n  return index[val] > 0;\n}\n\nfunction numberFormat(specifier, v) {\n  return template.format(specifier, 'number')(v);\n}\n\nfunction timeFormat(specifier, d) {\n  return template.format(specifier, 'time')(d);\n}\n\nfunction utcFormat(specifier, d) {\n  return template.format(specifier, 'utc')(d);\n}\n\nfunction wrap(model) {\n  return function(str) {\n    indataGen.model = model;\n    var x = compile(str);\n    x.model = model;\n    x.sig = model ? model._signals : {};\n    return x;\n  };\n}\n\nwrap.scale = scale;\nwrap.codegen = compile.codegen;\nmodule.exports = wrap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/expr.js\n// module id = TrdW\n// module chunks = 0","module.exports = {\n  axes:       require('./axes'),\n  background: require('./background'),\n  data:       require('./data'),\n  events:     require('vega-event-selector'),\n  expr:       require('./expr'),\n  legends:    require('./legends'),\n  mark:       require('./mark'),\n  marks:      require('./marks'),\n  modify:     require('./modify'),\n  padding:    require('./padding'),\n  predicates: require('./predicates'),\n  properties: require('./properties'),\n  signals:    require('./signals'),\n  spec:       require('./spec'),\n  streams:    require('./streams'),\n  transforms: require('./transforms')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/index.js\n// module id = UaGl\n// module chunks = 0","var Transform = require('./Transform'),\n    Aggregate = require('./Aggregate');\n\nfunction Facet(graph) {\n  Transform.addParameters(this, {\n    transform: {\n      type: \"custom\",\n      set: function(pipeline) {\n        return (this._transform._pipeline = pipeline, this._transform);\n      },\n      get: function() {\n        var parse = require('../parse/transforms'),\n            facet = this._transform;\n        return facet._pipeline.map(function(t) {\n          return parse(facet._graph, t);\n        });\n      }\n    }\n  });\n\n  this._pipeline = [];\n  return Aggregate.call(this, graph);\n}\n\nvar prototype = (Facet.prototype = Object.create(Aggregate.prototype));\nprototype.constructor = Facet;\n\nprototype.aggr = function() {\n  return Aggregate.prototype.aggr.call(this).facet(this);\n};\n\nprototype.transform = function(input, reset) {\n  var output  = Aggregate.prototype.transform.call(this, input, reset);\n\n  // New facet cells should trigger a re-ranking of the dataflow graph.\n  // This ensures facet datasources are computed before scenegraph nodes.\n  // We rerank the Facet's first listener, which is the next node in the\n  // datasource's pipeline.\n  if (input.add.length) {\n    this.listeners()[0].rerank();\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;\n\nvar dl = require('datalib');\n\nFacet.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Facet transform\",\n  \"description\": \"A special aggregate transform that organizes a data set into groups or \\\"facets\\\".\",\n  \"type\": \"object\",\n  \"properties\": dl.extend({}, Aggregate.schema.properties, {\n    \"type\": {\"enum\": [\"facet\"]},\n    \"transform\": {\"$ref\": \"#/defs/transform\"}\n  }),\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Facet.js\n// module id = Uikm\n// module chunks = 0","\"use strict\";\nvar util_1 = require('./util');\nvar mark_1 = require('./mark');\nexports.DEFAULT_REQUIRED_CHANNEL_MAP = {\n    text: ['text'],\n    line: ['x', 'y'],\n    area: ['x', 'y']\n};\nexports.DEFAULT_SUPPORTED_CHANNEL_TYPE = {\n    bar: util_1.toMap(['row', 'column', 'x', 'y', 'size', 'color', 'detail']),\n    line: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\n    area: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\n    tick: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\n    circle: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n    square: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n    point: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail', 'shape']),\n    text: util_1.toMap(['row', 'column', 'size', 'color', 'text'])\n};\nfunction getEncodingMappingError(spec, requiredChannelMap, supportedChannelMap) {\n    if (requiredChannelMap === void 0) { requiredChannelMap = exports.DEFAULT_REQUIRED_CHANNEL_MAP; }\n    if (supportedChannelMap === void 0) { supportedChannelMap = exports.DEFAULT_SUPPORTED_CHANNEL_TYPE; }\n    var mark = spec.mark;\n    var encoding = spec.encoding;\n    var requiredChannels = requiredChannelMap[mark];\n    var supportedChannels = supportedChannelMap[mark];\n    for (var i in requiredChannels) {\n        if (!(requiredChannels[i] in encoding)) {\n            return 'Missing encoding channel \\\"' + requiredChannels[i] +\n                '\\\" for mark \\\"' + mark + '\\\"';\n        }\n    }\n    for (var channel in encoding) {\n        if (!supportedChannels[channel]) {\n            return 'Encoding channel \\\"' + channel +\n                '\\\" is not supported by mark type \\\"' + mark + '\\\"';\n        }\n    }\n    if (mark === mark_1.BAR && !encoding.x && !encoding.y) {\n        return 'Missing both x and y for bar';\n    }\n    return null;\n}\nexports.getEncodingMappingError = getEncodingMappingError;\n//# sourceMappingURL=validate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/validate.js\n// module id = Utn/\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar source_1 = require('./source');\nvar formatparse_1 = require('./formatparse');\nvar nullfilter_1 = require('./nullfilter');\nvar filter_1 = require('./filter');\nvar bin_1 = require('./bin');\nvar formula_1 = require('./formula');\nvar nonpositivenullfilter_1 = require('./nonpositivenullfilter');\nvar summary_1 = require('./summary');\nvar stackscale_1 = require('./stackscale');\nvar timeunit_1 = require('./timeunit');\nvar timeunitdomain_1 = require('./timeunitdomain');\nvar colorrank_1 = require('./colorrank');\nfunction parseUnitData(model) {\n    return {\n        formatParse: formatparse_1.formatParse.parseUnit(model),\n        nullFilter: nullfilter_1.nullFilter.parseUnit(model),\n        filter: filter_1.filter.parseUnit(model),\n        nonPositiveFilter: nonpositivenullfilter_1.nonPositiveFilter.parseUnit(model),\n        source: source_1.source.parseUnit(model),\n        bin: bin_1.bin.parseUnit(model),\n        calculate: formula_1.formula.parseUnit(model),\n        timeUnit: timeunit_1.timeUnit.parseUnit(model),\n        timeUnitDomain: timeunitdomain_1.timeUnitDomain.parseUnit(model),\n        summary: summary_1.summary.parseUnit(model),\n        stackScale: stackscale_1.stackScale.parseUnit(model),\n        colorRank: colorrank_1.colorRank.parseUnit(model)\n    };\n}\nexports.parseUnitData = parseUnitData;\nfunction parseFacetData(model) {\n    return {\n        formatParse: formatparse_1.formatParse.parseFacet(model),\n        nullFilter: nullfilter_1.nullFilter.parseFacet(model),\n        filter: filter_1.filter.parseFacet(model),\n        nonPositiveFilter: nonpositivenullfilter_1.nonPositiveFilter.parseFacet(model),\n        source: source_1.source.parseFacet(model),\n        bin: bin_1.bin.parseFacet(model),\n        calculate: formula_1.formula.parseFacet(model),\n        timeUnit: timeunit_1.timeUnit.parseFacet(model),\n        timeUnitDomain: timeunitdomain_1.timeUnitDomain.parseFacet(model),\n        summary: summary_1.summary.parseFacet(model),\n        stackScale: stackscale_1.stackScale.parseFacet(model),\n        colorRank: colorrank_1.colorRank.parseFacet(model)\n    };\n}\nexports.parseFacetData = parseFacetData;\nfunction parseLayerData(model) {\n    return {\n        filter: filter_1.filter.parseLayer(model),\n        formatParse: formatparse_1.formatParse.parseLayer(model),\n        nullFilter: nullfilter_1.nullFilter.parseLayer(model),\n        nonPositiveFilter: nonpositivenullfilter_1.nonPositiveFilter.parseLayer(model),\n        source: source_1.source.parseLayer(model),\n        bin: bin_1.bin.parseLayer(model),\n        calculate: formula_1.formula.parseLayer(model),\n        timeUnit: timeunit_1.timeUnit.parseLayer(model),\n        timeUnitDomain: timeunitdomain_1.timeUnitDomain.parseLayer(model),\n        summary: summary_1.summary.parseLayer(model),\n        stackScale: stackscale_1.stackScale.parseLayer(model),\n        colorRank: colorrank_1.colorRank.parseLayer(model)\n    };\n}\nexports.parseLayerData = parseLayerData;\nfunction assembleData(model, data) {\n    var component = model.component.data;\n    var sourceData = source_1.source.assemble(model, component);\n    if (sourceData) {\n        data.push(sourceData);\n    }\n    summary_1.summary.assemble(component, model).forEach(function (summaryData) {\n        data.push(summaryData);\n    });\n    if (data.length > 0) {\n        var dataTable = data[data.length - 1];\n        var colorRankTransform = colorrank_1.colorRank.assemble(component);\n        if (colorRankTransform.length > 0) {\n            dataTable.transform = (dataTable.transform || []).concat(colorRankTransform);\n        }\n        var nonPositiveFilterTransform = nonpositivenullfilter_1.nonPositiveFilter.assemble(component);\n        if (nonPositiveFilterTransform.length > 0) {\n            dataTable.transform = (dataTable.transform || []).concat(nonPositiveFilterTransform);\n        }\n    }\n    else {\n        if (util_1.keys(component.colorRank).length > 0) {\n            throw new Error('Invalid colorRank not merged');\n        }\n        else if (util_1.keys(component.nonPositiveFilter).length > 0) {\n            throw new Error('Invalid nonPositiveFilter not merged');\n        }\n    }\n    var stackData = stackscale_1.stackScale.assemble(component);\n    if (stackData) {\n        data.push(stackData);\n    }\n    timeunitdomain_1.timeUnitDomain.assemble(component).forEach(function (timeUnitDomainData) {\n        data.push(timeUnitDomainData);\n    });\n    return data;\n}\nexports.assembleData = assembleData;\n//# sourceMappingURL=data.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/data.js\n// module id = V22v\n// module chunks = 0","function Handler() {\n  this._active = null;\n  this._handlers = {};\n}\n\nvar prototype = Handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = el;\n  this._obj = obj || null;\n  return this.padding(pad);\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  return this;\n};\n\nprototype.scene = function(scene) {\n  if (!arguments.length) return this._scene;\n  this._scene = scene;\n  return this;\n};\n\n// add an event handler\n// subclasses should override\nprototype.on = function(/*type, handler*/) {};\n\n// remove an event handler\n// subclasses should override\nprototype.off = function(/*type, handler*/) {};\n\n// return an array with all registered event handlers\nprototype.handlers = function() {\n  var h = this._handlers, a = [], k;\n  for (k in h) { a.push.apply(a, h[k]); }\n  return a;\n};\n\nprototype.eventName = function(name) {\n  var i = name.indexOf('.');\n  return i < 0 ? name : name.slice(0,i);\n};\n\nmodule.exports = Handler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/Handler.js\n// module id = VeBo\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    Item = require('vega-scenegraph').Item,\n    df = require('vega-dataflow'),\n    Node = df.Node, // jshint ignore:line\n    Deps = df.Dependencies,\n    Tuple = df.Tuple,\n    ChangeSet = df.ChangeSet,\n    Sentinel = {},\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    parseData = require('../parse/data');\n\nfunction Builder() {\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar Status = Builder.STATUS = {\n  ENTER:  'enter',\n  UPDATE: 'update',\n  EXIT:   'exit'\n};\n\nvar CONNECTED = 1, DISCONNECTED = 2;\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, graph)\n    .router(true)\n    .collector(true);\n\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? graph.data(this._from) : null;\n  this._map   = {};\n  this._status = null; // Connected or disconnected?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = (def.interactive !== false);\n  mark.items = [];\n  if (dl.isValid(def.name)) mark.name = def.name;\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if (def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain\n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== 'group');\n  this._encoder = new Encoder(this._graph, this._mark, this);\n  this._bounder = new Bounder(this._graph, this._mark);\n  this._output  = null; // Output changeset for reactive geom as Bounder reflows\n\n  if (this._ds) { this._encoder.dependency(Deps.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(Deps.DATA, this._encoder.dependency(Deps.DATA));\n  this.dependency(Deps.SCALES, this._encoder.dependency(Deps.SCALES));\n  this.dependency(Deps.SIGNALS, this._encoder.dependency(Deps.SIGNALS));\n\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here\n// because they need their group's data-joined context.\nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output, input, node;\n\n  if (geom) {\n    sibling = this.sibling(geom);\n    src  = sibling._isSuper ? sibling : sibling._bounder;\n    name = ['vg', this._parent_id, geom, src.listeners(true).length].join('_');\n    spec = {\n      name: name,\n      transform: from.transform,\n      modify: from.modify\n    };\n  } else {\n    src = this._graph.data(this._from);\n    if (!src) throw Error('Data source \"'+this._from+'\" is not defined.');\n    name = ['vg', this._from, this._def.type, src.listeners(true).length].join('_');\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._graph, spec);\n\n  if (geom) {\n    // Bounder reflows, so we need an intermediary node to propagate\n    // the output constructed by the Builder.\n    node = new Node(this._graph).addListener(this._ds.listener());\n    node.evaluate = function(input) {\n      var out  = ChangeSet.create(input),\n          sout = sibling._output;\n\n      out.add = sout.add;\n      out.mod = sout.mod;\n      out.rem = sout.rem;\n      return out;\n    };\n    src.addListener(node);\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources.\n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    output = this._ds.source().last();\n    input  = ChangeSet.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener(), output.stamp);\n  }\n}\n\nproto.ds = function() { return this._ds; };\nproto.parent   = function() { return this._parent; };\nproto.encoder  = function() { return this._encoder; };\nproto.pipeline = function() { return [this]; };\n\nproto.connect = function() {\n  var builder = this;\n\n  this._graph.connect(this.pipeline());\n  this._encoder._scales.forEach(function(s) {\n    if (!(s = builder._parent.scale(s))) return;\n    s.addListener(builder);\n  });\n\n  if (this._parent) {\n    if (this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return (this._status = CONNECTED, this);\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if (!this._listeners.length) return this;\n\n  function disconnectScales(scales) {\n    for(var i=0, len=scales.length, s; i<len; ++i) {\n      if (!(s = builder._parent.scale(scales[i]))) continue;\n      s.removeListener(builder);\n    }\n  }\n\n  Node.prototype.disconnect.call(this);\n  this._graph.disconnect(this.pipeline());\n  disconnectScales(this._encoder._scales);\n  disconnectScales(dl.keys(this._mark._scaleRefs));\n\n  return (this._status = DISCONNECTED, this);\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  log.debug(input, ['building', (this._from || this._def.from), this._def.type]);\n\n  var self = this,\n      def = this._mark.def,\n      props  = def.properties || {},\n      update = props.update   || {},\n      output = ChangeSet.create(input),\n      fullUpdate, fcs, data, name;\n\n  if (this._ds) {\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = output.data[(name=this._ds.name())];\n    output.data[name] = null;\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data[name] = data;\n\n    fcs = this._ds.last();\n    if (!fcs) throw Error('Builder evaluated before backing DataSource.');\n    if (fcs.stamp > this._stamp) {\n      join.call(this, fcs, output, this._ds.values(), true, fullUpdate);\n    } else if (fullUpdate) {\n      output.mod = this._mark.items.slice();\n    }\n  } else {\n    data = dl.isFunction(this._def.from) ? this._def.from() : [Sentinel];\n    join.call(this, input, output, data);\n  }\n\n  // Stash output before Bounder for downstream reactive geometry.\n  this._output = output = this._graph.evaluate(output, this._encoder);\n\n  // Add any new scale references to the dependency list, and ensure\n  // they're connected.\n  if (update.nested && update.nested.length && this._status === CONNECTED) {\n    dl.keys(this._mark._scaleRefs).forEach(function(s) {\n      var scale = self._parent.scale(s);\n      if (!scale) return;\n\n      scale.addListener(self);\n      self.dependency(Deps.SCALES, s);\n      self._encoder.dependency(Deps.SCALES, s);\n    });\n  }\n\n  // Supernodes calculate bounds too, but only on items marked dirty.\n  if (this._isSuper) {\n    output.mod = output.mod.filter(function(x) { return x._dirty; });\n    output = this._graph.evaluate(output, this._bounder);\n  }\n\n  return output;\n};\n\nfunction newItem() {\n  var item = Tuple.ingest(new Item(this._mark));\n\n  // For the root node's item\n  if (this._def.width)  Tuple.set(item, 'width',  this._def.width);\n  if (this._def.height) Tuple.set(item, 'height', this._def.height);\n  return item;\n}\n\nfunction join(input, output, data, ds, fullUpdate) {\n  var keyf = keyFunction(this._def.key || (ds ? '_id' : null)),\n      prev = this._mark.items || [],\n      rem  = ds ? input.rem : prev,\n      mod  = Tuple.idMap((!ds || fullUpdate) ? data : input.mod),\n      next = [],\n      i, key, len, item, datum, enter, diff;\n\n  // Only mark rems as exiting. Due to keyf, there may be an add/mod\n  // tuple that replaces it.\n  for (i=0, len=rem.length; i<len; ++i) {\n    item = (rem[i] === prev[i]) ? prev[i] :\n      keyf ? this._map[keyf(rem[i])] : rem[i];\n    item.status = Status.EXIT;\n  }\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? Status.ENTER : Status.UPDATE;\n    diff = !enter && item.datum !== datum;\n    item.datum = datum;\n\n    if (keyf) {\n      Tuple.set(item, 'key', key);\n      this._map[key] = item;\n    }\n\n    if (enter) {\n      output.add.push(item);\n    } else if (diff || mod[datum._id]) {\n      output.mod.push(item);\n    }\n\n    next.push(item);\n  }\n\n  for (i=0, len=rem.length; i<len; ++i) {\n    item = (rem[i] === prev[i]) ? prev[i] :\n      keyf ? this._map[key = keyf(rem[i])] : rem[i];\n    if (item.status === Status.EXIT) {\n      item._dirty = true;\n      input.dirty.push(item);\n      next.push(item);\n      output.rem.push(item);\n      if (keyf) this._map[key] = null;\n    }\n  }\n\n  return (this._mark.items = next, output);\n}\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s='', i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += '|';\n      s += String(f[i](d));\n    }\n    return s;\n  };\n}\n\nmodule.exports = Builder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Builder.js\n// module id = Vp7n\n// module chunks = 0","var dl = require('datalib'),\n    axs = require('../scene/axis'),\n    themeVal = require('../util/theme-val');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction parseAxes(model, spec, axes, group) {\n  var cfg = config(model);\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model, cfg[def.type]);\n    parseAxis(cfg[def.type], def, index, axes[index], group);\n  });\n}\n\nfunction parseAxis(config, def, index, axis, group) {\n  // axis scale\n  var scale;\n  if (def.scale !== undefined) {\n    axis.scale(scale = group.scale(def.scale));\n  }\n\n  // grid by scaletype\n  var grid = config.grid;\n  if (dl.isObject(grid)) {\n    config.grid = grid[scale.type] !== undefined ? grid[scale.type] : grid.default;\n  }\n\n  // axis orientation\n  axis.orient(themeVal(def, config, 'orient', ORIENT[def.type]));\n  // axis offset\n  axis.offset(themeVal(def, config, 'offset', 0));\n  // axis layer\n  axis.layer(themeVal(def, config, 'layer', 'front'));\n  // axis grid lines\n  axis.grid(themeVal(def, config, 'grid', false));\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(themeVal(def, config, 'titleOffset'));\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  axis.tickFormatType(def.formatType || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding (config.padding for backwards compatibility).\n  axis.tickPadding(themeVal(def, config, 'tickPadding', config.padding));\n\n  // axis tick size(s)\n  var ts = themeVal(def, config, 'tickSize'),\n      size = [ts, ts, ts];\n\n  size[0] = themeVal(def, config, 'tickSizeMajor', size[0]);\n  size[1] = themeVal(def, config, 'tickSizeMinor', size[1]);\n  size[2] = themeVal(def, config, 'tickSizeEnd', size[2]);\n\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // axis tick count\n  axis.tickCount(themeVal(def, config, 'ticks'));\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks ?\n      dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks ?\n      dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nfunction config(model) {\n  var cfg  = model.config(),\n      axis = cfg.axis;\n\n  return {\n    x: dl.extend(dl.duplicate(axis), cfg.axis_x),\n    y: dl.extend(dl.duplicate(axis), cfg.axis_y)\n  };\n}\n\nmodule.exports = parseAxes;\n\nparseAxes.schema = {\n  \"defs\": {\n    \"axis\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\"enum\": [\"x\", \"y\"]},\n        \"scale\": {\"type\": \"string\"},\n        \"orient\": {\"enum\": [\"top\", \"bottom\", \"left\", \"right\"]},\n        \"title\": {\"type\": \"string\"},\n        \"titleOffset\": {\"type\": \"number\"},\n        \"format\": {\"type\": \"string\"},\n        \"formatType\": {\"enum\": [\"time\", \"utc\", \"string\", \"number\"]},\n        \"ticks\": {\"type\": \"number\"},\n        \"values\": {\n          \"type\": \"array\",\n          \"items\": {\"type\": [\"string\", \"number\"]}\n        },\n        \"subdivide\": {\"type\": \"number\"},\n        \"tickPadding\": {\"type\": \"number\"},\n        \"tickSize\": {\"type\": \"number\"},\n        \"tickSizeMajor\": {\"type\": \"number\"},\n        \"tickSizeMinor\": {\"type\": \"number\"},\n        \"tickSizeEnd\": {\"type\": \"number\"},\n        \"offset\": {\n          \"oneOf\": [{\"type\": \"number\"}, {\n            \"type\": \"object\",\n            \"properties\": {\n              \"scale\": {\"type\": \"string\"},\n              \"value\": {\"type\": [\"string\", \"number\"]}\n            },\n            \"required\": [\"scale\", \"value\"],\n            \"additionalProperties\": false\n          }]\n        },\n        \"layer\": {\"enum\": [\"front\", \"back\"], \"default\": \"front\"},\n        \"grid\": {\"type\": \"boolean\"},\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"ticks\": {\"$ref\": \"#/defs/propset\"},\n            \"majorTicks\": {\"$ref\": \"#/defs/propset\"},\n            \"minorTicks\": {\"$ref\": \"#/defs/propset\"},\n            \"labels\": {\"$ref\": \"#/defs/propset\"},\n            \"title\": {\"$ref\": \"#/defs/propset\"},\n            \"grid\": {\"$ref\": \"#/defs/propset\"},\n            \"axis\": {\"$ref\": \"#/defs/propset\"}\n          },\n          \"additionalProperties\": false\n        }\n      },\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"scale\"]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/axes.js\n// module id = W+IH\n// module chunks = 0","module.exports = {\n  'canvas': require('./canvas'),\n  'svg':    require('./svg')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/index.js\n// module id = WCPv\n// module chunks = 0","function instance(w, h) {\n  w = w || 1;\n  h = h || 1;\n  var canvas;\n\n  if (typeof document !== 'undefined' && document.createElement) {\n    canvas = document.createElement('canvas');\n    canvas.width = w;\n    canvas.height = h;\n  } else {\n    var Canvas = require('canvas');\n    if (!Canvas.prototype) return null;\n    canvas = new Canvas(w, h);\n  }\n  return lineDash(canvas);\n}\n\nfunction resize(canvas, w, h, p, retina) {\n  var g = this._ctx = canvas.getContext('2d'), \n      s = 1;\n\n  canvas.width = w + p.left + p.right;\n  canvas.height = h + p.top + p.bottom;\n\n  // if browser canvas, attempt to modify for retina display\n  if (retina && typeof HTMLElement !== 'undefined' &&\n      canvas instanceof HTMLElement)\n  {\n    g.pixelratio = (s = pixelRatio(canvas) || 1);\n  }\n\n  g.setTransform(s, 0, 0, s, s*p.left, s*p.top);\n  return canvas;\n}\n\nfunction pixelRatio(canvas) {\n  var g = canvas.getContext('2d');\n\n  // get canvas pixel data\n  var devicePixelRatio = window && window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        g.webkitBackingStorePixelRatio ||\n        g.mozBackingStorePixelRatio ||\n        g.msBackingStorePixelRatio ||\n        g.oBackingStorePixelRatio ||\n        g.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    // set actual and visible canvas size\n    var w = canvas.width,\n        h = canvas.height;\n    canvas.width = w * ratio;\n    canvas.height = h * ratio;\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n\n  return ratio;\n}\n\nfunction lineDash(canvas) {\n  var g = canvas.getContext('2d');\n  if (g.vgLineDash) return; // already initialized!\n\n  var NOOP = function() {},\n      NODASH = [];\n  \n  if (g.setLineDash) {\n    g.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    g.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (g.webkitLineDash !== undefined) {\n  \tg.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    g.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (g.mozDash !== undefined) {\n    g.vgLineDash = function(dash) { this.mozDash = dash; };\n    g.vgLineDashOffset = NOOP;\n  } else {\n    g.vgLineDash = NOOP;\n    g.vgLineDashOffset = NOOP;\n  }\n  return canvas;\n}\n\nmodule.exports = {\n  instance:   instance,\n  resize:     resize,\n  lineDash:   lineDash\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/canvas.js\n// module id = WFOa\n// module chunks = 0","\"use strict\";\n(function (Type) {\n    Type[Type[\"QUANTITATIVE\"] = 'quantitative'] = \"QUANTITATIVE\";\n    Type[Type[\"ORDINAL\"] = 'ordinal'] = \"ORDINAL\";\n    Type[Type[\"TEMPORAL\"] = 'temporal'] = \"TEMPORAL\";\n    Type[Type[\"NOMINAL\"] = 'nominal'] = \"NOMINAL\";\n})(exports.Type || (exports.Type = {}));\nvar Type = exports.Type;\nexports.QUANTITATIVE = Type.QUANTITATIVE;\nexports.ORDINAL = Type.ORDINAL;\nexports.TEMPORAL = Type.TEMPORAL;\nexports.NOMINAL = Type.NOMINAL;\nexports.SHORT_TYPE = {\n    quantitative: 'Q',\n    temporal: 'T',\n    nominal: 'N',\n    ordinal: 'O'\n};\nexports.TYPE_FROM_SHORT_TYPE = {\n    Q: exports.QUANTITATIVE,\n    T: exports.TEMPORAL,\n    O: exports.ORDINAL,\n    N: exports.NOMINAL\n};\nfunction getFullName(type) {\n    var typeString = type;\n    return exports.TYPE_FROM_SHORT_TYPE[typeString.toUpperCase()] ||\n        typeString.toLowerCase();\n}\nexports.getFullName = getFullName;\n//# sourceMappingURL=type.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/type.js\n// module id = WJ2w\n// module chunks = 0","var Bounds = require('../../../util/Bounds'),\n    textBounds = require('../../../util/bound').text,\n    text = require('../../../util/text'),\n    util = require('./util'),\n    tempBounds = new Bounds();\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var items = scene.items,\n      o, opac, x, y, r, t, str;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    str = text.value(o.text);\n    if (!str) continue;\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac === 0) continue;\n\n    g.font = text.font(o);\n    g.textAlign = o.align || 'left';\n\n    x = (o.x || 0);\n    y = (o.y || 0);\n    if ((r = o.radius)) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = y = 0; // reset x, y\n    }\n    x += (o.dx || 0);\n    y += (o.dy || 0) + text.offset(o);\n\n    if (o.fill && util.fill(g, o, opac)) {\n      g.fillText(str, x, y);\n    }\n    if (o.stroke && util.stroke(g, o, opac)) {\n      g.strokeText(str, x, y);\n    }\n    if (o.angle) g.restore();\n  }\n}\n\nfunction hit(g, o, x, y, gx, gy) {\n  if (o.fontSize <= 0) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  // project point into space of unrotated bounds\n  var b = textBounds(o, tempBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      ox = o.x,\n      oy = o.y,\n      px = cos*gx - sin*gy + (ox - ox*cos + oy*sin),\n      py = sin*gx + cos*gy + (oy - ox*sin - oy*cos);\n\n  return b.contains(px, py);\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick(hit)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/text.js\n// module id = Wd6V\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar util_1 = require('../util');\nvar config_1 = require('../config');\nvar data_1 = require('./data/data');\nvar layout_1 = require('./layout');\nvar model_1 = require('./model');\nvar common_1 = require('./common');\nvar vega_schema_1 = require('../vega.schema');\nvar LayerModel = (function (_super) {\n    __extends(LayerModel, _super);\n    function LayerModel(spec, parent, parentGivenName) {\n        var _this = this;\n        _super.call(this, spec, parent, parentGivenName);\n        this._config = this._initConfig(spec.config, parent);\n        this._children = spec.layers.map(function (layer, i) {\n            return common_1.buildModel(layer, _this, _this.name('layer_' + i));\n        });\n    }\n    LayerModel.prototype._initConfig = function (specConfig, parent) {\n        return util_1.mergeDeep(util_1.duplicate(config_1.defaultConfig), specConfig, parent ? parent.config() : {});\n    };\n    LayerModel.prototype.has = function (channel) {\n        return false;\n    };\n    LayerModel.prototype.children = function () {\n        return this._children;\n    };\n    LayerModel.prototype.isOrdinalScale = function (channel) {\n        return this._children[0].isOrdinalScale(channel);\n    };\n    LayerModel.prototype.dataTable = function () {\n        return this._children[0].dataTable();\n    };\n    LayerModel.prototype.fieldDef = function (channel) {\n        return null;\n    };\n    LayerModel.prototype.stack = function () {\n        return null;\n    };\n    LayerModel.prototype.parseData = function () {\n        this._children.forEach(function (child) {\n            child.parseData();\n        });\n        this.component.data = data_1.parseLayerData(this);\n    };\n    LayerModel.prototype.parseSelectionData = function () {\n    };\n    LayerModel.prototype.parseLayoutData = function () {\n        this._children.forEach(function (child, i) {\n            child.parseLayoutData();\n        });\n        this.component.layout = layout_1.parseLayerLayout(this);\n    };\n    LayerModel.prototype.parseScale = function () {\n        var model = this;\n        var scaleComponent = this.component.scale = {};\n        this._children.forEach(function (child) {\n            child.parseScale();\n            if (true) {\n                util_1.keys(child.component.scale).forEach(function (channel) {\n                    var childScales = child.component.scale[channel];\n                    if (!childScales) {\n                        return;\n                    }\n                    var modelScales = scaleComponent[channel];\n                    if (modelScales && modelScales.main) {\n                        var modelDomain = modelScales.main.domain;\n                        var childDomain = childScales.main.domain;\n                        if (util_1.isArray(modelDomain)) {\n                            if (util_1.isArray(childScales.main.domain)) {\n                                modelScales.main.domain = modelDomain.concat(childDomain);\n                            }\n                            else {\n                                model.addWarning('custom domain scale cannot be unioned with default field-based domain');\n                            }\n                        }\n                        else {\n                            var unionedFields = vega_schema_1.isUnionedDomain(modelDomain) ? modelDomain.fields : [modelDomain];\n                            if (util_1.isArray(childDomain)) {\n                                model.addWarning('custom domain scale cannot be unioned with default field-based domain');\n                            }\n                            var fields = vega_schema_1.isDataRefDomain(childDomain) ? unionedFields.concat([childDomain]) :\n                                vega_schema_1.isUnionedDomain(childDomain) ? unionedFields.concat(childDomain.fields) :\n                                    unionedFields;\n                            fields = util_1.unique(fields, util_1.hash);\n                            if (fields.length > 1) {\n                                modelScales.main.domain = { fields: fields };\n                            }\n                            else {\n                                modelScales.main.domain = fields[0];\n                            }\n                        }\n                        modelScales.colorLegend = modelScales.colorLegend ? modelScales.colorLegend : childScales.colorLegend;\n                        modelScales.binColorLegend = modelScales.binColorLegend ? modelScales.binColorLegend : childScales.binColorLegend;\n                    }\n                    else {\n                        scaleComponent[channel] = childScales;\n                    }\n                    util_1.vals(childScales).forEach(function (scale) {\n                        var scaleNameWithoutPrefix = scale.name.substr(child.name('').length);\n                        var newName = model.scaleName(scaleNameWithoutPrefix);\n                        child.renameScale(scale.name, newName);\n                        scale.name = newName;\n                    });\n                    delete childScales[channel];\n                });\n            }\n        });\n    };\n    LayerModel.prototype.parseMark = function () {\n        this._children.forEach(function (child) {\n            child.parseMark();\n        });\n    };\n    LayerModel.prototype.parseAxis = function () {\n        var axisComponent = this.component.axis = {};\n        this._children.forEach(function (child) {\n            child.parseAxis();\n            if (true) {\n                util_1.keys(child.component.axis).forEach(function (channel) {\n                    if (!axisComponent[channel]) {\n                        axisComponent[channel] = child.component.axis[channel];\n                    }\n                });\n            }\n        });\n    };\n    LayerModel.prototype.parseAxisGroup = function () {\n        return null;\n    };\n    LayerModel.prototype.parseGridGroup = function () {\n        return null;\n    };\n    LayerModel.prototype.parseLegend = function () {\n        var legendComponent = this.component.legend = {};\n        this._children.forEach(function (child) {\n            child.parseLegend();\n            if (true) {\n                util_1.keys(child.component.legend).forEach(function (channel) {\n                    if (!legendComponent[channel]) {\n                        legendComponent[channel] = child.component.legend[channel];\n                    }\n                });\n            }\n        });\n    };\n    LayerModel.prototype.assembleParentGroupProperties = function () {\n        return null;\n    };\n    LayerModel.prototype.assembleData = function (data) {\n        data_1.assembleData(this, data);\n        this._children.forEach(function (child) {\n            child.assembleData(data);\n        });\n        return data;\n    };\n    LayerModel.prototype.assembleLayout = function (layoutData) {\n        this._children.forEach(function (child) {\n            child.assembleLayout(layoutData);\n        });\n        return layout_1.assembleLayout(this, layoutData);\n    };\n    LayerModel.prototype.assembleMarks = function () {\n        return util_1.flatten(this._children.map(function (child) {\n            return child.assembleMarks();\n        }));\n    };\n    LayerModel.prototype.channels = function () {\n        return [];\n    };\n    LayerModel.prototype.mapping = function () {\n        return null;\n    };\n    LayerModel.prototype.isLayer = function () {\n        return true;\n    };\n    LayerModel.prototype.compatibleSource = function (child) {\n        var data = this.data();\n        var childData = child.component.data;\n        var compatible = !childData.source || (data && data.url === childData.source.url);\n        return compatible;\n    };\n    return LayerModel;\n}(model_1.Model));\nexports.LayerModel = LayerModel;\n//# sourceMappingURL=layer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/layer.js\n// module id = Wwtv\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar tick;\n(function (tick) {\n    function markType() {\n        return 'rect';\n    }\n    tick.markType = markType;\n    function properties(model) {\n        var p = {};\n        var config = model.config();\n        p.xc = x(model.encoding().x, model.scaleName(channel_1.X), config);\n        p.yc = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        if (config.mark.orient === 'horizontal') {\n            p.width = size(model.encoding().size, model.scaleName(channel_1.SIZE), config, (model.scale(channel_1.X) || {}).bandSize);\n            p.height = { value: config.mark.tickThickness };\n        }\n        else {\n            p.width = { value: config.mark.tickThickness };\n            p.height = size(model.encoding().size, model.scaleName(channel_1.SIZE), config, (model.scale(channel_1.Y) || {}).bandSize);\n        }\n        common_1.applyColorAndOpacity(p, model);\n        return p;\n    }\n    tick.properties = properties;\n    function x(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n            else if (fieldDef.value) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function y(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n            else if (fieldDef.value) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function size(fieldDef, scaleName, config, scaleBandSize) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fieldDef.field\n                };\n            }\n            else if (fieldDef.value !== undefined) {\n                return { value: fieldDef.value };\n            }\n        }\n        if (config.mark.tickSize) {\n            return { value: config.mark.tickSize };\n        }\n        var bandSize = scaleBandSize !== undefined ?\n            scaleBandSize :\n            config.scale.bandSize;\n        return { value: bandSize / 1.5 };\n    }\n    function labels(model) {\n        return undefined;\n    }\n    tick.labels = labels;\n})(tick = exports.tick || (exports.tick = {}));\n//# sourceMappingURL=tick.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/tick.js\n// module id = XL1Y\n// module chunks = 0","module.exports = (function() {\n  \"use strict\";\n\n  /*\n   * Generated by PEG.js 0.9.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        parser  = this,\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = \",\",\n        peg$c1 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c2 = function(o, m) { return [o].concat(m); },\n        peg$c3 = function(o) { return [o]; },\n        peg$c4 = \"[\",\n        peg$c5 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c6 = \"]\",\n        peg$c7 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c8 = \">\",\n        peg$c9 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n        peg$c10 = function(f1, f2, o) {\n            return {\n              start: f1, middle: o, end: f2,\n              str: '['+f1.str+', '+f2.str+'] > '+o.str};\n            },\n        peg$c11 = function(s, f) {\n            s.filters = f;\n            s.str += f.map(function(x) { return '['+x+']'; }).join('');\n            return s;\n          },\n        peg$c12 = function(s) { return s; },\n        peg$c13 = \"(\",\n        peg$c14 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c15 = \")\",\n        peg$c16 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c17 = function(m) {\n            return {\n              stream: m,\n              str: '('+m.map(function(m) { return m.str; }).join(', ')+')'\n            };\n          },\n        peg$c18 = \"@\",\n        peg$c19 = { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n        peg$c20 = \":\",\n        peg$c21 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c22 = function(n, e) { return {event: e, name: n, str: '@'+n+':'+e}; },\n        peg$c23 = function(m, e) { return {event: e, mark: m, str: m+':'+e}; },\n        peg$c24 = function(t, e) { return {event: e, target: t, str: t+':'+e}; },\n        peg$c25 = function(e) { return {event: e, str: e}; },\n        peg$c26 = function(s) { return {signal: s, str: s}; },\n        peg$c27 = \"rect\",\n        peg$c28 = { type: \"literal\", value: \"rect\", description: \"\\\"rect\\\"\" },\n        peg$c29 = \"symbol\",\n        peg$c30 = { type: \"literal\", value: \"symbol\", description: \"\\\"symbol\\\"\" },\n        peg$c31 = \"path\",\n        peg$c32 = { type: \"literal\", value: \"path\", description: \"\\\"path\\\"\" },\n        peg$c33 = \"arc\",\n        peg$c34 = { type: \"literal\", value: \"arc\", description: \"\\\"arc\\\"\" },\n        peg$c35 = \"area\",\n        peg$c36 = { type: \"literal\", value: \"area\", description: \"\\\"area\\\"\" },\n        peg$c37 = \"line\",\n        peg$c38 = { type: \"literal\", value: \"line\", description: \"\\\"line\\\"\" },\n        peg$c39 = \"rule\",\n        peg$c40 = { type: \"literal\", value: \"rule\", description: \"\\\"rule\\\"\" },\n        peg$c41 = \"image\",\n        peg$c42 = { type: \"literal\", value: \"image\", description: \"\\\"image\\\"\" },\n        peg$c43 = \"text\",\n        peg$c44 = { type: \"literal\", value: \"text\", description: \"\\\"text\\\"\" },\n        peg$c45 = \"group\",\n        peg$c46 = { type: \"literal\", value: \"group\", description: \"\\\"group\\\"\" },\n        peg$c47 = \"mousedown\",\n        peg$c48 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n        peg$c49 = \"mouseup\",\n        peg$c50 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n        peg$c51 = \"click\",\n        peg$c52 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n        peg$c53 = \"dblclick\",\n        peg$c54 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n        peg$c55 = \"wheel\",\n        peg$c56 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n        peg$c57 = \"keydown\",\n        peg$c58 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n        peg$c59 = \"keypress\",\n        peg$c60 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n        peg$c61 = \"keyup\",\n        peg$c62 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n        peg$c63 = \"mousewheel\",\n        peg$c64 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n        peg$c65 = \"mousemove\",\n        peg$c66 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n        peg$c67 = \"mouseout\",\n        peg$c68 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n        peg$c69 = \"mouseover\",\n        peg$c70 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n        peg$c71 = \"mouseenter\",\n        peg$c72 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n        peg$c73 = \"touchstart\",\n        peg$c74 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n        peg$c75 = \"touchmove\",\n        peg$c76 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n        peg$c77 = \"touchend\",\n        peg$c78 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n        peg$c79 = \"dragenter\",\n        peg$c80 = { type: \"literal\", value: \"dragenter\", description: \"\\\"dragenter\\\"\" },\n        peg$c81 = \"dragover\",\n        peg$c82 = { type: \"literal\", value: \"dragover\", description: \"\\\"dragover\\\"\" },\n        peg$c83 = \"dragleave\",\n        peg$c84 = { type: \"literal\", value: \"dragleave\", description: \"\\\"dragleave\\\"\" },\n        peg$c85 = function(e) { return e; },\n        peg$c86 = /^[a-zA-Z0-9_\\-]/,\n        peg$c87 = { type: \"class\", value: \"[a-zA-Z0-9_-]\", description: \"[a-zA-Z0-9_-]\" },\n        peg$c88 = function(n) { return n.join(''); },\n        peg$c89 = /^[a-zA-Z0-9\\-_  #.>+~[\\]=|\\^$*]/,\n        peg$c90 = { type: \"class\", value: \"[a-zA-Z0-9-_  #\\\\.\\\\>\\\\+~\\\\[\\\\]=|\\\\^\\\\$\\\\*]\", description: \"[a-zA-Z0-9-_  #\\\\.\\\\>\\\\+~\\\\[\\\\]=|\\\\^\\\\$\\\\*]\" },\n        peg$c91 = function(c) { return c.join(''); },\n        peg$c92 = /^['\"a-zA-Z0-9_().><=! \\t-&|~]/,\n        peg$c93 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_\\\\(\\\\)\\\\.\\\\>\\\\<\\\\=\\\\! \\\\t-&|~]\", description: \"['\\\"a-zA-Z0-9_\\\\(\\\\)\\\\.\\\\>\\\\<\\\\=\\\\! \\\\t-&|~]\" },\n        peg$c94 = function(v) { return v.join(''); },\n        peg$c95 = /^[ \\t\\r\\n]/,\n        peg$c96 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(\n        message,\n        null,\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p, ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemerged();\n\n      return s0;\n    }\n\n    function peg$parsemerged() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsesep();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c0;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsesep();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsemerged();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c2(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseordered();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c3(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parseordered() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c4;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsesep();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsefiltered();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsesep();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s5 = peg$c0;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c1); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsesep();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsefiltered();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parsesep();\n                    if (s8 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 93) {\n                        s9 = peg$c6;\n                        peg$currPos++;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c7); }\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parsesep();\n                        if (s10 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 62) {\n                            s11 = peg$c8;\n                            peg$currPos++;\n                          } else {\n                            s11 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c9); }\n                          }\n                          if (s11 !== peg$FAILED) {\n                            s12 = peg$parsesep();\n                            if (s12 !== peg$FAILED) {\n                              s13 = peg$parseordered();\n                              if (s13 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c10(s3, s7, s13);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsefiltered();\n      }\n\n      return s0;\n    }\n\n    function peg$parsefiltered() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsefilter();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parsefilter();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c11(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsestream();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c12(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsestream() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c13;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c14); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsemerged();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c15;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c17(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 64) {\n          s1 = peg$c18;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c19); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsename();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s3 = peg$c20;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c21); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseeventType();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsemarkType();\n          if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s2 = peg$c20;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c21); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parseeventType();\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c23(s1, s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsecss();\n            if (s1 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 58) {\n                s2 = peg$c20;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c21); }\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parseeventType();\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c24(s1, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseeventType();\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c25(s1);\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsename();\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c26(s1);\n                }\n                s0 = s1;\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemarkType() {\n      var s0;\n\n      if (input.substr(peg$currPos, 4) === peg$c27) {\n        s0 = peg$c27;\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c29) {\n          s0 = peg$c29;\n          peg$currPos += 6;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c31) {\n            s0 = peg$c31;\n            peg$currPos += 4;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c32); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c33) {\n              s0 = peg$c33;\n              peg$currPos += 3;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c34); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 4) === peg$c35) {\n                s0 = peg$c35;\n                peg$currPos += 4;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c36); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 4) === peg$c37) {\n                  s0 = peg$c37;\n                  peg$currPos += 4;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c38); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 4) === peg$c39) {\n                    s0 = peg$c39;\n                    peg$currPos += 4;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c40); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 5) === peg$c41) {\n                      s0 = peg$c41;\n                      peg$currPos += 5;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 4) === peg$c43) {\n                        s0 = peg$c43;\n                        peg$currPos += 4;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 5) === peg$c45) {\n                          s0 = peg$c45;\n                          peg$currPos += 5;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseeventType() {\n      var s0;\n\n      if (input.substr(peg$currPos, 9) === peg$c47) {\n        s0 = peg$c47;\n        peg$currPos += 9;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7) === peg$c49) {\n          s0 = peg$c49;\n          peg$currPos += 7;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c50); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c51) {\n            s0 = peg$c51;\n            peg$currPos += 5;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 8) === peg$c53) {\n              s0 = peg$c53;\n              peg$currPos += 8;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c54); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 5) === peg$c55) {\n                s0 = peg$c55;\n                peg$currPos += 5;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c56); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 7) === peg$c57) {\n                  s0 = peg$c57;\n                  peg$currPos += 7;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 8) === peg$c59) {\n                    s0 = peg$c59;\n                    peg$currPos += 8;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 5) === peg$c61) {\n                      s0 = peg$c61;\n                      peg$currPos += 5;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 10) === peg$c63) {\n                        s0 = peg$c63;\n                        peg$currPos += 10;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 9) === peg$c65) {\n                          s0 = peg$c65;\n                          peg$currPos += 9;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 8) === peg$c67) {\n                            s0 = peg$c67;\n                            peg$currPos += 8;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c68); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 9) === peg$c69) {\n                              s0 = peg$c69;\n                              peg$currPos += 9;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c70); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c71) {\n                                s0 = peg$c71;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 10) === peg$c73) {\n                                  s0 = peg$c73;\n                                  peg$currPos += 10;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 9) === peg$c75) {\n                                    s0 = peg$c75;\n                                    peg$currPos += 9;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                                  }\n                                  if (s0 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 8) === peg$c77) {\n                                      s0 = peg$c77;\n                                      peg$currPos += 8;\n                                    } else {\n                                      s0 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c78); }\n                                    }\n                                    if (s0 === peg$FAILED) {\n                                      if (input.substr(peg$currPos, 9) === peg$c79) {\n                                        s0 = peg$c79;\n                                        peg$currPos += 9;\n                                      } else {\n                                        s0 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n                                      }\n                                      if (s0 === peg$FAILED) {\n                                        if (input.substr(peg$currPos, 8) === peg$c81) {\n                                          s0 = peg$c81;\n                                          peg$currPos += 8;\n                                        } else {\n                                          s0 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c82); }\n                                        }\n                                        if (s0 === peg$FAILED) {\n                                          if (input.substr(peg$currPos, 9) === peg$c83) {\n                                            s0 = peg$c83;\n                                            peg$currPos += 9;\n                                          } else {\n                                            s0 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c84); }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsefilter() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c4;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseexpr();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s3 = peg$c6;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c7); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c85(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsename() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c86.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c87); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c86.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c87); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c88(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsecss() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c89.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c90); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c89.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c90); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c91(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseexpr() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c92.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c93); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c92.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c93); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c94(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsesep() {\n      var s0, s1;\n\n      s0 = [];\n      if (peg$c95.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c96); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c95.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c96); }\n        }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(\n        null,\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-event-selector/index.js\n// module id = XSKZ\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    df = require('vega-dataflow'),\n    Node = df.Node, // jshint ignore:line\n    Deps = df.Dependencies,\n    bound = require('vega-scenegraph').bound;\n\nvar EMPTY = {};\n\nfunction Encoder(graph, mark, builder) {\n  var props  = mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit;\n\n  Node.prototype.init.call(this, graph);\n\n  this._mark = mark;\n  this._builder = builder;\n  var s = this._scales = [];\n\n  // Only scales used in the 'update' property set are set as\n  // encoder depedencies to have targeted reevaluations. However,\n  // we still want scales in 'enter' and 'exit' to be evaluated\n  // before the encoder.\n  if (enter) s.push.apply(s, enter.scales);\n\n  if (update) {\n    this.dependency(Deps.DATA, update.data);\n    this.dependency(Deps.SIGNALS, update.signals);\n    this.dependency(Deps.FIELDS, update.fields);\n    this.dependency(Deps.SCALES, update.scales);\n    s.push.apply(s, update.scales);\n  }\n\n  if (exit) s.push.apply(s, exit.scales);\n\n  return this.mutates(true);\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  log.debug(input, ['encoding', this._mark.def.type]);\n  var graph = this._graph,\n      props = this._mark.def.properties || {},\n      items = this._mark.items,\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      dirty  = input.dirty,\n      preds  = graph.predicates(),\n      req = input.request,\n      group = this._mark.group,\n      guide = group && (group.mark.axis || group.mark.legend),\n      db = EMPTY, sg = EMPTY, i, len, item, prop;\n\n  if (req && !guide) {\n    if ((prop = props[req]) && input.mod.length) {\n      db = prop.data ? graph.values(Deps.DATA, prop.data) : null;\n      sg = prop.signals ? graph.values(Deps.SIGNALS, prop.signals) : null;\n\n      for (i=0, len=input.mod.length; i<len; ++i) {\n        item = input.mod[i];\n        encode.call(this, prop, item, input.trans, db, sg, preds, dirty);\n      }\n    }\n\n    return input; // exit early if given request\n  }\n\n  db = values(Deps.DATA, graph, input, props);\n  sg = values(Deps.SIGNALS, graph, input, props);\n\n  // Items marked for removal are at the tail of items. Process them first.\n  for (i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if (exit) encode.call(this, exit, item, input.trans, db, sg, preds, dirty);\n    if (input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if (!input.trans) items.pop();\n  }\n\n  var update_status = require('./Builder').STATUS.UPDATE;\n  for (i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if (enter)  encode.call(this, enter,  item, input.trans, db, sg, preds, dirty);\n    if (update) encode.call(this, update, item, input.trans, db, sg, preds, dirty);\n    item.status = update_status;\n  }\n\n  if (update) {\n    for (i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg, preds, dirty);\n    }\n  }\n\n  return input;\n};\n\n// Only marshal necessary data and signal values\nfunction values(type, graph, input, props) {\n  var p, x, o, add = input.add.length;\n  if ((p=props.enter) && (x=p[type]).length && add) {\n    o = graph.values(type, x, (o=o||{}));\n  }\n  if ((p=props.exit) && (x=p[type]).length && input.rem.length) {\n    o = graph.values(type, x, (o=o||{}));\n  }\n  if ((p=props.update) && (x=p[type]).length && (add || input.mod.length)) {\n    o = graph.values(type, x, (o=o||{}));\n  }\n  return o || EMPTY;\n}\n\nfunction encode(prop, item, trans, db, sg, preds, dirty) {\n  var enc = prop.encode,\n      wasDirty = item._dirty,\n      isDirty  = enc.call(enc, item, item.mark.group||item, trans, db, sg, preds);\n\n  item._dirty = isDirty || wasDirty;\n  if (isDirty && !wasDirty) dirty.push(item);\n}\n\n// If a specified property set called, or update property set\n// uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var def = this._mark.def,\n      props = def.properties || {},\n      reeval = dl.isFunction(def.from) || def.orient || pulse.request ||\n        Node.prototype.reevaluate.call(this, pulse);\n\n  return reeval || (props.update ? nestedRefs.call(this) : false);\n};\n\n// Test if any nested refs trigger a reflow of mark items.\nfunction nestedRefs() {\n  var refs = this._mark.def.properties.update.nested,\n      parent = this._builder,\n      level = 0,\n      i = 0, len = refs.length,\n      ref, ds, stamp;\n\n  for (; i<len; ++i) {\n    ref = refs[i];\n\n    // Scale references are resolved via this._mark._scaleRefs which are\n    // added to dependency lists + connected in Builder.evaluate.\n    if (ref.scale) continue;\n\n    for (; level<ref.level; ++level) {\n      parent = parent.parent();\n      ds = parent.ds();\n    }\n\n    // Compare stamps to determine if a change in a group's properties\n    // or data should trigger a reeval. We cannot check anything fancier\n    // (e.g., pulse.fields) as the ref may use item.datum.\n    stamp = (ref.group ? parent.encoder() : ds.last())._stamp;\n    if (stamp > this._stamp) return true;\n  }\n\n  return false;\n}\n\n// Short-circuit encoder if user specifies items\nEncoder.update = function(graph, trans, request, items, dirty) {\n  items = dl.array(items);\n  var preds = graph.predicates(),\n      db = graph.values(Deps.DATA),\n      sg = graph.values(Deps.SIGNALS),\n      i, len, item, props, prop;\n\n  for (i=0, len=items.length; i<len; ++i) {\n    item = items[i];\n    props = item.mark.def.properties;\n    prop = props && props[request];\n    if (prop) {\n      encode.call(null, prop, item, trans, db, sg, preds, dirty);\n      bound.item(item);\n    }\n  }\n\n};\n\nmodule.exports = Encoder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Encoder.js\n// module id = XVii\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar data_1 = require('../data');\nvar scale_1 = require('../scale');\nvar util_1 = require('../util');\nvar mark_1 = require('../mark');\nvar time_1 = require('./time');\nfunction assembleLayout(model, layoutData) {\n    var layoutComponent = model.component.layout;\n    if (!layoutComponent.width && !layoutComponent.height) {\n        return layoutData;\n    }\n    if (true) {\n        var distinctFields = util_1.keys(util_1.extend(layoutComponent.width.distinct, layoutComponent.height.distinct));\n        var formula = layoutComponent.width.formula.concat(layoutComponent.height.formula)\n            .map(function (formula) {\n            return util_1.extend({ type: 'formula' }, formula);\n        });\n        return [\n            distinctFields.length > 0 ? {\n                name: model.dataName(data_1.LAYOUT),\n                source: model.dataTable(),\n                transform: [{\n                        type: 'aggregate',\n                        summarize: distinctFields.map(function (field) {\n                            return { field: field, ops: ['distinct'] };\n                        })\n                    }].concat(formula)\n            } : {\n                name: model.dataName(data_1.LAYOUT),\n                values: [{}],\n                transform: formula\n            }\n        ];\n    }\n}\nexports.assembleLayout = assembleLayout;\nfunction parseUnitLayout(model) {\n    return {\n        width: parseUnitSizeLayout(model, channel_1.X),\n        height: parseUnitSizeLayout(model, channel_1.Y)\n    };\n}\nexports.parseUnitLayout = parseUnitLayout;\nfunction parseUnitSizeLayout(model, channel) {\n    var cellConfig = model.config().cell;\n    var nonOrdinalSize = channel === channel_1.X ? cellConfig.width : cellConfig.height;\n    return {\n        distinct: getDistinct(model, channel),\n        formula: [{\n                field: model.channelSizeName(channel),\n                expr: unitSizeExpr(model, channel, nonOrdinalSize)\n            }]\n    };\n}\nfunction unitSizeExpr(model, channel, nonOrdinalSize) {\n    if (model.scale(channel)) {\n        if (model.isOrdinalScale(channel)) {\n            var scale = model.scale(channel);\n            return '(' + cardinalityFormula(model, channel) +\n                ' + ' + scale.padding +\n                ') * ' + scale.bandSize;\n        }\n        else {\n            return nonOrdinalSize + '';\n        }\n    }\n    else {\n        if (model.mark() === mark_1.TEXT && channel === channel_1.X) {\n            return model.config().scale.textBandWidth + '';\n        }\n        return model.config().scale.bandSize + '';\n    }\n}\nfunction parseFacetLayout(model) {\n    return {\n        width: parseFacetSizeLayout(model, channel_1.COLUMN),\n        height: parseFacetSizeLayout(model, channel_1.ROW)\n    };\n}\nexports.parseFacetLayout = parseFacetLayout;\nfunction parseFacetSizeLayout(model, channel) {\n    var childLayoutComponent = model.child().component.layout;\n    var sizeType = channel === channel_1.ROW ? 'height' : 'width';\n    var childSizeComponent = childLayoutComponent[sizeType];\n    if (true) {\n        var distinct = util_1.extend(getDistinct(model, channel), childSizeComponent.distinct);\n        var formula = childSizeComponent.formula.concat([{\n                field: model.channelSizeName(channel),\n                expr: facetSizeFormula(model, channel, model.child().channelSizeName(channel))\n            }]);\n        delete childLayoutComponent[sizeType];\n        return {\n            distinct: distinct,\n            formula: formula\n        };\n    }\n}\nfunction facetSizeFormula(model, channel, innerSize) {\n    var scale = model.scale(channel);\n    if (model.has(channel)) {\n        return '(datum.' + innerSize + ' + ' + scale.padding + ')' + ' * ' + cardinalityFormula(model, channel);\n    }\n    else {\n        return 'datum.' + innerSize + ' + ' + model.config().facet.scale.padding;\n    }\n}\nfunction parseLayerLayout(model) {\n    return {\n        width: parseLayerSizeLayout(model, channel_1.X),\n        height: parseLayerSizeLayout(model, channel_1.Y)\n    };\n}\nexports.parseLayerLayout = parseLayerLayout;\nfunction parseLayerSizeLayout(model, channel) {\n    if (true) {\n        var childLayoutComponent = model.children()[0].component.layout;\n        var sizeType_1 = channel === channel_1.Y ? 'height' : 'width';\n        var childSizeComponent = childLayoutComponent[sizeType_1];\n        var distinct = childSizeComponent.distinct;\n        var formula = [{\n                field: model.channelSizeName(channel),\n                expr: childSizeComponent.formula[0].expr\n            }];\n        model.children().forEach(function (child) {\n            delete child.component.layout[sizeType_1];\n        });\n        return {\n            distinct: distinct,\n            formula: formula\n        };\n    }\n}\nfunction getDistinct(model, channel) {\n    if (model.has(channel) && model.isOrdinalScale(channel)) {\n        var scale = model.scale(channel);\n        if (scale.type === scale_1.ScaleType.ORDINAL && !(scale.domain instanceof Array)) {\n            var distinctField = model.field(channel);\n            var distinct = {};\n            distinct[distinctField] = true;\n            return distinct;\n        }\n    }\n    return {};\n}\nfunction cardinalityFormula(model, channel) {\n    var scale = model.scale(channel);\n    if (scale.domain instanceof Array) {\n        return scale.domain.length;\n    }\n    var timeUnit = model.fieldDef(channel).timeUnit;\n    var timeUnitDomain = timeUnit ? time_1.rawDomain(timeUnit, channel) : null;\n    return timeUnitDomain !== null ? timeUnitDomain.length :\n        model.field(channel, { datum: true, prefn: 'distinct_' });\n}\n//# sourceMappingURL=layout.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/layout.js\n// module id = YBv9\n// module chunks = 0","var util = require('../util'),\n  type = require('./type'),\n  formats = require('./formats'),\n  timeF = require('../format').time;\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) {\n    var t = types[c];\n    if (t && t.indexOf('date:') === 0) {\n      var parts = t.split(/:(.+)?/, 2),  // split on first :\n          pattern = parts[1];\n      if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n          (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n        pattern = pattern.slice(1, -1);\n      } else {\n        throw Error('Format pattern must be quoted: ' + pattern);\n      }\n      pattern = timeF(pattern);\n      return function(v) { return pattern.parse(v); };\n    }\n    if (!type.parsers[t]) {\n      throw Error('Illegal format pattern: ' + c + ':' + t);\n    }\n    return type.parsers[t];\n  });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/read.js\n// module id = YGNx\n// module chunks = 0","var d3 = require('d3'),\n    vg = require('vega'),\n    vl = require('vega-lite'),\n    parameter = require('./parameter'),\n    post = require('./post');\n\nvar config = {\n  // URL for loading specs into editor\n  editor_url: 'http://vega.github.io/vega-editor/',\n\n  // HTML to inject within view source head element\n  source_header: '',\n\n  // HTML to inject before view source closing body tag\n  source_footer: ''\n};\n\nvar MODES = {\n  'vega':      'vega',\n  'vega-lite': 'vega-lite'\n};\n\nvar PREPROCESSOR = {\n  'vega':      function(vgjson) { return vgjson; },\n  'vega-lite': function(vljson) { return vl.compile(vljson).spec; }\n};\n\nfunction load(url, arg, prop, el, callback) {\n  vg.util.load({url: url}, function(err, data) {\n    var opt;\n    if (err || !data) {\n      console.error(err || ('No data found at ' + url));\n    } else {\n      // marshal embedding spec and restart\n      if (!arg) { // Loading embed spec from URL\n        opt = JSON.parse(data);\n      } else {  // Loading vg/vl spec or config from URL\n        opt = vg.util.extend({}, arg);\n        opt[prop] = prop === 'source' ? data : JSON.parse(data);\n      }\n      embed(el, opt, callback);\n    }\n  });\n}\n\n// Embed a Vega visualization component in a web page.\n// el: DOM element in which to place component (DOM node or CSS selector)\n// opt: Embedding specification (parsed JSON or URL string)\n// callback: invoked with the generated Vega View instance\nfunction embed(el, opt, callback) {\n  var cb = callback || function(){},\n      params = [], source, spec, mode, config;\n\n  try {\n    // Load the visualization specification.\n    if (vg.util.isString(opt)) {\n      return load(opt, null, null, el, callback);\n    } else if (opt.source) {\n      source = opt.source;\n      spec = JSON.parse(source);\n    } else if (opt.spec) {\n      spec = opt.spec;\n      source = JSON.stringify(spec, null, 2);\n    } else if (opt.url) {\n      return load(opt.url, opt, 'source', el, callback);\n    } else {\n      spec = opt;\n      source = JSON.stringify(spec, null, 2);\n      opt = {spec: spec, actions: false};\n    }\n    mode = MODES[opt.mode] || MODES.vega;\n    spec = PREPROCESSOR[mode](spec);\n\n    // Load Vega theme/configuration.\n    if (vg.util.isString(opt.config)) {\n      return load(opt.config, opt, 'config', el, callback);\n    } else if (opt.config) {\n      config = opt.config;\n    }\n\n    // ensure container div has class 'vega-embed'\n    var div = d3.select(el)\n      .classed('vega-embed', true)\n      .html(''); // clear container\n\n    // handle parameters\n    if (opt.parameters) {\n      var elp = opt.parameter_el ? d3.select(opt.parameter_el) : div;\n      var pdiv = elp.append('div')\n        .attr('class', 'vega-params');\n      params = opt.parameters.map(function(p) {\n        return parameter.init(pdiv, p, spec);\n      });\n    }\n  } catch (err) { cb(err); }\n\n  vg.parse.spec(spec, config, function(error, chart) {\n    if (error) { cb(error); return; }\n    try {\n      var renderer = opt.renderer || 'canvas',\n          actions  = opt.actions || {};\n\n      var view = chart({\n        el: el,\n        data: opt.data || undefined,\n        renderer: renderer\n      });\n\n      if (opt.actions !== false) {\n        // add child div to house action links\n        var ctrl = div.append('div')\n          .attr('class', 'vega-actions');\n\n        // add 'Export' action\n        if (actions.export !== false) {\n          var ext = (renderer==='canvas' ? 'png' : 'svg');\n          ctrl.append('a')\n            .text('Export as ' + ext.toUpperCase())\n            .attr('href', '#')\n            .attr('target', '_blank')\n            .attr('download', (spec.name || 'vega') + '.' + ext)\n            .on('mousedown', function() {\n              this.href = view.toImageURL(ext);\n              d3.event.preventDefault();\n            });\n        }\n\n        // add 'View Source' action\n        if (actions.source !== false) {\n          ctrl.append('a')\n            .text('View Source')\n            .attr('href', '#')\n            .on('click', function() {\n              viewSource(source);\n              d3.event.preventDefault();\n            });\n        }\n\n        // add 'Open in Vega Editor' action\n        if (actions.editor !== false) {\n          ctrl.append('a')\n            .text('Open in Vega Editor')\n            .attr('href', '#')\n            .on('click', function() {\n              post(window, embed.config.editor_url, {spec: source, mode: mode});\n              d3.event.preventDefault();\n            });\n        }\n      }\n\n      // bind all parameter elements\n      params.forEach(function(p) { parameter.bind(p, view); });\n\n      // initialize and return visualization\n      view.update();\n      cb(null, {view: view, spec: spec});\n    } catch (err) { cb(err); }\n  });\n}\n\nfunction viewSource(source) {\n  var header = '<html><head>' + config.source_header + '</head>' + '<body><pre><code class=\"json\">';\n  var footer = '</code></pre>' + config.source_footer + '</body></html>';\n  var win = window.open('');\n  win.document.write(header + source + footer);\n  win.document.title = 'Vega JSON Source';\n}\n\n// make config externally visible\nembed.config = config;\n\nmodule.exports = embed;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-embed/src/embed.js\n// module id = YX8j\n// module chunks = 0","var util = require('./util'),\n    gen = module.exports;\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    return (x >= min && x <= max) ? 1/d : 0;\n  };\n  f.cdf = function(x) {\n    return x < min ? 0 : x > max ? 1 : (x - min) / d;\n  };\n  f.icdf = function(p) {\n    return (p >= 0 && p <= 1) ? min + p*d : NaN;\n  };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    return (x === Math.floor(x) && x >= a && x < b) ? 1/d : 0;\n  };\n  f.cdf = function(x) {\n    var v = Math.floor(x);\n    return v < a ? 0 : v >= b ? 1 : (v - a + 1) / d;\n  };\n  f.icdf = function(p) {\n    return (p >= 0 && p <= 1) ? a - 1 + Math.floor(p*d) : NaN;\n  };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    var exp = Math.exp(Math.pow(x-mean, 2) / (-2 * Math.pow(stdev, 2)));\n    return (1 / (stdev * Math.sqrt(2*Math.PI))) * exp;\n  };\n  f.cdf = function(x) {\n    // Approximation from West (2009)\n    // Better Approximations to Cumulative Normal Functions\n    var cd,\n        z = (x - mean) / stdev,\n        Z = Math.abs(z);\n    if (Z > 37) {\n      cd = 0;\n    } else {\n      var sum, exp = Math.exp(-Z*Z/2);\n      if (Z < 7.07106781186547) {\n        sum = 3.52624965998911e-02 * Z + 0.700383064443688;\n        sum = sum * Z + 6.37396220353165;\n        sum = sum * Z + 33.912866078383;\n        sum = sum * Z + 112.079291497871;\n        sum = sum * Z + 221.213596169931;\n        sum = sum * Z + 220.206867912376;\n        cd = exp * sum;\n        sum = 8.83883476483184e-02 * Z + 1.75566716318264;\n        sum = sum * Z + 16.064177579207;\n        sum = sum * Z + 86.7807322029461;\n        sum = sum * Z + 296.564248779674;\n        sum = sum * Z + 637.333633378831;\n        sum = sum * Z + 793.826512519948;\n        sum = sum * Z + 440.413735824752;\n        cd = cd / sum;\n      } else {\n        sum = Z + 0.65;\n        sum = Z + 4 / sum;\n        sum = Z + 3 / sum;\n        sum = Z + 2 / sum;\n        sum = Z + 1 / sum;\n        cd = exp / sum / 2.506628274631;\n      }\n    }\n    return z > 0 ? 1 - cd : cd;\n  };\n  f.icdf = function(p) {\n    // Approximation of Probit function using inverse error function.\n    if (p <= 0 || p >= 1) return NaN;\n    var x = 2*p - 1,\n        v = (8 * (Math.PI - 3)) / (3 * Math.PI * (4-Math.PI)),\n        a = (2 / (Math.PI*v)) + (Math.log(1 - Math.pow(x,2)) / 2),\n        b = Math.log(1 - (x*x)) / v,\n        s = (x > 0 ? 1 : -1) * Math.sqrt(Math.sqrt((a*a) - b) - a);\n    return mean + stdev * Math.SQRT2 * s;\n  };\n  return f;\n};\n\ngen.random.bootstrap = function(domain, smooth) {\n  // Generates a bootstrap sample from a set of observations.\n  // Smooth bootstrapping adds random zero-centered noise to the samples.\n  var val = domain.filter(util.isValid),\n      len = val.length,\n      err = smooth ? gen.random.normal(0, smooth) : null;\n  var f = function() {\n    return val[~~(Math.random()*len)] + (err ? err() : 0);\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  return f;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/generate.js\n// module id = YsQl\n// module chunks = 0","module.exports = function(def, config, property, defaultVal) {\n  if (def[property] !== undefined) {\n    return def[property];\n  } else if (config !== undefined && config[property] !== undefined) {\n    return config[property];\n  } else if (defaultVal !== undefined) {\n    return defaultVal;\n  }\n  return undefined;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/util/theme-val.js\n// module id = YvtE\n// module chunks = 0","module.exports = {\n  version: '__VERSION__',\n  dataflow: require('vega-dataflow'),\n  parse: require('./src/parse/'),\n  scene: {\n    Bounder: require('./src/scene/Bounder'),\n    Builder: require('./src/scene/Builder'),\n    Encoder: require('./src/scene/Encoder'),\n    GroupBuilder: require('./src/scene/GroupBuilder'),\n    visit: require('./src/scene/visit')\n  },\n  transforms: require('./src/transforms'),\n  Transform: require('./src/transforms/Transform'),\n  BatchTransform: require('./src/transforms/BatchTransform'),\n  Parameter: require('./src/transforms/Parameter'),\n  schema: require('./src/core/schema'),\n  config: require('./src/core/config'),\n  util: require('./src/util'),\n  logging: require('vega-logging'),\n  debug: require('vega-logging').debug\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/index.js\n// module id = YzNj\n// module chunks = 0","var json = require('./json');\n\nvar reader = function(data, format) {\n  var topojson = reader.topojson;\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n};\n\nreader.topojson = require('topojson');\nmodule.exports = reader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/topojson.js\n// module id = Z8XL\n// module chunks = 0","\"use strict\";\nvar stringify = require('json-stable-stringify');\nvar util_1 = require('datalib/src/util');\nexports.keys = util_1.keys;\nexports.extend = util_1.extend;\nexports.duplicate = util_1.duplicate;\nexports.isArray = util_1.isArray;\nexports.vals = util_1.vals;\nexports.truncate = util_1.truncate;\nexports.toMap = util_1.toMap;\nexports.isObject = util_1.isObject;\nexports.isString = util_1.isString;\nexports.isNumber = util_1.isNumber;\nexports.isBoolean = util_1.isBoolean;\nvar util_2 = require('datalib/src/util');\nvar generate_1 = require('datalib/src/generate');\nexports.range = generate_1.range;\nvar encoding_1 = require('./encoding');\nexports.has = encoding_1.has;\nvar channel_1 = require('./channel');\nexports.Channel = channel_1.Channel;\nvar util_3 = require('datalib/src/util');\nfunction pick(obj, props) {\n    var copy = {};\n    props.forEach(function (prop) {\n        if (obj.hasOwnProperty(prop)) {\n            copy[prop] = obj[prop];\n        }\n    });\n    return copy;\n}\nexports.pick = pick;\nfunction omit(obj, props) {\n    var copy = util_2.duplicate(obj);\n    props.forEach(function (prop) {\n        delete copy[prop];\n    });\n    return copy;\n}\nexports.omit = omit;\nfunction hash(a) {\n    if (util_3.isString(a) || util_3.isNumber(a) || util_3.isBoolean(a)) {\n        return String(a);\n    }\n    return stringify(a);\n}\nexports.hash = hash;\nfunction contains(array, item) {\n    return array.indexOf(item) > -1;\n}\nexports.contains = contains;\nfunction without(array, excludedItems) {\n    return array.filter(function (item) {\n        return !contains(excludedItems, item);\n    });\n}\nexports.without = without;\nfunction union(array, other) {\n    return array.concat(without(other, array));\n}\nexports.union = union;\nfunction forEach(obj, f, thisArg) {\n    if (obj.forEach) {\n        obj.forEach.call(thisArg, f);\n    }\n    else {\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                f.call(thisArg, obj[k], k, obj);\n            }\n        }\n    }\n}\nexports.forEach = forEach;\nfunction reduce(obj, f, init, thisArg) {\n    if (obj.reduce) {\n        return obj.reduce.call(thisArg, f, init);\n    }\n    else {\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                init = f.call(thisArg, init, obj[k], k, obj);\n            }\n        }\n        return init;\n    }\n}\nexports.reduce = reduce;\nfunction map(obj, f, thisArg) {\n    if (obj.map) {\n        return obj.map.call(thisArg, f);\n    }\n    else {\n        var output = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                output.push(f.call(thisArg, obj[k], k, obj));\n            }\n        }\n        return output;\n    }\n}\nexports.map = map;\nfunction some(arr, f) {\n    var i = 0;\n    for (var k = 0; k < arr.length; k++) {\n        if (f(arr[k], k, i++)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.some = some;\nfunction every(arr, f) {\n    var i = 0;\n    for (var k = 0; k < arr.length; k++) {\n        if (!f(arr[k], k, i++)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.every = every;\nfunction flatten(arrays) {\n    return [].concat.apply([], arrays);\n}\nexports.flatten = flatten;\nfunction mergeDeep(dest) {\n    var src = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        src[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < src.length; i++) {\n        dest = deepMerge_(dest, src[i]);\n    }\n    return dest;\n}\nexports.mergeDeep = mergeDeep;\n;\nfunction deepMerge_(dest, src) {\n    if (typeof src !== 'object' || src === null) {\n        return dest;\n    }\n    for (var p in src) {\n        if (!src.hasOwnProperty(p)) {\n            continue;\n        }\n        if (src[p] === undefined) {\n            continue;\n        }\n        if (typeof src[p] !== 'object' || src[p] === null) {\n            dest[p] = src[p];\n        }\n        else if (typeof dest[p] !== 'object' || dest[p] === null) {\n            dest[p] = mergeDeep(src[p].constructor === Array ? [] : {}, src[p]);\n        }\n        else {\n            mergeDeep(dest[p], src[p]);\n        }\n    }\n    return dest;\n}\nvar dlBin = require('datalib/src/bins/bins');\nfunction getbins(stats, maxbins) {\n    return dlBin({\n        min: stats.min,\n        max: stats.max,\n        maxbins: maxbins\n    });\n}\nexports.getbins = getbins;\nfunction unique(values, f) {\n    var results = [];\n    var u = {}, v, i, n;\n    for (i = 0, n = values.length; i < n; ++i) {\n        v = f ? f(values[i]) : values[i];\n        if (v in u) {\n            continue;\n        }\n        u[v] = 1;\n        results.push(values[i]);\n    }\n    return results;\n}\nexports.unique = unique;\n;\nfunction warning(message) {\n    console.warn('[VL Warning]', message);\n}\nexports.warning = warning;\nfunction error(message) {\n    console.error('[VL Error]', message);\n}\nexports.error = error;\nfunction differ(dict, other) {\n    for (var key in dict) {\n        if (dict.hasOwnProperty(key)) {\n            if (other[key] && dict[key] && other[key] !== dict[key]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexports.differ = differ;\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/util.js\n// module id = ZAUf\n// module chunks = 0","var util = require('./util'),\n    EMPTY = [];\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var groups = scene.items,\n      renderer = this,\n      group, items, axes, legends, gx, gy, w, h, opac, i, n, j, m;\n\n  for (i=0, n=groups.length; i<n; ++i) {\n    group = groups[i];\n    axes = group.axisItems || EMPTY;\n    items = group.items || EMPTY;\n    legends = group.legendItems || EMPTY;\n    gx = group.x || 0;\n    gy = group.y || 0;\n    w = group.width || 0;\n    h = group.height || 0;\n\n    // draw group background\n    if (group.stroke || group.fill) {\n      opac = group.opacity == null ? 1 : group.opacity;\n      if (opac > 0) {\n        if (group.fill && util.fill(g, group, opac)) {\n          g.fillRect(gx, gy, w, h);\n        }\n        if (group.stroke && util.stroke(g, group, opac)) {\n          g.strokeRect(gx, gy, w, h);\n        }\n      }\n    }\n\n    // setup graphics context\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, w, h);\n      g.clip();\n    }\n    if (bounds) bounds.translate(-gx, -gy);\n\n    // draw group contents\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].layer === 'back') {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      renderer.draw(g, items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].layer !== 'back') {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n\n    // restore graphics context\n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction pick(g, scene, x, y, gx, gy) {\n  if (scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return null;\n  }\n\n  var groups = scene.items || EMPTY, subscene,\n      group, axes, items, legends, hits, dx, dy, i, j, b;\n\n  for (i=groups.length; --i>=0;) {\n    group = groups[i];\n\n    // first hit test against bounding box\n    // if a group is clipped, that should be handled by the bounds check.\n    b = group.bounds;\n    if (b && !b.contains(gx, gy)) continue;\n\n    // passed bounds check, so test sub-groups\n    axes = group.axisItems || EMPTY;\n    items = group.items || EMPTY;\n    legends = group.legendItems || EMPTY;\n    dx = (group.x || 0);\n    dy = (group.y || 0);\n\n    g.save();\n    g.translate(dx, dy);\n    dx = gx - dx;\n    dy = gy - dy;\n    for (j=legends.length; --j>=0;) {\n      subscene = legends[j];\n      if (subscene.interactive !== false) {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    for (j=axes.length; --j>=0;) {\n      subscene = axes[j];\n      if (subscene.interactive !== false && subscene.layer !== 'back') {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    for (j=items.length; --j>=0;) {\n      subscene = items[j];\n      if (subscene.interactive !== false) {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    for (j=axes.length; --j>=0;) {\n      subscene = axes[j];\n      if (subscene.interative !== false && subscene.layer === 'back') {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    g.restore();\n\n    if (scene.interactive !== false && (group.fill || group.stroke) &&\n        dx >= 0 && dx <= group.width && dy >= 0 && dy <= group.height) {\n      return group;\n    }\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: pick\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/group.js\n// module id = ZCPb\n// module chunks = 0","\"use strict\";\nexports.defaultLegendConfig = {\n    orient: undefined,\n    shortTimeLabels: false\n};\n//# sourceMappingURL=legend.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/legend.js\n// module id = ZE31\n// module chunks = 0","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = Za4h\n// module chunks = 0","function Renderer() {\n  this._el = null;\n  this._bgcolor = null;\n}\n\nvar prototype = Renderer.prototype;\n\nprototype.initialize = function(el, width, height, padding) {\n  this._el = el;\n  return this.resize(width, height, padding);\n};\n\n// Returns the parent container element for a visualization\nprototype.element = function() {\n  return this._el;\n};\n\n// Returns the scene element (e.g., canvas or SVG) of the visualization\n// Subclasses must override if the first child is not the scene element\nprototype.scene = function() {\n  return this._el && this._el.firstChild;\n};\n\nprototype.background = function(bgcolor) {\n  if (arguments.length === 0) return this._bgcolor;\n  this._bgcolor = bgcolor;\n  return this;\n};\n\nprototype.resize = function(width, height, padding) {\n  this._width = width;\n  this._height = height;\n  this._padding = padding || {top:0, left:0, bottom:0, right:0};\n  return this;\n};\n\nprototype.render = function(/*scene, items*/) {\n  return this;\n};\n\nmodule.exports = Renderer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/Renderer.js\n// module id = ZyfV\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-time', ['exports'], factory) :\n  factory((global.d3_time = {}));\n}(this, function (exports) { 'use strict';\n\n  var t0 = new Date;\n  var t1 = new Date;\n  function newInterval(floori, offseti, count, field) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) {\n      interval.count = function(start, end) {\n        t0.setTime(+start), t1.setTime(+end);\n        floori(t0), floori(t1);\n        return Math.floor(count(t0, t1));\n      };\n\n      interval.every = function(step) {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null\n            : !(step > 1) ? interval\n            : interval.filter(field\n                ? function(d) { return field(d) % step === 0; }\n                : function(d) { return interval.count(0, d) % step === 0; });\n      };\n    }\n\n    return interval;\n  };\n\n  var millisecond = newInterval(function() {\n    // noop\n  }, function(date, step) {\n    date.setTime(+date + step);\n  }, function(start, end) {\n    return end - start;\n  });\n\n  // An optimized implementation for this simple case.\n  millisecond.every = function(k) {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return newInterval(function(date) {\n      date.setTime(Math.floor(date / k) * k);\n    }, function(date, step) {\n      date.setTime(+date + step * k);\n    }, function(start, end) {\n      return (end - start) / k;\n    });\n  };\n\n  var second = newInterval(function(date) {\n    date.setMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  }, function(date) {\n    return date.getSeconds();\n  });\n\n  var minute = newInterval(function(date) {\n    date.setSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  }, function(date) {\n    return date.getMinutes();\n  });\n\n  var hour = newInterval(function(date) {\n    date.setMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  }, function(date) {\n    return date.getHours();\n  });\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n\n  var month = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setDate(1);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  }, function(date) {\n    return date.getMonth();\n  });\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  }, function(date) {\n    return date.getFullYear();\n  });\n\n  var utcSecond = newInterval(function(date) {\n    date.setUTCMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  }, function(date) {\n    return date.getUTCSeconds();\n  });\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  }, function(date) {\n    return date.getUTCMinutes();\n  });\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  }, function(date) {\n    return date.getUTCHours();\n  });\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  }, function(date) {\n    return date.getUTCDate() - 1;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCDate(1);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  }, function(date) {\n    return date.getUTCMonth();\n  });\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, function(date) {\n    return date.getUTCFullYear();\n  });\n\n  var milliseconds = millisecond.range;\n  var seconds = second.range;\n  var minutes = minute.range;\n  var hours = hour.range;\n  var days = day.range;\n  var sundays = sunday.range;\n  var mondays = monday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n  var weeks = sunday.range;\n  var months = month.range;\n  var years = year.range;\n\n  var utcMillisecond = millisecond;\n  var utcMilliseconds = milliseconds;\n  var utcSeconds = utcSecond.range;\n  var utcMinutes = utcMinute.range;\n  var utcHours = utcHour.range;\n  var utcDays = utcDay.range;\n  var utcSundays = utcSunday.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n  var utcWeeks = utcSunday.range;\n  var utcMonths = utcMonth.range;\n  var utcYears = utcYear.range;\n\n  var version = \"0.1.1\";\n\n  exports.version = version;\n  exports.milliseconds = milliseconds;\n  exports.seconds = seconds;\n  exports.minutes = minutes;\n  exports.hours = hours;\n  exports.days = days;\n  exports.sundays = sundays;\n  exports.mondays = mondays;\n  exports.tuesdays = tuesdays;\n  exports.wednesdays = wednesdays;\n  exports.thursdays = thursdays;\n  exports.fridays = fridays;\n  exports.saturdays = saturdays;\n  exports.weeks = weeks;\n  exports.months = months;\n  exports.years = years;\n  exports.utcMillisecond = utcMillisecond;\n  exports.utcMilliseconds = utcMilliseconds;\n  exports.utcSeconds = utcSeconds;\n  exports.utcMinutes = utcMinutes;\n  exports.utcHours = utcHours;\n  exports.utcDays = utcDays;\n  exports.utcSundays = utcSundays;\n  exports.utcMondays = utcMondays;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcThursdays = utcThursdays;\n  exports.utcFridays = utcFridays;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcWeeks = utcWeeks;\n  exports.utcMonths = utcMonths;\n  exports.utcYears = utcYears;\n  exports.millisecond = millisecond;\n  exports.second = second;\n  exports.minute = minute;\n  exports.hour = hour;\n  exports.day = day;\n  exports.sunday = sunday;\n  exports.monday = monday;\n  exports.tuesday = tuesday;\n  exports.wednesday = wednesday;\n  exports.thursday = thursday;\n  exports.friday = friday;\n  exports.saturday = saturday;\n  exports.week = sunday;\n  exports.month = month;\n  exports.year = year;\n  exports.utcSecond = utcSecond;\n  exports.utcMinute = utcMinute;\n  exports.utcHour = utcHour;\n  exports.utcDay = utcDay;\n  exports.utcSunday = utcSunday;\n  exports.utcMonday = utcMonday;\n  exports.utcTuesday = utcTuesday;\n  exports.utcWednesday = utcWednesday;\n  exports.utcThursday = utcThursday;\n  exports.utcFriday = utcFriday;\n  exports.utcSaturday = utcSaturday;\n  exports.utcWeek = utcSunday;\n  exports.utcMonth = utcMonth;\n  exports.utcYear = utcYear;\n  exports.interval = newInterval;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time/build/d3-time.js\n// module id = aZ75\n// module chunks = 0","var Base = require('./Transform').prototype;\n\nfunction BatchTransform() {\n  // Nearest appropriate collector.\n  // Set by the dataflow Graph during connection.\n  this._collector = null;\n}\n\nvar prototype = (BatchTransform.prototype = Object.create(Base));\nprototype.constructor = BatchTransform;\n\nprototype.init = function(graph) {\n  Base.init.call(this, graph);\n  return this.batch(true);\n};\n\nprototype.transform = function(input, reset) {\n  return this.batchTransform(input, this._collector.data(), reset);\n};\n\nprototype.batchTransform = function(/* input, data, reset */) {\n};\n\nmodule.exports = BatchTransform;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/BatchTransform.js\n// module id = acp7\n// module chunks = 0","var arc = require('./arc');\n\nmodule.exports = function(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  if (l == null) l = 0;\n  if (t == null) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n\n        // set control point to 2nd one of this command\n        // the first control point is assumed to be the reflection of\n        // the second control point on the previous command relative\n        // to the current point.\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        // set control point to 2nd one of this command\n        // the first control point is assumed to be the reflection of\n        // the second control point on the previous command relative\n        // to the current point.\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ]);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ]);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n};\n\nfunction drawArc(g, x, y, coords) {\n  var seg = arc.segments(\n    coords[5], // end x\n    coords[6], // end y\n    coords[0], // radius x\n    coords[1], // radius y\n    coords[3], // large flag\n    coords[4], // sweep flag\n    coords[2], // rotation\n    x, y\n  );\n  for (var i=0; i<seg.length; ++i) {\n    var bez = arc.bezier(seg[i]);\n    g.bezierCurveTo.apply(g, bez);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/path/render.js\n// module id = bSC/\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n  typeof define === 'function' && define.amd ? define('d3-time-format', ['exports', 'd3-time'], factory) :\n  factory((global.d3_time_format = {}),global.d3_time);\n}(this, function (exports,d3Time) { 'use strict';\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function locale$1(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // Convert day-of-week and week-of-year to day-of-year.\n        if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        }\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.parse = newParse(specifier, localDate);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.parse = newParse(specifier, utcDate);\n        f.toString = function() { return specifier; };\n        return f;\n      }\n    };\n  };\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + d3Time.day.count(d3Time.year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(d3Time.sunday.count(d3Time.year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(d3Time.monday.count(d3Time.year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var locale = locale$1({\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  var caES = locale$1({\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"diumenge\", \"dilluns\", \"dimarts\", \"dimecres\", \"dijous\", \"divendres\", \"dissabte\"],\n    shortDays: [\"dg.\", \"dl.\", \"dt.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n    months: [\"gener\", \"febrer\", \"març\", \"abril\", \"maig\", \"juny\", \"juliol\", \"agost\", \"setembre\", \"octubre\", \"novembre\", \"desembre\"],\n    shortMonths: [\"gen.\", \"febr.\", \"març\", \"abr.\", \"maig\", \"juny\", \"jul.\", \"ag.\", \"set.\", \"oct.\", \"nov.\", \"des.\"]\n  });\n\n  var deCH = locale$1({\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  });\n\n  var deDE = locale$1({\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  });\n\n  var enCA = locale$1({\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  var enGB = locale$1({\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  var esES = locale$1({\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    shortMonths: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n  });\n\n  var fiFI = locale$1({\n    dateTime: \"%A, %-d. %Bta %Y klo %X\",\n    date: \"%-d.%-m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"a.m.\", \"p.m.\"],\n    days: [\"sunnuntai\", \"maanantai\", \"tiistai\", \"keskiviikko\", \"torstai\", \"perjantai\", \"lauantai\"],\n    shortDays: [\"Su\", \"Ma\", \"Ti\", \"Ke\", \"To\", \"Pe\", \"La\"],\n    months: [\"tammikuu\", \"helmikuu\", \"maaliskuu\", \"huhtikuu\", \"toukokuu\", \"kesäkuu\", \"heinäkuu\", \"elokuu\", \"syyskuu\", \"lokakuu\", \"marraskuu\", \"joulukuu\"],\n    shortMonths: [\"Tammi\", \"Helmi\", \"Maalis\", \"Huhti\", \"Touko\", \"Kesä\", \"Heinä\", \"Elo\", \"Syys\", \"Loka\", \"Marras\", \"Joulu\"]\n  });\n\n  var frCA = locale$1({\n    dateTime: \"%a %e %b %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"\", \"\"],\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"jan\", \"fév\", \"mar\", \"avr\", \"mai\", \"jui\", \"jul\", \"aoû\", \"sep\", \"oct\", \"nov\", \"déc\"]\n  });\n\n  var frFR = locale$1({\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"janv.\", \"févr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"août\", \"sept.\", \"oct.\", \"nov.\", \"déc.\"]\n  });\n\n  var heIL = locale$1({\n    dateTime: \"%A, %e ב%B %Y %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"],\n    shortDays: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\n    months: [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\", \"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\", \"דצמבר\"],\n    shortMonths: [\"ינו׳\", \"פבר׳\", \"מרץ\", \"אפר׳\", \"מאי\", \"יוני\", \"יולי\", \"אוג׳\", \"ספט׳\", \"אוק׳\", \"נוב׳\", \"דצמ׳\"]\n  });\n\n  var huHU = locale$1({\n    dateTime: \"%Y. %B %-e., %A %X\",\n    date: \"%Y. %m. %d.\",\n    time: \"%H:%M:%S\",\n    periods: [\"de.\", \"du.\"], // unused\n    days: [\"vasárnap\", \"hétfő\", \"kedd\", \"szerda\", \"csütörtök\", \"péntek\", \"szombat\"],\n    shortDays: [\"V\", \"H\", \"K\", \"Sze\", \"Cs\", \"P\", \"Szo\"],\n    months: [\"január\", \"február\", \"március\", \"április\", \"május\", \"június\", \"július\", \"augusztus\", \"szeptember\", \"október\", \"november\", \"december\"],\n    shortMonths: [\"jan.\", \"feb.\", \"már.\", \"ápr.\", \"máj.\", \"jún.\", \"júl.\", \"aug.\", \"szept.\", \"okt.\", \"nov.\", \"dec.\"]\n  });\n\n  var itIT = locale$1({\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Domenica\", \"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\"],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"],\n    shortMonths: [\"Gen\", \"Feb\", \"Mar\", \"Apr\", \"Mag\", \"Giu\", \"Lug\", \"Ago\", \"Set\", \"Ott\", \"Nov\", \"Dic\"]\n  });\n\n  var jaJP = locale$1({\n    dateTime: \"%Y %b %e %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\n    shortDays: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\n    months: [\"睦月\", \"如月\", \"弥生\", \"卯月\", \"皐月\", \"水無月\", \"文月\", \"葉月\", \"長月\", \"神無月\", \"霜月\", \"師走\"],\n    shortMonths: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"]\n  });\n\n  var koKR = locale$1({\n    dateTime: \"%Y/%m/%d %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"오전\", \"오후\"],\n    days: [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"],\n    shortDays: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\n    months: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\n    shortMonths: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"]\n  });\n\n  var mkMK = locale$1({\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"недела\", \"понеделник\", \"вторник\", \"среда\", \"четврток\", \"петок\", \"сабота\"],\n    shortDays: [\"нед\", \"пон\", \"вто\", \"сре\", \"чет\", \"пет\", \"саб\"],\n    months: [\"јануари\", \"февруари\", \"март\", \"април\", \"мај\", \"јуни\", \"јули\", \"август\", \"септември\", \"октомври\", \"ноември\", \"декември\"],\n    shortMonths: [\"јан\", \"фев\", \"мар\", \"апр\", \"мај\", \"јун\", \"јул\", \"авг\", \"сеп\", \"окт\", \"ное\", \"дек\"]\n  });\n\n  var nlNL = locale$1({\n    dateTime: \"%a %e %B %Y %T\",\n    date: \"%d-%m-%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\"],\n    shortDays: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n    months: [\"januari\", \"februari\", \"maart\", \"april\", \"mei\", \"juni\", \"juli\", \"augustus\", \"september\", \"oktober\", \"november\", \"december\"],\n    shortMonths: [\"jan\", \"feb\", \"mrt\", \"apr\", \"mei\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"]\n  });\n\n  var plPL = locale$1({\n    dateTime: \"%A, %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"],\n    shortDays: [\"Niedz.\", \"Pon.\", \"Wt.\", \"Śr.\", \"Czw.\", \"Pt.\", \"Sob.\"],\n    months: [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"],\n    shortMonths: [\"Stycz.\", \"Luty\", \"Marz.\", \"Kwie.\", \"Maj\", \"Czerw.\", \"Lipc.\", \"Sierp.\", \"Wrz.\", \"Paźdz.\", \"Listop.\", \"Grudz.\"]/* In Polish language abbraviated months are not commonly used so there is a dispute about the proper abbraviations. */\n  });\n\n  var ptBR = locale$1({\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    shortMonths: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"]\n  });\n\n  var ruRU = locale$1({\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"воскресенье\", \"понедельник\", \"вторник\", \"среда\", \"четверг\", \"пятница\", \"суббота\"],\n    shortDays: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\n    months: [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"],\n    shortMonths: [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"]\n  });\n\n  var svSE = locale$1({\n    dateTime: \"%A den %d %B %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"fm\", \"em\"],\n    days: [\"Söndag\", \"Måndag\", \"Tisdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lördag\"],\n    shortDays: [\"Sön\", \"Mån\", \"Tis\", \"Ons\", \"Tor\", \"Fre\", \"Lör\"],\n    months: [\"Januari\", \"Februari\", \"Mars\", \"April\", \"Maj\", \"Juni\", \"Juli\", \"Augusti\", \"September\", \"Oktober\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Maj\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"]\n  });\n\n  var zhCN = locale$1({\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y/%-m/%-d\",\n    time: \"%H:%M:%S\",\n    periods: [\"上午\", \"下午\"],\n    days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    shortDays: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    shortMonths: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\n  });\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  formatIsoNative.toString = function() {\n    return isoSpecifier;\n  };\n\n  var formatIso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? formatIsoNative\n      : locale.utcFormat(isoSpecifier);\n\n  var format = locale.format;\n  var utcFormat = locale.utcFormat;\n\n  var version = \"0.2.1\";\n\n  exports.version = version;\n  exports.format = format;\n  exports.utcFormat = utcFormat;\n  exports.locale = locale$1;\n  exports.localeCaEs = caES;\n  exports.localeDeCh = deCH;\n  exports.localeDeDe = deDE;\n  exports.localeEnCa = enCA;\n  exports.localeEnGb = enGB;\n  exports.localeEnUs = locale;\n  exports.localeEsEs = esES;\n  exports.localeFiFi = fiFI;\n  exports.localeFrCa = frCA;\n  exports.localeFrFr = frFR;\n  exports.localeHeIl = heIL;\n  exports.localeHuHu = huHU;\n  exports.localeItIt = itIT;\n  exports.localeJaJp = jaJP;\n  exports.localeKoKr = koKR;\n  exports.localeMkMk = mkMK;\n  exports.localeNlNl = nlNL;\n  exports.localePlPl = plPL;\n  exports.localePtBr = ptBR;\n  exports.localeRuRu = ruRU;\n  exports.localeSvSe = svSE;\n  exports.localeZhCn = zhCN;\n  exports.isoFormat = formatIso;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time-format/build/d3-time-format.js\n// module id = bZsP\n// module chunks = 0","\"use strict\";\n(function (AxisOrient) {\n    AxisOrient[AxisOrient[\"TOP\"] = 'top'] = \"TOP\";\n    AxisOrient[AxisOrient[\"RIGHT\"] = 'right'] = \"RIGHT\";\n    AxisOrient[AxisOrient[\"LEFT\"] = 'left'] = \"LEFT\";\n    AxisOrient[AxisOrient[\"BOTTOM\"] = 'bottom'] = \"BOTTOM\";\n})(exports.AxisOrient || (exports.AxisOrient = {}));\nvar AxisOrient = exports.AxisOrient;\nexports.defaultAxisConfig = {\n    offset: undefined,\n    grid: undefined,\n    labels: true,\n    labelMaxLength: 25,\n    tickSize: undefined,\n    characterWidth: 6\n};\nexports.defaultFacetAxisConfig = {\n    axisWidth: 0,\n    labels: true,\n    grid: false,\n    tickSize: 0\n};\n//# sourceMappingURL=axis.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/axis.js\n// module id = cihr\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: 'field'},\n    lat: {type: 'field'}\n  });\n\n  this._output = {\n    'x': 'layout_x',\n    'y': 'layout_y'\n  };\n  return this.mutates(true);\n}\n\nGeo.Parameters = {\n  projection: {type: 'value', default: 'mercator'},\n  center:     {type: 'array<value>'},\n  translate:  {type: 'array<value>', default: require('./screen').center},\n  rotate:     {type: 'array<value>'},\n  scale:      {type: 'value'},\n  precision:  {type: 'value'},\n  clipAngle:  {type: 'value'},\n  clipExtent: {type: 'value'}\n};\n\nGeo.d3Projection = function() {\n  var p = this.param('projection'),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === 'projection' || !proj[name]) continue;\n    value = this.param(name);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar prototype = (Geo.prototype = Object.create(Transform.prototype));\nprototype.constructor = Geo;\n\nprototype.transform = function(input) {\n  log.debug(input, ['geo']);\n\n  var output = this._output,\n      lon = this.param('lon').accessor,\n      lat = this.param('lat').accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll) || [null, null];\n    Tuple.set(t, output.x, xy[0]);\n    Tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n\nGeo.baseSchema = {\n  \"projection\": {\n    \"description\": \"The type of cartographic projection to use.\",\n    \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n    \"default\": \"mercator\"\n  },\n  \"center\": {\n    \"description\": \"The center of the projection.\",\n    \"oneOf\": [\n      {\n        \"type\": \"array\",\n        \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n        \"minItems\": 2,\n        \"maxItems\": 2\n      },\n      {\"$ref\": \"#/refs/signal\"}\n    ]\n  },\n  \"translate\": {\n    \"description\": \"The translation of the projection.\",\n    \"oneOf\": [\n      {\n        \"type\": \"array\",\n        \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n        \"minItems\": 2,\n        \"maxItems\": 2\n      },\n      {\"$ref\": \"#/refs/signal\"}\n    ]\n  },\n  \"rotate\": {\n    \"description\": \"The rotation of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"scale\": {\n    \"description\": \"The scale of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"precision\": {\n    \"description\": \"The desired precision of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"clipAngle\": {\n    \"description\": \"The clip angle of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"clipExtent\": {\n    \"description\": \"The clip extent of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  }\n};\n\nGeo.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Geo transform\",\n  \"description\": \"Performs a cartographic projection. Given longitude and latitude values, sets corresponding x and y properties for a mark.\",\n  \"type\": \"object\",\n  \"properties\": dl.extend({\n    \"type\": {\"enum\": [\"geo\"]},\n    \"lon\": {\n      \"description\": \"The input longitude values.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"lat\": {\n      \"description\": \"The input latitude values.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"}\n      },\n      \"additionalProperties\": false\n    }\n  }, Geo.baseSchema),\n  \"required\": [\"type\", \"lon\", \"lat\"],\n  \"additionalProperties\": false\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Geo.js\n// module id = ct8e\n// module chunks = 0","var util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/json.js\n// module id = cwb4\n// module chunks = 0","// Path parsing and rendering code adapted from fabric.js -- Thanks!\nvar cmdlen = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    regexp = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)([-+])/g, /\\s|,|###/];\n\nmodule.exports = function(pathstr) {\n  var result = [],\n      path,\n      curr,\n      chunks,\n      parsed, param,\n      cmd, len, i, j, n, m;\n\n  // First, break path into command sequence\n  path = pathstr\n    .slice()\n    .replace(regexp[0], '###$1')\n    .split(regexp[1])\n    .slice(1);\n\n  // Next, parse each command in turn\n  for (i=0, n=path.length; i<n; ++i) {\n    curr = path[i];\n    chunks = curr\n      .slice(1)\n      .trim()\n      .replace(regexp[2],'$1###$2')\n      .split(regexp[3]);\n    cmd = curr.charAt(0);\n\n    parsed = [cmd];\n    for (j=0, m=chunks.length; j<m; ++j) {\n      if ((param = +chunks[j]) === param) { // not NaN\n        parsed.push(param);\n      }\n    }\n\n    len = cmdlen[cmd.toLowerCase()];\n    if (parsed.length-1 > len) {\n      for (j=1, m=parsed.length; j<m; j+=len) {\n        result.push([cmd].concat(parsed.slice(j, j+len)));\n      }\n    }\n    else {\n      result.push(parsed);\n    }\n  }\n\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/path/parse.js\n// module id = eJnU\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render'),\n    linePath = require('../../../util/svg').path.line;\n    \nfunction path(g, items) {\n  var o = items[0],\n      p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  render(g, p);\n}\n\nfunction pick(g, scene, x, y, gx, gy) {\n  var items = scene.items,\n      b = scene.bounds;\n\n  if (!items || !items.length || b && !b.contains(gx, gy)) {\n    return null;\n  }\n\n  if (g.pixelratio != null && g.pixelratio !== 1) {\n    x *= g.pixelratio;\n    y *= g.pixelratio;\n  }\n  return hit(g, items, x, y) ? items[0] : null;\n}\n\nvar hit = util.testPath(path, false);\n\nmodule.exports = {\n  draw: util.drawOne(path),\n  pick: pick,\n  nested: true\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/line.js\n// module id = eVGq\n// module chunks = 0","var Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Lookup(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    on:      {type: 'data'},\n    onKey:   {type: 'field', default: null},\n    as:      {type: 'array<value>'},\n    keys:    {type: 'array<field>', default: ['data']},\n    default: {type: 'value'}\n  });\n\n  return this.mutates(true);\n}\n\nvar prototype = (Lookup.prototype = Object.create(Transform.prototype));\nprototype.constructor = Lookup;\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['lookup']);\n\n  var on = this.param('on'),\n      onLast = on.source.last(),\n      onData = on.source.values(),\n      onKey = this.param('onKey'),\n      onF = onKey.field,\n      keys = this.param('keys'),\n      get = keys.accessor,\n      as = this.param('as'),\n      defaultValue = this.param('default'),\n      lut = this._lut,\n      i, v;\n\n  // build lookup table on init, withKey modified, or tuple add/rem\n  if (lut == null || this._on !== onF || onF && onLast.fields[onF] ||\n      onLast.add.length || onLast.rem.length)\n  {\n    if (onF) { // build hash from withKey field\n      onKey = onKey.accessor;\n      for (lut={}, i=0; i<onData.length; ++i) {\n        lut[onKey(v = onData[i])] = v;\n      }\n    } else { // otherwise, use index-based lookup\n      lut = onData;\n    }\n    this._lut = lut;\n    this._on = onF;\n    reset = true;\n  }\n\n  function set(t) {\n    for (var i=0; i<get.length; ++i) {\n      var v = lut[get[i](t)] || defaultValue;\n      Tuple.set(t, as[i], v);\n    }\n  }\n\n  input.add.forEach(set);\n  var run = keys.field.some(function(f) { return input.fields[f]; });\n  if (run || reset) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  as.forEach(function(k) { input.fields[k] = 1; });\n  return input;\n};\n\nmodule.exports = Lookup;\n\nLookup.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Lookup transform\",\n  \"description\": \"Extends a data set by looking up values in another data set.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"lookup\"]},\n    \"on\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the secondary data set on which to lookup values.\"\n    },\n    \"onKey\": {\n      \"description\": \"The key field to lookup, or null for index-based lookup.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"keys\": {\n      \"description\": \"One or more fields in the primary data set to match against the secondary data set.\",\n      \"type\": \"array\",\n      \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n    },\n    \"as\": {\n      \"type\": \"array\",\n      \"description\": \"The names of the fields in which to store looked-up values.\",\n      \"items\": {\"type\": \"string\"}\n    },\n    \"default\": {\n      // \"type\": \"any\",\n      \"description\": \"The default value to use if a lookup match fails.\"\n    }\n  },\n  \"required\": [\"type\", \"on\", \"as\", \"keys\"],\n  \"additionalProperties\": false\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Lookup.js\n// module id = ec8D\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Treeify(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'}\n  });\n\n  this._output = {\n    'children': 'children',\n    'parent':   'parent'\n  };\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Treeify.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Treeify;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['treeifying']);\n\n  var fields = this.param('groupby').field,\n      childField = this._output.children,\n      parentField = this._output.parent,\n      summary = [{name:'*', ops: ['values'], as: [childField]}],\n      aggrs = fields.map(function(f) {\n        return dl.groupby(f).summarize(summary);\n      }),\n      prev = this._internal || [], curr = [], i, n;\n\n  function level(index, node, values) {\n    var vals = aggrs[index].execute(values);\n\n    node[childField] = vals;\n    vals.forEach(function(n) {\n      n[parentField] = node;\n      curr.push(Tuple.ingest(n));\n      if (index+1 < fields.length) level(index+1, n, n[childField]);\n      else n[childField].forEach(function(c) { c[parentField] = n; });\n    });\n  }\n\n  var root = Tuple.ingest({});\n  root[parentField] = null;\n  curr.push(root);\n  level(0, root, data);\n\n  // update changeset with internal nodes\n  for (i=0, n=curr.length; i<n; ++i) {\n    input.add.push(curr[i]);\n  }\n  for (i=0, n=prev.length; i<n; ++i) {\n    input.rem.push(prev[i]);\n  }\n  this._internal = curr;\n\n  return input;\n};\n\nmodule.exports = Treeify;\n\nTreeify.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Treeify transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"treeify\"]},\n    \"groupby\": {\n      \"description\": \"An ordered list of fields by which to group tuples into a tree.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"children\": {\"type\": \"string\", \"default\": \"children\"},\n        \"parent\": {\"type\": \"string\", \"default\": \"parent\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"groupby\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Treeify.js\n// module id = ei6W\n// module chunks = 0","var DEPS = require('./Dependencies').ALL;\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.dirty = a ? a.dirty : [];\n  b.request = a ? a.request : null;\n  for (var d, i=0, n=DEPS.length; i<n; ++i) {\n    b[d=DEPS[i]] = a ? a[d] : {};\n  }\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/ChangeSet.js\n// module id = ekYZ\n// module chunks = 0","var util = require('./util');\nvar halfpi = Math.PI / 2;\n\nfunction path(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nmodule.exports = {\n  draw: util.drawAll(path),\n  pick: util.pickPath(path)\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/arc.js\n// module id = evf9\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('./channel');\nvar encoding_1 = require('./encoding');\nvar mark_1 = require('./mark');\nvar util_1 = require('./util');\n(function (StackOffset) {\n    StackOffset[StackOffset[\"ZERO\"] = 'zero'] = \"ZERO\";\n    StackOffset[StackOffset[\"CENTER\"] = 'center'] = \"CENTER\";\n    StackOffset[StackOffset[\"NORMALIZE\"] = 'normalize'] = \"NORMALIZE\";\n    StackOffset[StackOffset[\"NONE\"] = 'none'] = \"NONE\";\n})(exports.StackOffset || (exports.StackOffset = {}));\nvar StackOffset = exports.StackOffset;\nfunction stack(mark, encoding, config) {\n    var stacked = (config && config.mark) ? config.mark.stacked : undefined;\n    if (util_1.contains([StackOffset.NONE, null, false], stacked)) {\n        return null;\n    }\n    if (!util_1.contains([mark_1.BAR, mark_1.AREA], mark)) {\n        return null;\n    }\n    if (!encoding_1.isAggregate(encoding)) {\n        return null;\n    }\n    var stackByChannels = channel_1.STACK_GROUP_CHANNELS.reduce(function (sc, channel) {\n        if (encoding_1.has(encoding, channel) && !encoding[channel].aggregate) {\n            sc.push(channel);\n        }\n        return sc;\n    }, []);\n    if (stackByChannels.length === 0) {\n        return null;\n    }\n    var hasXField = encoding_1.has(encoding, channel_1.X);\n    var hasYField = encoding_1.has(encoding, channel_1.Y);\n    var xIsAggregate = hasXField && !!encoding.x.aggregate;\n    var yIsAggregate = hasYField && !!encoding.y.aggregate;\n    if (xIsAggregate !== yIsAggregate) {\n        return {\n            groupbyChannel: xIsAggregate ? (hasYField ? channel_1.Y : null) : (hasXField ? channel_1.X : null),\n            fieldChannel: xIsAggregate ? channel_1.X : channel_1.Y,\n            stackByChannels: stackByChannels,\n            offset: stacked || StackOffset.ZERO\n        };\n    }\n    return null;\n}\nexports.stack = stack;\n//# sourceMappingURL=stack.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/stack.js\n// module id = f2i1\n// module chunks = 0","var dl = require('datalib'),\n    Deps = require('vega-dataflow').Dependencies;\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i,\n    valType   = /value/i;\n\nfunction Parameter(name, type, transform) {\n  this._name = name;\n  this._type = type;\n  this._transform = transform;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = [];\n}\n\nvar prototype = Parameter.prototype;\n\nfunction get() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  var val = isArray ? this._value : this._value[0],\n      acc = isArray ? this._accessors : this._accessors[0];\n\n  if (!dl.isValid(acc) && valType.test(this._type)) {\n    return val;\n  } else {\n    return isData ? { name: val, source: acc } :\n    isField ? { field: val, accessor: acc } : val;\n  }\n}\n\nprototype.get = function() {\n  var graph = this._transform._graph,\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      i, n, sig, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return get.call(this);\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return get.call(this); // TODO: support signal as dataTypes\n  }\n\n  for (i=0, n=this._signals.length; i<n; ++i) {\n    sig = this._signals[i];\n    idx = sig.index;\n    val = sig.value(graph);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ?\n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return get.call(this);\n};\n\nprototype.set = function(value) {\n  var p = this,\n      graph = p._transform._graph,\n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  p._signals = [];\n  this._value = dl.array(value).map(function(v, i) {\n    var e;\n    if (dl.isString(v)) {\n      if (isExpr) {\n        e = graph.expr(v);\n        p._transform.dependency(Deps.FIELDS,  e.fields);\n        p._transform.dependency(Deps.SIGNALS, e.globals);\n        p._transform.dependency(Deps.DATA,    e.dataSources);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        p._accessors[i] = dl.accessor(v);\n        p._transform.dependency(Deps.FIELDS, dl.field(v));\n      } else if (isData) {\n        p._resolution = true;\n        p._transform.dependency(Deps.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      p._accessors[i] = dl.accessor(v.field);\n      p._transform.dependency(Deps.FIELDS, dl.field(v.field));\n      return v.field;\n    } else if (v.signal !== undefined) {\n      p._resolution = true;\n      p._transform.dependency(Deps.SIGNALS, dl.field(v.signal)[0]);\n      p._signals.push({\n        index: i,\n        value: function(graph) { return graph.signalRef(v.signal); }\n      });\n      return v.signal;\n    } else if (v.expr !== undefined) {\n      p._resolution = true;\n      e = graph.expr(v.expr);\n      p._transform.dependency(Deps.SIGNALS, e.globals);\n      p._signals.push({\n        index: i,\n        value: function() { return e.fn(); }\n      });\n      return v.expr;\n    }\n\n    return v;\n  });\n\n  return p._transform;\n};\n\nmodule.exports = Parameter;\n\n// Schema for field|value-type parameters.\nParameter.schema = {\n  \"type\": \"object\",\n  \"oneOf\": [{\n    \"properties\": {\"field\": {\"type\": \"string\"}},\n    \"required\": [\"field\"]\n  }, {\n    \"properties\": {\"value\": {\"type\": \"string\"}},\n    \"required\": [\"value\"]\n  }]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Parameter.js\n// module id = fRRI\n// module chunks = 0","var d3 = require('d3');\n\nfunction parseBg(bg) {\n  // return null if input is null or undefined\n  if (bg == null) return null;\n  // run through d3 rgb to sanity check\n  return d3.rgb(bg) + '';\n}\n\nmodule.exports = parseBg;\n\nparseBg.schema = {\"defs\": {\"background\": {\"type\": \"string\"}}};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/background.js\n// module id = fxxq\n// module chunks = 0","function drawPathOne(path, g, o, items) {\n  if (path(g, items)) return;\n\n  var opac = o.opacity == null ? 1 : o.opacity;\n  if (opac===0) return;\n\n  if (o.fill && fill(g, o, opac)) { g.fill(); }\n  if (o.stroke && stroke(g, o, opac)) { g.stroke(); }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (!bounds || bounds.intersects(item.bounds)) {\n      drawPathOne(path, g, item, item);\n    }\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  };\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (!bounds || bounds.intersects(scene.bounds)) {\n      drawPathOne(pathFunc, g, scene.items[0], scene.items);\n    }\n  };\n}\n\nvar trueFunc = function() { return true; };\n\nfunction pick(test) {\n  if (!test) test = trueFunc;\n\n  return function(g, scene, x, y, gx, gy) {\n    if (!scene.items.length) return null;\n\n    var o, b, i;\n\n    if (g.pixelratio != null && g.pixelratio !== 1) {\n      x *= g.pixelratio;\n      y *= g.pixelratio;\n    }\n\n    for (i=scene.items.length; --i >= 0;) {\n      o = scene.items[i]; b = o.bounds;\n      // first hit test against bounding box\n      if ((b && !b.contains(gx, gy)) || !b) continue;\n      // if in bounding box, perform more careful test\n      if (test(g, o, x, y, gx, gy)) return o;\n    }\n    return null;\n  };\n}\n\nfunction testPath(path, filled) {\n  return function(g, o, x, y) {\n    var item = Array.isArray(o) ? o[0] : o,\n        fill = (filled == null) ? item.fill : filled,\n        stroke = item.stroke && g.isPointInStroke, lw, lc;\n\n    if (stroke) {\n      lw = item.strokeWidth;\n      lc = item.strokeCap;\n      g.lineWidth = lw != null ? lw : 1;\n      g.lineCap   = lc != null ? lc : 'butt';\n    }\n\n    return path(g, o) ? false :\n      (fill && g.isPointInPath(x, y)) ||\n      (stroke && g.isPointInStroke(x, y));\n  };\n}\n\nfunction pickPath(path) {\n  return pick(testPath(path));\n}\n\nfunction fill(g, o, opacity) {\n  opacity *= (o.fillOpacity==null ? 1 : o.fillOpacity);\n  if (opacity > 0) {\n    g.globalAlpha = opacity;\n    g.fillStyle = color(g, o, o.fill);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stroke(g, o, opacity) {\n  var lw = (lw = o.strokeWidth) != null ? lw : 1, lc;\n  if (lw <= 0) return false;\n\n  opacity *= (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n  if (opacity > 0) {\n    g.globalAlpha = opacity;\n    g.strokeStyle = color(g, o, o.stroke);\n    g.lineWidth = lw;\n    g.lineCap = (lc = o.strokeCap) != null ? lc : 'butt';\n    g.vgLineDash(o.strokeDash || null);\n    g.vgLineDashOffset(o.strokeDashOffset || 0);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction color(g, o, value) {\n  return (value.id) ?\n    gradient(g, value, o.bounds) :\n    value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\nmodule.exports = {\n  drawOne:  drawOne,\n  drawAll:  drawAll,\n  pick:     pick,\n  pickPath: pickPath,\n  testPath: testPath,\n  stroke:   stroke,\n  fill:     fill,\n  color:    color,\n  gradient: gradient\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/util.js\n// module id = gWW/\n// module chunks = 0","var util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x == null || x === '' ? null : x + ''; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction fieldNames(datum) {\n  return util.keys(datum);\n}\n\nfunction bracket(fieldName) {\n  return '[' + fieldName + ']';\n}\n\nfunction type(values, f) {\n  values = util.array(values);\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  var get = fields ? util.identity : (fields = fieldNames(data[0]), bracket);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, get(f)), types);\n  }, {});\n}\n\nfunction infer(values, f, ignore) {\n  values = util.array(values);\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if ((!ignore || !ignore.test(v)) && util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields, ignore) {\n  var get = fields ? util.identity : (fields = fieldNames(data[0]), bracket);\n  return fields.reduce(function(types, f) {\n    types[f] = infer(data, get(f), ignore);\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/type.js\n// module id = ggRp\n// module chunks = 0","var util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) { callback(error, null); return; }\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n          callback(null, data);\n        } catch (e) {\n          callback(e, null);\n        }\n      } : undefined);\n\n      // data loaded, now parse it (sync)\n      if (!callback) return read(data, format);\n    };\n    return out;\n  }, {});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/readers.js\n// module id = gjoU\n// module chunks = 0","var tupleID = 0;\n\nfunction ingest(datum) {\n  datum = (datum === Object(datum)) ? datum : {data: datum};\n  datum._id = ++tupleID;\n  if (datum._prev) datum._prev = null;\n  return datum;\n}\n\nfunction idMap(a, ids) {\n  ids = ids || {};\n  for (var i=0, n=a.length; i<n; ++i) {\n    ids[a[i]._id] = 1;\n  }\n  return ids;\n}\n\nfunction copy(t, c) {\n  c = c || {};\n  for (var k in t) {\n    if (k !== '_prev' && k !== '_id') c[k] = t[k];\n  }\n  return c;\n}\n\nmodule.exports = {\n  ingest: ingest,\n  idMap: idMap,\n\n  derive: function(d) {\n    return ingest(copy(d));\n  },\n\n  rederive: function(d, t) {\n    return copy(d, t);\n  },\n\n  set: function(t, k, v) {\n    return t[k] === v ? 0 : (t[k] = v, 1);\n  },\n\n  prev: function(t) {\n    return t._prev || t;\n  },\n\n  prev_init: function(t) {\n    if (!t._prev) { t._prev = {_id: t._id}; }\n  },\n\n  prev_update: function(t) {\n    var p = t._prev, k, v;\n    if (p) for (k in t) {\n      if (k !== '_prev' && k !== '_id') {\n        p[k] = ((v=t[k]) instanceof Object && v._prev) ? v._prev : v;\n      }\n    }\n  },\n\n  reset: function() { tupleID = 0; },\n\n  idFilter: function(data) {\n    var ids = {};\n    for (var i=arguments.length; --i>0;) {\n      idMap(arguments[i], ids);\n    }\n    return data.filter(function(x) { return !ids[x._id]; });\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Tuple.js\n// module id = gtuQ\n// module chunks = 0","\"use strict\";\n(function (AggregateOp) {\n    AggregateOp[AggregateOp[\"VALUES\"] = 'values'] = \"VALUES\";\n    AggregateOp[AggregateOp[\"COUNT\"] = 'count'] = \"COUNT\";\n    AggregateOp[AggregateOp[\"VALID\"] = 'valid'] = \"VALID\";\n    AggregateOp[AggregateOp[\"MISSING\"] = 'missing'] = \"MISSING\";\n    AggregateOp[AggregateOp[\"DISTINCT\"] = 'distinct'] = \"DISTINCT\";\n    AggregateOp[AggregateOp[\"SUM\"] = 'sum'] = \"SUM\";\n    AggregateOp[AggregateOp[\"MEAN\"] = 'mean'] = \"MEAN\";\n    AggregateOp[AggregateOp[\"AVERAGE\"] = 'average'] = \"AVERAGE\";\n    AggregateOp[AggregateOp[\"VARIANCE\"] = 'variance'] = \"VARIANCE\";\n    AggregateOp[AggregateOp[\"VARIANCEP\"] = 'variancep'] = \"VARIANCEP\";\n    AggregateOp[AggregateOp[\"STDEV\"] = 'stdev'] = \"STDEV\";\n    AggregateOp[AggregateOp[\"STDEVP\"] = 'stdevp'] = \"STDEVP\";\n    AggregateOp[AggregateOp[\"MEDIAN\"] = 'median'] = \"MEDIAN\";\n    AggregateOp[AggregateOp[\"Q1\"] = 'q1'] = \"Q1\";\n    AggregateOp[AggregateOp[\"Q3\"] = 'q3'] = \"Q3\";\n    AggregateOp[AggregateOp[\"MODESKEW\"] = 'modeskew'] = \"MODESKEW\";\n    AggregateOp[AggregateOp[\"MIN\"] = 'min'] = \"MIN\";\n    AggregateOp[AggregateOp[\"MAX\"] = 'max'] = \"MAX\";\n    AggregateOp[AggregateOp[\"ARGMIN\"] = 'argmin'] = \"ARGMIN\";\n    AggregateOp[AggregateOp[\"ARGMAX\"] = 'argmax'] = \"ARGMAX\";\n})(exports.AggregateOp || (exports.AggregateOp = {}));\nvar AggregateOp = exports.AggregateOp;\nexports.AGGREGATE_OPS = [\n    AggregateOp.VALUES,\n    AggregateOp.COUNT,\n    AggregateOp.VALID,\n    AggregateOp.MISSING,\n    AggregateOp.DISTINCT,\n    AggregateOp.SUM,\n    AggregateOp.MEAN,\n    AggregateOp.AVERAGE,\n    AggregateOp.VARIANCE,\n    AggregateOp.VARIANCEP,\n    AggregateOp.STDEV,\n    AggregateOp.STDEVP,\n    AggregateOp.MEDIAN,\n    AggregateOp.Q1,\n    AggregateOp.Q3,\n    AggregateOp.MODESKEW,\n    AggregateOp.MIN,\n    AggregateOp.MAX,\n    AggregateOp.ARGMIN,\n    AggregateOp.ARGMAX,\n];\nexports.SUM_OPS = [\n    AggregateOp.COUNT,\n    AggregateOp.SUM,\n    AggregateOp.DISTINCT\n];\nexports.SHARED_DOMAIN_OPS = [\n    AggregateOp.MEAN,\n    AggregateOp.AVERAGE,\n    AggregateOp.STDEV,\n    AggregateOp.STDEVP,\n    AggregateOp.MEDIAN,\n    AggregateOp.Q1,\n    AggregateOp.Q3,\n    AggregateOp.MIN,\n    AggregateOp.MAX,\n];\n//# sourceMappingURL=aggregate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/aggregate.js\n// module id = h/tW\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    log = require('vega-logging'),\n    Tuple = require('vega-dataflow').Tuple;\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction properties(model, mark, spec) {\n  var config = model.config(),\n      code = \"\",\n      names = dl.keys(spec),\n      exprs = [], // parsed expressions injected in the generated code\n      i, len, name, ref, vars = {},\n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        nested:  [],\n        _nRefs:  {},  // Temp stash to de-dupe nested refs.\n        reflow:  false\n      };\n\n  code += \"var o = trans ? {} : item, d=0, exprs=this.exprs, set=this.tpl.set, tmpl=signals||{}, t;\\n\" +\n          // Stash for dl.template\n          \"tmpl.datum  = item.datum;\\n\" +\n          \"tmpl.group  = group;\\n\" +\n          \"tmpl.parent = group.datum;\\n\";\n\n  function handleDep(p) {\n    if (ref[p] == null) return;\n    var k = dl.array(ref[p]), i, n;\n    for (i=0, n=k.length; i<n; ++i) {\n      deps[p][k[i]] = 1;\n    }\n  }\n\n  function handleNestedRefs(r) {\n    var k = (r.parent ? \"parent_\" : \"group_\")+r.level;\n    deps._nRefs[k] = r;\n  }\n\n  parseShape(model, config, spec);\n\n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if (ref.rule) {\n      // a production rule valueref\n      ref = rule(model, name, ref.rule, exprs);\n      code += \"\\n  \" + ref.code;\n    } else if (dl.isArray(ref)) {\n      // a production rule valueref as an array\n      ref = rule(model, name, ref, exprs);\n      code += \"\\n  \" + ref.code;\n    } else {\n      // a simple valueref\n      ref = valueRef(config, name, ref);\n      code += \"d += set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(handleDep);\n    deps.reflow = deps.reflow || ref.reflow;\n    if (ref.nested.length) ref.nested.forEach(handleNestedRefs);\n  }\n\n  // If nested references are present, sort them based on their level\n  // to speed up determination of whether encoders should be reeval'd.\n  dl.keys(deps._nRefs).forEach(function(k) { deps.nested.push(deps._nRefs[k]); });\n  deps.nested.sort(function(a, b) {\n    a = a.level;\n    b = b.level;\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  });\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \" +\n              \"\\n    t = o.x;\" +\n              \"\\n    d += set(o, 'x', o.x2);\" +\n              \"\\n    d += set(o, 'x2', t); \" +\n              \"\\n  };\";\n      code += \"\\n  d += set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  d += set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  d += set(o, 'x', o.x2);\";\n    }\n  }\n\n  if (vars.xc) {\n    if (vars.width) {\n      code += \"\\n  d += set(o, 'x', (o.xc - o.width/2));\" ;\n    } else {\n      code += \"\\n  d += set(o, 'x', o.xc);\" ;\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \" +\n              \"\\n    t = o.y;\" +\n              \"\\n    d += set(o, 'y', o.y2);\" +\n              \"\\n    d += set(o, 'y2', t);\" +\n              \"\\n  };\";\n      code += \"\\n  d += set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  d += set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  d += set(o, 'y', o.y2);\";\n    }\n  }\n\n  if (vars.yc) {\n    if (vars.height) {\n      code += \"\\n  d += set(o, 'y', (o.yc - o.height/2));\" ;\n    } else {\n      code += \"\\n  d += set(o, 'y', o.yc);\" ;\n    }\n  }\n\n  if (hasPath(mark, vars)) code += \"\\n  d += (item.touch(), 1);\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n  code += \"\\n  return d > 0;\";\n\n  try {\n    /* jshint evil:true */\n    var encoder = Function('item', 'group', 'trans', 'db',\n      'signals', 'predicates', code);\n\n    encoder.tpl  = Tuple;\n    encoder.exprs = exprs;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    dl.extend(encoder, dl.template.context);\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      nested:  deps.nested,\n      reflow:  deps.reflow\n    };\n  } catch (e) {\n    log.error(e);\n    log.log(code);\n  }\n}\n\nfunction dependencies(a, b) {\n  if (!dl.isObject(a)) {\n    a = {reflow: false, nested: []};\n    DEPS.forEach(function(d) { a[d] = []; });\n  }\n\n  if (dl.isObject(b)) {\n    a.reflow = a.reflow || b.reflow;\n    a.nested.push.apply(a.nested, b.nested);\n    DEPS.forEach(function(d) { a[d].push.apply(a[d], b[d]); });\n  }\n\n  return a;\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark==='area' || mark==='line') &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nvar hb = /{{(.*?)}}/g;\nfunction parseShape(model, config, spec) {\n  var shape = spec.shape,\n      last = 0,\n      value, match;\n\n  if (shape && (value = shape.value)) {\n    if (config.shape && config.shape[value]) {\n      value = config.shape[value];\n    }\n\n    // Parse handlebars\n    shape = '';\n    while ((match = hb.exec(value)) !== null) {\n      shape += value.substring(last, match.index);\n      shape += model.expr(match[1]).fn();\n      last = hb.lastIndex;\n    }\n    spec.shape.value = shape + value.substring(last);\n  }\n}\n\nfunction rule(model, name, rules, exprs) {\n  var config  = model.config(),\n      deps = dependencies(),\n      inputs  = [],\n      code = '';\n\n  (rules||[]).forEach(function(r, i) {\n    var ref = valueRef(config, name, r);\n    dependencies(deps, ref);\n\n    if (r.test) {\n      // rule uses an expression instead of a predicate.\n      var exprFn = model.expr(r.test);\n      deps.signals.push.apply(deps.signals, exprFn.globals);\n      deps.data.push.apply(deps.data, exprFn.dataSources);\n\n      code += \"if (exprs[\" + exprs.length + \"](item.datum, item.mark.group.datum, null)) {\" +\n          \"\\n    d += set(o, \"+dl.str(name)+\", \" +ref.val+\");\";\n      code += rules[i+1] ? \"\\n  } else \" : \"  }\";\n\n      exprs.push(exprFn.fn);\n    } else {\n      var def = r.predicate,\n          predName = def && (def.name || def),\n          pred = model.predicate(predName),\n          p = 'predicates['+dl.str(predName)+']',\n          input = [], args = name+'_arg'+i;\n\n      if (dl.isObject(def)) {\n        dl.keys(def).forEach(function(k) {\n          if (k === 'name') return;\n          var ref = valueRef(config, i, def[k], true);\n          input.push(dl.str(k)+': '+ref.val);\n          dependencies(deps, ref);\n        });\n      }\n\n      if (predName) {\n        // append the predicates dependencies to our dependencies\n        deps.signals.push.apply(deps.signals, pred.signals);\n        deps.data.push.apply(deps.data, pred.data);\n        inputs.push(args+\" = {\\n    \"+input.join(\",\\n    \")+\"\\n  }\");\n        code += \"if (\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\" +\n          \"\\n    d += set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n        code += rules[i+1] ? \"\\n  } else \" : \"  }\";\n      } else {\n        code += \"{\" +\n          \"\\n    d += set(o, \"+dl.str(name)+\", \"+ref.val+\");\"+\n          \"\\n  }\\n\";\n      }\n    }\n  });\n\n  if (inputs.length) code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return (deps.code = code, deps);\n}\n\nfunction valueRef(config, name, ref, predicateArg) {\n  if (ref == null) return null;\n\n  if (name==='fill' || name==='stroke') {\n    if (ref.c) {\n      return colorRef(config, 'hcl', ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(config, 'hsl', ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(config, 'lab', ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(config, 'rgb', ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null,\n      deps = dependencies(),\n      sgRef = null, fRef = null, sRef = null, tmpl = {};\n\n  if (ref.template !== undefined) {\n    val = dl.template.source(ref.template, 'tmpl', tmpl);\n    dl.keys(tmpl).forEach(function(k) {\n      var f = dl.field(k),\n          a = f.shift();\n      if (a === 'parent' || a === 'group') {\n        deps.nested.push({\n          parent: a === 'parent',\n          group:  a === 'group',\n          level:  1\n        });\n      } else if (a === 'datum') {\n        deps.fields.push(f[0]);\n      } else {\n        deps.signals.push(a);\n      }\n    });\n  }\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = 'signals['+sgRef.map(dl.str).join('][')+']';\n    deps.signals.push(sgRef.shift());\n  }\n\n  if (ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef = fieldRef(ref.field);\n    val  = fRef.val;\n    dependencies(deps, fRef);\n  }\n\n  if (ref.scale !== undefined) {\n    sRef  = scaleRef(ref.scale);\n    scale = sRef.val;\n    dependencies(deps, sRef);\n    deps.scales.push(ref.scale.name || ref.scale);\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if (val !== null || ref.band || ref.mult || ref.offset || !predicateArg) {\n      val = scale + (ref.band ? '.rangeBand()' :\n        '('+(val !== null ? val : 'item.datum.data')+')');\n    } else if (predicateArg) {\n      val = scale;\n    }\n  }\n\n  // multiply, offset, return value\n  val = '(' + (ref.mult?(dl.number(ref.mult)+' * '):'') + val + ')' +\n        (ref.offset ? ' + ' + dl.number(ref.offset) : '');\n\n  // Collate dependencies\n  return (deps.val = val, deps);\n}\n\nfunction colorRef(config, type, x, y, z) {\n  var xx = x ? valueRef(config, '', x) : config.color[type][0],\n      yy = y ? valueRef(config, '', y) : config.color[type][1],\n      zz = z ? valueRef(config, '', z) : config.color[type][2],\n      deps = dependencies();\n\n  [xx, yy, zz].forEach(function(v) {\n    if (dl.isArray) return;\n    dependencies(deps, v);\n  });\n\n  var val = '(this.d3.' + type + '(' + [xx.val, yy.val, zz.val].join(',') + ') + \"\")';\n  return (deps.val = val, deps);\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if (dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join('][')};\n  }\n\n  // Resolve nesting/parent lookups\n  var l = ref.level || 1,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join('group.mark.') : '',\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      deps = dependencies(null, r);\n\n  if (ref.datum) {\n    val = 'item.datum['+val+']';\n    deps.fields.push(ref.datum);\n  } else if (ref.group) {\n    val = scope+'group['+val+']';\n    deps.nested.push({ level: l, group: true });\n  } else if (ref.parent) {\n    val = scope+'group.datum['+val+']';\n    deps.nested.push({ level: l, parent: true });\n  } else if (ref.signal) {\n    val = 'signals['+val+']';\n    deps.signals.push(dl.field(ref.signal)[0]);\n    deps.reflow = true;\n  }\n\n  return (deps.val = val, deps);\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null,\n      deps = dependencies();\n\n  if (dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if (ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = '(item.mark._scaleRefs['+scale+'] = 1, group.scale('+scale+'))';\n  if (ref.invert) scale += '.invert';\n\n  // Mark scale refs as they're dealt with separately in mark._scaleRefs.\n  if (fr) fr.nested.forEach(function(g) { g.scale = true; });\n  return fr ? (fr.val = scale, fr) : (deps.val = scale, deps);\n}\n\nmodule.exports = properties;\n\nfunction valueSchema(type) {\n  type = dl.isArray(type) ? {\"enum\": type} : {\"type\": type};\n  var modType = type.type === \"number\" && type.type || \"string\";\n  var valRef  = {\n    \"type\": \"object\",\n    \"allOf\": [{\"$ref\": \"#/refs/\" + modType + \"Modifiers\"}, {\n      \"oneOf\": [{\n        \"$ref\": \"#/refs/signal\",\n        \"required\": [\"signal\"]\n      }, {\n        \"properties\": {\"value\": type},\n        \"required\": [\"value\"]\n      }, {\n        \"properties\": {\"field\": {\"$ref\": \"#/refs/field\"}},\n        \"required\": [\"field\"]\n      }, {\n        \"properties\": {\"band\": {\"type\": \"boolean\"}},\n        \"required\": [\"band\"]\n      }]\n    }]\n  };\n\n  if (type.type === \"string\") {\n    valRef.allOf[1].oneOf.push({\n      \"properties\": {\"template\": {\"type\": \"string\"}},\n      \"required\": [\"template\"]\n    });\n  }\n\n  return {\n    \"oneOf\": [{\n      \"type\": \"object\",\n      \"properties\": {\n        \"rule\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"allOf\": [{\"$ref\": \"#/defs/rule\"}, valRef]\n          }\n        }\n      },\n      \"additionalProperties\": false,\n      \"required\": [\"rule\"]\n    },\n    {\n      \"type\": \"array\",\n      \"items\": {\n        \"allOf\": [{\"$ref\": \"#/defs/rule\"}, valRef]\n      }\n    },\n    valRef]\n  };\n}\n\nproperties.schema = {\n  \"refs\": {\n    \"field\": {\n      \"title\": \"FieldRef\",\n      \"oneOf\": [\n        {\"type\": \"string\"},\n        {\n          \"oneOf\": [\n            {\"$ref\": \"#/refs/signal\"},\n            {\n              \"type\": \"object\",\n              \"properties\": {\"datum\": {\"$ref\": \"#/refs/field\"}},\n              \"required\": [\"datum\"],\n              \"additionalProperties\": false\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"group\": {\"$ref\": \"#/refs/field\"},\n                \"level\": {\"type\": \"number\"}\n              },\n              \"required\": [\"group\"],\n              \"additionalProperties\": false\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"parent\": {\"$ref\": \"#/refs/field\"},\n                \"level\": {\"type\": \"number\"}\n              },\n              \"required\": [\"parent\"],\n              \"additionalProperties\": false\n            }\n          ]\n        }\n      ]\n    },\n\n    \"scale\": {\n      \"title\": \"ScaleRef\",\n      \"oneOf\": [\n        {\"$ref\": \"#/refs/field\"},\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\"$ref\": \"#/refs/field\"},\n            \"invert\": {\"type\": \"boolean\", \"default\": false}\n          },\n          \"required\": [\"name\"]\n        }\n      ]\n    },\n\n    \"stringModifiers\": {\n      \"properties\": {\n        \"scale\": {\"$ref\": \"#/refs/scale\"}\n      }\n    },\n\n    \"numberModifiers\": {\n      \"properties\": {\n        \"mult\": {\"type\": \"number\"},\n        \"offset\": {\"type\": \"number\"},\n        \"scale\": {\"$ref\": \"#/refs/scale\"}\n      }\n    },\n\n    \"value\": valueSchema({}, \"value\"),\n    \"numberValue\": valueSchema(\"number\", \"numberValue\"),\n    \"stringValue\": valueSchema(\"string\", \"stringValue\"),\n    \"booleanValue\": valueSchema(\"boolean\", \"booleanValue\"),\n    \"arrayValue\": valueSchema(\"array\", \"arrayValue\"),\n\n    \"colorValue\": {\n      \"title\": \"ColorRef\",\n      \"oneOf\": [{\"$ref\": \"#/refs/stringValue\"}, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"r\": {\"$ref\": \"#/refs/numberValue\"},\n          \"g\": {\"$ref\": \"#/refs/numberValue\"},\n          \"b\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"r\", \"g\", \"b\"]\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"h\": {\"$ref\": \"#/refs/numberValue\"},\n          \"s\": {\"$ref\": \"#/refs/numberValue\"},\n          \"l\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"h\", \"s\", \"l\"]\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"l\": {\"$ref\": \"#/refs/numberValue\"},\n          \"a\": {\"$ref\": \"#/refs/numberValue\"},\n          \"b\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"l\", \"a\", \"b\"]\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"h\": {\"$ref\": \"#/refs/numberValue\"},\n          \"c\": {\"$ref\": \"#/refs/numberValue\"},\n          \"l\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"h\", \"c\", \"l\"]\n      }]\n    }\n  },\n\n  \"defs\": {\n    \"rule\": {\n      \"anyOf\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"predicate\": {\n              \"oneOf\": [\n                {\"type\": \"string\"},\n                {\n                  \"type\": \"object\",\n                  \"properties\": {\"name\": { \"type\": \"string\" }},\n                  \"required\": [\"name\"]\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\"test\": {\"type\": \"string\"}}\n        }\n      ]\n    },\n    \"propset\": {\n      \"title\": \"Mark property set\",\n      \"type\": \"object\",\n      \"properties\": {\n        // Common Properties\n        \"x\": {\"$ref\": \"#/refs/numberValue\"},\n        \"x2\": {\"$ref\": \"#/refs/numberValue\"},\n        \"xc\": {\"$ref\": \"#/refs/numberValue\"},\n        \"width\": {\"$ref\": \"#/refs/numberValue\"},\n        \"y\": {\"$ref\": \"#/refs/numberValue\"},\n        \"y2\": {\"$ref\": \"#/refs/numberValue\"},\n        \"yc\": {\"$ref\": \"#/refs/numberValue\"},\n        \"height\": {\"$ref\": \"#/refs/numberValue\"},\n        \"opacity\": {\"$ref\": \"#/refs/numberValue\"},\n        \"fill\": {\"$ref\": \"#/refs/colorValue\"},\n        \"fillOpacity\": {\"$ref\": \"#/refs/numberValue\"},\n        \"stroke\": {\"$ref\": \"#/refs/colorValue\"},\n        \"strokeWidth\": {\"$ref\": \"#/refs/numberValue\"},\n        \"strokeOpacity\": {\"$ref\": \"#/refs/numberValue\"},\n        \"strokeDash\": {\"$ref\": \"#/refs/arrayValue\"},\n        \"strokeDashOffset\": {\"$ref\": \"#/refs/numberValue\"},\n        \"cursor\": {\"$ref\": \"#/refs/stringValue\"},\n\n        // Group-mark properties\n        \"clip\": {\"$ref\": \"#/refs/booleanValue\"},\n\n        // Symbol-mark properties\n        \"size\": {\"$ref\": \"#/refs/numberValue\"},\n        \"shape\": {\n          \"anyOf\": [\n            valueSchema([\"circle\", \"square\", \"cross\", \"diamond\",\n              \"triangle-up\", \"triangle-down\"]),\n            {\"$ref\": \"#/refs/stringValue\"}\n          ]\n        },\n\n        // Path-mark properties\n        \"path\": {\"$ref\": \"#/refs/stringValue\"},\n\n        // Arc-mark properties\n        \"innerRadius\": {\"$ref\": \"#/refs/numberValue\"},\n        \"outerRadius\": {\"$ref\": \"#/refs/numberValue\"},\n        \"startAngle\": {\"$ref\": \"#/refs/numberValue\"},\n        \"endAngle\": {\"$ref\": \"#/refs/numberValue\"},\n\n        // Area- and line-mark properties\n        \"interpolate\": valueSchema([\"linear\", \"linear-closed\",\n          \"step\", \"step-before\", \"step-after\",\n          \"basis\", \"basis-open\", \"basis-closed\", \n          \"cardinal\", \"cardinal-open\", \"cardinal-closed\",\n          \"bundle\", \"monotone\"]),\n        \"tension\": {\"$ref\": \"#/refs/numberValue\"},\n        \"orient\": valueSchema([\"horizontal\", \"vertical\"]),\n\n        // Image-mark properties\n        \"url\": {\"$ref\": \"#/refs/stringValue\"},\n        \"align\": valueSchema([\"left\", \"right\", \"center\"]),\n        \"baseline\": valueSchema([\"top\", \"middle\", \"bottom\", \"alphabetic\"]),\n\n        // Text-mark properties\n        \"text\": {\"$ref\": \"#/refs/stringValue\"},\n        \"dx\": {\"$ref\": \"#/refs/numberValue\"},\n        \"dy\": {\"$ref\": \"#/refs/numberValue\"},\n        \"radius\":{\"$ref\": \"#/refs/numberValue\"},\n        \"theta\": {\"$ref\": \"#/refs/numberValue\"},\n        \"angle\": {\"$ref\": \"#/refs/numberValue\"},\n        \"font\": {\"$ref\": \"#/refs/stringValue\"},\n        \"fontSize\": {\"$ref\": \"#/refs/numberValue\"},\n        \"fontWeight\": {\"$ref\": \"#/refs/stringValue\"},\n        \"fontStyle\": {\"$ref\": \"#/refs/stringValue\"}\n      },\n\n      \"additionalProperties\": false\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/properties.js\n// module id = h36N\n// module chunks = 0","\"use strict\";\nvar fielddef_1 = require('../../fielddef');\nvar type_1 = require('../../type');\nvar util_1 = require('../../util');\nvar formatParse;\n(function (formatParse) {\n    function parse(model) {\n        var calcFieldMap = (model.transform().calculate || []).reduce(function (fieldMap, formula) {\n            fieldMap[formula.field] = true;\n            return fieldMap;\n        }, {});\n        var parseComponent = {};\n        model.forEach(function (fieldDef) {\n            if (fieldDef.type === type_1.TEMPORAL) {\n                parseComponent[fieldDef.field] = 'date';\n            }\n            else if (fieldDef.type === type_1.QUANTITATIVE) {\n                if (fielddef_1.isCount(fieldDef) || calcFieldMap[fieldDef.field]) {\n                    return;\n                }\n                parseComponent[fieldDef.field] = 'number';\n            }\n        });\n        return parseComponent;\n    }\n    formatParse.parseUnit = parse;\n    function parseFacet(model) {\n        var parseComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source && childDataComponent.formatParse) {\n            util_1.extend(parseComponent, childDataComponent.formatParse);\n            delete childDataComponent.formatParse;\n        }\n        return parseComponent;\n    }\n    formatParse.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var parseComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && !util_1.differ(childDataComponent.formatParse, parseComponent)) {\n                util_1.extend(parseComponent, childDataComponent.formatParse);\n                delete childDataComponent.formatParse;\n            }\n        });\n        return parseComponent;\n    }\n    formatParse.parseLayer = parseLayer;\n})(formatParse = exports.formatParse || (exports.formatParse = {}));\n//# sourceMappingURL=formatparse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/formatparse.js\n// module id = hBex\n// module chunks = 0","var dl = require('datalib');\n\nvar TIME    = 'time',\n    UTC     = 'utc',\n    STRING  = 'string',\n    ORDINAL = 'ordinal',\n    NUMBER  = 'number';\n\nfunction getTickFormat(scale, tickCount, tickFormatType, tickFormatString) {\n  var formatType = tickFormatType || inferFormatType(scale);\n  return getFormatter(scale, tickCount, formatType, tickFormatString);\n}\n\nfunction inferFormatType(scale) {\n  switch (scale.type) {\n    case TIME:    return TIME;\n    case UTC:     return UTC;\n    case ORDINAL: return STRING;\n    default:      return NUMBER;\n  }\n}\n\n// Adapted from d3 log scale\n// TODO customize? replace with range-size-aware filtering?\nfunction logFilter(scale, domain, count, f) {\n  if (count == null) return f;\n  var base = scale.base(),\n      k = Math.min(base, scale.ticks().length / count),\n      v = domain[0] > 0 ? (e = 1e-12, Math.ceil) : (e = -1e-12, Math.floor),\n      e;\n  function log(x) {\n    return (domain[0] < 0 ?\n      -Math.log(x > 0 ? 0 : -x) :\n      Math.log(x < 0 ? 0 : x)) / Math.log(base);\n  }\n  function pow(x) {\n    return domain[0] < 0 ? -Math.pow(base, -x) : Math.pow(base, x);\n  }\n  return function(d) {\n    return pow(v(log(d) + e)) / d >= k ? f(d) : '';\n  };\n}\n\nfunction getFormatter(scale, tickCount, formatType, str) {\n  var fmt = dl.format,\n      log = scale.type === 'log',\n      domain;\n\n  switch (formatType) {\n    case NUMBER:\n      domain = scale.domain();\n      return log ?\n        logFilter(scale, domain, tickCount, fmt.auto.number(str || null)) :\n        fmt.auto.linear(domain, tickCount, str || null);\n    case TIME: return (str ? fmt : fmt.auto).time(str);\n    case UTC:  return (str ? fmt : fmt.auto).utc(str);\n    default:   return String;\n  }\n}\n\nmodule.exports = {\n  getTickFormat: getTickFormat\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/util/format.js\n// module id = hv1v\n// module chunks = 0","function Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) {\n    if (i===list.length-1) {\n      list.pop();\n    } else {\n      list.splice(i, 1);\n    }\n  }\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n};\n\nmodule.exports = Item;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/Item.js\n// module id = iMk1\n// module chunks = 0","\"use strict\";\n(function (Mark) {\n    Mark[Mark[\"AREA\"] = 'area'] = \"AREA\";\n    Mark[Mark[\"BAR\"] = 'bar'] = \"BAR\";\n    Mark[Mark[\"LINE\"] = 'line'] = \"LINE\";\n    Mark[Mark[\"POINT\"] = 'point'] = \"POINT\";\n    Mark[Mark[\"TEXT\"] = 'text'] = \"TEXT\";\n    Mark[Mark[\"TICK\"] = 'tick'] = \"TICK\";\n    Mark[Mark[\"RULE\"] = 'rule'] = \"RULE\";\n    Mark[Mark[\"CIRCLE\"] = 'circle'] = \"CIRCLE\";\n    Mark[Mark[\"SQUARE\"] = 'square'] = \"SQUARE\";\n    Mark[Mark[\"ERRORBAR\"] = 'errorBar'] = \"ERRORBAR\";\n})(exports.Mark || (exports.Mark = {}));\nvar Mark = exports.Mark;\nexports.AREA = Mark.AREA;\nexports.BAR = Mark.BAR;\nexports.LINE = Mark.LINE;\nexports.POINT = Mark.POINT;\nexports.TEXT = Mark.TEXT;\nexports.TICK = Mark.TICK;\nexports.RULE = Mark.RULE;\nexports.CIRCLE = Mark.CIRCLE;\nexports.SQUARE = Mark.SQUARE;\nexports.ERRORBAR = Mark.ERRORBAR;\nexports.PRIMITIVE_MARKS = [exports.AREA, exports.BAR, exports.LINE, exports.POINT, exports.TEXT, exports.TICK, exports.RULE, exports.CIRCLE, exports.SQUARE];\n//# sourceMappingURL=mark.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/mark.js\n// module id = j8cM\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar encoding_1 = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar scale_1 = require('../scale');\nvar util_1 = require('../util');\nvar NameMap = (function () {\n    function NameMap() {\n        this._nameMap = {};\n    }\n    NameMap.prototype.rename = function (oldName, newName) {\n        this._nameMap[oldName] = newName;\n    };\n    NameMap.prototype.get = function (name) {\n        while (this._nameMap[name]) {\n            name = this._nameMap[name];\n        }\n        return name;\n    };\n    return NameMap;\n}());\nvar Model = (function () {\n    function Model(spec, parent, parentGivenName) {\n        this._warnings = [];\n        this._parent = parent;\n        this._name = spec.name || parentGivenName;\n        this._dataNameMap = parent ? parent._dataNameMap : new NameMap();\n        this._scaleNameMap = parent ? parent._scaleNameMap : new NameMap();\n        this._sizeNameMap = parent ? parent._sizeNameMap : new NameMap();\n        this._data = spec.data;\n        this._description = spec.description;\n        this._transform = spec.transform;\n        this.component = { data: null, layout: null, mark: null, scale: null, axis: null, axisGroup: null, gridGroup: null, legend: null };\n    }\n    Model.prototype.parse = function () {\n        this.parseData();\n        this.parseSelectionData();\n        this.parseLayoutData();\n        this.parseScale();\n        this.parseAxis();\n        this.parseLegend();\n        this.parseAxisGroup();\n        this.parseGridGroup();\n        this.parseMark();\n    };\n    Model.prototype.assembleScales = function () {\n        return util_1.flatten(util_1.vals(this.component.scale).map(function (scales) {\n            var arr = [scales.main];\n            if (scales.colorLegend) {\n                arr.push(scales.colorLegend);\n            }\n            if (scales.binColorLegend) {\n                arr.push(scales.binColorLegend);\n            }\n            return arr;\n        }));\n    };\n    Model.prototype.assembleAxes = function () {\n        return util_1.vals(this.component.axis);\n    };\n    Model.prototype.assembleLegends = function () {\n        return util_1.vals(this.component.legend);\n    };\n    Model.prototype.assembleGroup = function () {\n        var group = {};\n        group.marks = this.assembleMarks();\n        var scales = this.assembleScales();\n        if (scales.length > 0) {\n            group.scales = scales;\n        }\n        var axes = this.assembleAxes();\n        if (axes.length > 0) {\n            group.axes = axes;\n        }\n        var legends = this.assembleLegends();\n        if (legends.length > 0) {\n            group.legends = legends;\n        }\n        return group;\n    };\n    Model.prototype.reduce = function (f, init, t) {\n        return encoding_1.channelMappingReduce(this.channels(), this.mapping(), f, init, t);\n    };\n    Model.prototype.forEach = function (f, t) {\n        encoding_1.channelMappingForEach(this.channels(), this.mapping(), f, t);\n    };\n    Model.prototype.parent = function () {\n        return this._parent;\n    };\n    Model.prototype.name = function (text, delimiter) {\n        if (delimiter === void 0) { delimiter = '_'; }\n        return (this._name ? this._name + delimiter : '') + text;\n    };\n    Model.prototype.description = function () {\n        return this._description;\n    };\n    Model.prototype.data = function () {\n        return this._data;\n    };\n    Model.prototype.renameData = function (oldName, newName) {\n        this._dataNameMap.rename(oldName, newName);\n    };\n    Model.prototype.dataName = function (dataSourceType) {\n        return this._dataNameMap.get(this.name(String(dataSourceType)));\n    };\n    Model.prototype.renameSize = function (oldName, newName) {\n        this._sizeNameMap.rename(oldName, newName);\n    };\n    Model.prototype.channelSizeName = function (channel) {\n        return this.sizeName(channel === channel_1.X || channel === channel_1.COLUMN ? 'width' : 'height');\n    };\n    Model.prototype.sizeName = function (size) {\n        return this._sizeNameMap.get(this.name(size, '_'));\n    };\n    Model.prototype.transform = function () {\n        return this._transform || {};\n    };\n    Model.prototype.field = function (channel, opt) {\n        if (opt === void 0) { opt = {}; }\n        var fieldDef = this.fieldDef(channel);\n        if (fieldDef.bin) {\n            opt = util_1.extend({\n                binSuffix: this.scale(channel).type === scale_1.ScaleType.ORDINAL ? '_range' : '_start'\n            }, opt);\n        }\n        return fielddef_1.field(fieldDef, opt);\n    };\n    Model.prototype.scale = function (channel) {\n        return this._scale[channel];\n    };\n    Model.prototype.isOrdinalScale = function (channel) {\n        var scale = this.scale(channel);\n        return scale && scale.type === scale_1.ScaleType.ORDINAL;\n    };\n    Model.prototype.renameScale = function (oldName, newName) {\n        this._scaleNameMap.rename(oldName, newName);\n    };\n    Model.prototype.scaleName = function (channel) {\n        return this._scaleNameMap.get(this.name(channel + ''));\n    };\n    Model.prototype.sort = function (channel) {\n        return (this.mapping()[channel] || {}).sort;\n    };\n    Model.prototype.axis = function (channel) {\n        return this._axis[channel];\n    };\n    Model.prototype.legend = function (channel) {\n        return this._legend[channel];\n    };\n    Model.prototype.config = function () {\n        return this._config;\n    };\n    Model.prototype.addWarning = function (message) {\n        util_1.warning(message);\n        this._warnings.push(message);\n    };\n    Model.prototype.warnings = function () {\n        return this._warnings;\n    };\n    Model.prototype.isUnit = function () {\n        return false;\n    };\n    Model.prototype.isFacet = function () {\n        return false;\n    };\n    Model.prototype.isLayer = function () {\n        return false;\n    };\n    return Model;\n}());\nexports.Model = Model;\n//# sourceMappingURL=model.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/model.js\n// module id = jGoH\n// module chunks = 0","\"use strict\";\nvar data_1 = require('../../data');\nvar util_1 = require('../../util');\nvar nullfilter_1 = require('./nullfilter');\nvar filter_1 = require('./filter');\nvar bin_1 = require('./bin');\nvar formula_1 = require('./formula');\nvar timeunit_1 = require('./timeunit');\nvar source;\n(function (source) {\n    function parse(model) {\n        var data = model.data();\n        if (data) {\n            var sourceData = { name: model.dataName(data_1.SOURCE) };\n            if (data.values && data.values.length > 0) {\n                sourceData.values = data.values;\n                sourceData.format = { type: 'json' };\n            }\n            else if (data.url) {\n                sourceData.url = data.url;\n                var defaultExtension = /(?:\\.([^.]+))?$/.exec(sourceData.url)[1];\n                if (!util_1.contains(['json', 'csv', 'tsv', 'topojson'], defaultExtension)) {\n                    defaultExtension = 'json';\n                }\n                var dataFormat = data.format || {};\n                var formatType = dataFormat.type || data['formatType'];\n                sourceData.format =\n                    util_1.extend({ type: formatType ? formatType : defaultExtension }, dataFormat.property ? { property: dataFormat.property } : {}, dataFormat.feature ?\n                        { feature: dataFormat.feature } :\n                        dataFormat.mesh ?\n                            { mesh: dataFormat.mesh } :\n                            {});\n            }\n            return sourceData;\n        }\n        else if (!model.parent()) {\n            return { name: model.dataName(data_1.SOURCE) };\n        }\n        return undefined;\n    }\n    source.parseUnit = parse;\n    function parseFacet(model) {\n        var sourceData = parse(model);\n        if (!model.child().component.data.source) {\n            model.child().renameData(model.child().dataName(data_1.SOURCE), model.dataName(data_1.SOURCE));\n        }\n        return sourceData;\n    }\n    source.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var sourceData = parse(model);\n        model.children().forEach(function (child) {\n            var childData = child.component.data;\n            if (model.compatibleSource(child)) {\n                var canMerge = !childData.filter && !childData.formatParse && !childData.nullFilter;\n                if (canMerge) {\n                    child.renameData(child.dataName(data_1.SOURCE), model.dataName(data_1.SOURCE));\n                    delete childData.source;\n                }\n                else {\n                    childData.source = {\n                        name: child.dataName(data_1.SOURCE),\n                        source: model.dataName(data_1.SOURCE)\n                    };\n                }\n            }\n        });\n        return sourceData;\n    }\n    source.parseLayer = parseLayer;\n    function assemble(model, component) {\n        if (component.source) {\n            var sourceData = component.source;\n            if (component.formatParse) {\n                component.source.format = component.source.format || {};\n                component.source.format.parse = component.formatParse;\n            }\n            sourceData.transform = [].concat(nullfilter_1.nullFilter.assemble(component), formula_1.formula.assemble(component), filter_1.filter.assemble(component), bin_1.bin.assemble(component), timeunit_1.timeUnit.assemble(component));\n            return sourceData;\n        }\n        return null;\n    }\n    source.assemble = assemble;\n})(source = exports.source || (exports.source = {}));\n//# sourceMappingURL=source.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/source.js\n// module id = jMte\n// module chunks = 0","var parser = require('./parser'),\n    codegen = require('./codegen');\n\nvar expr = module.exports = {\n  parse: function(input, opt) {\n      return parser.parse('('+input+')', opt);\n    },\n  code: function(opt) {\n      return codegen(opt);\n    },\n  compiler: function(args, opt) {\n      args = args.slice();\n      var generator = codegen(opt),\n          len = args.length,\n          compile = function(str) {\n            var value = generator(expr.parse(str));\n            args[len] = '\"use strict\"; return (' + value.code + ');';\n            var fn = Function.apply(null, args);\n            value.fn = (args.length > 8) ?\n              function() { return fn.apply(value, arguments); } :\n              function(a, b, c, d, e, f, g) {\n                return fn.call(value, a, b, c, d, e, f, g);\n              }; // call often faster than apply, use if args low enough\n            return value;\n          };\n      compile.codegen = generator;\n      return compile;\n    },\n  functions: require('./functions'),\n  constants: require('./constants')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-expression/src/index.js\n// module id = jNWb\n// module chunks = 0","var json = require('./json');\n\nmodule.exports = function(tree, format) {\n  return toTable(json(tree, format), format);\n};\n\nfunction toTable(root, fields) {\n  var childrenField = fields && fields.children || 'children',\n      parentField = fields && fields.parent || 'parent',\n      table = [];\n\n  function visit(node, parent) {\n    node[parentField] = parent;\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n\n  visit(root, null);\n  return (table.root = root, table);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/treejson.js\n// module id = jbgm\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    ChangeSet = df.ChangeSet,\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Cross(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: 'data'},\n    diagonal: {type: 'value', default: 'true'},\n    filter: {type: 'expr'}\n  });\n\n  this._output = {'left': 'a', 'right': 'b'};\n  this._lastWith = null; // Last time we crossed w/with-ds.\n  this._cids  = {};\n  this._cache = {};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Cross.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Cross;\n\n// Each cached incoming tuple also has a flag to determine whether\n// any tuples were filtered.\nfunction _cache(x, t) {\n  var c = this._cache,\n      cross = c[x._id] || (c[x._id] = {c: [], f: false});\n  cross.c.push(t);\n}\n\nfunction _cid(left, x, y) {\n  return left ? x._id+'_'+y._id : y._id+'_'+x._id;\n}\n\nfunction add(output, left, data, diag, test, mids, x) {\n  var as = this._output,\n      cache = this._cache,\n      cids  = this._cids,\n      oadd  = output.add,\n      fltrd = false,\n      i = 0, len = data.length,\n      t = {}, y, cid;\n\n  for (; i<len; ++i) {\n    y = data[i];\n    cid = _cid(left, x, y);\n    if (cids[cid]) continue;\n    if (x._id === y._id && !diag) continue;\n\n    Tuple.set(t, as.left, left ? x : y);\n    Tuple.set(t, as.right, left ? y : x);\n\n    // Only ingest a tuple if we keep it around. Otherwise, flag the\n    // caches as filtered.\n    if (!test || test(t)) {\n      oadd.push(t=Tuple.ingest(t));\n      _cache.call(this, x, t);\n      if (x._id !== y._id) _cache.call(this, y, t);\n      mids[t._id] = 1;\n      cids[cid] = true;\n      t = {};\n    } else {\n      if (cache[y._id]) cache[y._id].f = true;\n      fltrd = true;\n    }\n  }\n\n  if (cache[x._id]) cache[x._id].f = fltrd;\n}\n\nfunction mod(output, left, data, diag, test, mids, rids, x) {\n  var as = this._output,\n      cache = this._cache,\n      cids  = this._cids,\n      cross = cache[x._id],\n      tpls  = cross && cross.c,\n      fltrd = !cross || cross.f,\n      omod  = output.mod,\n      orem  = output.rem,\n      i, t, y, l, cid;\n\n  // If we have cached values, iterate through them for lazy\n  // removal, and to re-run the filter.\n  if (tpls) {\n    for (i=tpls.length-1; i>=0; --i) {\n      t = tpls[i];\n      l = x === t[as.left]; // Cache has tpls w/x both on left & right.\n      y = l ? t[as.right] : t[as.left];\n      cid = _cid(l, x, y);\n\n      // Lazy removal: y was previously rem'd, so clean up the cache.\n      if (!cache[y._id]) {\n        cids[cid] = false;\n        tpls.splice(i, 1);\n        continue;\n      }\n\n      if (!test || test(t)) {\n        if (mids[t._id]) continue;\n        omod.push(t);\n        mids[t._id] = 1;\n      } else {\n        if (!rids[t._id]) orem.push.apply(orem, tpls.splice(i, 1));\n        rids[t._id] = 1;\n        cids[cid] = false;\n        cross.f = true;\n      }\n    }\n  }\n\n  // If we have a filter param, call add to catch any tuples that may\n  // have previously been filtered.\n  if (test && fltrd) add.call(this, output, left, data, diag, test, mids, x);\n}\n\nfunction rem(output, left, rids, x) {\n  var as = this._output,\n      cross = this._cache[x._id],\n      cids  = this._cids,\n      orem  = output.rem,\n      i, len, t, y, l;\n  if (!cross) return;\n\n  for (i=0, len=cross.c.length; i<len; ++i) {\n    t = cross.c[i];\n    l = x === t[as.left];\n    y = l ? t[as.right] : t[as.left];\n    cids[_cid(l, x, y)] = false;\n    if (!rids[t._id]) {\n      orem.push(t);\n      rids[t._id] = 1;\n    }\n  }\n\n  this._cache[x._id] = null;\n}\n\nfunction purge(output, rids) {\n  var cache = this._cache,\n      keys  = dl.keys(cache),\n      rem = output.rem,\n      i, len, j, jlen, cross, t;\n\n  for (i=0, len=keys.length; i<len; ++i) {\n    cross = cache[keys[i]];\n    for (j=0, jlen=cross.c.length; j<jlen; ++j) {\n      t = cross.c[j];\n      if (rids[t._id]) continue;\n      rem.push(t);\n      rids[t._id] = 1;\n    }\n  }\n\n  this._cache = {};\n  this._cids = {};\n  this._lastWith = null;\n}\n\nprototype.batchTransform = function(input, data, reset) {\n  log.debug(input, ['crossing']);\n\n  var w = this.param('with'),\n      diag = this.param('diagonal'),\n      as = this._output,\n      test = this.param('filter') || null,\n      selfCross = (!w.name),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = ChangeSet.create(input),\n      mids = {}, rids = {}; // Track IDs to prevent dupe mod/rem tuples.\n\n  // If signal values (for diag or test) have changed, purge the cache\n  // and re-run cross in batch mode. Otherwise stream cross values.\n  if (reset) {\n    purge.call(this, output, rids);\n    data.forEach(add.bind(this, output, true, wdata, diag, test, mids));\n    this._lastWith = woutput.stamp;\n  } else {\n    input.rem.forEach(rem.bind(this, output, true, rids));\n    input.add.forEach(add.bind(this, output, true, wdata, diag, test, mids));\n\n    if (woutput.stamp > this._lastWith) {\n      woutput.rem.forEach(rem.bind(this, output, false, rids));\n      woutput.add.forEach(add.bind(this, output, false, data, diag, test, mids));\n      woutput.mod.forEach(mod.bind(this, output, false, data, diag, test, mids, rids));\n      this._lastWith = woutput.stamp;\n    }\n\n    // Mods need to come after all removals have been run.\n    input.mod.forEach(mod.bind(this, output, true, wdata, diag, test, mids, rids));\n  }\n\n  output.fields[as.left]  = 1;\n  output.fields[as.right] = 1;\n  return output;\n};\n\nmodule.exports = Cross;\n\nCross.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Cross transform\",\n  \"description\": \"Compute the cross-product of two data sets.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"cross\"]},\n    \"with\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the secondary data set to cross with the primary data. \" +\n        \"If unspecified, the primary data is crossed with itself.\"\n    },\n    \"diagonal\": {\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"If false, items along the \\\"diagonal\\\" of the cross-product \" +\n        \"(those elements with the same index in their respective array) \" +\n        \"will not be included in the output.\",\n      \"default\": true\n    },\n    \"filter\": {\n      \"type\": \"string\",\n      \"description\": \"A string containing an expression (in JavaScript syntax) \" +\n        \"to filter the resulting data elements.\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"left\": {\"type\": \"string\", \"default\": \"a\"},\n        \"right\": {\"type\": \"string\", \"default\": \"b\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Cross.js\n// module id = juLC\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar common_1 = require('./common');\nvar scale_1 = require('./scale');\nfunction parseLegendComponent(model) {\n    return [channel_1.COLOR, channel_1.SIZE, channel_1.SHAPE].reduce(function (legendComponent, channel) {\n        if (model.legend(channel)) {\n            legendComponent[channel] = parseLegend(model, channel);\n        }\n        return legendComponent;\n    }, {});\n}\nexports.parseLegendComponent = parseLegendComponent;\nfunction getLegendDefWithScale(model, channel) {\n    switch (channel) {\n        case channel_1.COLOR:\n            var fieldDef = model.fieldDef(channel_1.COLOR);\n            var scale = model.scaleName(useColorLegendScale(fieldDef) ?\n                scale_1.COLOR_LEGEND :\n                channel_1.COLOR);\n            return model.config().mark.filled ? { fill: scale } : { stroke: scale };\n        case channel_1.SIZE:\n            return { size: model.scaleName(channel_1.SIZE) };\n        case channel_1.SHAPE:\n            return { shape: model.scaleName(channel_1.SHAPE) };\n    }\n    return null;\n}\nfunction parseLegend(model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    var legend = model.legend(channel);\n    var config = model.config();\n    var def = getLegendDefWithScale(model, channel);\n    def.title = title(legend, fieldDef, config);\n    var format = common_1.numberFormat(fieldDef, legend.format, config);\n    if (format) {\n        def.format = format;\n    }\n    ['offset', 'orient', 'values'].forEach(function (property) {\n        var value = legend[property];\n        if (value !== undefined) {\n            def[property] = value;\n        }\n    });\n    var props = (typeof legend !== 'boolean' && legend.properties) || {};\n    ['title', 'symbols', 'legend', 'labels'].forEach(function (group) {\n        var value = properties[group] ?\n            properties[group](fieldDef, props[group], model, channel) :\n            props[group];\n        if (value !== undefined && util_1.keys(value).length > 0) {\n            def.properties = def.properties || {};\n            def.properties[group] = value;\n        }\n    });\n    return def;\n}\nexports.parseLegend = parseLegend;\nfunction title(legend, fieldDef, config) {\n    if (typeof legend !== 'boolean' && legend.title) {\n        return legend.title;\n    }\n    return fielddef_1.title(fieldDef, config);\n}\nexports.title = title;\nfunction useColorLegendScale(fieldDef) {\n    return fieldDef.type === type_1.ORDINAL || fieldDef.bin || fieldDef.timeUnit;\n}\nexports.useColorLegendScale = useColorLegendScale;\nvar properties;\n(function (properties) {\n    function symbols(fieldDef, symbolsSpec, model, channel) {\n        var symbols = {};\n        var mark = model.mark();\n        var legend = model.legend(channel);\n        switch (mark) {\n            case mark_1.BAR:\n            case mark_1.TICK:\n            case mark_1.TEXT:\n                symbols.shape = { value: 'square' };\n                break;\n            case mark_1.CIRCLE:\n            case mark_1.SQUARE:\n                symbols.shape = { value: mark };\n                break;\n            case mark_1.POINT:\n            case mark_1.LINE:\n            case mark_1.AREA:\n                break;\n        }\n        var filled = model.config().mark.filled;\n        var config = channel === channel_1.COLOR ?\n            util_1.without(common_1.FILL_STROKE_CONFIG, [filled ? 'fill' : 'stroke', 'strokeDash', 'strokeDashOffset']) :\n            util_1.without(common_1.FILL_STROKE_CONFIG, ['strokeDash', 'strokeDashOffset']);\n        config = util_1.without(config, ['strokeDash', 'strokeDashOffset']);\n        common_1.applyMarkConfig(symbols, model, config);\n        if (filled) {\n            symbols.strokeWidth = { value: 0 };\n        }\n        var value;\n        if (model.has(channel_1.COLOR) && channel === channel_1.COLOR) {\n            if (useColorLegendScale(fieldDef)) {\n                value = { scale: model.scaleName(channel_1.COLOR), field: 'data' };\n            }\n        }\n        else if (model.fieldDef(channel_1.COLOR).value) {\n            value = { value: model.fieldDef(channel_1.COLOR).value };\n        }\n        if (value !== undefined) {\n            if (filled) {\n                symbols.fill = value;\n            }\n            else {\n                symbols.stroke = value;\n            }\n        }\n        else if (channel !== channel_1.COLOR) {\n            symbols[filled ? 'fill' : 'stroke'] = symbols[filled ? 'fill' : 'stroke'] ||\n                { value: model.config().mark.color };\n        }\n        if (legend.symbolColor !== undefined) {\n            symbols.fill = { value: legend.symbolColor };\n        }\n        if (legend.symbolShape !== undefined) {\n            symbols.shape = { value: legend.symbolShape };\n        }\n        if (legend.symbolSize !== undefined) {\n            symbols.size = { value: legend.symbolSize };\n        }\n        if (legend.symbolStrokeWidth !== undefined) {\n            symbols.strokeWidth = { value: legend.symbolStrokeWidth };\n        }\n        symbols = util_1.extend(symbols, symbolsSpec || {});\n        return util_1.keys(symbols).length > 0 ? symbols : undefined;\n    }\n    properties.symbols = symbols;\n    function labels(fieldDef, labelsSpec, model, channel) {\n        var legend = model.legend(channel);\n        var config = model.config();\n        var labels = {};\n        if (channel === channel_1.COLOR) {\n            if (fieldDef.type === type_1.ORDINAL) {\n                labelsSpec = util_1.extend({\n                    text: {\n                        scale: model.scaleName(scale_1.COLOR_LEGEND),\n                        field: 'data'\n                    }\n                }, labelsSpec || {});\n            }\n            else if (fieldDef.bin) {\n                labelsSpec = util_1.extend({\n                    text: {\n                        scale: model.scaleName(scale_1.COLOR_LEGEND_LABEL),\n                        field: 'data'\n                    }\n                }, labelsSpec || {});\n            }\n            else if (fieldDef.type === type_1.TEMPORAL) {\n                labelsSpec = util_1.extend({\n                    text: {\n                        template: common_1.timeTemplate('datum.data', fieldDef.timeUnit, legend.format, legend.shortTimeLabels, config)\n                    }\n                }, labelsSpec || {});\n            }\n        }\n        if (legend.labelAlign !== undefined) {\n            labels.align = { value: legend.labelAlign };\n        }\n        if (legend.labelColor !== undefined) {\n            labels.stroke = { value: legend.labelColor };\n        }\n        if (legend.labelFont !== undefined) {\n            labels.font = { value: legend.labelFont };\n        }\n        if (legend.labelFontSize !== undefined) {\n            labels.fontSize = { value: legend.labelFontSize };\n        }\n        if (legend.labelBaseline !== undefined) {\n            labels.baseline = { value: legend.labelBaseline };\n        }\n        labels = util_1.extend(labels, labelsSpec || {});\n        return util_1.keys(labels).length > 0 ? labels : undefined;\n    }\n    properties.labels = labels;\n    function title(fieldDef, titleSpec, model, channel) {\n        var legend = model.legend(channel);\n        var titles = {};\n        if (legend.titleColor !== undefined) {\n            titles.stroke = { value: legend.titleColor };\n        }\n        if (legend.titleFont !== undefined) {\n            titles.font = { value: legend.titleFont };\n        }\n        if (legend.titleFontSize !== undefined) {\n            titles.fontSize = { value: legend.titleFontSize };\n        }\n        if (legend.titleFontWeight !== undefined) {\n            titles.fontWeight = { value: legend.titleFontWeight };\n        }\n        titles = util_1.extend(titles, titleSpec || {});\n        return util_1.keys(titles).length > 0 ? titles : undefined;\n    }\n    properties.title = title;\n})(properties = exports.properties || (exports.properties = {}));\n//# sourceMappingURL=legend.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/legend.js\n// module id = jxr4\n// module chunks = 0","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-dispatch/src/dispatch.js\n// module id = jyAW\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar area;\n(function (area) {\n    function markType() {\n        return 'area';\n    }\n    area.markType = markType;\n    function properties(model) {\n        var p = {};\n        var config = model.config();\n        var orient = config.mark.orient;\n        if (orient) {\n            p.orient = { value: orient };\n        }\n        var stack = model.stack();\n        var _x = x(model.encoding().x, model.scaleName(channel_1.X), orient, stack);\n        if (_x) {\n            p.x = _x;\n        }\n        var _y = y(model.encoding().y, model.scaleName(channel_1.Y), orient, stack);\n        if (_y) {\n            p.y = _y;\n        }\n        var _x2 = x2(model.encoding().x, model.encoding().x2, model.scaleName(channel_1.X), orient, stack);\n        if (_x2) {\n            p.x2 = _x2;\n        }\n        var _y2 = y2(model.encoding().y, model.encoding().y2, model.scaleName(channel_1.Y), orient, stack);\n        if (_y2) {\n            p.y2 = _y2;\n        }\n        common_1.applyColorAndOpacity(p, model);\n        common_1.applyMarkConfig(p, model, ['interpolate', 'tension']);\n        return p;\n    }\n    area.properties = properties;\n    function x(fieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.X === stack.fieldChannel) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { suffix: '_start' })\n            };\n        }\n        else if (fielddef_1.isMeasure(fieldDef)) {\n            if (orient === 'horizontal') {\n                if (fieldDef && fieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(fieldDef)\n                    };\n                }\n                else {\n                    return {\n                        scale: scaleName,\n                        value: 0\n                    };\n                }\n            }\n            else {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef)\n                };\n            }\n        }\n        else if (fielddef_1.isDimension(fieldDef)) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n            };\n        }\n        return undefined;\n    }\n    area.x = x;\n    function x2(xFieldDef, x2FieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.X === stack.fieldChannel) {\n            if (orient === 'horizontal') {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(xFieldDef, { suffix: '_end' })\n                };\n            }\n        }\n        else if (fielddef_1.isMeasure(x2FieldDef)) {\n            if (orient === 'horizontal') {\n                if (x2FieldDef && x2FieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(x2FieldDef)\n                    };\n                }\n                else {\n                    return {\n                        scale: scaleName,\n                        value: 0\n                    };\n                }\n            }\n        }\n        return undefined;\n    }\n    area.x2 = x2;\n    function y(fieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.Y === stack.fieldChannel) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { suffix: '_start' })\n            };\n        }\n        else if (fielddef_1.isMeasure(fieldDef)) {\n            if (orient !== 'horizontal') {\n                if (fieldDef && fieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(fieldDef)\n                    };\n                }\n                else {\n                    return { field: { group: 'height' } };\n                }\n            }\n            else {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef)\n                };\n            }\n        }\n        else if (fielddef_1.isDimension(fieldDef)) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n            };\n        }\n        return undefined;\n    }\n    area.y = y;\n    function y2(yFieldDef, y2FieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.Y === stack.fieldChannel) {\n            if (orient !== 'horizontal') {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(yFieldDef, { suffix: '_end' })\n                };\n            }\n        }\n        else if (fielddef_1.isMeasure(yFieldDef)) {\n            if (orient !== 'horizontal') {\n                if (y2FieldDef && y2FieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(y2FieldDef)\n                    };\n                }\n                else {\n                    return {\n                        scale: scaleName,\n                        value: 0\n                    };\n                }\n            }\n        }\n        return undefined;\n    }\n    area.y2 = y2;\n    function labels(model) {\n        return undefined;\n    }\n    area.labels = labels;\n})(area = exports.area || (exports.area = {}));\n//# sourceMappingURL=area.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/area.js\n// module id = k2D6\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar time_1 = require('./../time');\nvar timeUnitDomain;\n(function (timeUnitDomain) {\n    function parse(model) {\n        return model.reduce(function (timeUnitDomainMap, fieldDef, channel) {\n            if (fieldDef.timeUnit) {\n                var domain = time_1.rawDomain(fieldDef.timeUnit, channel);\n                if (domain) {\n                    timeUnitDomainMap[fieldDef.timeUnit] = true;\n                }\n            }\n            return timeUnitDomainMap;\n        }, {});\n    }\n    timeUnitDomain.parseUnit = parse;\n    function parseFacet(model) {\n        return util_1.extend(parse(model), model.child().component.data.timeUnitDomain);\n    }\n    timeUnitDomain.parseFacet = parseFacet;\n    function parseLayer(model) {\n        return util_1.extend(parse(model), model.children().forEach(function (child) {\n            return child.component.data.timeUnitDomain;\n        }));\n    }\n    timeUnitDomain.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.keys(component.timeUnitDomain).reduce(function (timeUnitData, tu) {\n            var timeUnit = tu;\n            var domain = time_1.rawDomain(timeUnit, null);\n            if (domain) {\n                timeUnitData.push({\n                    name: timeUnit,\n                    values: domain,\n                    transform: [{\n                            type: 'formula',\n                            field: 'date',\n                            expr: time_1.parseExpression(timeUnit, 'datum.data', true)\n                        }]\n                });\n            }\n            return timeUnitData;\n        }, []);\n    }\n    timeUnitDomain.assemble = assemble;\n})(timeUnitDomain = exports.timeUnitDomain || (exports.timeUnitDomain = {}));\n//# sourceMappingURL=timeunitdomain.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/timeunitdomain.js\n// module id = k66X\n// module chunks = 0","module.exports = {\n  arc:    require('./arc'),\n  area:   require('./area'),\n  group:  require('./group'),\n  image:  require('./image'),\n  line:   require('./line'),\n  path:   require('./path'),\n  rect:   require('./rect'),\n  rule:   require('./rule'),\n  symbol: require('./symbol'),\n  text:   require('./text')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/index.js\n// module id = kC7m\n// module chunks = 0","\"use strict\";\nvar data_1 = require('../../data');\nvar fielddef_1 = require('../../fielddef');\nvar stackScale;\n(function (stackScale) {\n    function parseUnit(model) {\n        var stackProps = model.stack();\n        if (stackProps) {\n            var groupbyChannel = stackProps.groupbyChannel;\n            var fieldChannel = stackProps.fieldChannel;\n            return {\n                name: model.dataName(data_1.STACKED_SCALE),\n                source: model.dataName(data_1.SUMMARY),\n                transform: [{\n                        type: 'aggregate',\n                        groupby: [model.field(groupbyChannel)],\n                        summarize: [{ ops: ['sum'], field: model.field(fieldChannel) }]\n                    }]\n            };\n        }\n        return null;\n    }\n    stackScale.parseUnit = parseUnit;\n    ;\n    function parseFacet(model) {\n        var child = model.child();\n        var childDataComponent = child.component.data;\n        if (!childDataComponent.source && childDataComponent.stackScale) {\n            var stackComponent = childDataComponent.stackScale;\n            var newName = model.dataName(data_1.STACKED_SCALE);\n            child.renameData(stackComponent.name, newName);\n            stackComponent.name = newName;\n            stackComponent.source = model.dataName(data_1.SUMMARY);\n            stackComponent.transform[0].groupby = model.reduce(function (groupby, fieldDef) {\n                groupby.push(fielddef_1.field(fieldDef));\n                return groupby;\n            }, stackComponent.transform[0].groupby);\n            delete childDataComponent.stackScale;\n            return stackComponent;\n        }\n        return null;\n    }\n    stackScale.parseFacet = parseFacet;\n    function parseLayer(model) {\n        return null;\n    }\n    stackScale.parseLayer = parseLayer;\n    function assemble(component) {\n        return component.stackScale;\n    }\n    stackScale.assemble = assemble;\n})(stackScale = exports.stackScale || (exports.stackScale = {}));\n//# sourceMappingURL=stackscale.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/stackscale.js\n// module id = kowr\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    parseMark = require('../parse/mark'),\n    util = require('../util');\n\nvar axisBounds = new (require('vega-scenegraph').Bounds)();\nvar ORDINAL = 'ordinal';\n\nfunction axs(model, config) {\n  var scale,\n      orient = config.orient,\n      offset = 0,\n      titleOffset = config.titleOffset,\n      axisDef = {},\n      layer = 'front',\n      grid = false,\n      title = null,\n      tickMajorSize = config.tickSize,\n      tickMinorSize = config.tickSize,\n      tickEndSize = config.tickSize,\n      tickPadding = config.tickPadding || config.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormatType = null,\n      tickSubdivide = 0,\n      tickCount = config.ticks,\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines:  {},\n        majorTicks: {},\n        minorTicks: {},\n        tickLabels: {},\n        domain: {},\n        title:  {}\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  }\n\n  function ingest(d) {\n    return {data: d};\n  }\n\n  function getTicks(format) {\n    var major = tickValues || (scale.ticks ? scale.ticks(tickCount) : scale.domain()),\n        minor = axisSubdivide(scale, major, tickSubdivide).map(ingest);\n    major = major.map(function(d) { return (d = ingest(d), d.label = format(d.data), d); });\n    return [major, minor];\n  }\n\n  axis.def = function() {\n    if (!axisDef.type) axis_def(scale);\n\n    var format = util.getTickFormat(scale, tickCount, tickFormatType, tickFormatString),\n        ticks  = getTicks(format),\n        tdata  = title ? [title].map(ingest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? ticks[0] : []; };\n    axisDef.marks[1].from = function() { return ticks[0]; };\n    axisDef.marks[2].from = function() { return ticks[1]; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    if (titleOffset === 'auto') titleAutoOffset(axisDef);\n\n    return axisDef;\n  };\n\n  function titleAutoOffset(axisDef) {\n    var orient = axisDef.orient,\n        update = axisDef.marks[5].properties.update,\n        fn = update.encode,\n        min = config.titleOffsetAutoMin,\n        max = config.titleOffsetAutoMax,\n        pad = config.titleOffsetAutoMargin;\n\n    // Offset axis title using bounding box of axis domain and labels\n    // Assumes other components are **encoded and bounded** beforehand\n    update.encode = function(item, group, trans, db, signals, preds) {\n      var dirty = fn.call(fn, item, group, trans, db, signals, preds),\n          field = (orient==='bottom' || orient==='top') ? 'y' : 'x';\n      if (titleStyle[field] != null) return dirty;\n\n      axisBounds.clear()\n        .union(group.items[3].bounds)\n        .union(group.items[4].bounds);\n\n      var o = trans ? {} : item,\n          method = (orient==='left' || orient==='right') ? 'width' : 'height',\n          sign = (orient==='top' || orient==='left') ? -1 : 1,\n          off = ~~(axisBounds[method]() + item.fontSize/2 + pad);\n\n      Tuple.set(o, field, sign * Math.min(Math.max(min, off), max));\n      if (trans) trans.interpolate(item, o);\n      return true;\n    };\n  }\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === ORDINAL) {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+':prev', offset: 0.5};\n    }\n    range = axisScaleRange(scale);\n\n    // setup axis marks\n    dl.extend(m.gridLines, axisTicks(config));\n    dl.extend(m.majorTicks, axisTicks(config));\n    dl.extend(m.minorTicks, axisTicks(config));\n    dl.extend(m.tickLabels, axisTickLabels(config));\n    dl.extend(m.domain, axisDomain(config));\n    dl.extend(m.title, axisTitle(config));\n    m.gridLines.properties.enter.stroke = {value: config.gridColor};\n    m.gridLines.properties.enter.strokeOpacity = {value: config.gridOpacity};\n    m.gridLines.properties.enter.strokeWidth = {value: config.gridWidth};\n    m.gridLines.properties.enter.strokeDash = {value: config.gridDash};\n\n    // extend axis marks based on axis orientation\n    axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity, scale, config, offset);\n    axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize, scale, config);\n    axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize, scale, config);\n\n    axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    axisDomainExtend(orient, m.domain, range, tickEndSize);\n    axisTitleExtend(orient, m.title, range, +titleOffset || -1);\n\n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: 'group',\n      interactive: false,\n      properties: {\n        enter: {\n          encode: axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  }\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in axisOrients ? x + '' : config.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.tickCount = function(x) {\n    if (!arguments.length) return tickCount;\n    tickCount = x;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.tickFormatType = function(x) {\n    if (!arguments.length) return tickFormatType;\n    if (tickFormatType !== x) {\n      tickFormatType = x;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n\n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== x) { titleOffset = x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n\n  axis.reset = function() {\n    reset();\n    return axis;\n  };\n\n  return axis;\n}\n\nvar axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction axisSubdivide(scale, ticks, m) {\n  var subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = axisScaleExtent(scale.domain()),\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction axisScaleRange(scale) {\n  return scale.rangeExtent ?\n    scale.rangeExtent() :\n    axisScaleExtent(scale.range());\n}\n\nvar axisAlign = {\n  bottom: 'center',\n  top: 'center',\n  left: 'right',\n  right: 'left'\n};\n\nvar axisBaseline = {\n  bottom: 'top',\n  top: 'bottom',\n  left: 'middle',\n  right: 'middle'\n};\n\nfunction axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === 'left' || orient === 'top') {\n    size *= -1;\n  }\n  if (orient === 'top' || orient === 'bottom') {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: 'center'},\n      baseline: {value: axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: axisAlign[orient]},\n      baseline: {value: 'middle'}\n    });\n  }\n}\n\nfunction axisTicksExtend(orient, ticks, oldRef, newRef, size, scale, config, offset) {\n  var sign = (orient === 'left' || orient === 'top') ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === 'top' || orient === 'bottom') ?\n      {field: {group: 'height', level: 2}, mult: -sign, offset: offset*-sign} :\n      {field: {group: 'width',  level: 2}, mult: -sign, offset: offset*-sign};\n  } else {\n    size = {value: sign * size, offset: offset};\n  }\n\n  // Update offset of tick placement to be in between ordinal marks\n  // instead of directly aligned with.\n  if (config.tickPlacement === 'between' && scale.type === ORDINAL) {\n    var rng = scale.range(),\n        tickOffset = 0.5 + (scale.rangeBand() || (rng[1] - rng[0]) / 2);\n    newRef = oldRef = dl.duplicate(newRef);\n    newRef.offset = oldRef.offset = tickOffset;\n  }\n\n  if (orient === 'top' || orient === 'bottom') {\n    dl.extend(ticks.properties.enter, {\n      x:  oldRef,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newRef,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newRef,\n    });\n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldRef\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newRef\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newRef,\n    });\n  }\n}\n\nfunction axisTitleExtend(orient, title, range, offset) {\n  var update = title.properties.update,\n      mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === 'top' || orient === 'left') ? -1 : 1;\n\n  if (orient === 'bottom' || orient === 'top') {\n    update.x = {value: mid};\n    update.angle = {value: 0};\n    if (offset >= 0) update.y = {value: sign * offset};\n  } else {\n    update.y = {value: mid};\n    update.angle = {value: orient === 'left' ? -90 : 90};\n    if (offset >= 0) update.x = {value: sign * offset};\n  }\n}\n\nfunction axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === 'top' || orient === 'left') {\n    size = -1 * size;\n  }\n  if (orient === 'bottom' || orient === 'top') {\n    path = 'M' + range[0] + ',' + size + 'V0H' + range[1] + 'V' + size;\n  } else {\n    path = 'M' + size + ',' + range[0] + 'H0V' + range[1] + 'H' + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction axisUpdate(item, group, trans) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isArray(offset)) {\n    var ofx = offset[0],\n        ofy = offset[1];\n\n    switch (orient) {\n      case 'left':   { Tuple.set(o, 'x', -ofx); Tuple.set(o, 'y', ofy); break; }\n      case 'right':  { Tuple.set(o, 'x', width + ofx); Tuple.set(o, 'y', ofy); break; }\n      case 'bottom': { Tuple.set(o, 'x', ofx); Tuple.set(o, 'y', height + ofy); break; }\n      case 'top':    { Tuple.set(o, 'x', ofx); Tuple.set(o, 'y', -ofy); break; }\n      default:       { Tuple.set(o, 'x', ofx); Tuple.set(o, 'y', ofy); }\n    }\n  } else {\n    if (dl.isObject(offset)) {\n      offset = -group.scale(offset.scale)(offset.value);\n    }\n\n    switch (orient) {\n      case 'left':   { Tuple.set(o, 'x', -offset); Tuple.set(o, 'y', 0); break; }\n      case 'right':  { Tuple.set(o, 'x', width + offset); Tuple.set(o, 'y', 0); break; }\n      case 'bottom': { Tuple.set(o, 'x', 0); Tuple.set(o, 'y', height + offset); break; }\n      case 'top':    { Tuple.set(o, 'x', 0); Tuple.set(o, 'y', -offset); break; }\n      default:       { Tuple.set(o, 'x', 0); Tuple.set(o, 'y', 0); }\n    }\n  }\n\n  if (trans) trans.interpolate(item, o);\n  return true;\n}\n\nfunction axisTicks(config) {\n  return {\n    type: 'rule',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        stroke: {value: config.tickColor},\n        strokeWidth: {value: config.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction axisTickLabels(config) {\n  return {\n    type: 'text',\n    interactive: true,\n    key: 'data',\n    properties: {\n      enter: {\n        fill: {value: config.tickLabelColor},\n        font: {value: config.tickLabelFont},\n        fontSize: {value: config.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: 'label'}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction axisTitle(config) {\n  return {\n    type: 'text',\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.titleFont},\n        fontSize: {value: config.titleFontSize},\n        fontWeight: {value: config.titleFontWeight},\n        fill: {value: config.titleColor},\n        align: {value: 'center'},\n        baseline: {value: 'middle'},\n        text: {field: 'data'}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction axisDomain(config) {\n  return {\n    type: 'path',\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axisColor},\n        strokeWidth: {value: config.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/axis.js\n// module id = lKLM\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render'),\n    areaPath = require('../../../util/svg').path.area;\n\nfunction path(g, items) {\n  var o = items[0],\n      p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  render(g, p);\n}\n\nfunction pick(g, scene, x, y, gx, gy) {\n  var items = scene.items,\n      b = scene.bounds;\n\n  if (!items || !items.length || b && !b.contains(gx, gy)) {\n    return null;\n  }\n\n  if (g.pixelratio != null && g.pixelratio !== 1) {\n    x *= g.pixelratio;\n    y *= g.pixelratio;\n  }\n  return hit(g, items, x, y) ? items[0] : null;\n}\n\nvar hit = util.testPath(path);\n\nmodule.exports = {\n  draw: util.drawOne(path),\n  pick: pick,\n  nested: true\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/area.js\n// module id = lTFi\n// module chunks = 0","var util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = [].reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/groupby.js\n// module id = lkhv\n// module chunks = 0","function Bounds(b) {\n  this.clear();\n  if (b) this.union(b);\n}\n\nvar prototype = Bounds.prototype;\n\nprototype.clone = function() {\n  return new Bounds(this);\n};\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n};\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.alignsWith = function(b) {\n  return b && (\n    this.x1 == b.x1 ||\n    this.x2 == b.x2 ||\n    this.y1 == b.y1 ||\n    this.y2 == b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = Bounds;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/Bounds.js\n// module id = lnKO\n// module chunks = 0","var ImageLoader = require('../../util/ImageLoader'),\n    Renderer = require('../Renderer'),\n    text = require('../../util/text'),\n    DOM = require('../../util/dom'),\n    SVG = require('../../util/svg'),\n    ns = SVG.metadata.xmlns,\n    marks = require('./marks');\n\nfunction SVGRenderer(loadConfig) {\n  Renderer.call(this);\n  this._loader = new ImageLoader(loadConfig);\n  this._dirtyID = 0;\n}\n\nvar base = Renderer.prototype;\nvar prototype = (SVGRenderer.prototype = Object.create(base));\nprototype.constructor = SVGRenderer;\n\nprototype.initialize = function(el, width, height, padding) {\n  if (el) {\n    this._svg = DOM.child(el, 0, 'svg', ns, 'marks');\n    DOM.clear(el, 1);\n    // set the svg root group\n    this._root = DOM.child(this._svg, 0, 'g', ns);\n    DOM.clear(this._svg, 1);\n  }\n\n  // create the svg definitions cache\n  this._defs = {\n    clip_id:  1,\n    gradient: {},\n    clipping: {}\n  };\n\n  // set background color if defined\n  this.background(this._bgcolor);\n\n  return base.initialize.call(this, el, width, height, padding);\n};\n\nprototype.background = function(bgcolor) {\n  if (arguments.length && this._svg) {\n    this._svg.style.setProperty('background-color', bgcolor);\n  }\n  return base.background.apply(this, arguments);\n};\n\nprototype.resize = function(width, height, padding) {\n  base.resize.call(this, width, height, padding);\n  \n  if (this._svg) {\n    var w = this._width,\n        h = this._height,\n        p = this._padding;\n  \n    this._svg.setAttribute('width', w + p.left + p.right);\n    this._svg.setAttribute('height', h + p.top + p.bottom);\n    \n    this._root.setAttribute('transform', 'translate('+p.left+','+p.top+')');\n  }\n\n  return this;\n};\n\nprototype.svg = function() {\n  if (!this._svg) return null;\n\n  var attr = {\n    'class':  'marks',\n    'width':  this._width + this._padding.left + this._padding.right,\n    'height': this._height + this._padding.top + this._padding.bottom,\n  };\n  for (var key in SVG.metadata) {\n    attr[key] = SVG.metadata[key];\n  }\n\n  return DOM.openTag('svg', attr) + this._svg.innerHTML + DOM.closeTag('svg');\n};\n\nprototype.imageURL = function(url) {\n  return this._loader.imageURL(url);\n};\n\n\n// -- Render entry point --\n\nprototype.render = function(scene, items) {\n  if (this._dirtyCheck(items)) {\n    if (this._dirtyAll) this._resetDefs();\n    this.draw(this._root, scene, -1);\n    DOM.clear(this._root, 1);\n  }\n  this.updateDefs();\n  return this;\n};\n\nprototype.draw = function(el, scene, index) {\n  this.drawMark(el, scene, index, marks[scene.marktype]);\n};\n\n\n// -- Manage SVG definitions ('defs') block --\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      defs = this._defs,\n      el = defs.el,\n      index = 0, id;\n\n  for (id in defs.gradient) {\n    if (!el) el = (defs.el = DOM.child(svg, 0, 'defs', ns));\n    updateGradient(el, defs.gradient[id], index++);\n  }\n\n  for (id in defs.clipping) {\n    if (!el) el = (defs.el = DOM.child(svg, 0, 'defs', ns));\n    updateClipping(el, defs.clipping[id], index++);\n  }\n\n  // clean-up\n  if (el) {\n    if (index === 0) {\n      svg.removeChild(el);\n      defs.el = null;\n    } else {\n      DOM.clear(el, index);      \n    }\n  }\n};\n\nfunction updateGradient(el, grad, index) {\n  var i, n, stop;\n\n  el = DOM.child(el, index, 'linearGradient', ns);\n  el.setAttribute('id', grad.id);\n  el.setAttribute('x1', grad.x1);\n  el.setAttribute('x2', grad.x2);\n  el.setAttribute('y1', grad.y1);\n  el.setAttribute('y2', grad.y2);\n  \n  for (i=0, n=grad.stops.length; i<n; ++i) {\n    stop = DOM.child(el, i, 'stop', ns);\n    stop.setAttribute('offset', grad.stops[i].offset);\n    stop.setAttribute('stop-color', grad.stops[i].color);\n  }\n  DOM.clear(el, i);\n}\n\nfunction updateClipping(el, clip, index) {\n  var rect;\n\n  el = DOM.child(el, index, 'clipPath', ns);\n  el.setAttribute('id', clip.id);\n  rect = DOM.child(el, 0, 'rect', ns);\n  rect.setAttribute('x', 0);\n  rect.setAttribute('y', 0);\n  rect.setAttribute('width', clip.width);\n  rect.setAttribute('height', clip.height);\n}\n\nprototype._resetDefs = function() {\n  var def = this._defs;\n  def.clip_id = 1;\n  def.gradient = {};\n  def.clipping = {};\n};\n\n\n// -- Manage rendering of items marked as dirty --\n\nprototype.isDirty = function(item) {\n  return this._dirtyAll || item.dirty === this._dirtyID;\n};\n\nprototype._dirtyCheck = function(items) {\n  this._dirtyAll = true;\n  if (!items) return true;\n\n  var id = ++this._dirtyID,\n      item, mark, type, mdef, i, n, o;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    mark = item.mark;\n    if (mark.marktype !== type) {\n      // memoize mark instance lookup\n      type = mark.marktype;\n      mdef = marks[type];\n    }\n\n    if (item.status === 'exit') { // EXIT\n      if (item._svg) {\n        if (mdef.nest && item.mark.items.length) {\n          // if nested mark with remaining points, update instead\n          this._update(mdef, item._svg, item.mark.items[0]);\n          o = item.mark.items[0];\n          o._svg = item._svg;\n          o._update = id;\n        } else {\n          // otherwise remove from DOM\n          DOM.remove(item._svg);\n        }\n        item._svg = null;\n      }\n      continue;\n    }\n\n    item = (mdef.nest ? mark.items[0] : item);\n    if (item._update === id) { // Already processed\n      continue;\n    } else if (item._svg) { // UPDATE\n      this._update(mdef, item._svg, item);\n    } else { // ENTER\n      this._dirtyAll = false;\n      dirtyParents(item, id);\n    }\n    item._update = id;\n  }\n  return !this._dirtyAll;\n};\n\nfunction dirtyParents(item, id) {\n  for (; item && item.dirty !== id; item=item.mark.group) {\n    item.dirty = id;\n    if (item.mark && item.mark.dirty !== id) {\n      item.mark.dirty = id;\n    } else return;\n  }\n}\n\n\n// -- Construct & maintain scenegraph to SVG mapping ---\n\n// Draw a mark container.\nprototype.drawMark = function(el, scene, index, mdef) {\n  if (!this.isDirty(scene)) return;\n\n  var items = mdef.nest ?\n        (scene.items && scene.items.length ? [scene.items[0]] : []) :\n        scene.items || [],\n      events = scene.interactive === false ? 'none' : null,\n      isGroup = (mdef.tag === 'g'),\n      className = DOM.cssClass(scene),\n      p, i, n, c, d, insert;\n\n  p = DOM.child(el, index+1, 'g', ns, className);\n  p.setAttribute('class', className);\n  scene._svg = p;\n  if (!isGroup && events) {\n    p.style.setProperty('pointer-events', events);\n  }\n\n  for (i=0, n=items.length; i<n; ++i) {\n    if (this.isDirty(d = items[i])) {\n      insert = !(this._dirtyAll || d._svg);\n      c = bind(p, mdef, d, i, insert);\n      this._update(mdef, c, d);\n      if (isGroup) {\n        if (insert) this._dirtyAll = true;\n        this._recurse(c, d);\n        if (insert) this._dirtyAll = false;\n      }\n    }\n  }\n  DOM.clear(p, i);\n  return p;\n};\n\n// Recursively process group contents.\nprototype._recurse = function(el, group) {\n  var items = group.items || [],\n      legends = group.legendItems || [],\n      axes = group.axisItems || [],\n      idx = 0, j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer === 'back') {\n      this.drawMark(el, axes[j], idx++, marks.group);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    this.draw(el, items[j], idx++);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer !== 'back') {\n      this.drawMark(el, axes[j], idx++, marks.group);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    this.drawMark(el, legends[j], idx++, marks.group);\n  }\n\n  // remove any extraneous DOM elements\n  DOM.clear(el, 1 + idx);\n};\n\n// Bind a scenegraph item to an SVG DOM element.\n// Create new SVG elements as needed.\nfunction bind(el, mdef, item, index, insert) {\n  // create svg element, bind item data for D3 compatibility\n  var node = DOM.child(el, index, mdef.tag, ns, null, insert);\n  node.__data__ = item;\n  node.__values__ = {fill: 'default'};\n\n  // create background rect\n  if (mdef.tag === 'g') {\n    var bg = DOM.child(node, 0, 'rect', ns, 'background');\n    bg.__data__ = item;\n  }\n\n  // add pointer from scenegraph item to svg element\n  return (item._svg = node);\n}\n\n\n// -- Set attributes & styles on SVG elements ---\n\nvar element = null, // temp var for current SVG element\n    values = null;  // temp var for current values hash\n\n// Extra configuration for certain mark types\nvar mark_extras = {\n  group: function(mdef, el, item) {\n    element = el.childNodes[0];\n    values = el.__values__; // use parent's values hash\n    mdef.background(emit, item, this);\n\n    var value = item.mark.interactive === false ? 'none' : null;\n    if (value !== values.events) {\n      element.style.setProperty('pointer-events', value);\n      values.events = value;\n    }\n  },\n  text: function(mdef, el, item) {\n    var str = text.value(item.text);\n    if (str !== values.text) {\n      el.textContent = str;\n      values.text = str;\n    }\n    str = text.font(item);\n    if (str !== values.font) {\n      el.style.setProperty('font', str);\n      values.font = str;\n    }\n  }\n};\n\nprototype._update = function(mdef, el, item) {\n  // set dom element and values cache\n  // provides access to emit method\n  element = el;\n  values = el.__values__;\n\n  // apply svg attributes\n  mdef.attr(emit, item, this);\n\n  // some marks need special treatment\n  var extra = mark_extras[mdef.type];\n  if (extra) extra(mdef, el, item);\n\n  // apply svg css styles\n  // note: element may be modified by 'extra' method\n  this.style(element, item);\n};\n\nfunction emit(name, value, ns) {\n  // early exit if value is unchanged\n  if (value === values[name]) return;\n\n  if (value != null) {\n    // if value is provided, update DOM attribute\n    if (ns) {\n      element.setAttributeNS(ns, name, value);\n    } else {\n      element.setAttribute(name, value);\n    }\n  } else {\n    // else remove DOM attribute\n    if (ns) {\n      element.removeAttributeNS(ns, name);\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  // note current value for future comparison\n  values[name] = value;\n}\n\nprototype.style = function(el, o) {\n  if (o == null) return;\n  var i, n, prop, name, value;\n\n  for (i=0, n=SVG.styleProperties.length; i<n; ++i) {\n    prop = SVG.styleProperties[i];\n    value = o[prop];\n    if (value === values[prop]) continue;\n\n    name = SVG.styles[prop];\n    if (value == null) {\n      if (name === 'fill') {\n        el.style.setProperty(name, 'none');\n      } else {\n        el.style.removeProperty(name);\n      }\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        this._defs.gradient[value.id] = value;\n        value = 'url(' + href() + '#' + value.id + ')';\n      }\n      el.style.setProperty(name, value+'');\n    }\n\n    values[prop] = value;\n  }\n};\n\nfunction href() {\n  return typeof window !== 'undefined' ? window.location.href : '';\n}\n\nmodule.exports = SVGRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/svg/SVGRenderer.js\n// module id = mP8n\n// module chunks = 0","var d3_time = require('d3-time');\n\nvar tempDate = new Date(),\n    baseDate = new Date(0, 0, 1).setFullYear(0), // Jan 1, 0 AD\n    utcBaseDate = new Date(Date.UTC(0, 0, 1)).setUTCFullYear(0);\n\nfunction date(d) {\n  return (tempDate.setTime(+d), tempDate);\n}\n\n// create a time unit entry\nfunction entry(type, date, unit, step, min, max) {\n  var e = {\n    type: type,\n    date: date,\n    unit: unit\n  };\n  if (step) {\n    e.step = step;\n  } else {\n    e.minstep = 1;\n  }\n  if (min != null) e.min = min;\n  if (max != null) e.max = max;\n  return e;\n}\n\nfunction create(type, unit, base, step, min, max) {\n  return entry(type,\n    function(d) { return unit.offset(base, d); },\n    function(d) { return unit.count(base, d); },\n    step, min, max);\n}\n\nvar locale = [\n  create('second', d3_time.second, baseDate),\n  create('minute', d3_time.minute, baseDate),\n  create('hour',   d3_time.hour,   baseDate),\n  create('day',    d3_time.day,    baseDate, [1, 7]),\n  create('month',  d3_time.month,  baseDate, [1, 3, 6]),\n  create('year',   d3_time.year,   baseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(1970, 0, 1, 0, 0, d); },\n    function(d) { return date(d).getSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(1970, 0, 1, 0, d); },\n    function(d) { return date(d).getMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(1970, 0, 1, d); },\n    function(d) { return date(d).getHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(1970, 0, 4+d); },\n    function(d) { return date(d).getDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(1970, 0, d); },\n    function(d) { return date(d).getDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(1970, d % 12, 1); },\n    function(d) { return date(d).getMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar utc = [\n  create('second', d3_time.utcSecond, utcBaseDate),\n  create('minute', d3_time.utcMinute, utcBaseDate),\n  create('hour',   d3_time.utcHour,   utcBaseDate),\n  create('day',    d3_time.utcDay,    utcBaseDate, [1, 7]),\n  create('month',  d3_time.utcMonth,  utcBaseDate, [1, 3, 6]),\n  create('year',   d3_time.utcYear,   utcBaseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, 0, d)); },\n    function(d) { return date(d).getUTCSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, d)); },\n    function(d) { return date(d).getUTCMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, d)); },\n    function(d) { return date(d).getUTCHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(Date.UTC(1970, 0, 4+d)); },\n    function(d) { return date(d).getUTCDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(Date.UTC(1970, 0, d)); },\n    function(d) { return date(d).getUTCDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(Date.UTC(1970, d % 12, 1)); },\n    function(d) { return date(d).getUTCMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction find(units, span, minb, maxb) {\n  var step = STEPS[0], i, n, bins;\n\n  for (i=1, n=STEPS.length; i<n; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return units[STEPS[i-1][1]];\n      }\n      if (bins >= minb) {\n        return units[step[1]];\n      }\n    }\n  }\n  return units[STEPS[n-1][1]];\n}\n\nfunction toUnitMap(units) {\n  var map = {}, i, n;\n  for (i=0, n=units.length; i<n; ++i) {\n    map[units[i].type] = units[i];\n  }\n  map.find = function(span, minb, maxb) {\n    return find(units, span, minb, maxb);\n  };\n  return map;\n}\n\nmodule.exports = toUnitMap(locale);\nmodule.exports.utc = toUnitMap(utc);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/time.js\n// module id = mgrV\n// module chunks = 0","var dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/index.js\n// module id = nIY2\n// module chunks = 0","\"use strict\";\nvar bin_1 = require('../../bin');\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar util_1 = require('../../util');\nvar bin;\n(function (bin_2) {\n    function parse(model) {\n        return model.reduce(function (binComponent, fieldDef, channel) {\n            var bin = model.fieldDef(channel).bin;\n            if (bin) {\n                var binTrans = util_1.extend({\n                    type: 'bin',\n                    field: fieldDef.field,\n                    output: {\n                        start: fielddef_1.field(fieldDef, { binSuffix: '_start' }),\n                        mid: fielddef_1.field(fieldDef, { binSuffix: '_mid' }),\n                        end: fielddef_1.field(fieldDef, { binSuffix: '_end' })\n                    }\n                }, typeof bin === 'boolean' ? {} : bin);\n                if (!binTrans.maxbins && !binTrans.step) {\n                    binTrans.maxbins = bin_1.autoMaxBins(channel);\n                }\n                var transform = [binTrans];\n                var isOrdinalColor = model.isOrdinalScale(channel) || channel === channel_1.COLOR;\n                if (isOrdinalColor) {\n                    transform.push({\n                        type: 'formula',\n                        field: fielddef_1.field(fieldDef, { binSuffix: '_range' }),\n                        expr: fielddef_1.field(fieldDef, { datum: true, binSuffix: '_start' }) +\n                            ' + \\'-\\' + ' +\n                            fielddef_1.field(fieldDef, { datum: true, binSuffix: '_end' })\n                    });\n                }\n                var key = util_1.hash(bin) + '_' + fieldDef.field + 'oc:' + isOrdinalColor;\n                binComponent[key] = transform;\n            }\n            return binComponent;\n        }, {});\n    }\n    bin_2.parseUnit = parse;\n    function parseFacet(model) {\n        var binComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(binComponent, childDataComponent.bin);\n            delete childDataComponent.bin;\n        }\n        return binComponent;\n    }\n    bin_2.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var binComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source) {\n                util_1.extend(binComponent, childDataComponent.bin);\n                delete childDataComponent.bin;\n            }\n        });\n        return binComponent;\n    }\n    bin_2.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.flatten(util_1.vals(component.bin));\n    }\n    bin_2.assemble = assemble;\n})(bin = exports.bin || (exports.bin = {}));\n//# sourceMappingURL=bin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/bin.js\n// module id = nOes\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/build/topojson.js\n// module id = nTOs\n// module chunks = 0","var util = require('./util'),\n    type = require('./import/type'),\n    stats = require('./stats'),\n    template = require('./template');\n\nmodule.exports = {\n  table:   formatTable,  // format a data table\n  summary: formatSummary // format a data table summary\n};\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nfunction formatTable(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + (POS[types[name]] || 'right')) +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n}\n\nfunction formatSummary(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n}\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/format-tables.js\n// module id = nXcD\n// module chunks = 0","module.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + '(' + obj + ')';\n      if (cast.lastIndexOf('new ', 0) === 0) obj = '(' + obj + ')';\n    }\n    return obj + '.' + name + (type < 0 ? '' : type === 0 ?\n      '()' :\n      '(' + args.slice(1).map(codegen).join(',') + ')');\n  }\n\n  function fn(name, cast, type) {\n    return function(args) {\n      return fncall(name, args, cast, type);\n    };\n  }\n\n  var DATE = 'new Date',\n      STRING = 'String',\n      REGEXP = 'RegExp';\n\n  return {\n    // MATH functions\n    'isNaN':    'isNaN',\n    'isFinite': 'isFinite',\n    'abs':      'Math.abs',\n    'acos':     'Math.acos',\n    'asin':     'Math.asin',\n    'atan':     'Math.atan',\n    'atan2':    'Math.atan2',\n    'ceil':     'Math.ceil',\n    'cos':      'Math.cos',\n    'exp':      'Math.exp',\n    'floor':    'Math.floor',\n    'log':      'Math.log',\n    'max':      'Math.max',\n    'min':      'Math.min',\n    'pow':      'Math.pow',\n    'random':   'Math.random',\n    'round':    'Math.round',\n    'sin':      'Math.sin',\n    'sqrt':     'Math.sqrt',\n    'tan':      'Math.tan',\n\n    'clamp': function(args) {\n      if (args.length < 3)\n        throw new Error('Missing arguments to clamp function.');\n      if (args.length > 3)\n        throw new Error('Too many arguments to clamp function.');\n      var a = args.map(codegen);\n      return 'Math.max('+a[1]+', Math.min('+a[2]+','+a[0]+'))';\n    },\n\n    // DATE functions\n    'now':             'Date.now',\n    'utc':             'Date.UTC',\n    'datetime':        DATE,\n    'date':            fn('getDate', DATE, 0),\n    'day':             fn('getDay', DATE, 0),\n    'year':            fn('getFullYear', DATE, 0),\n    'month':           fn('getMonth', DATE, 0),\n    'hours':           fn('getHours', DATE, 0),\n    'minutes':         fn('getMinutes', DATE, 0),\n    'seconds':         fn('getSeconds', DATE, 0),\n    'milliseconds':    fn('getMilliseconds', DATE, 0),\n    'time':            fn('getTime', DATE, 0),\n    'timezoneoffset':  fn('getTimezoneOffset', DATE, 0),\n    'utcdate':         fn('getUTCDate', DATE, 0),\n    'utcday':          fn('getUTCDay', DATE, 0),\n    'utcyear':         fn('getUTCFullYear', DATE, 0),\n    'utcmonth':        fn('getUTCMonth', DATE, 0),\n    'utchours':        fn('getUTCHours', DATE, 0),\n    'utcminutes':      fn('getUTCMinutes', DATE, 0),\n    'utcseconds':      fn('getUTCSeconds', DATE, 0),\n    'utcmilliseconds': fn('getUTCMilliseconds', DATE, 0),\n\n    // shared sequence functions\n    'length':      fn('length', null, -1),\n    'indexof':     fn('indexOf', null),\n    'lastindexof': fn('lastIndexOf', null),\n\n    // STRING functions\n    'parseFloat':  'parseFloat',\n    'parseInt':    'parseInt',\n    'upper':       fn('toUpperCase', STRING, 0),\n    'lower':       fn('toLowerCase', STRING, 0),\n    'slice':       fn('slice', STRING),\n    'substring':   fn('substring', STRING),\n    'replace':     fn('replace', STRING),\n\n    // REGEXP functions\n    'regexp':  REGEXP,\n    'test':    fn('test', REGEXP),\n\n    // Control Flow functions\n    'if': function(args) {\n        if (args.length < 3)\n          throw new Error('Missing arguments to if function.');\n        if (args.length > 3)\n          throw new Error('Too many arguments to if function.');\n        var a = args.map(codegen);\n        return '('+a[0]+'?'+a[1]+':'+a[2]+')';\n      }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-expression/src/functions.js\n// module id = nj7R\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('./aggregate');\nvar scale_1 = require('./scale');\nvar timeunit_1 = require('./timeunit');\nvar type_1 = require('./type');\nvar util_1 = require('./util');\nexports.aggregate = {\n    type: 'string',\n    enum: aggregate_1.AGGREGATE_OPS,\n    supportedEnums: {\n        quantitative: aggregate_1.AGGREGATE_OPS,\n        ordinal: ['median', 'min', 'max'],\n        nominal: [],\n        temporal: ['mean', 'median', 'min', 'max'],\n        '': ['count']\n    },\n    supportedTypes: util_1.toMap([type_1.QUANTITATIVE, type_1.NOMINAL, type_1.ORDINAL, type_1.TEMPORAL, ''])\n};\nfunction field(fieldDef, opt) {\n    if (opt === void 0) { opt = {}; }\n    var prefix = (opt.datum ? 'datum.' : '') + (opt.prefn || '');\n    var suffix = opt.suffix || '';\n    var field = fieldDef.field;\n    if (isCount(fieldDef)) {\n        return prefix + 'count' + suffix;\n    }\n    else if (opt.fn) {\n        return prefix + opt.fn + '_' + field + suffix;\n    }\n    else if (!opt.nofn && fieldDef.bin) {\n        var binSuffix = opt.binSuffix || (opt.scaleType === scale_1.ScaleType.ORDINAL ?\n            '_range' :\n            '_start');\n        return prefix + 'bin_' + field + binSuffix;\n    }\n    else if (!opt.nofn && !opt.noAggregate && fieldDef.aggregate) {\n        return prefix + fieldDef.aggregate + '_' + field + suffix;\n    }\n    else if (!opt.nofn && fieldDef.timeUnit) {\n        return prefix + fieldDef.timeUnit + '_' + field + suffix;\n    }\n    else {\n        return prefix + field;\n    }\n}\nexports.field = field;\nfunction _isFieldDimension(fieldDef) {\n    return util_1.contains([type_1.NOMINAL, type_1.ORDINAL], fieldDef.type) || !!fieldDef.bin ||\n        (fieldDef.type === type_1.TEMPORAL && !!fieldDef.timeUnit);\n}\nfunction isDimension(fieldDef) {\n    return fieldDef && fieldDef.field && _isFieldDimension(fieldDef);\n}\nexports.isDimension = isDimension;\nfunction isMeasure(fieldDef) {\n    return fieldDef && fieldDef.field && !_isFieldDimension(fieldDef);\n}\nexports.isMeasure = isMeasure;\nfunction count() {\n    return { field: '*', aggregate: aggregate_1.AggregateOp.COUNT, type: type_1.QUANTITATIVE };\n}\nexports.count = count;\nfunction isCount(fieldDef) {\n    return fieldDef.aggregate === aggregate_1.AggregateOp.COUNT;\n}\nexports.isCount = isCount;\nfunction cardinality(fieldDef, stats, filterNull) {\n    if (filterNull === void 0) { filterNull = {}; }\n    var stat = stats[fieldDef.field], type = fieldDef.type;\n    if (fieldDef.bin) {\n        var bin_1 = fieldDef.bin;\n        var maxbins = (typeof bin_1 === 'boolean') ? undefined : bin_1.maxbins;\n        if (maxbins === undefined) {\n            maxbins = 10;\n        }\n        var bins = util_1.getbins(stat, maxbins);\n        return (bins.stop - bins.start) / bins.step;\n    }\n    if (type === type_1.TEMPORAL) {\n        var timeUnit = fieldDef.timeUnit;\n        switch (timeUnit) {\n            case timeunit_1.TimeUnit.SECONDS: return 60;\n            case timeunit_1.TimeUnit.MINUTES: return 60;\n            case timeunit_1.TimeUnit.HOURS: return 24;\n            case timeunit_1.TimeUnit.DAY: return 7;\n            case timeunit_1.TimeUnit.DATE: return 31;\n            case timeunit_1.TimeUnit.MONTH: return 12;\n            case timeunit_1.TimeUnit.QUARTER: return 4;\n            case timeunit_1.TimeUnit.YEAR:\n                var yearstat = stats['year_' + fieldDef.field];\n                if (!yearstat) {\n                    return null;\n                }\n                return yearstat.distinct -\n                    (stat.missing > 0 && filterNull[type] ? 1 : 0);\n        }\n    }\n    if (fieldDef.aggregate) {\n        return 1;\n    }\n    return stat.distinct -\n        (stat.missing > 0 && filterNull[type] ? 1 : 0);\n}\nexports.cardinality = cardinality;\nfunction title(fieldDef, config) {\n    if (fieldDef.title != null) {\n        return fieldDef.title;\n    }\n    if (isCount(fieldDef)) {\n        return config.countTitle;\n    }\n    var fn = fieldDef.aggregate || fieldDef.timeUnit || (fieldDef.bin && 'bin');\n    if (fn) {\n        return fn.toString().toUpperCase() + '(' + fieldDef.field + ')';\n    }\n    else {\n        return fieldDef.field;\n    }\n}\nexports.title = title;\n//# sourceMappingURL=fielddef.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/fielddef.js\n// module id = o+e1\n// module chunks = 0","module.exports = {\n  Handler:  require('./CanvasHandler'),\n  Renderer: require('./CanvasRenderer')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/index.js\n// module id = oCE4\n// module chunks = 0","var sg = require('vega-scenegraph').render,\n    canvas = sg.canvas,\n    svg = sg.svg.string,\n    View = require('./View');\n\nfunction HeadlessView(width, height, model) {\n  View.call(this, width, height, model);\n  this._type = 'canvas';\n  this._renderers = {canvas: canvas, svg: svg};\n}\n\nvar prototype = (HeadlessView.prototype = new View());\n\nprototype.renderer = function(type) {\n  if(type) this._type = type;\n  return View.prototype.renderer.apply(this, arguments);\n};\n\nprototype.canvas = function() {\n  return (this._type === 'canvas') ? this._renderer.canvas() : null;\n};\n\nprototype.canvasAsync = function(callback) {\n  var r = this._renderer, view = this;\n\n  function wait() {\n    if (r.pendingImages() === 0) {\n      view.render(); // re-render with all images\n      callback(view.canvas());\n    } else {\n      setTimeout(wait, 10);\n    }\n  }\n\n  // if images loading, poll until ready\n  if (this._type !== 'canvas') return null;\n  if (r.pendingImages() > 0) { wait(); } else { callback(this.canvas()); }\n};\n\nprototype.svg = function() {\n  return (this._type === 'svg') ? this._renderer.svg() : null;\n};\n\nprototype.initialize = function() {\n  var w = this._width,\n      h = this._height,\n      bg  = this._bgcolor,\n      pad = this._padding,\n      config = this.model().config();\n\n  if (this._viewport) {\n    w = this._viewport[0] - (pad ? pad.left + pad.right : 0);\n    h = this._viewport[1] - (pad ? pad.top + pad.bottom : 0);\n  }\n\n  this._renderer = (this._renderer || new this._io.Renderer(config.load))\n    .initialize(null, w, h, pad)\n    .background(bg);\n\n  return (this._repaint = true, this);\n};\n\nmodule.exports = HeadlessView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/HeadlessView.js\n// module id = oCPx\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar formula;\n(function (formula_1) {\n    function parse(model) {\n        return (model.transform().calculate || []).reduce(function (formulaComponent, formula) {\n            formulaComponent[util_1.hash(formula)] = formula;\n            return formulaComponent;\n        }, {});\n    }\n    formula_1.parseUnit = parse;\n    function parseFacet(model) {\n        var formulaComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(formulaComponent, childDataComponent.calculate);\n            delete childDataComponent.calculate;\n        }\n        return formulaComponent;\n    }\n    formula_1.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var formulaComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source && childDataComponent.calculate) {\n                util_1.extend(formulaComponent || {}, childDataComponent.calculate);\n                delete childDataComponent.calculate;\n            }\n        });\n        return formulaComponent;\n    }\n    formula_1.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.vals(component.calculate).reduce(function (transform, formula) {\n            transform.push(util_1.extend({ type: 'formula' }, formula));\n            return transform;\n        }, []);\n    }\n    formula_1.assemble = assemble;\n})(formula = exports.formula || (exports.formula = {}));\n//# sourceMappingURL=formula.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/formula.js\n// module id = pAWG\n// module chunks = 0","var DOM = require('../../util/dom'),\n    Bounds = require('../../util/Bounds'),\n    ImageLoader = require('../../util/ImageLoader'),\n    Canvas = require('../../util/canvas'),\n    Renderer = require('../Renderer'),\n    marks = require('./marks');\n\nfunction CanvasRenderer(loadConfig) {\n  Renderer.call(this);\n  this._loader = new ImageLoader(loadConfig);\n}\n\nCanvasRenderer.RETINA = true;\n\nvar base = Renderer.prototype;\nvar prototype = (CanvasRenderer.prototype = Object.create(base));\nprototype.constructor = CanvasRenderer;\n\nprototype.initialize = function(el, width, height, padding) {\n  this._canvas = Canvas.instance(width, height);\n  if (el) {\n    DOM.clear(el, 0).appendChild(this._canvas);\n    this._canvas.setAttribute('class', 'marks');\n  }\n  return base.initialize.call(this, el, width, height, padding);\n};\n\nprototype.resize = function(width, height, padding) {\n  base.resize.call(this, width, height, padding);\n  Canvas.resize(this._canvas, this._width, this._height,\n    this._padding, CanvasRenderer.RETINA);\n  return this;\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\nprototype.context = function() {\n  return this._canvas ? this._canvas.getContext('2d') : null;\n};\n\nprototype.pendingImages = function() {\n  return this._loader.pending();\n};\n\nfunction clipToBounds(g, items) {\n  if (!items) return null;\n\n  var b = new Bounds(), i, n, item, mark, group;\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    mark = item.mark;\n    group = mark.group;\n    item = marks[mark.marktype].nested ? mark : item;\n    b.union(translate(item.bounds, group));\n    if (item['bounds:prev']) {\n      b.union(translate(item['bounds:prev'], group));\n    }\n  }\n  b.round();\n\n  g.beginPath();\n  g.rect(b.x1, b.y1, b.width(), b.height());\n  g.clip();\n\n  return b;\n}\n\nfunction translate(bounds, group) {\n  if (group == null) return bounds;\n  var b = bounds.clone();\n  for (; group != null; group = group.mark.group) {\n    b.translate(group.x || 0, group.y || 0);\n  }\n  return b;\n}\n\nprototype.render = function(scene, items) {\n  var g = this.context(),\n      p = this._padding,\n      w = this._width + p.left + p.right,\n      h = this._height + p.top + p.bottom,\n      b;\n\n  // setup\n  this._scene = scene; // cache scene for async redraw\n  g.save();\n  b = clipToBounds(g, items);\n  this.clear(-p.left, -p.top, w, h);\n\n  // render\n  this.draw(g, scene, b);\n  \n  // takedown\n  g.restore();\n  this._scene = null; // clear scene cache\n\n  return this;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var mark = marks[scene.marktype];\n  mark.draw.call(this, ctx, scene, bounds);\n};\n\nprototype.clear = function(x, y, w, h) {\n  var g = this.context();\n  g.clearRect(x, y, w, h);\n  if (this._bgcolor != null) {\n    g.fillStyle = this._bgcolor;\n    g.fillRect(x, y, w, h); \n  }\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = this._scene;\n  return this._loader.loadImage(uri, function() {\n    renderer.renderAsync(scene);\n  });\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 10);\n};\n\nmodule.exports = CanvasRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/CanvasRenderer.js\n// module id = pEEJ\n// module chunks = 0","var d3 = require('d3'),\n    df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    ChangeSet = df.ChangeSet,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n\n  this._prev = null;\n  this._interactive = false;\n  this._setup = true;\n  this._nodes  = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  Transform.addParameters(this, {\n    size: {type: 'array<value>', default: require('./screen').size},\n    bound: {type: 'value', default: true},\n    links: {type: 'data'},\n\n    // TODO: for now force these to be value params only (pun-intended)\n    // Can update to include fields after Parameter refactoring.\n    linkStrength: {type: 'value', default: 1},\n    linkDistance: {type: 'value', default: 20},\n    charge: {type: 'value', default: -30},\n\n    chargeDistance: {type: 'value', default: Infinity},\n    friction: {type: 'value', default: 0.9},\n    theta: {type: 'value', default: 0.8},\n    gravity: {type: 'value', default: 0.1},\n    alpha: {type: 'value', default: 0.1},\n    iterations: {type: 'value', default: 500},\n\n    interactive: {type: 'value', default: this._interactive},\n    active: {type: 'value', default: this._prev},\n    fixed: {type: 'data'}\n  });\n\n  this._output = {\n    'x': 'layout_x',\n    'y': 'layout_y'\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Force.prototype = Object.create(Transform.prototype));\nprototype.constructor = Force;\n\nprototype.transform = function(nodeInput, reset) {\n  log.debug(nodeInput, ['force']);\n  reset = reset - (nodeInput.signals.active ? 1 : 0);\n\n  // get variables\n  var interactive = this.param('interactive'),\n      linkSource = this.param('links').source,\n      linkInput = linkSource.last(),\n      active = this.param('active'),\n      output = this._output,\n      layout = this._layout,\n      nodes = this._nodes,\n      links = this._links;\n\n  // configure nodes, links and layout\n  if (linkInput.stamp < nodeInput.stamp) linkInput = null;\n  this.configure(nodeInput, linkInput, interactive, reset);\n\n  // run batch layout\n  if (!interactive) {\n    var iterations = this.param('iterations');\n    for (var i=0; i<iterations; ++i) layout.tick();\n    layout.stop();\n  }\n\n  // update node positions\n  this.update(active);\n\n  // re-up alpha on parameter change\n  if (reset || active !== this._prev && active && active.update) {\n    layout.alpha(this.param('alpha')); // re-start layout\n  }\n\n  // update active node status,\n  if (active !== this._prev) {\n    this._prev = active;\n  }\n\n  // process removed nodes or edges\n  if (nodeInput.rem.length) {\n    layout.nodes(this._nodes = Tuple.idFilter(nodes, nodeInput.rem));\n  }\n  if (linkInput && linkInput.rem.length) {\n    layout.links(this._links = Tuple.idFilter(links, linkInput.rem));\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nprototype.configure = function(nodeInput, linkInput, interactive, reset) {\n  // check if we need to run configuration\n  var layout = this._layout,\n      update = this._setup || nodeInput.add.length ||\n            linkInput && linkInput.add.length ||\n            interactive !== this._interactive ||\n            this.param('charge') !== layout.charge() ||\n            this.param('linkStrength') !== layout.linkStrength() ||\n            this.param('linkDistance') !== layout.linkDistance();\n\n  if (update || reset) {\n    // a parameter changed, so update tick-only parameters\n    layout\n      .size(this.param('size'))\n      .chargeDistance(this.param('chargeDistance'))\n      .theta(this.param('theta'))\n      .gravity(this.param('gravity'))\n      .friction(this.param('friction'));\n  }\n\n  if (!update) return; // if no more updates needed, return now\n\n  this._setup = false;\n  this._interactive = interactive;\n\n  var force = this,\n      graph = this._graph,\n      nodes = this._nodes,\n      links = this._links, a, i;\n\n  // process added nodes\n  for (a=nodeInput.add, i=0; i<a.length; ++i) {\n    nodes.push({tuple: a[i]});\n  }\n\n  // process added edges\n  if (linkInput) for (a=linkInput.add, i=0; i<a.length; ++i) {\n    // TODO add configurable source/target accessors\n    // TODO support lookup by node id\n    // TODO process 'mod' of edge source or target?\n    links.push({\n      tuple:  a[i],\n      source: nodes[a[i].source],\n      target: nodes[a[i].target]\n    });\n  }\n\n  // setup handler for force layout tick events\n  var tickHandler = !interactive ? null : function() {\n    // re-schedule the transform, force reflow\n    graph.propagate(ChangeSet.create(null, true), force);\n  };\n\n  // configure the rest of the layout\n  layout\n    .linkStrength(this.param('linkStrength'))\n    .linkDistance(this.param('linkDistance'))\n    .charge(this.param('charge'))\n    .nodes(nodes)\n    .links(links)\n    .on('tick', tickHandler)\n    .start().alpha(this.param('alpha'));\n};\n\nprototype.update = function(active) {\n  var output = this._output,\n      bound = this.param('bound'),\n      fixed = this.param('fixed'),\n      size = this.param('size'),\n      nodes = this._nodes,\n      lut = {}, id, i, n, t, x, y;\n\n  if (fixed && fixed.source) {\n    // TODO: could cache and update as needed?\n    fixed = fixed.source.values();\n    for (i=0, n=fixed.length; i<n; ++i) {\n      lut[fixed[i].id] = 1;\n    }\n  }\n\n  for (i=0; i<nodes.length; ++i) {\n    n = nodes[i];\n    t = n.tuple;\n    id = t._id;\n\n    if (active && active.id === id) {\n      n.fixed = 1;\n      if (active.update) {\n        n.x = n.px = active.x;\n        n.y = n.py = active.y;\n      }\n    } else {\n      n.fixed = lut[id] || 0;\n    }\n\n    x = bound ? Math.max(0, Math.min(n.x, size[0])) : n.x;\n    y = bound ? Math.max(0, Math.min(n.y, size[1])) : n.y;\n    Tuple.set(t, output.x, x);\n    Tuple.set(t, output.y, y);\n  }\n};\n\nmodule.exports = Force;\n\nForce.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Force transform\",\n  \"description\": \"Performs force-directed layout for network data.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"force\"]},\n    \"size\": {\n      \"description\": \"The dimensions [width, height] of this force layout.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"minItems\": 2,\n          \"maxItems\": 2,\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n\n      \"default\": [500, 500]\n    },\n    \"links\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the link (edge) data set.\"\n    },\n    \"linkDistance\": {\n      \"description\": \"Determines the length of edges, in pixels.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 20\n    },\n    \"linkStrength\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"Determines the tension of edges (the spring constant).\",\n      \"default\": 1\n    },\n    \"charge\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The strength of the charge each node exerts.\",\n      \"default\": -30\n    },\n    \"chargeDistance\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The maximum distance over which charge forces are applied.\",\n      \"default\": Infinity\n    },\n    \"iterations\": {\n      \"description\": \"The number of iterations to run the force directed layout.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 500\n    },\n    \"friction\": {\n      \"description\": \"The strength of the friction force used to stabilize the layout.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.9\n    },\n    \"theta\": {\n      \"description\": \"The theta parameter for the Barnes-Hut algorithm, which is used to compute charge forces between nodes.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.8\n    },\n    \"gravity\": {\n      \"description\": \"The strength of the pseudo-gravity force that pulls nodes towards the center of the layout area.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.1\n    },\n    \"alpha\": {\n      \"description\": \"A \\\"temperature\\\" parameter that determines how much node positions are adjusted at each step.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.1\n    },\n    \"interactive\": {\n      \"description\": \"Enables an interactive force-directed layout.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"active\": {\n      \"description\": \"A signal representing the active node.\",\n      \"$ref\": \"#/refs/signal\"\n    },\n    \"fixed\": {\n      \"description\": \"The name of a datasource containing the IDs of nodes with fixed positions.\",\n      \"type\": \"string\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"links\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Force.js\n// module id = pKLr\n// module chunks = 0","var util = require('../../util');\nvar d3_dsv = require('d3-dsv');\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3_dsv.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/dsv.js\n// module id = pYy3\n// module chunks = 0","module.exports = {\n  parse:  require('./parse'),\n  render: require('./render')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/path/index.js\n// module id = pfe9\n// module chunks = 0","var util = require('../util'),\n    time = require('../time'),\n    EPSILON = 1e-15;\n\nfunction bins(opt) {\n  if (!opt) { throw Error(\"Missing binning options.\"); }\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n\n    // increase step size if too many bins\n    while (Math.ceil(span/step) > maxb) { step *= base; }\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  if (!opt) { throw Error(\"Missing date binning options.\"); }\n\n  // find time step, then bin\n  var units = opt.utc ? time.utc : time,\n      dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/bins/bins.js\n// module id = prMK\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar encoding_1 = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar util_1 = require('../util');\nfunction initMarkConfig(mark, encoding, config) {\n    return util_1.extend(['filled', 'opacity', 'orient', 'align'].reduce(function (cfg, property) {\n        var value = config.mark[property];\n        switch (property) {\n            case 'filled':\n                if (value === undefined) {\n                    cfg[property] = mark !== mark_1.POINT && mark !== mark_1.LINE && mark !== mark_1.RULE;\n                }\n                break;\n            case 'opacity':\n                if (value === undefined) {\n                    if (util_1.contains([mark_1.POINT, mark_1.TICK, mark_1.CIRCLE, mark_1.SQUARE], mark)) {\n                        if (!encoding_1.isAggregate(encoding) || encoding_1.has(encoding, channel_1.DETAIL)) {\n                            cfg[property] = 0.7;\n                        }\n                    }\n                    if (mark === mark_1.AREA) {\n                        cfg[property] = 0.7;\n                    }\n                }\n                break;\n            case 'orient':\n                var xIsMeasure = fielddef_1.isMeasure(encoding.x) || fielddef_1.isMeasure(encoding.x2);\n                var yIsMeasure = fielddef_1.isMeasure(encoding.y) || fielddef_1.isMeasure(encoding.y2);\n                if (xIsMeasure && !yIsMeasure) {\n                    if (mark === mark_1.TICK) {\n                        cfg[property] = 'vertical';\n                    }\n                    else {\n                        cfg[property] = 'horizontal';\n                    }\n                }\n                else if (!xIsMeasure && yIsMeasure) {\n                    if (mark === mark_1.TICK) {\n                        cfg[property] = 'horizontal';\n                    }\n                    else {\n                        cfg[property] = 'vertical';\n                    }\n                }\n                break;\n            case 'align':\n                if (value === undefined) {\n                    cfg[property] = encoding_1.has(encoding, channel_1.X) ? 'center' : 'right';\n                }\n        }\n        return cfg;\n    }, {}), config.mark);\n}\nexports.initMarkConfig = initMarkConfig;\n//# sourceMappingURL=config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/config.js\n// module id = pyUU\n// module chunks = 0","var bins = require('./bins'),\n    gen  = require('../generate'),\n    type = require('../import/type'),\n    util = require('../util'),\n    stats = require('../stats');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n\n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f),\n      c = stats.count.map(values, f);\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/bins/histogram.js\n// module id = qmQ9\n// module chunks = 0","var util = require('./util');\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var items = scene.items,\n      o, opac, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac === 0) continue;\n      \n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    if (o.stroke && util.stroke(g, o, opac)) {\n      g.beginPath();\n      g.moveTo(x1, y1);\n      g.lineTo(x2, y2);\n      g.stroke();\n    }\n  }\n}\n\nfunction stroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : 1;\n  g.lineCap   = lc != null ? lc : 'butt';\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\nfunction hit(g, o, x, y) {\n  if (!g.isPointInStroke) return false;\n  stroke(g, o);\n  return g.isPointInStroke(x, y);\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick(hit)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/rule.js\n// module id = qnrb\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    df = require('vega-dataflow'),\n    Node = df.Node, // jshint ignore:line\n    Tuple = df.Tuple,\n    Deps = df.Dependencies;\n\nvar Types = {\n  INSERT: \"insert\",\n  REMOVE: \"remove\",\n  UPSERT: \"upsert\",\n  TOGGLE: \"toggle\",\n  CLEAR:  \"clear\"\n};\n\nvar EMPTY = [];\n\nfunction filter(fields, value, src, dest) {\n  var splice = true, len = fields.length, i, j, f, v;\n  for (i = src.length - 1; i >= 0; --i) {\n    for (j=0; j<len; ++j) {\n      f = fields[j];\n      v = value && f(value) || value;\n      if (f(src[i]) !== v) {\n        splice = false;\n        break;\n      }\n    }\n\n    if (splice) dest.push.apply(dest, src.splice(i, 1));\n    splice = true;\n  }\n}\n\nfunction insert(input, datum, source) {\n  var t = Tuple.ingest(datum);\n  input.add.push(t);\n  source._data.push(t);\n}\n\nfunction parseModify(model, def, ds) {\n  var signal = def.signal ? dl.field(def.signal) : null,\n      signalName  = signal ? signal[0] : null,\n      predicate   = def.predicate ? model.predicate(def.predicate.name || def.predicate) : null,\n      exprTrigger = def.test ? model.expr(def.test) : null,\n      reeval  = (predicate === null && exprTrigger === null),\n      isClear = def.type === Types.CLEAR,\n      fields  = dl.array(def.field || 'data'),\n      getters = fields.map(dl.accessor),\n      setters = fields.map(dl.mutator),\n      node = new Node(model).router(isClear);\n\n  node.evaluate = function(input) {\n    var db, sg;\n\n    if (predicate !== null) {  // TODO: predicate args\n      db = model.values(Deps.DATA, predicate.data || EMPTY);\n      sg = model.values(Deps.SIGNALS, predicate.signals || EMPTY);\n      reeval = predicate.call(predicate, {}, db, sg, model._predicates);\n    }\n\n    if (exprTrigger !== null) {\n      sg = model.values(Deps.SIGNALS, exprTrigger.globals || EMPTY);\n      reeval = exprTrigger.fn();\n    }\n\n    log.debug(input, [def.type+\"ing\", reeval]);\n    if (!reeval || (!isClear && !input.signals[signalName])) return input;\n\n    var value = signal ? model.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        t = null, add = [], rem = [], up = 0, datum;\n\n    if (dl.isObject(value)) {\n      datum = value;\n      if (!def.field) {\n        fields = dl.keys(datum);\n        getters = fields.map(dl.accessor);\n        setters = fields.map(dl.mutator);\n      }\n    } else {\n      datum = {};\n      setters.forEach(function(f) { f(datum, value); });\n    }\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples.\n    if (def.type === Types.INSERT) {\n      insert(input, datum, d);\n    } else if (def.type === Types.REMOVE) {\n      filter(getters, value, input.mod, input.rem);\n      filter(getters, value, input.add, rem);\n      filter(getters, value, d._data, rem);\n    } else if (def.type === Types.UPSERT) {\n      input.mod.forEach(function(x) {\n        var every = getters.every(function(f) {\n          return f(x) === f(datum);\n        });\n\n        if (every) up = (dl.extend(x, datum), up+1);\n      });\n\n      if (up === 0) insert(input, datum, d);\n    } else if (def.type === Types.TOGGLE) {\n      // If tuples are in mod, remove them.\n      filter(getters, value, input.mod, rem);\n      input.rem.push.apply(input.rem, rem);\n\n      // If tuples are in add, they've been added to backing data source,\n      // but no downstream operators will have seen it yet.\n      filter(getters, value, input.add, add);\n\n      if (add.length || rem.length) {\n        d._data = d._data.filter(function(x) {\n          return rem.indexOf(x) < 0 && add.indexOf(x) < 0;\n        });\n      } else {\n        // If the tuples aren't seen in the changeset, add a new tuple.\n        // Note, tuple might be in input.rem, but we ignore this and just\n        // re-add a new tuple for simplicity.\n        input.add.push(t=Tuple.ingest(datum));\n        d._data.push(t);\n      }\n    } else if (def.type === Types.CLEAR) {\n      input.rem.push.apply(input.rem, input.mod.splice(0));\n      input.add.splice(0);\n      d._data.splice(0);\n    }\n\n    fields.forEach(function(f) { input.fields[f] = 1; });\n    return input;\n  };\n\n  if (signalName) node.dependency(Deps.SIGNALS, signalName);\n\n  if (predicate) {\n    node.dependency(Deps.DATA, predicate.data);\n    node.dependency(Deps.SIGNALS, predicate.signals);\n  }\n\n  if (exprTrigger) {\n    node.dependency(Deps.SIGNALS, exprTrigger.globals);\n    node.dependency(Deps.DATA,    exprTrigger.dataSources);\n  }\n\n  return node;\n}\n\nmodule.exports = parseModify;\nparseModify.schema = {\n  \"defs\": {\n    \"modify\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"oneOf\": [{\n          \"properties\": {\n            \"type\": {\"enum\": [\n              Types.INSERT, Types.REMOVE, Types.UPSERT, Types.TOGGLE\n            ]},\n            \"signal\": {\"type\": \"string\"},\n            \"field\": {\"type\": \"string\"}\n          },\n          \"required\": [\"type\", \"signal\"]\n        }, {\n          \"properties\": {\n            \"type\": {\"enum\": [Types.CLEAR]},\n            \"predicate\": {\"type\": \"string\"}  // TODO predicate args\n          },\n          \"required\": [\"type\", \"predicate\"]\n        },\n        {\n          \"properties\": {\n            \"type\": {\"enum\": [Types.CLEAR]},\n            \"test\": {\"type\": \"string\"}\n          },\n          \"required\": [\"type\", \"test\"]\n        }]\n      }\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/modify.js\n// module id = r7he\n// module chunks = 0","var Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    sourceX:  {type: 'field', default: '_source.layout_x'},\n    sourceY:  {type: 'field', default: '_source.layout_y'},\n    targetX:  {type: 'field', default: '_target.layout_x'},\n    targetY:  {type: 'field', default: '_target.layout_y'},\n    tension:  {type: 'value', default: 0.2},\n    shape:    {type: 'value', default: 'line'}\n  });\n\n  this._output = {'path': 'layout_path'};\n  return this.mutates(true);\n}\n\nvar prototype = (LinkPath.prototype = Object.create(Transform.prototype));\nprototype.constructor = LinkPath;\n\nfunction line(sx, sy, tx, ty) {\n  return 'M' + sx + ',' + sy +\n         'L' + tx + ',' + ty;\n}\n\nfunction curve(sx, sy, tx, ty, tension) {\n  var dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return 'M' + sx + ',' + sy +\n         'C' + (sx+ix) + ',' + (sy+iy) +\n         ' ' + (tx+iy) + ',' + (ty-ix) +\n         ' ' + tx + ',' + ty;\n}\n\nfunction cornerX(sx, sy, tx, ty) {\n  return 'M' + sx + ',' + sy +\n         'V' + ty + 'H' + tx;\n}\n\nfunction cornerY(sx, sy, tx, ty) {\n  return 'M' + sx + ',' + sy +\n         'H' + tx + 'V' + ty;\n}\n\nfunction cornerR(sa, sr, ta, tr) {\n  var sc = Math.cos(sa),\n      ss = Math.sin(sa),\n      tc = Math.cos(ta),\n      ts = Math.sin(ta),\n      sf = Math.abs(ta - sa) > Math.PI ? ta <= sa : ta > sa;\n  return 'M' + (sr*sc) + ',' + (sr*ss) +\n         'A' + sr + ',' + sr + ' 0 0,' + (sf?1:0) +\n         ' ' + (sr*tc) + ',' + (sr*ts) +\n         'L' + (tr*tc) + ',' + (tr*ts);\n}\n\nfunction diagonalX(sx, sy, tx, ty) {\n  var m = (sx + tx) / 2;\n  return 'M' + sx + ',' + sy +\n         'C' + m  + ',' + sy +\n         ' ' + m  + ',' + ty +\n         ' ' + tx + ',' + ty;\n}\n\nfunction diagonalY(sx, sy, tx, ty) {\n  var m = (sy + ty) / 2;\n  return 'M' + sx + ',' + sy +\n         'C' + sx + ',' + m +\n         ' ' + tx + ',' + m +\n         ' ' + tx + ',' + ty;\n}\n\nfunction diagonalR(sa, sr, ta, tr) {\n  var sc = Math.cos(sa),\n      ss = Math.sin(sa),\n      tc = Math.cos(ta),\n      ts = Math.sin(ta),\n      mr = (sr + tr) / 2;\n  return 'M' + (sr*sc) + ',' + (sr*ss) +\n         'C' + (mr*sc) + ',' + (mr*ss) +\n         ' ' + (mr*tc) + ',' + (mr*ts) +\n         ' ' + (tr*tc) + ',' + (tr*ts);\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  cornerX:   cornerX,\n  cornerY:   cornerY,\n  cornerR:   cornerR,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY,\n  diagonalR: diagonalR\n};\n\nprototype.transform = function(input) {\n  log.debug(input, ['linkpath']);\n\n  var output = this._output,\n      shape = shapes[this.param('shape')] || shapes.line,\n      sourceX = this.param('sourceX').accessor,\n      sourceY = this.param('sourceY').accessor,\n      targetX = this.param('targetX').accessor,\n      targetY = this.param('targetY').accessor,\n      tension = this.param('tension');\n\n  function set(t) {\n    var path = shape(sourceX(t), sourceY(t), targetX(t), targetY(t), tension);\n    Tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;\n\nLinkPath.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"LinkPath transform\",\n  \"description\": \"Computes a path definition for connecting nodes within a node-link network or tree diagram.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"linkpath\"]},\n    \"sourceX\": {\n      \"description\": \"The data field that references the source x-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_source\"\n    },\n    \"sourceY\": {\n      \"description\": \"The data field that references the source y-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_source\"\n    },\n    \"targetX\": {\n      \"description\": \"The data field that references the target x-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_target\"\n    },\n    \"targetY\": {\n      \"description\": \"The data field that references the target y-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_target\"\n    },\n    \"tension\": {\n      \"description\": \"A tension parameter for the \\\"tightness\\\" of \\\"curve\\\"-shaped links.\",\n      \"oneOf\": [\n        {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"maximum\": 1\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0.2\n    },\n    \"shape\": {\n      \"description\": \"The path shape to use\",\n      \"oneOf\": [\n        {\"enum\": [\"line\", \"curve\", \"cornerX\", \"cornerY\", \"cornerR\", \"diagonalX\", \"diagonalY\", \"diagonalR\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"line\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"path\": {\"type\": \"string\", \"default\": \"layout_path\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/LinkPath.js\n// module id = rCVn\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar point;\n(function (point) {\n    function markType() {\n        return 'symbol';\n    }\n    point.markType = markType;\n    function properties(model, fixedShape) {\n        var p = {};\n        var config = model.config();\n        p.x = x(model.encoding().x, model.scaleName(channel_1.X), config);\n        p.y = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        p.size = size(model.encoding().size, model.scaleName(channel_1.SIZE), model.scale(channel_1.SIZE), config);\n        p.shape = shape(model.encoding().shape, model.scaleName(channel_1.SHAPE), model.scale(channel_1.SHAPE), config, fixedShape);\n        common_1.applyColorAndOpacity(p, model);\n        return p;\n    }\n    point.properties = properties;\n    function x(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function y(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function size(fieldDef, scaleName, scale, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { scaleType: scale.type })\n                };\n            }\n            else if (fieldDef.value !== undefined) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.mark.size };\n    }\n    function shape(fieldDef, scaleName, scale, config, fixedShape) {\n        if (fixedShape) {\n            return { value: fixedShape };\n        }\n        else if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { scaleType: scale.type })\n                };\n            }\n            else if (fieldDef.value) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.mark.shape };\n    }\n})(point = exports.point || (exports.point = {}));\nvar circle;\n(function (circle) {\n    function markType() {\n        return 'symbol';\n    }\n    circle.markType = markType;\n    function properties(model) {\n        return point.properties(model, 'circle');\n    }\n    circle.properties = properties;\n    function labels(model) {\n        return undefined;\n    }\n    circle.labels = labels;\n})(circle = exports.circle || (exports.circle = {}));\nvar square;\n(function (square) {\n    function markType() {\n        return 'symbol';\n    }\n    square.markType = markType;\n    function properties(model) {\n        return point.properties(model, 'square');\n    }\n    square.properties = properties;\n    function labels(model) {\n        return undefined;\n    }\n    square.labels = labels;\n})(square = exports.square || (exports.square = {}));\n//# sourceMappingURL=point.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/point.js\n// module id = rKP5\n// module chunks = 0","var d3 = require('d3'),\n    $ = require('vega').util.mutator;\n\nmodule.exports = {\n  init: function(el, param, spec) {\n    return (rewrite(param, spec), handle(el, param));\n  },\n  bind: function(param, view) {\n    param.dom.forEach(function(el) { el.__vega__ = view; });\n    view.onSignal(param.dom[0].name, function(k, v) { param.set(v); });\n  }\n};\n\n// spec re-write\n\nfunction rewrite(param, spec) {\n  // add signal to top-level if not defined\n  var sg = spec.signals || (spec.signals = []);\n  for (var i=0; i<sg.length; ++i) {\n    if (sg[i].name === param.signal) break;\n  }\n  if (i === sg.length) {\n    sg.push({\n      name: param.signal,\n      init: param.value\n    });\n  }\n\n  // replace values for re-write entries\n  (param.rewrite || []).forEach(function(path) {\n    $(path)(spec, {signal: param.signal});\n  });\n}\n\n// HTML output handlers\n\nfunction handle(el, param) {\n  var p = el.append('div')\n    .attr('class', 'vega-param');\n\n  p.append('span')\n    .attr('class', 'vega-param-name')\n    .text(param.name || param.signal);\n\n  var input = form;\n  switch (param.type) {\n    case 'checkbox': input = checkbox; break;\n    case 'select':   input = select; break;\n    case 'radio':    input = radio; break;\n    case 'range':    input = range; break;\n  }\n\n  return input(p, param);\n}\n\nfunction form(el, param) {\n  var fm = el.append('input')\n    .on('input', update);\n\n  for (var key in param) {\n    if (key === 'signal' || key === 'rewrite') continue;\n    fm.attr(key, param[key]);\n  }\n  fm.attr('name', param.signal);\n\n  var node = fm.node();\n  return {\n    dom: [node],\n    set: function(value) { node.value = value; }\n  };\n}\n\nfunction checkbox(el, param) {\n  var cb = el.append('input')\n    .on('change', function() { update.call(this, this.checked); })\n    .attr('type', 'checkbox')\n    .attr('name', param.signal)\n    .attr('checked', param.value || null)\n    .node();\n\n  return {\n    dom: [cb],\n    set: function(value) { cb.checked = !!value || null; }\n  };\n}\n\nfunction select(el, param) {\n  var sl = el.append('select')\n    .attr('name', param.signal)\n    .on('change', function() {\n      update.call(this, this.options[this.selectedIndex].__data__);\n    });\n\n  sl.selectAll('option')\n    .data(param.options)\n   .enter().append('option')\n    .attr('value', vg.util.identity)\n    .attr('selected', function(x) { return x === param.value || null; })\n    .text(vg.util.identity);\n  \n  var node = sl.node();\n  return {\n    dom: [node],\n    set: function(value) {\n      var idx = param.options.indexOf(value);\n      node.selectedIndex = idx;\n    }\n  };\n}\n\nfunction radio(el, param) {\n  var rg = el.append('span')\n    .attr('class', 'vega-param-radio');\n\n  var nodes = param.options.map(function(option) {\n    var id = 'vega-option-' + param.signal + '-' + option;\n\n    var rb = rg.append('input')\n      .datum(option)\n      .on('change', update)\n      .attr('id', id)\n      .attr('type', 'radio')\n      .attr('name', param.signal)\n      .attr('value', option)\n      .attr('checked', option === param.value || null);\n\n    rg.append('label')\n      .attr('for', id)\n      .text(option);\n\n    return rb.node();\n  });\n\n  return {\n    dom: nodes,\n    set: function(value) {\n      for (var i=0; i<nodes.length; ++i) {\n        if (nodes[i].value === value) {\n          nodes[i].checked = true;\n        }\n      }\n    }\n  };\n}\n\nfunction range(el, param) {\n  var val = param.value !== undefined ? param.value :\n    ((+param.max) + (+param.min)) / 2;\n\n  var rn = el.append('input')\n    .on('input', function() {\n      lbl.text(this.value);\n      update.call(this, +this.value);\n    })\n    .attr('type', 'range')\n    .attr('name', param.signal)\n    .attr('value', val)\n    .attr('min', param.min)\n    .attr('max', param.max)\n    .attr('step', param.step || vg.util.bins({\n      min: param.min,\n      max: param.max,\n      maxbins: 100\n    }).step);\n\n  var lbl = el.append('label')\n    .attr('class', 'vega-range')\n    .text(val);\n\n  var node = rn.node();\n  return {\n    dom: [node],\n    set: function(value) {\n      node.value = value;\n      lbl.text(value);\n    }\n  };\n}\n\nfunction update(value) {\n  if (value === undefined) value = this.__data__ || d3.event.target.value;\n  this.__vega__.signal(this.name, value).update();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-embed/src/parameter.js\n// module id = rVSZ\n// module chunks = 0","var text = require('../../util/text'),\n    SVG = require('../../util/svg'),\n    symbolTypes = SVG.symbolTypes,\n    textAlign = SVG.textAlign,\n    path = SVG.path;\n\nfunction translateItem(o) {\n  return translate(o.x || 0, o.y || 0);\n}\n\nfunction translate(x, y) {\n  return 'translate(' + x + ',' + y + ')';\n}\n\nmodule.exports = {\n  arc: {\n    tag:  'path',\n    type: 'arc',\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('d', path.arc(o));\n    }\n  },\n  area: {\n    tag:  'path',\n    type: 'area',\n    nest: true,\n    attr: function(emit, o) {\n      var items = o.mark.items;\n      if (items.length) emit('d', path.area(items));\n    }\n  },\n  group: {\n    tag:  'g',\n    type: 'group',\n    attr: function(emit, o, renderer) {\n      var id = null, defs, c;\n      emit('transform', translateItem(o));\n      if (o.clip) {\n        defs = renderer._defs;\n        id = o.clip_id || (o.clip_id = 'clip' + defs.clip_id++);\n        c = defs.clipping[id] || (defs.clipping[id] = {id: id});\n        c.width = o.width || 0;\n        c.height = o.height || 0;\n      }\n      emit('clip-path', id ? ('url(#' + id + ')') : null);\n    },\n    background: function(emit, o) {\n      emit('class', 'background');\n      emit('width', o.width || 0);\n      emit('height', o.height || 0);\n    }\n  },\n  image: {\n    tag:  'image',\n    type: 'image',\n    attr: function(emit, o, renderer) {\n      var x = o.x || 0,\n          y = o.y || 0,\n          w = o.width || 0,\n          h = o.height || 0,\n          url = renderer.imageURL(o.url);\n\n      x = x - (o.align === 'center' ? w/2 : o.align === 'right' ? w : 0);\n      y = y - (o.baseline === 'middle' ? h/2 : o.baseline === 'bottom' ? h : 0);\n\n      emit('href', url, 'http://www.w3.org/1999/xlink', 'xlink:href');\n      emit('transform', translate(x, y));\n      emit('width', w);\n      emit('height', h);\n    }\n  },\n  line: {\n    tag:  'path',\n    type: 'line',\n    nest: true,\n    attr: function(emit, o) {\n      var items = o.mark.items;\n      if (items.length) emit('d', path.line(items));\n    }\n  },\n  path: {\n    tag:  'path',\n    type: 'path',\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('d', o.path);\n    }\n  },\n  rect: {\n    tag:  'rect',\n    type: 'rect',\n    nest: false,\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('width', o.width || 0);\n      emit('height', o.height || 0);\n    }\n  },\n  rule: {\n    tag:  'line',\n    type: 'rule',\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('x2', o.x2 != null ? o.x2 - (o.x||0) : 0);\n      emit('y2', o.y2 != null ? o.y2 - (o.y||0) : 0);\n    }\n  },\n  symbol: {\n    tag:  'path',\n    type: 'symbol',\n    attr: function(emit, o) {\n      var pathStr = !o.shape || symbolTypes[o.shape] ?\n        path.symbol(o) : path.resize(o.shape, o.size);\n\n      emit('transform', translateItem(o));\n      emit('d', pathStr);\n    }\n  },\n  text: {\n    tag:  'text',\n    type: 'text',\n    nest: false,\n    attr: function(emit, o) {\n      var dx = (o.dx || 0),\n          dy = (o.dy || 0) + text.offset(o),\n          x = (o.x || 0),\n          y = (o.y || 0),\n          a = o.angle || 0,\n          r = o.radius || 0, t;\n\n      if (r) {\n        t = (o.theta || 0) - Math.PI/2;\n        x += r * Math.cos(t);\n        y += r * Math.sin(t);\n      }\n\n      emit('text-anchor', textAlign[o.align] || 'start');\n\n      if (a) {\n        t = translate(x, y) + ' rotate('+a+')';\n        if (dx || dy) t += ' ' + translate(dx, dy);\n      } else {\n        t = translate(x+dx, y+dy);\n      }\n      emit('transform', t);\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/svg/marks.js\n// module id = rfWk\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    scene = require('vega-scenegraph'),\n    Node = df.Node, // jshint ignore:line\n    log = require('vega-logging'),\n    bound = scene.bound,\n    Bounds = scene.Bounds,\n    Encoder = require('./Encoder');\n\nfunction Bounder(graph, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, graph)\n    .router(true)\n    .reflows(true)\n    .mutates(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  log.debug(input, ['bounds', this._mark.marktype]);\n\n  var mark  = this._mark,\n      type  = mark.marktype,\n      isGrp = type === 'group',\n      items = mark.items,\n      hasLegends = dl.array(mark.def.legends).length > 0,\n      bounds  = mark.bounds,\n      rebound = !bounds || input.rem.length,\n      i, ilen, j, jlen, group, legend;\n\n  if (type === 'line' || type === 'area') {\n    bound.mark(mark, null, isGrp && !hasLegends);\n  } else {\n    input.add.forEach(function(item) {\n      bound.item(item);\n      rebound = rebound || (bounds && !bounds.encloses(item.bounds));\n    });\n\n    input.mod.forEach(function(item) {\n      rebound = rebound || (bounds && bounds.alignsWith(item.bounds));\n      bound.item(item);\n    });\n\n    if (rebound) {\n      bounds = mark.bounds && mark.bounds.clear() || (mark.bounds = new Bounds());\n      for (i=0, ilen=items.length; i<ilen; ++i) bounds.union(items[i].bounds);\n    }\n  }\n\n  if (isGrp && hasLegends) {\n    for (i=0, ilen=items.length; i<ilen; ++i) {\n      group = items[i];\n      group._legendPositions = null;\n      for (j=0, jlen=group.legendItems.length; j<jlen; ++j) {\n        legend = group.legendItems[j];\n        Encoder.update(this._graph, input.trans, 'legendPosition', legend.items, input.dirty);\n        bound.mark(legend, null, false);\n      }\n    }\n\n    bound.mark(mark, null, true);\n  }\n\n  return df.ChangeSet.create(input, true);\n};\n\nmodule.exports = Bounder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Bounder.js\n// module id = rnWk\n// module chunks = 0","// create a new DOM element\nfunction create(doc, tag, ns) {\n  return ns ? doc.createElementNS(ns, tag) : doc.createElement(tag);\n}\n\n// remove element from DOM\n// recursively remove parent elements if empty\nfunction remove(el) {\n  if (!el) return;\n  var p = el.parentNode;\n  if (p) {\n    p.removeChild(el);\n    if (!p.childNodes || !p.childNodes.length) remove(p);\n  }\n}\n\nmodule.exports = {\n  // find first child element with matching tag\n  find: function(el, tag) {\n    tag = tag.toLowerCase();\n    for (var i=0, n=el.childNodes.length; i<n; ++i) {\n      if (el.childNodes[i].tagName.toLowerCase() === tag) {\n        return el.childNodes[i];\n      }\n    }\n  },\n  // retrieve child element at given index\n  // create & insert if doesn't exist or if tag/className do not match\n  child: function(el, index, tag, ns, className, insert) {\n    var a, b;\n    a = b = el.childNodes[index];\n    if (!a || insert ||\n        a.tagName.toLowerCase() !== tag.toLowerCase() ||\n        className && a.getAttribute('class') != className) {\n      a = create(el.ownerDocument, tag, ns);\n      el.insertBefore(a, b || null);\n      if (className) a.setAttribute('class', className);\n    }\n    return a;\n  },\n  // remove all child elements at or above the given index\n  clear: function(el, index) {\n    var curr = el.childNodes.length;\n    while (curr > index) {\n      el.removeChild(el.childNodes[--curr]);\n    }\n    return el;\n  },\n  remove: remove,\n  // generate css class name for mark\n  cssClass: function(mark) {\n    return 'mark-' + mark.marktype + (mark.name ? ' '+mark.name : '');\n  },\n  // generate string for an opening xml tag\n  // tag: the name of the xml tag\n  // attr: hash of attribute name-value pairs to include\n  // raw: additional raw string to include in tag markup\n  openTag: function(tag, attr, raw) {\n    var s = '<' + tag, key, val;\n    if (attr) {\n      for (key in attr) {\n        val = attr[key];\n        if (val != null) {\n          s += ' ' + key + '=\"' + val + '\"';\n        }\n      }\n    }\n    if (raw) s += ' ' + raw;\n    return s + '>';\n  },\n  // generate string for closing xml tag\n  // tag: the name of the xml tag\n  closeTag: function(tag) {\n    return '</' + tag + '>';\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/dom.js\n// module id = sV93\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Geo = require('./Geo'),\n    Transform = require('./Transform');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    field: {type: 'field', default: null},\n  });\n\n  this._output = {\n    'path': 'layout_path'\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (GeoPath.prototype = Object.create(Transform.prototype));\nprototype.constructor = GeoPath;\n\nprototype.transform = function(input) {\n  log.debug(input, ['geopath']);\n\n  var output = this._output,\n      geojson = this.param('field').accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    Tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n\nGeoPath.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"GeoPath transform\",\n  \"description\": \"Creates paths for geographic regions, such as countries, states and counties.\",\n  \"type\": \"object\",\n  \"properties\": dl.extend({\n    \"type\": {\"enum\": [\"geopath\"]},\n    \"field\": {\n      \"description\": \"The data field containing GeoJSON Feature data.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"path\": {\"type\": \"string\", \"default\": \"layout_path\"}\n      },\n      \"additionalProperties\": false\n    }\n  }, Geo.baseSchema),\n  \"required\": [\"type\"],\n  \"additionalProperties\": false\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/GeoPath.js\n// module id = snBf\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar DEFAULT_NULL_FILTERS = {\n    nominal: false,\n    ordinal: false,\n    quantitative: true,\n    temporal: true\n};\nvar nullFilter;\n(function (nullFilter) {\n    function parse(model) {\n        var filterNull = model.transform().filterNull;\n        return model.reduce(function (aggregator, fieldDef) {\n            if (filterNull ||\n                (filterNull === undefined && fieldDef.field && fieldDef.field !== '*' && DEFAULT_NULL_FILTERS[fieldDef.type])) {\n                aggregator[fieldDef.field] = true;\n            }\n            else {\n                aggregator[fieldDef.field] = false;\n            }\n            return aggregator;\n        }, {});\n    }\n    nullFilter.parseUnit = parse;\n    function parseFacet(model) {\n        var nullFilterComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(nullFilterComponent, childDataComponent.nullFilter);\n            delete childDataComponent.nullFilter;\n        }\n        return nullFilterComponent;\n    }\n    nullFilter.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var nullFilterComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && !util_1.differ(childDataComponent.nullFilter, nullFilterComponent)) {\n                util_1.extend(nullFilterComponent, childDataComponent.nullFilter);\n                delete childDataComponent.nullFilter;\n            }\n        });\n        return nullFilterComponent;\n    }\n    nullFilter.parseLayer = parseLayer;\n    function assemble(component) {\n        var filteredFields = util_1.keys(component.nullFilter).filter(function (field) {\n            return component.nullFilter[field];\n        });\n        return filteredFields.length > 0 ?\n            [{\n                    type: 'filter',\n                    test: filteredFields.map(function (fieldName) {\n                        return '(datum.' + fieldName + '!==null' +\n                            ' && !isNaN(datum.' + fieldName + '))';\n                    }).join(' && ')\n                }] : [];\n    }\n    nullFilter.assemble = assemble;\n})(nullFilter = exports.nullFilter || (exports.nullFilter = {}));\n//# sourceMappingURL=nullfilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/nullfilter.js\n// module id = t3C9\n// module chunks = 0","var util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this.clear();\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  this._count = true;\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as, get;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      if (op !== 'count') this._count = false;\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    get = f.get && util.$(f.get) ||\n      (f.name === '*' ? util.identity : util.$(f.name));\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        get,          // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this.clear();\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._cellkey = function(x) {\n  var d = this._dims,\n      n = d.length, i,\n      k = String(d[0].get(x));\n  for (i=1; i<n; ++i) {\n    k += '|' + d[i].get(x);\n  }\n  return k;\n};\n\nproto._cell = function(x) {\n  var key = this._dims.length ? this._cellkey(x) : '';\n  return this._cells[key] || (this._cells[key] = this._newcell(x, key));\n};\n\nproto._newcell = function(x, key) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x, key),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for (i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto._add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.add(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].add(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n  if (this._on_add) this._on_add(x, cell);\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.rem(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].rem(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n  if (this._on_rem) this._on_rem(x, cell);\n};\n\nproto._mod = function(curr, prev) {\n  var cell0 = this._cell(prev),\n      cell1 = this._cell(curr),\n      aggr = this._aggr, i;\n\n  if (cell0 !== cell1) {\n    cell0.num -= 1;\n    cell1.num += 1;\n    if (cell0.collect) cell0.data.rem(prev);\n    if (cell1.collect) cell1.data.add(curr);\n  } else if (cell0.collect && !util.isObject(curr)) {\n    cell0.data.rem(prev);\n    cell0.data.add(curr);\n  }\n\n  for (i=0; i<aggr.length; ++i) {\n    cell0.aggs[aggr[i].name].rem(prev);\n    cell1.aggs[aggr[i].name].add(curr);\n  }\n  cell0.flag |= Flags.MOD_CELL;\n  cell1.flag |= Flags.MOD_CELL;\n  if (this._on_mod) this._on_mod(curr, prev, cell0, cell1);\n};\n\nproto._markMod = function(x) {\n  var cell0 = this._cell(x);\n  cell0.flag |= Flags.MOD_CELL;\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      // consolidate collector values\n      if (cell.collect) {\n        cell.data.values();\n      }\n      // update tuple properties\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      // add output tuple\n      result.push(cell.tuple);\n    } else {\n      delete this._cells[k];\n    }\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return result;\n};\n\nproto.changes = function(output) {\n  var changes = output || {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // consolidate collector values\n    if (cell.collect) {\n      cell.data.values();\n    }\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      changes.rem.push(cell.tuple); // if (flag === Flags.MOD_CELL) { ??\n      delete this._cells[k];\n      if (this._on_drop) this._on_drop(cell);\n    } else {\n      if (this._on_keep) this._on_keep(cell);\n      if (flag & Flags.ADD_CELL) {\n        changes.add.push(cell.tuple);\n      } else if (flag & Flags.MOD_CELL) {\n        changes.mod.push(cell.tuple);\n      }\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  this._consolidate();\n  for (var i=0; i<input.length; ++i) {\n    this._add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this._rem(input[i]);\n  }\n  this._rems = true;\n  return this;\n};\n\n// consolidate removals\nproto._consolidate = function() {\n  if (!this._rems) return;\n  for (var k in this._cells) {\n    if (this._cells[k].collect) {\n      this._cells[k].data.values();\n    }\n  }\n  this._rems = false;\n};\n\nmodule.exports = Aggregator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/aggregator.js\n// module id = tGq9\n// module chunks = 0","var util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\n\nvar stats = module.exports;\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the geometric mean of an array of numbers.\nstats.mean.geometric = function(values, f) {\n  f = util.$(f);\n  var mean = 1, c, n, v, i;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v <= 0) {\n        throw Error(\"Geometric mean only defined for positive values.\");\n      }\n      mean *= v;\n      ++c;\n    }\n  }\n  mean = c > 0 ? Math.pow(mean, 1/c) : 0;\n  return mean;\n};\n\n// Compute the harmonic mean of an array of numbers.\nstats.mean.harmonic = function(values, f) {\n  f = util.$(f);\n  var mean = 0, c, n, v, i;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      mean += 1/v;\n      ++c;\n    }\n  }\n  return c / mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length < 2) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (v === v) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (v === v) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Compute the Cohen's d effect size between two arrays of numbers.\nstats.cohensd = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      x1 = stats.mean(X),\n      x2 = stats.mean(Y),\n      n1 = stats.count.valid(X),\n      n2 = stats.count.valid(Y);\n\n  if ((n1+n2-2) <= 0) {\n    // if both arrays are size 1, or one is empty, there's no effect size\n    return 0;\n  }\n  // pool standard deviation\n  var s1 = stats.variance(X),\n      s2 = stats.variance(Y),\n      s = Math.sqrt((((n1-1)*s1) + ((n2-1)*s2)) / (n1+n2-2));\n  // if there is no variance, there's no effect size\n  return s===0 ? 0 : (x1 - x2) / s;\n};\n\n// Computes the covariance between two arrays of numbers\nstats.covariance = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n = X.length,\n      xm = stats.mean(X),\n      ym = stats.mean(Y),\n      sum = 0, c = 0, i, x, y, vx, vy;\n\n  if (n !== Y.length) {\n    throw Error('Input lengths must match.');\n  }\n\n  for (i=0; i<n; ++i) {\n    x = X[i]; vx = util.isValid(x);\n    y = Y[i]; vy = util.isValid(y);\n    if (vx && vy) {\n      sum += (x-xm) * (y-ym);\n      ++c;\n    } else if (vx || vy) {\n      throw Error('Valid values must align.');\n    }\n  }\n  return sum / (c-1);\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, a) : stats.rank(values),\n      rb = b ? stats.rank(values, b) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Simple linear regression.\n// Returns a \"fit\" object with slope (m), intercept (b),\n// r value (R), and sum-squared residual error (rss).\nstats.linearRegression = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n = X.length,\n      xy = stats.covariance(X, Y), // will throw err if valid vals don't align\n      sx = stats.stdev(X),\n      sy = stats.stdev(Y),\n      slope = xy / (sx*sx),\n      icept = stats.mean(Y) - slope * stats.mean(X),\n      fit = {slope: slope, intercept: icept, R: xy / (sx*sy), rss: 0},\n      res, i;\n\n  for (i=0; i<n; ++i) {\n    if (util.isValid(X[i]) && util.isValid(Y[i])) {\n      res = (slope*X[i] + icept) - Y[i];\n      fit.rss += res * res;\n    }\n  }\n\n  return fit;\n};\n\n// Namespace for bootstrap\nstats.bootstrap = {};\n\n// Construct a bootstrapped confidence interval at a given percentile level\n// Arguments are an array, an optional n (defaults to 1000),\n//  an optional alpha (defaults to 0.05), and an optional smoothing parameter\nstats.bootstrap.ci = function(values, a, b, c, d) {\n  var X, N, alpha, smooth, bs, means, i;\n  if (util.isFunction(a) || util.isString(a)) {\n    X = values.map(util.$(a));\n    N = b;\n    alpha = c;\n    smooth = d;\n  } else {\n    X = values;\n    N = a;\n    alpha = b;\n    smooth = c;\n  }\n  N = N ? +N : 1000;\n  alpha = alpha || 0.05;\n\n  bs = gen.random.bootstrap(X, smooth);\n  for (i=0, means = Array(N); i<N; ++i) {\n    means[i] = stats.mean(bs.samples(X.length));\n  }\n  means.sort(util.numcmp);\n  return [\n    stats.quantile(means, alpha/2),\n    stats.quantile(means, 1-(alpha/2))\n  ];\n};\n\n// Namespace for z-tests\nstats.z = {};\n\n// Construct a z-confidence interval at a given significance level\n// Arguments are an array and an optional alpha (defaults to 0.05).\nstats.z.ci = function(values, a, b) {\n  var X = values, alpha = a;\n  if (util.isFunction(a) || util.isString(a)) {\n    X = values.map(util.$(a));\n    alpha = b;\n  }\n  alpha = alpha || 0.05;\n\n  var z = alpha===0.05 ? 1.96 : gen.random.normal(0, 1).icdf(1-(alpha/2)),\n      mu = stats.mean(X),\n      SE = stats.stdev(X) / Math.sqrt(stats.count.valid(X));\n  return [mu - (z*SE), mu + (z*SE)];\n};\n\n// Perform a z-test of means. Returns the p-value.\n// If a single array is provided, performs a one-sample location test.\n// If two arrays or a table and two accessors are provided, performs\n// a two-sample location test. A paired test is performed if specified\n// by the options hash.\n// The options hash format is: {paired: boolean, nullh: number}.\n// http://en.wikipedia.org/wiki/Z-test\n// http://en.wikipedia.org/wiki/Paired_difference_test\nstats.z.test = function(values, a, b, opt) {\n  if (util.isFunction(b) || util.isString(b)) { // table and accessors\n    return (opt && opt.paired ? ztestP : ztest2)(opt, values, a, b);\n  } else if (util.isArray(a)) { // two arrays\n    return (b && b.paired ? ztestP : ztest2)(b, values, a);\n  } else if (util.isFunction(a) || util.isString(a)) {\n    return ztest1(b, values, a); // table and accessor\n  } else {\n    return ztest1(a, values); // one array\n  }\n};\n\n// Perform a z-test of means. Returns the p-value.\n// Assuming we have a list of values, and a null hypothesis. If no null\n// hypothesis, assume our null hypothesis is mu=0.\nfunction ztest1(opt, X, f) {\n  var nullH = opt && opt.nullh || 0,\n      gaussian = gen.random.normal(0, 1),\n      mu = stats.mean(X,f),\n      SE = stats.stdev(X,f) / Math.sqrt(stats.count.valid(X,f));\n\n  if (SE===0) {\n    // Test not well defined when standard error is 0.\n    return (mu - nullH) === 0 ? 1 : 0;\n  }\n  // Two-sided, so twice the one-sided cdf.\n  var z = (mu - nullH) / SE;\n  return 2 * gaussian.cdf(-Math.abs(z));\n}\n\n// Perform a two sample paired z-test of means. Returns the p-value.\nfunction ztestP(opt, values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n1 = stats.count(X),\n      n2 = stats.count(Y),\n      diffs = Array(), i;\n\n  if (n1 !== n2) {\n    throw Error('Array lengths must match.');\n  }\n  for (i=0; i<n1; ++i) {\n    // Only valid differences should contribute to the test statistic\n    if (util.isValid(X[i]) && util.isValid(Y[i])) {\n      diffs.push(X[i] - Y[i]);\n    }\n  }\n  return stats.z.test(diffs, opt && opt.nullh || 0);\n}\n\n// Perform a two sample z-test of means. Returns the p-value.\nfunction ztest2(opt, values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n1 = stats.count.valid(X),\n      n2 = stats.count.valid(Y),\n      gaussian = gen.random.normal(0, 1),\n      meanDiff = stats.mean(X) - stats.mean(Y) - (opt && opt.nullh || 0),\n      SE = Math.sqrt(stats.variance(X)/n1 + stats.variance(Y)/n2);\n\n  if (SE===0) {\n    // Not well defined when pooled standard error is 0.\n    return meanDiff===0 ? 1 : 0;\n  }\n  // Two-tailed, so twice the one-sided cdf.\n  var z = meanDiff / SE;\n  return 2 * gaussian.cdf(-Math.abs(z));\n}\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance]\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/stats.js\n// module id = uHQN\n// module chunks = 0","var dl = require('datalib'),\n    u  = {};\n\ndl.extend(u, require('./format'));\nmodule.exports = dl.extend(u, dl);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/util/index.js\n// module id = v0Fq\n// module chunks = 0","var lgnd = require('../scene/legend');\n\nfunction parseLegends(model, spec, legends, group) {\n  (spec || []).forEach(function(def, index) {\n    legends[index] = legends[index] || lgnd(model);\n    parseLegend(def, index, legends[index], group);\n  });\n}\n\nfunction parseLegend(def, index, legend, group) {\n  // legend scales\n  legend.size   (def.size    ? group.scale(def.size)    : null);\n  legend.shape  (def.shape   ? group.scale(def.shape)   : null);\n  legend.fill   (def.fill    ? group.scale(def.fill)    : null);\n  legend.stroke (def.stroke  ? group.scale(def.stroke)  : null);\n  legend.opacity(def.opacity ? group.scale(def.opacity) : null);\n\n  // legend orientation\n  if (def.orient) legend.orient(def.orient);\n\n  // legend offset\n  if (def.offset != null) legend.offset(def.offset);\n\n  // legend title\n  legend.title(def.title || null);\n\n  // legend values\n  legend.values(def.values || null);\n\n  // legend label formatting\n  legend.format(def.format !== undefined ? def.format : null);\n  legend.formatType(def.formatType || null);\n\n  // style properties\n  var p = def.properties;\n  legend.titleProperties(p && p.title || {});\n  legend.labelProperties(p && p.labels || {});\n  legend.legendProperties(p && p.legend || {});\n  legend.symbolProperties(p && p.symbols || {});\n  legend.gradientProperties(p && p.gradient || {});\n}\n\nmodule.exports = parseLegends;\n\nparseLegends.schema = {\n  \"defs\": {\n    \"legend\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"size\": {\"type\": \"string\"},\n        \"shape\": {\"type\": \"string\"},\n        \"fill\": {\"type\": \"string\"},\n        \"stroke\": {\"type\": \"string\"},\n        \"opacity\": {\"type\": \"string\"},\n        \"orient\": {\"enum\": [\"left\", \"right\"], \"default\": \"right\"},\n        \"offset\": {\"type\": \"number\"},\n        \"title\": {\"type\": \"string\"},\n        \"values\": {\"type\": \"array\"},\n        \"format\": {\"type\": \"string\"},\n        \"formatType\": {\"enum\": [\"time\", \"utc\", \"string\", \"number\"]},\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"title\": {\"$ref\": \"#/defs/propset\"},\n            \"labels\": {\"$ref\": \"#/defs/propset\"},\n            \"legend\": {\"$ref\": \"#/defs/propset\"},\n            \"symbols\": {\"$ref\": \"#/defs/propset\"},\n            \"gradient\": {\"$ref\": \"#/defs/propset\"}\n          },\n          \"additionalProperties\": false\n        }\n      },\n      \"additionalProperties\": false,\n      \"anyOf\": [\n        {\"required\": [\"size\"]},\n        {\"required\": [\"shape\"]},\n        {\"required\": [\"fill\"]},\n        {\"required\": [\"stroke\"]},\n        {\"required\": [\"opacity\"]}\n      ]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/legends.js\n// module id = v4pi\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar type_1 = require('../../type');\nvar util_1 = require('../../util');\nvar colorRank;\n(function (colorRank) {\n    function parseUnit(model) {\n        var colorRankComponent = {};\n        if (model.has(channel_1.COLOR) && model.fieldDef(channel_1.COLOR).type === type_1.ORDINAL) {\n            colorRankComponent[model.field(channel_1.COLOR)] = [{\n                    type: 'sort',\n                    by: model.field(channel_1.COLOR)\n                }, {\n                    type: 'rank',\n                    field: model.field(channel_1.COLOR),\n                    output: {\n                        rank: model.field(channel_1.COLOR, { prefn: 'rank_' })\n                    }\n                }];\n        }\n        return colorRankComponent;\n    }\n    colorRank.parseUnit = parseUnit;\n    function parseFacet(model) {\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            var colorRankComponent = childDataComponent.colorRank;\n            delete childDataComponent.colorRank;\n            return colorRankComponent;\n        }\n        return {};\n    }\n    colorRank.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var colorRankComponent = {};\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source) {\n                util_1.extend(colorRankComponent, childDataComponent.colorRank);\n                delete childDataComponent.colorRank;\n            }\n        });\n        return colorRankComponent;\n    }\n    colorRank.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.flatten(util_1.vals(component.colorRank));\n    }\n    colorRank.assemble = assemble;\n})(colorRank = exports.colorRank || (exports.colorRank = {}));\n//# sourceMappingURL=colorrank.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/colorrank.js\n// module id = vY52\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../util');\nvar channel_1 = require('../channel');\nvar timeunit_1 = require('../timeunit');\nfunction smallestUnit(timeUnit) {\n    if (!timeUnit) {\n        return undefined;\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.SECONDS)) {\n        return 'second';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MINUTES)) {\n        return 'minute';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.HOURS)) {\n        return 'hour';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DAY) ||\n        timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DATE)) {\n        return 'day';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MONTH)) {\n        return 'month';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.YEAR)) {\n        return 'year';\n    }\n    return undefined;\n}\nexports.smallestUnit = smallestUnit;\nfunction parseExpression(timeUnit, fieldRef, onlyRef) {\n    if (onlyRef === void 0) { onlyRef = false; }\n    var out = 'datetime(';\n    function func(fun, addComma) {\n        if (addComma === void 0) { addComma = true; }\n        if (onlyRef) {\n            return fieldRef + (addComma ? ', ' : '');\n        }\n        else {\n            var res = '';\n            if (fun === 'quarter') {\n                res = 'floor(month(' + fieldRef + ')' + '/3)*3';\n            }\n            else {\n                res = fun + '(' + fieldRef + ')';\n            }\n            return res + (addComma ? ', ' : '');\n        }\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.YEAR)) {\n        out += func('year');\n    }\n    else {\n        out += '2006, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MONTH)) {\n        out += func('month');\n    }\n    else if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.QUARTER)) {\n        out += func('quarter');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DAY)) {\n        out += func('day', false) + '+1, ';\n    }\n    else if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DATE)) {\n        out += func('date');\n    }\n    else {\n        out += '1, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.HOURS)) {\n        out += func('hours');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MINUTES)) {\n        out += func('minutes');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.SECONDS)) {\n        out += func('seconds');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MILLISECONDS)) {\n        out += func('milliseconds', false);\n    }\n    else {\n        out += '0';\n    }\n    return out + ')';\n}\nexports.parseExpression = parseExpression;\nfunction rawDomain(timeUnit, channel) {\n    if (util_1.contains([channel_1.ROW, channel_1.COLUMN, channel_1.SHAPE, channel_1.COLOR], channel)) {\n        return null;\n    }\n    switch (timeUnit) {\n        case timeunit_1.TimeUnit.SECONDS:\n            return util_1.range(0, 60);\n        case timeunit_1.TimeUnit.MINUTES:\n            return util_1.range(0, 60);\n        case timeunit_1.TimeUnit.HOURS:\n            return util_1.range(0, 24);\n        case timeunit_1.TimeUnit.DAY:\n            return util_1.range(0, 7);\n        case timeunit_1.TimeUnit.DATE:\n            return util_1.range(1, 32);\n        case timeunit_1.TimeUnit.MONTH:\n            return util_1.range(0, 12);\n        case timeunit_1.TimeUnit.QUARTER:\n            return [0, 3, 6, 9];\n    }\n    return null;\n}\nexports.rawDomain = rawDomain;\n//# sourceMappingURL=time.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/time.js\n// module id = wKIX\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'},\n    sortby: {type: 'array<field>'},\n    field: {type: 'field'},\n    offset: {type: 'value', default: 'zero'}\n  });\n\n  this._output = {\n    'start': 'layout_start',\n    'end':   'layout_end',\n    'mid':   'layout_mid'\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (Stack.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Stack;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['stacking']);\n\n  var groupby = this.param('groupby').accessor,\n      sortby = dl.comparator(this.param('sortby').field),\n      field = this.param('field').accessor,\n      offset = this.param('offset'),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, field);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset==='center' ? (max - sum)/2 : 0,\n        scale = offset==='normalize' ? (1/sum) : 1,\n        j, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += field(x);\n      b = scale * v + off; // compute end point\n      Tuple.set(x, output.start, a);\n      Tuple.set(x, output.end, b);\n      Tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.end] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, field) {\n  var groups = [],\n      get = function(f) { return f(x); },\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = groupby.map(get);\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += field(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;\n\nStack.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Stack transform\",\n  \"description\": \"Computes layout values for stacked graphs, as in stacked bar charts or stream graphs.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"stack\"]},\n    \"groupby\": {\n      \"description\": \"A list of fields to split the data into groups (stacks).\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    },\n    \"sortby\": {\n      \"description\": \"A list of fields to determine the sort order of stacks.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    },\n    \"field\": {\n      \"description\": \"The data field that determines the thickness/height of stacks.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"offset\": {\n      \"description\": \"The baseline offset\",\n      \"oneOf\": [{\"enum\": [\"zero\", \"center\", \"normalize\"]}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"zero\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"start\": {\"type\": \"string\", \"default\": \"layout_start\"},\n        \"end\": {\"type\": \"string\", \"default\": \"layout_end\"},\n        \"mid\": {\"type\": \"string\", \"default\": \"layout_mid\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"groupby\", \"field\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Stack.js\n// module id = wLy+\n// module chunks = 0","\"use strict\";\nexports.axis = require('./axis');\nexports.aggregate = require('./aggregate');\nexports.bin = require('./bin');\nexports.channel = require('./channel');\nexports.compile = require('./compile/compile').compile;\nexports.config = require('./config');\nexports.data = require('./data');\nexports.encoding = require('./encoding');\nexports.facet = require('./facet');\nexports.fieldDef = require('./fielddef');\nexports.legend = require('./legend');\nexports.mark = require('./mark');\nexports.scale = require('./scale');\nexports.shorthand = require('./shorthand');\nexports.sort = require('./sort');\nexports.spec = require('./spec');\nexports.stack = require('./stack');\nexports.timeUnit = require('./timeunit');\nexports.transform = require('./transform');\nexports.type = require('./type');\nexports.util = require('./util');\nexports.validate = require('./validate');\nexports.version = '__VERSION__';\n//# sourceMappingURL=vl.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/vl.js\n// module id = wWYS\n// module chunks = 0","\"use strict\";\nvar type_1 = require('./type');\n(function (DataFormatType) {\n    DataFormatType[DataFormatType[\"JSON\"] = 'json'] = \"JSON\";\n    DataFormatType[DataFormatType[\"CSV\"] = 'csv'] = \"CSV\";\n    DataFormatType[DataFormatType[\"TSV\"] = 'tsv'] = \"TSV\";\n    DataFormatType[DataFormatType[\"TOPOJSON\"] = 'topojson'] = \"TOPOJSON\";\n})(exports.DataFormatType || (exports.DataFormatType = {}));\nvar DataFormatType = exports.DataFormatType;\n(function (DataTable) {\n    DataTable[DataTable[\"SOURCE\"] = 'source'] = \"SOURCE\";\n    DataTable[DataTable[\"SUMMARY\"] = 'summary'] = \"SUMMARY\";\n    DataTable[DataTable[\"STACKED_SCALE\"] = 'stacked_scale'] = \"STACKED_SCALE\";\n    DataTable[DataTable[\"LAYOUT\"] = 'layout'] = \"LAYOUT\";\n})(exports.DataTable || (exports.DataTable = {}));\nvar DataTable = exports.DataTable;\nexports.SUMMARY = DataTable.SUMMARY;\nexports.SOURCE = DataTable.SOURCE;\nexports.STACKED_SCALE = DataTable.STACKED_SCALE;\nexports.LAYOUT = DataTable.LAYOUT;\nexports.types = {\n    'boolean': type_1.Type.NOMINAL,\n    'number': type_1.Type.QUANTITATIVE,\n    'integer': type_1.Type.QUANTITATIVE,\n    'date': type_1.Type.TEMPORAL,\n    'string': type_1.Type.NOMINAL\n};\n//# sourceMappingURL=data.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/data.js\n// module id = x6Fv\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    ChangeSet = require('./ChangeSet'),\n    Collector = require('./Collector'),\n    Tuple = require('./Tuple'),\n    Node = require('./Node'); // jshint ignore:line\n\nfunction DataSource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet  = facet;\n  this._input  = ChangeSet.create();\n  this._output = null; // Output changeset\n  this._indexes = {};\n  this._indexFields = [];\n\n  this._inputNode  = null;\n  this._outputNode = null;\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline.\n  this._mutates = false;  // Does any pipeline operator mutate tuples?\n}\n\nvar prototype = DataSource.prototype;\n\nprototype.name = function(name) {\n  if (!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nprototype.source = function(src) {\n  if (!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nprototype.insert = function(tuples) {\n  this._input.add = this._input.add.concat(tuples.map(Tuple.ingest));\n  return this;\n};\n\nprototype.remove = function(where) {\n  var remove = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(remove);\n  return this;\n};\n\nprototype.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = Tuple.idMap(mod);\n\n  this._input.fields[field] = 1;\n\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      Tuple.set(x, field, next);\n      if (ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n\n  return this;\n};\n\nprototype.values = function(data) {\n  if (!arguments.length) return this._collector.data();\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nprototype.mutates = function(m) {\n  if (!arguments.length) return this._mutates;\n  this._mutates = this._mutates || m;\n  return this;\n};\n\nprototype.last = function() {\n  return this._output;\n};\n\nprototype.fire = function(input) {\n  if (input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]);\n  return this;\n};\n\nprototype.pipeline = function(pipeline) {\n  if (!arguments.length) return this._pipeline;\n\n  var graph = this._graph,\n      status;\n\n  pipeline.unshift(this._inputNode = DataSourceInput(this));\n  status = graph.preprocess(pipeline);\n\n  if (status.router) {\n    pipeline.push(status.collector = new Collector(graph));\n  }\n\n  pipeline.push(this._outputNode = DataSourceOutput(this));\n  this._collector = status.collector;\n  this._mutates = !!status.mutates;\n  graph.connect(this._pipeline = pipeline);\n\n  return this;\n};\n\nprototype.synchronize = function() {\n  this._graph.synchronize(this._pipeline);\n  return this;\n};\n\nprototype.getIndex = function(field) {\n  var data = this.values(),\n      indexes = this._indexes,\n      fields  = this._indexFields,\n      f = dl.$(field),\n      index, i, len, value;\n\n  if (!indexes[field]) {\n    indexes[field] = index = {};\n    fields.push(field);\n    for (i=0, len=data.length; i<len; ++i) {\n      value = f(data[i]);\n      index[value] = (index[value] || 0) + 1;\n      Tuple.prev_init(data[i]);\n    }\n  }\n  return indexes[field];\n};\n\nprototype.listener = function() {\n  return DataSourceListener(this).addListener(this._inputNode);\n};\n\nprototype.addListener = function(l) {\n  if (l instanceof DataSource) {\n    this._collector.addListener(l.listener());\n  } else {\n    this._outputNode.addListener(l);\n  }\n  return this;\n};\n\nprototype.removeListener = function(l) {\n  this._outputNode.removeListener(l);\n};\n\nprototype.listeners = function(ds) {\n  return (ds ? this._collector : this._outputNode).listeners();\n};\n\n// Input node applies the datasource's delta, and propagates it to\n// the rest of the pipeline. It receives touches to reflow data.\nfunction DataSourceInput(ds) {\n  var input = new Node(ds._graph)\n    .router(true)\n    .collector(true);\n\n  input.data = function() {\n    return ds._data;\n  };\n\n  input.evaluate = function(input) {\n    log.debug(input, ['input', ds._name]);\n\n    var delta = ds._input,\n        out = ChangeSet.create(input), f;\n\n    // Delta might contain fields updated through API\n    for (f in delta.fields) {\n      out.fields[f] = 1;\n    }\n\n    // update data\n    if (delta.rem.length) {\n      ds._data = Tuple.idFilter(ds._data, delta.rem);\n    }\n\n    if (delta.add.length) {\n      ds._data = ds._data.concat(delta.add);\n    }\n\n    if (delta.sort) {\n      ds._data.sort(delta.sort);\n    }\n\n    // if reflowing, add any other tuples not currently in changeset\n    if (input.reflow) {\n      delta.mod = delta.mod.concat(\n        Tuple.idFilter(ds._data, delta.add, delta.mod, delta.rem));\n    }\n\n    // reset change list\n    ds._input = ChangeSet.create();\n\n    out.add = delta.add;\n    out.mod = delta.mod;\n    out.rem = delta.rem;\n    out.facet = ds._facet;\n    return out;\n  };\n\n  return input;\n}\n\n// Output node captures the last changeset seen by this datasource\n// (needed for joins and builds) and materializes any nested data.\n// If this datasource is faceted, materializes the values in the facet.\nfunction DataSourceOutput(ds) {\n  var output = new Node(ds._graph)\n    .router(true)\n    .reflows(true)\n    .collector(true);\n\n  function updateIndices(pulse) {\n    var fields = ds._indexFields,\n        i, j, f, key, index, value;\n\n    for (i=0; i<fields.length; ++i) {\n      key = fields[i];\n      index = ds._indexes[key];\n      f = dl.$(key);\n\n      for (j=0; j<pulse.add.length; ++j) {\n        value = f(pulse.add[j]);\n        Tuple.prev_init(pulse.add[j]);\n        index[value] = (index[value] || 0) + 1;\n      }\n      for (j=0; j<pulse.rem.length; ++j) {\n        value = f(pulse.rem[j]);\n        index[value] = (index[value] || 0) - 1;\n      }\n      for (j=0; j<pulse.mod.length; ++j) {\n        value = f(pulse.mod[j]._prev);\n        index[value] = (index[value] || 0) - 1;\n        value = f(pulse.mod[j]);\n        index[value] = (index[value] || 0) + 1;\n      }\n    }\n  }\n\n  output.data = function() {\n    return ds._collector ? ds._collector.data() : ds._data;\n  };\n\n  output.evaluate = function(input) {\n    log.debug(input, ['output', ds._name]);\n\n    updateIndices(input);\n    var out = ChangeSet.create(input, true);\n\n    if (ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    out.data[ds._name] = 1;\n    return out;\n  };\n\n  return output;\n}\n\nfunction DataSourceListener(ds) {\n  var l = new Node(ds._graph).router(true);\n\n  l.evaluate = function(input) {\n    // Tuple derivation carries a cost. So only derive if the pipeline has\n    // operators that mutate, and thus would override the source data.\n    if (ds.mutates()) {\n      var map = ds._srcMap || (ds._srcMap = {}), // to propagate tuples correctly\n          output = ChangeSet.create(input);\n\n      output.add = input.add.map(function(t) {\n        return (map[t._id] = Tuple.derive(t));\n      });\n\n      output.mod = input.mod.map(function(t) {\n        return Tuple.rederive(t, map[t._id]);\n      });\n\n      output.rem = input.rem.map(function(t) {\n        var o = map[t._id];\n        return (map[t._id] = null, o);\n      });\n\n      return (ds._input = output);\n    } else {\n      return (ds._input = input);\n    }\n  };\n\n  return l;\n}\n\nmodule.exports = DataSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/DataSource.js\n// module id = xZ2+\n// module chunks = 0","var Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Rank(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: 'field', default: null},\n    normalize: {type: 'value', default: false}\n  });\n\n  this._output = {\n    'rank': 'rank'\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Rank.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Rank;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['rank']);\n\n  var rank  = this._output.rank,\n      norm  = this.param('normalize'),\n      field = this.param('field').accessor,\n      keys = {}, \n      i, len = data.length, klen, d, f;\n\n  // If we have a field accessor, first compile distinct keys.\n  if (field) {\n    for (i=0, klen=0; i<len; ++i) {\n      d = data[i];\n      keys[f=field(d)] = keys[f] || (keys[f] = ++klen);\n    }\n  }\n\n  // Assign ranks to all tuples.\n  for (i=0; i<len && (d=data[i]); ++i) {\n    if (field && (f=field(d))) {\n      Tuple.set(d, rank, norm ? keys[f] / klen : keys[f]);\n    } else {\n      Tuple.set(d, rank, norm ? (i+1) / len : (i+1));\n    }\n  }\n\n  input.fields[rank] = 1;\n  return input;\n};\n\nmodule.exports = Rank;\n\nRank.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Rank transform\",\n  \"description\": \"Computes ascending rank scores for data tuples.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"rank\"]},\n    \"field\": {\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"A key field to used to rank tuples. \" +\n        \"If undefined, tuples will be ranked in their observed order.\"\n    },\n    \"normalize\": {\n      \"description\": \"If true, values of the output field will lie in the range [0, 1].\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"rank\": {\"type\": \"string\", \"default\": \"rank\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Rank.js\n// module id = yLCL\n// module chunks = 0","\"use strict\";\n(function (SortOrder) {\n    SortOrder[SortOrder[\"ASCENDING\"] = 'ascending'] = \"ASCENDING\";\n    SortOrder[SortOrder[\"DESCENDING\"] = 'descending'] = \"DESCENDING\";\n    SortOrder[SortOrder[\"NONE\"] = 'none'] = \"NONE\";\n})(exports.SortOrder || (exports.SortOrder = {}));\nvar SortOrder = exports.SortOrder;\n//# sourceMappingURL=sort.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/sort.js\n// module id = yLwJ\n// module chunks = 0","var util = require('./util'),\n    format = require('./format');\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad,\n  day:        format.day,\n  month:      format.month,\n  quarter:    format.quarter,\n  utcQuarter: format.utcQuarter\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  /* jshint evil: true */\n  return (new Function('d', src)).bind(context);\n}\n\ntemplate.source = source;\ntemplate.context = context;\ntemplate.format = get_format;\nmodule.exports = template;\n\n// Clear cache of format objects.\n// This can *break* prior template functions, so invoke with care!\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\n// Generate property access code for use within template source.\n// object: the name of the object (variable) containing template data\n// property: the property access string, verbatim from template tag\ntemplate.property = function(object, property) {\n  var src = util.field(property).map(util.str).join('][');\n  return object + '[' + src + ']';\n};\n\n// Generate source code for a template function.\n// text: the template text\n// variable: the name of the data object variable ('obj' by default)\n// properties: optional hash for collecting all accessed properties\nfunction source(text, variable, properties) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable, properties) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable, properties) {\n  var filters = text.match(filter_re);\n  var prop = filters.shift().trim();\n  var stringCast = true;\n\n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n\n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n\n  function formatter(type) {\n    var pattern = args[0];\n    if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n        (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n      pattern = pattern.slice(1, -1);\n    } else {\n      throw Error('Format pattern must be quoted: ' + pattern);\n    }\n    a = template_format(pattern, type);\n    stringCast = false;\n    var arg = type === 'number' ? src : date();\n    src = 'this.formats['+a+']('+arg+')';\n  }\n\n  if (properties) properties[prop] = 1;\n  var src = template.property(variable, prop);\n\n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1)\n        .match(args_re)\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        formatter('number');\n        break;\n      case 'time':\n        formatter('time');\n        break;\n      case 'time-utc':\n        formatter('utc');\n        break;\n      case 'month':\n        src = 'this.month(' + src + ')';\n        break;\n      case 'month-abbrev':\n        src = 'this.month(' + src + ',true)';\n        break;\n      case 'day':\n        src = 'this.day(' + src + ')';\n        break;\n      case 'day-abbrev':\n        src = 'this.day(' + src + ',true)';\n        break;\n      case 'quarter':\n        src = 'this.quarter(' + src + ')';\n        break;\n      case 'quarter-utc':\n        src = 'this.utcQuarter(' + src + ')';\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g,\n    filter_re = /(?:\"[^\"]*\"|\\'[^\\']*\\'|[^\\|\"]+|[^\\|\\']+)+/g,\n    args_re = /(?:\"[^\"]*\"|\\'[^\\']*\\'|[^,\"]+|[^,\\']+)+/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, type) {\n  var key = type + ':' + pattern;\n  if (context.format_map[key] == null) {\n    var f = format[type](pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[key] = i;\n    return i;\n  }\n  return context.format_map[key];\n}\n\nfunction get_format(pattern, type) {\n  return context.formats[template_format(pattern, type)];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/template.js\n// module id = yQql\n// module chunks = 0","var dl = require('datalib');\n\nvar types = {\n  '=':   parseComparator,\n  '==':  parseComparator,\n  '!=':  parseComparator,\n  '>':   parseComparator,\n  '>=':  parseComparator,\n  '<':   parseComparator,\n  '<=':  parseComparator,\n  'and': parseLogical,\n  '&&':  parseLogical,\n  'or':  parseLogical,\n  '||':  parseLogical,\n  'in':  parseIn\n};\n\nvar nullScale = function() { return 0; };\nnullScale.invert = nullScale;\n\nfunction parsePredicates(model, spec) {\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](model, s);\n\n    /* jshint evil:true */\n    var pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0]; }; // For global scales\n    pred.nullScale = nullScale;\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}\n\nfunction parseSignal(signal, signals) {\n  var s = dl.field(signal),\n      code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n  signals[s[0]] = 1;\n  return code;\n}\n\nfunction parseOperands(model, operands) {\n  var decl = [], defs = [],\n      signals = {}, db = {};\n\n  function setSignal(s) { signals[s] = 1; }\n  function setData(d) { db[d] = 1; }\n\n  dl.array(operands).forEach(function(o, i) {\n    var name = \"o\" + i,\n        def = \"\";\n\n    if (o.value !== undefined) {\n      def = dl.str(o.value);\n    } else if (o.arg) {\n      def = \"args[\"+dl.str(o.arg)+\"]\";\n    } else if (o.signal) {\n      def = parseSignal(o.signal, signals);\n    } else if (o.predicate) {\n      var ref = o.predicate,\n          predName = ref && (ref.name || ref),\n          pred = model.predicate(predName),\n          p = \"predicates[\"+dl.str(predName)+\"]\";\n\n      pred.signals.forEach(setSignal);\n      pred.data.forEach(setData);\n\n      if (dl.isObject(ref)) {\n        dl.keys(ref).forEach(function(k) {\n          if (k === \"name\") return;\n          var i = ref[k];\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if (i.signal) {\n            def += parseSignal(i.signal, signals);\n          } else if (i.arg) {\n            def += \"args[\"+dl.str(i.arg)+\"]\";\n          }\n          def += \", \";\n        });\n      }\n\n      def += p+\".call(\"+p+\", args, db, signals, predicates)\";\n    }\n\n    decl.push(name);\n    defs.push(name+\"=(\"+def+\")\");\n  });\n\n  return {\n    code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n    signals: dl.keys(signals),\n    data: dl.keys(db)\n  };\n}\n\nfunction parseComparator(model, spec) {\n  var ops = parseOperands(model, spec.operands);\n  if (spec.type === '=') spec.type = '==';\n\n  ops.code += \"o0 = o0 instanceof Date ? o0.getTime() : o0;\\n\" +\n    \"o1 = o1 instanceof Date ? o1.getTime() : o1;\\n\";\n\n  return {\n    code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n    signals: ops.signals,\n    data: ops.data\n  };\n}\n\nfunction parseLogical(model, spec) {\n  var ops = parseOperands(model, spec.operands),\n      o = [], i = 0, len = spec.operands.length;\n\n  while (o.push(\"o\"+i++) < len);\n  if (spec.type === 'and') spec.type = '&&';\n  else if (spec.type === 'or') spec.type = '||';\n\n  return {\n    code: ops.code + \"return \" + o.join(spec.type) + \";\",\n    signals: ops.signals,\n    data: ops.data\n  };\n}\n\nfunction parseIn(model, spec) {\n  var o = [spec.item], code = \"\";\n  if (spec.range) o.push.apply(o, spec.range);\n  if (spec.scale) {\n    code = parseScale(spec.scale, o);\n  }\n\n  var ops = parseOperands(model, o);\n  code = ops.code + code + \"\\n  var ordSet = null;\\n\";\n\n  if (spec.data) {\n    var field = dl.field(spec.field).map(dl.str);\n    code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n    code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n  } else if (spec.range) {\n    // TODO: inclusive/exclusive range?\n    if (spec.scale) {\n      code += \"if (scale.length == 2) {\\n\" + // inverting ordinal scales\n        \"  ordSet = scale(o1, o2);\\n\" +\n        \"} else {\\n\" +\n        \"  o1 = scale(o1);\\no2 = scale(o2);\\n\" +\n        \"}\";\n    }\n\n    code += \"return ordSet !== null ? ordSet.indexOf(o0) !== -1 :\\n\" +\n      \"  o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1;\";\n  }\n\n  return {\n    code: code,\n    signals: ops.signals,\n    data: ops.data.concat(spec.data ? [spec.data] : [])\n  };\n}\n\n// Populate ops such that ultimate scale/inversion function will be in `scale` var.\nfunction parseScale(spec, ops) {\n  var code = \"var scale = \",\n      idx  = ops.length;\n\n  if (dl.isString(spec)) {\n    ops.push({ value: spec });\n    code += \"this.root().scale(o\"+idx+\")\";\n  } else if (spec.arg) {  // Scale function is being passed as an arg\n    ops.push(spec);\n    code += \"o\"+idx;\n  } else if (spec.name) { // Full scale parameter {name: ..}\n    ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n    code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n    if (spec.scope) {\n      ops.push(spec.scope);\n      code += \"((o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\") || this.nullScale)\";\n    } else {\n      code += \"this.root().scale(o\"+idx+\")\";\n    }\n    code += \")\";\n  }\n\n  if (spec.invert === true) {  // Allow spec.invert.arg?\n    code += \".invert\";\n  }\n\n  return code+\";\\n\";\n}\n\nmodule.exports = parsePredicates;\nparsePredicates.schema = {\n  \"refs\": {\n    \"operand\": {\n      \"type\": \"object\",\n      \"oneOf\": [\n        {\n          \"properties\": {\"value\": {}},\n          \"required\": [\"value\"]\n        },\n        {\n          \"properties\": {\"arg\": {\"type\": \"string\"}},\n          \"required\": [\"arg\"]\n        },\n        {\"$ref\": \"#/refs/signal\"},\n        {\n          \"properties\": {\n            \"predicate\": {\n              \"oneOf\": [\n                {\"type\": \"string\"},\n                {\n                  \"type\": \"object\",\n                  \"properties\": {\"name\": {\"type\": \"string\"}},\n                  \"required\": [\"name\"]\n                }\n              ]\n            }\n          },\n          \"required\": [\"predicate\"]\n        }\n      ]\n    }\n  },\n\n  \"defs\": {\n    \"predicate\": {\n      \"type\": \"object\",\n      \"oneOf\": [{\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"type\": {\"enum\": [\"==\", \"!=\", \">\", \"<\", \">=\", \"<=\"]},\n          \"operands\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/refs/operand\"},\n            \"minItems\": 2,\n            \"maxItems\": 2\n          }\n        },\n        \"required\": [\"name\", \"type\", \"operands\"]\n      }, {\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"type\": {\"enum\": [\"and\", \"&&\", \"or\", \"||\"]},\n          \"operands\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/refs/operand\"},\n            \"minItems\": 2\n          }\n        },\n        \"required\": [\"name\", \"type\", \"operands\"]\n      }, {\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"type\": {\"enum\": [\"in\"]},\n          \"item\": {\"$ref\": \"#/refs/operand\"}\n        },\n\n        \"oneOf\": [\n          {\n            \"properties\": {\n              \"range\": {\n                \"type\": \"array\",\n                \"items\": {\"$ref\": \"#/refs/operand\"},\n                \"minItems\": 2\n              },\n              \"scale\": {\"$ref\": \"#/refs/scopedScale\"}\n            },\n            \"required\": [\"range\"]\n          },\n          {\n            \"properties\": {\n              \"data\": {\"type\": \"string\"},\n              \"field\": {\"type\": \"string\"}\n            },\n            \"required\": [\"data\", \"field\"]\n          }\n        ],\n\n        \"required\": [\"name\", \"type\", \"item\"]\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/predicates.js\n// module id = yaQe\n// module chunks = 0","var dl  = require('datalib'),\n    log = require('vega-logging'),\n    themeVal = require('../util/theme-val'),\n    Model = require('../core/Model'),\n    View  = require('../core/View');\n\n/**\n * Parse graph specification\n * @param spec (object)\n * @param config (optional object)\n * @param viewFactory (optional function)\n * @param callback (error, model)\n */\n function parseSpec(spec /*, [config,] [viewFactory,] callback */) {\n  // do not assign any values to callback, as it will change arguments\n  var arglen = arguments.length,\n      argidx = 2,\n      cb = arguments[arglen-1],\n      model = new Model(),\n      viewFactory = View.factory,\n      config;\n\n  if (arglen > argidx && dl.isFunction(arguments[arglen - argidx])) {\n    viewFactory = arguments[arglen - argidx];\n    ++argidx;\n  }\n\n  if (arglen > argidx && dl.isObject(arguments[arglen - argidx])) {\n    model.config(arguments[arglen - argidx]);\n  }\n\n  config = model.config();\n  if (dl.isObject(spec)) {\n    parse(spec);\n  } else if (dl.isString(spec)) {\n    var opts = dl.extend({url: spec}, config.load);\n    dl.json(opts, function(err, spec) {\n      if (err) done('SPECIFICATION LOAD FAILED: ' + err);\n      else parse(spec);\n    });\n  } else {\n    done('INVALID SPECIFICATION: Must be a valid JSON object or URL.');\n  }\n\n  function parse(spec) {\n    try {\n      // protect against subsequent spec modification\n      spec = dl.duplicate(spec);\n\n      var parsers = require('./'),\n          width   = themeVal(spec, config, 'width', 500),\n          height  = themeVal(spec, config, 'height', 500),\n          padding = parsers.padding(themeVal(spec, config, 'padding')),\n          background = themeVal(spec, config, 'background');\n\n      // create signals for width, height, padding, and cursor\n      model.signal('width', width);\n      model.signal('height', height);\n      model.signal('padding', padding);\n      cursor(spec);\n\n      // initialize model\n      model.defs({\n        width:      width,\n        height:     height,\n        padding:    padding,\n        viewport:   spec.viewport || null,\n        background: parsers.background(background),\n        signals:    parsers.signals(model, spec.signals),\n        predicates: parsers.predicates(model, spec.predicates),\n        marks:      parsers.marks(model, spec, width, height),\n        data:       parsers.data(model, spec.data, done)\n      });\n    } catch (err) { done(err); }\n  }\n\n  function cursor(spec) {\n    var signals = spec.signals || (spec.signals=[]),  def;\n    signals.some(function(sg) {\n      return (sg.name === 'cursor') ? (def=sg, true) : false;\n    });\n\n    if (!def) signals.push(def={name: 'cursor', streams: []});\n\n    // Add a stream def at the head, so that custom defs can override it.\n    def.init = def.init || {};\n    def.streams.unshift({\n      type: 'mousemove',\n      expr: 'eventItem().cursor === cursor.default ? cursor : {default: eventItem().cursor}'\n    });\n  }\n\n  function done(err) {\n    var view;\n    if (err) {\n      log.error(err);\n    } else {\n      view = viewFactory(model.buildIndexes());\n    }\n\n    if (cb) {\n      if (cb.length > 1) cb(err, view);\n      else if (!err) cb(view);\n      cb = null;\n    }\n  }\n}\n\nmodule.exports = parseSpec;\n\nparseSpec.schema = {\n  \"defs\": {\n    \"spec\": {\n      \"title\": \"Vega visualization specification\",\n      \"type\": \"object\",\n\n      \"allOf\": [{\"$ref\": \"#/defs/container\"}, {\n        \"properties\": {\n          \"width\": {\"type\": \"number\"},\n          \"height\": {\"type\": \"number\"},\n          \"viewport\": {\n            \"type\": \"array\",\n            \"items\": {\"type\": \"number\"},\n            \"maxItems\": 2\n          },\n\n          \"background\": {\"$ref\": \"#/defs/background\"},\n          \"padding\": {\"$ref\": \"#/defs/padding\"},\n\n          \"signals\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/defs/signal\"}\n          },\n\n          \"predicates\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/defs/predicate\"}\n          },\n\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/defs/data\"}\n          }\n        }\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/spec.js\n// module id = ybCx\n// module chunks = 0","\"use strict\";\nvar scale_1 = require('../../scale');\nvar util_1 = require('../../util');\nvar nonPositiveFilter;\n(function (nonPositiveFilter_1) {\n    function parseUnit(model) {\n        return model.channels().reduce(function (nonPositiveComponent, channel) {\n            var scale = model.scale(channel);\n            if (!model.field(channel) || !scale) {\n                return nonPositiveComponent;\n            }\n            nonPositiveComponent[model.field(channel)] = scale.type === scale_1.ScaleType.LOG;\n            return nonPositiveComponent;\n        }, {});\n    }\n    nonPositiveFilter_1.parseUnit = parseUnit;\n    function parseFacet(model) {\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            var nonPositiveFilterComponent = childDataComponent.nonPositiveFilter;\n            delete childDataComponent.nonPositiveFilter;\n            return nonPositiveFilterComponent;\n        }\n        return {};\n    }\n    nonPositiveFilter_1.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var nonPositiveFilter = {};\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && !util_1.differ(childDataComponent.nonPositiveFilter, nonPositiveFilter)) {\n                util_1.extend(nonPositiveFilter, childDataComponent.nonPositiveFilter);\n                delete childDataComponent.nonPositiveFilter;\n            }\n        });\n        return nonPositiveFilter;\n    }\n    nonPositiveFilter_1.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.keys(component.nonPositiveFilter).filter(function (field) {\n            return component.nonPositiveFilter[field];\n        }).map(function (field) {\n            return {\n                type: 'filter',\n                test: 'datum.' + field + ' > 0'\n            };\n        });\n    }\n    nonPositiveFilter_1.assemble = assemble;\n})(nonPositiveFilter = exports.nonPositiveFilter || (exports.nonPositiveFilter = {}));\n//# sourceMappingURL=nonpositivenullfilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/nonpositivenullfilter.js\n// module id = yixx\n// module chunks = 0","var DOM = require('../../util/dom'),\n    Handler = require('../Handler');\n\nfunction SVGHandler() {\n  Handler.call(this);\n}\n\nvar base = Handler.prototype;\nvar prototype = (SVGHandler.prototype = Object.create(base));\nprototype.constructor = SVGHandler;\n\nprototype.initialize = function(el, pad, obj) {\n  this._svg = DOM.find(el, 'svg');\n  return base.initialize.call(this, el, pad, obj);\n};\n\nprototype.svg = function() {\n  return this._svg;\n};\n\n// wrap an event listener for the SVG DOM\nprototype.listener = function(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n    evt.vegaType = evt.type;\n    item = Array.isArray(item) ? item[0] : item;\n    handler.call(that._obj, evt, item);\n  };\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = this.eventName(type),\n      svg = this._svg,\n      h = this._handlers,\n      x = {\n        type:     type,\n        handler:  handler,\n        listener: this.listener(handler)\n      };\n\n  (h[name] || (h[name] = [])).push(x);\n  svg.addEventListener(name, x.listener);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = this.eventName(type),\n      svg = this._svg,\n      h = this._handlers[name], i;\n  if (!h) return;\n  for (i=h.length; --i>=0;) {\n    if (h[i].type === type && !handler || h[i].handler === handler) {\n      svg.removeEventListener(name, h[i].listener);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = SVGHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/svg/SVGHandler.js\n// module id = yszh\n// module chunks = 0","\"use strict\";\nvar data_1 = require('../data');\nvar spec_1 = require('../spec');\nvar util_1 = require('../util');\nvar common_1 = require('./common');\nfunction compile(inputSpec) {\n    var spec = spec_1.normalize(inputSpec);\n    var model = common_1.buildModel(spec, null, '');\n    model.parse();\n    return assemble(model);\n}\nexports.compile = compile;\nfunction assemble(model) {\n    var config = model.config();\n    var output = util_1.extend({\n        width: 1,\n        height: 1,\n        padding: 'auto'\n    }, config.viewport ? { viewport: config.viewport } : {}, config.background ? { background: config.background } : {}, {\n        data: [].concat(model.assembleData([]), model.assembleLayout([])),\n        marks: [assembleRootGroup(model)]\n    });\n    return {\n        spec: output\n    };\n}\nfunction assembleRootGroup(model) {\n    var rootGroup = util_1.extend({\n        name: model.name('root'),\n        type: 'group',\n    }, model.description() ? { description: model.description() } : {}, {\n        from: { data: data_1.LAYOUT },\n        properties: {\n            update: util_1.extend({\n                width: { field: 'width' },\n                height: { field: 'height' }\n            }, model.assembleParentGroupProperties(model.config().cell))\n        }\n    });\n    return util_1.extend(rootGroup, model.assembleGroup());\n}\nexports.assembleRootGroup = assembleRootGroup;\n//# sourceMappingURL=compile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/compile.js\n// module id = z/Ym\n// module chunks = 0","\"use strict\";\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"YEAR\"] = 'year'] = \"YEAR\";\n    TimeUnit[TimeUnit[\"MONTH\"] = 'month'] = \"MONTH\";\n    TimeUnit[TimeUnit[\"DAY\"] = 'day'] = \"DAY\";\n    TimeUnit[TimeUnit[\"DATE\"] = 'date'] = \"DATE\";\n    TimeUnit[TimeUnit[\"HOURS\"] = 'hours'] = \"HOURS\";\n    TimeUnit[TimeUnit[\"MINUTES\"] = 'minutes'] = \"MINUTES\";\n    TimeUnit[TimeUnit[\"SECONDS\"] = 'seconds'] = \"SECONDS\";\n    TimeUnit[TimeUnit[\"MILLISECONDS\"] = 'milliseconds'] = \"MILLISECONDS\";\n    TimeUnit[TimeUnit[\"YEARMONTH\"] = 'yearmonth'] = \"YEARMONTH\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAY\"] = 'yearmonthday'] = \"YEARMONTHDAY\";\n    TimeUnit[TimeUnit[\"YEARMONTHDATE\"] = 'yearmonthdate'] = \"YEARMONTHDATE\";\n    TimeUnit[TimeUnit[\"YEARDAY\"] = 'yearday'] = \"YEARDAY\";\n    TimeUnit[TimeUnit[\"YEARDATE\"] = 'yeardate'] = \"YEARDATE\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURS\"] = 'yearmonthdayhours'] = \"YEARMONTHDAYHOURS\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURSMINUTES\"] = 'yearmonthdayhoursminutes'] = \"YEARMONTHDAYHOURSMINUTES\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURSMINUTESSECONDS\"] = 'yearmonthdayhoursminutesseconds'] = \"YEARMONTHDAYHOURSMINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"HOURSMINUTES\"] = 'hoursminutes'] = \"HOURSMINUTES\";\n    TimeUnit[TimeUnit[\"HOURSMINUTESSECONDS\"] = 'hoursminutesseconds'] = \"HOURSMINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"MINUTESSECONDS\"] = 'minutesseconds'] = \"MINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"SECONDSMILLISECONDS\"] = 'secondsmilliseconds'] = \"SECONDSMILLISECONDS\";\n    TimeUnit[TimeUnit[\"QUARTER\"] = 'quarter'] = \"QUARTER\";\n    TimeUnit[TimeUnit[\"YEARQUARTER\"] = 'yearquarter'] = \"YEARQUARTER\";\n    TimeUnit[TimeUnit[\"QUARTERMONTH\"] = 'quartermonth'] = \"QUARTERMONTH\";\n    TimeUnit[TimeUnit[\"YEARQUARTERMONTH\"] = 'yearquartermonth'] = \"YEARQUARTERMONTH\";\n})(exports.TimeUnit || (exports.TimeUnit = {}));\nvar TimeUnit = exports.TimeUnit;\nexports.TIMEUNITS = [\n    TimeUnit.YEAR,\n    TimeUnit.MONTH,\n    TimeUnit.DAY,\n    TimeUnit.DATE,\n    TimeUnit.HOURS,\n    TimeUnit.MINUTES,\n    TimeUnit.SECONDS,\n    TimeUnit.MILLISECONDS,\n    TimeUnit.YEARMONTH,\n    TimeUnit.YEARMONTHDAY,\n    TimeUnit.YEARMONTHDATE,\n    TimeUnit.YEARDAY,\n    TimeUnit.YEARDATE,\n    TimeUnit.YEARMONTHDAYHOURS,\n    TimeUnit.YEARMONTHDAYHOURSMINUTES,\n    TimeUnit.YEARMONTHDAYHOURSMINUTESSECONDS,\n    TimeUnit.HOURSMINUTES,\n    TimeUnit.HOURSMINUTESSECONDS,\n    TimeUnit.MINUTESSECONDS,\n    TimeUnit.SECONDSMILLISECONDS,\n    TimeUnit.QUARTER,\n    TimeUnit.YEARQUARTER,\n    TimeUnit.QUARTERMONTH,\n    TimeUnit.YEARQUARTERMONTH,\n];\nfunction template(timeUnit, field, shortTimeLabels) {\n    if (!timeUnit) {\n        return undefined;\n    }\n    var dateComponents = [];\n    if (containsTimeUnit(timeUnit, TimeUnit.YEAR)) {\n        dateComponents.push(shortTimeLabels ? '%y' : '%Y');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.QUARTER)) {\n        dateComponents.push('\\'}}Q{{' + field + ' | quarter}}{{' + field + ' | time:\\'');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {\n        dateComponents.push(shortTimeLabels ? '%b' : '%B');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.DAY)) {\n        dateComponents.push(shortTimeLabels ? '%a' : '%A');\n    }\n    else if (containsTimeUnit(timeUnit, TimeUnit.DATE)) {\n        dateComponents.push('%d');\n    }\n    var timeComponents = [];\n    if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {\n        timeComponents.push('%H');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {\n        timeComponents.push('%M');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {\n        timeComponents.push('%S');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.MILLISECONDS)) {\n        timeComponents.push('%L');\n    }\n    var out = [];\n    if (dateComponents.length > 0) {\n        out.push(dateComponents.join('-'));\n    }\n    if (timeComponents.length > 0) {\n        out.push(timeComponents.join(':'));\n    }\n    if (out.length > 0) {\n        var template_1 = '{{' + field + ' | time:\\'' + out.join(' ') + '\\'}}';\n        return template_1.replace(new RegExp('{{' + field + ' \\\\| time:\\'\\'}}', 'g'), '');\n    }\n    else {\n        return undefined;\n    }\n}\nexports.template = template;\nfunction containsTimeUnit(fullTimeUnit, timeUnit) {\n    var fullTimeUnitStr = fullTimeUnit.toString();\n    var timeUnitStr = timeUnit.toString();\n    return fullTimeUnitStr.indexOf(timeUnitStr) > -1;\n}\nexports.containsTimeUnit = containsTimeUnit;\n//# sourceMappingURL=timeunit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/timeunit.js\n// module id = z5TJ\n// module chunks = 0","var u = module.exports;\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && obj === obj;\n};\n\nu.isBuffer = (typeof Buffer === 'function' && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\n// parse a date with optional d3.time-format format\nu.date = function(s, format) {\n  var d = format ? format : Date;\n  return s == null || s === '' ? null : d.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) || u.isString(x) ?\n      // Output valid JSON and JS source strings.\n      // See http://timelessrepo.com/json-isnt-a-javascript-subset\n      JSON.stringify(x).replace('\\u2028','\\\\u2028').replace('\\u2029', '\\\\u2029')\n    : x;\n};\n\n// data access functions\n\nvar field_re = /\\[(.*?)\\]|[^.\\[]+/g;\n\nu.field = function(f) {\n  return String(f).match(field_re).map(function(d) {\n    return d[0] !== '[' ? d :\n      d[1] !== \"'\" && d[1] !== '\"' ? d.slice(1, -1) :\n      d.slice(2, -2).replace(/\\\\([\"'])/g, '$1');\n  });\n};\n\nu.accessor = function(f) {\n  /* jshint evil: true */\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, Function('x', 'return x[' + u.field(f).map(u.str).join('][') + '];'));\n};\n\n// short-cut for accessor\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a, b) {\n    var i, n, f, c;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i];\n      c = u.cmp(f(a), f(b));\n      if (c) return c * sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  return (a < b || a == null) && b != null ? -1 :\n    (a > b || b == null) && a != null ? 1 :\n    ((b = b instanceof Date ? +b : b),\n     (a = a instanceof Date ? +a : a)) !== a && b === b ? -1 :\n    b !== b && a === a ? 1 : 0;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n// permutes an array using a Knuth shuffle\nu.permute = function(a) {\n  var m = a.length,\n      swap,\n      i;\n\n  while (m) {\n    i = Math.floor(Math.random() * m--);\n    swap = a[m];\n    a[m] = a[i];\n    a[i] = swap;\n  }\n};\n\n// string functions\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/util.js\n// module id = zF6n\n// module chunks = 0","var load = require('datalib/src/import/load');\n\nfunction ImageLoader(loadConfig) {\n  this._pending = 0;\n  this._config = loadConfig || ImageLoader.Config; \n}\n\n// Overridable global default load configuration\nImageLoader.Config = null;\n\nvar prototype = ImageLoader.prototype;\n\nprototype.pending = function() {\n  return this._pending;\n};\n\nprototype.params = function(uri) {\n  var p = {url: uri}, k;\n  for (k in this._config) { p[k] = this._config[k]; }\n  return p;\n};\n\nprototype.imageURL = function(uri) {\n  return load.sanitizeUrl(this.params(uri));\n};\n\nfunction browser(uri, callback) {\n  var url = load.sanitizeUrl(this.params(uri));\n  if (!url) { // error\n    if (callback) callback(uri, null);\n    return null;\n  }\n\n  var loader = this,\n      image = new Image();\n\n  loader._pending += 1;\n\n  image.onload = function() {\n    loader._pending -= 1;\n    image.loaded = true;\n    if (callback) callback(null, image);\n  };\n  image.src = url;\n\n  return image;\n}\n\nfunction server(uri, callback) {\n  var loader = this,\n      image = new (require('canvas').Image)();\n\n  loader._pending += 1;\n\n  load(this.params(uri), function(err, data) {\n    loader._pending -= 1;\n    if (err) {\n      if (callback) callback(err, null);\n      return null;\n    }\n    image.src = data;\n    image.loaded = true;\n    if (callback) callback(null, image);\n  });\n\n  return image;\n}\n\nprototype.loadImage = function(uri, callback) {\n  return load.useXHR ?\n    browser.call(this, uri, callback) :\n    server.call(this, uri, callback);\n};\n\nmodule.exports = ImageLoader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/ImageLoader.js\n// module id = zLl/\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render');\n\nvar sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180);\n\nfunction path(g, o) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  g.beginPath();\n\n  if (o.shape == null || o.shape === 'circle') {\n    r = Math.sqrt(size / Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case 'cross':\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case 'diamond':\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case 'square':\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case 'triangle-down':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case 'triangle-up':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n      break;\n\n    // custom shape\n    default:\n      var pathArray = resize(parse(o.shape), size);\n      render(g, pathArray, x, y);\n  }\n  g.closePath();\n}\n\n// Scale custom shapes (defined within a unit square) by given size.\nfunction resize(path, size) {\n  var sz = Math.sqrt(size),\n      i, n, j, m, curr;\n\n  for (i=0, n=path.length; i<n; ++i) {\n    for (curr=path[i], j=1, m=curr.length; j<m; ++j) {\n      curr[j] *= sz;\n    }\n  }\n  return path;\n}\n\nmodule.exports = {\n  draw: util.drawAll(path),\n  pick: util.pickPath(path)\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/symbol.js\n// module id = zPnY\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar aggregate_1 = require('../aggregate');\nvar channel_1 = require('../channel');\nvar config_1 = require('../config');\nvar data_1 = require('../data');\nvar vlEncoding = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar scale_1 = require('../scale');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar axis_1 = require('./axis');\nvar common_1 = require('./common');\nvar config_2 = require('./config');\nvar data_2 = require('./data/data');\nvar legend_1 = require('./legend');\nvar layout_1 = require('./layout');\nvar model_1 = require('./model');\nvar mark_2 = require('./mark/mark');\nvar scale_2 = require('./scale');\nvar stack_1 = require('../stack');\nvar UnitModel = (function (_super) {\n    __extends(UnitModel, _super);\n    function UnitModel(spec, parent, parentGivenName) {\n        _super.call(this, spec, parent, parentGivenName);\n        var mark = this._mark = spec.mark;\n        var encoding = this._encoding = this._initEncoding(mark, spec.encoding || {});\n        var config = this._config = this._initConfig(spec.config, parent, mark, encoding);\n        this._scale = this._initScale(mark, encoding, config);\n        this._axis = this._initAxis(encoding, config);\n        this._legend = this._initLegend(encoding, config);\n        this._stack = stack_1.stack(mark, encoding, config);\n    }\n    UnitModel.prototype._initEncoding = function (mark, encoding) {\n        encoding = util_1.duplicate(encoding);\n        vlEncoding.forEach(encoding, function (fieldDef, channel) {\n            if (!channel_1.supportMark(channel, mark)) {\n                console.warn(channel, 'dropped as it is incompatible with', mark);\n                delete fieldDef.field;\n                return;\n            }\n            if (fieldDef.type) {\n                fieldDef.type = type_1.getFullName(fieldDef.type);\n            }\n            if ((channel === channel_1.PATH || channel === channel_1.ORDER) && !fieldDef.aggregate && fieldDef.type === type_1.QUANTITATIVE) {\n                fieldDef.aggregate = aggregate_1.AggregateOp.MIN;\n            }\n        });\n        return encoding;\n    };\n    UnitModel.prototype._initConfig = function (specConfig, parent, mark, encoding) {\n        var config = util_1.mergeDeep(util_1.duplicate(config_1.defaultConfig), parent ? parent.config() : {}, specConfig);\n        config.mark = config_2.initMarkConfig(mark, encoding, config);\n        return config;\n    };\n    UnitModel.prototype._initScale = function (mark, encoding, config) {\n        return channel_1.UNIT_SCALE_CHANNELS.reduce(function (_scale, channel) {\n            if (vlEncoding.has(encoding, channel) ||\n                (channel === channel_1.X && vlEncoding.has(encoding, channel_1.X2)) ||\n                (channel === channel_1.Y && vlEncoding.has(encoding, channel_1.Y2))) {\n                var channelDef = encoding[channel];\n                var scaleSpec = (channelDef || {}).scale || {};\n                var _scaleType = scale_2.scaleType(scaleSpec, channelDef, channel, mark);\n                _scale[channel] = util_1.extend({\n                    type: _scaleType,\n                    round: config.scale.round,\n                    padding: config.scale.padding,\n                    useRawDomain: config.scale.useRawDomain,\n                    bandSize: channel === channel_1.X && _scaleType === scale_1.ScaleType.ORDINAL && mark === mark_1.TEXT ?\n                        config.scale.textBandWidth : config.scale.bandSize\n                }, scaleSpec);\n            }\n            return _scale;\n        }, {});\n    };\n    UnitModel.prototype._initAxis = function (encoding, config) {\n        return [channel_1.X, channel_1.Y].reduce(function (_axis, channel) {\n            if (vlEncoding.has(encoding, channel) ||\n                (channel === channel_1.X && vlEncoding.has(encoding, channel_1.X2)) ||\n                (channel === channel_1.Y && vlEncoding.has(encoding, channel_1.Y2))) {\n                var axisSpec = (encoding[channel] || {}).axis;\n                if (axisSpec !== false) {\n                    _axis[channel] = util_1.extend({}, config.axis, axisSpec === true ? {} : axisSpec || {});\n                }\n            }\n            return _axis;\n        }, {});\n    };\n    UnitModel.prototype._initLegend = function (encoding, config) {\n        return channel_1.NONSPATIAL_SCALE_CHANNELS.reduce(function (_legend, channel) {\n            if (vlEncoding.has(encoding, channel)) {\n                var legendSpec = encoding[channel].legend;\n                if (legendSpec !== false) {\n                    _legend[channel] = util_1.extend({}, config.legend, legendSpec === true ? {} : legendSpec || {});\n                }\n            }\n            return _legend;\n        }, {});\n    };\n    UnitModel.prototype.parseData = function () {\n        this.component.data = data_2.parseUnitData(this);\n    };\n    UnitModel.prototype.parseSelectionData = function () {\n    };\n    UnitModel.prototype.parseLayoutData = function () {\n        this.component.layout = layout_1.parseUnitLayout(this);\n    };\n    UnitModel.prototype.parseScale = function () {\n        this.component.scale = scale_2.parseScaleComponent(this);\n    };\n    UnitModel.prototype.parseMark = function () {\n        this.component.mark = mark_2.parseMark(this);\n    };\n    UnitModel.prototype.parseAxis = function () {\n        this.component.axis = axis_1.parseAxisComponent(this, [channel_1.X, channel_1.Y]);\n    };\n    UnitModel.prototype.parseAxisGroup = function () {\n        return null;\n    };\n    UnitModel.prototype.parseGridGroup = function () {\n        return null;\n    };\n    UnitModel.prototype.parseLegend = function () {\n        this.component.legend = legend_1.parseLegendComponent(this);\n    };\n    UnitModel.prototype.assembleData = function (data) {\n        return data_2.assembleData(this, data);\n    };\n    UnitModel.prototype.assembleLayout = function (layoutData) {\n        return layout_1.assembleLayout(this, layoutData);\n    };\n    UnitModel.prototype.assembleMarks = function () {\n        return this.component.mark;\n    };\n    UnitModel.prototype.assembleParentGroupProperties = function (cellConfig) {\n        return common_1.applyConfig({}, cellConfig, common_1.FILL_STROKE_CONFIG.concat(['clip']));\n    };\n    UnitModel.prototype.channels = function () {\n        return channel_1.UNIT_CHANNELS;\n    };\n    UnitModel.prototype.mapping = function () {\n        return this.encoding();\n    };\n    UnitModel.prototype.stack = function () {\n        return this._stack;\n    };\n    UnitModel.prototype.toSpec = function (excludeConfig, excludeData) {\n        var encoding = util_1.duplicate(this._encoding);\n        var spec;\n        spec = {\n            mark: this._mark,\n            encoding: encoding\n        };\n        if (!excludeConfig) {\n            spec.config = util_1.duplicate(this._config);\n        }\n        if (!excludeData) {\n            spec.data = util_1.duplicate(this._data);\n        }\n        return spec;\n    };\n    UnitModel.prototype.mark = function () {\n        return this._mark;\n    };\n    UnitModel.prototype.has = function (channel) {\n        return vlEncoding.has(this._encoding, channel);\n    };\n    UnitModel.prototype.encoding = function () {\n        return this._encoding;\n    };\n    UnitModel.prototype.fieldDef = function (channel) {\n        return this._encoding[channel] || {};\n    };\n    UnitModel.prototype.field = function (channel, opt) {\n        if (opt === void 0) { opt = {}; }\n        var fieldDef = this.fieldDef(channel);\n        if (fieldDef.bin) {\n            opt = util_1.extend({\n                binSuffix: this.scale(channel).type === scale_1.ScaleType.ORDINAL ? '_range' : '_start'\n            }, opt);\n        }\n        return fielddef_1.field(fieldDef, opt);\n    };\n    UnitModel.prototype.dataTable = function () {\n        return this.dataName(vlEncoding.isAggregate(this._encoding) ? data_1.SUMMARY : data_1.SOURCE);\n    };\n    UnitModel.prototype.isUnit = function () {\n        return true;\n    };\n    return UnitModel;\n}(model_1.Model));\nexports.UnitModel = UnitModel;\n//# sourceMappingURL=unit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/unit.js\n// module id = zYzi\n// module chunks = 0","var dl = require('datalib'),\n    d3_svg = require('d3').svg,\n    parse = require('../path/parse');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return (o.x || 0) + (o.width || 0); }\nfunction yh(o)    { return (o.y || 0) + (o.height || 0); }\nfunction size(o)  { return o.size == null ? 100 : o.size; }\nfunction shape(o) { return o.shape || 'circle'; }\n\nvar areav = d3_svg.area().x(x).y1(y).y0(yh),\n    areah = d3_svg.area().y(y).x1(x).x0(xw),\n    line  = d3_svg.line().x(x).y(y);\n\nmodule.exports = {\n  metadata: {\n    'version': '1.1',\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n  },\n  path: {\n    arc: d3_svg.arc(),\n    symbol: d3_svg.symbol().type(shape).size(size),\n    area: function(items) {\n      var o = items[0];\n      return (o.orient === 'horizontal' ? areah : areav)\n        .interpolate(o.interpolate || 'linear')\n        .tension(o.tension || 0.7)\n        (items);\n    },\n    line: function(items) {\n      var o = items[0];\n      return line\n        .interpolate(o.interpolate || 'linear')\n        .tension(o.tension || 0.7)\n        (items);\n    },\n    resize: function(pathStr, size) {\n      var path = parse(pathStr),\n          newPath = '',\n          command, current, index, i, n, j, m;\n\n      size = Math.sqrt(size);\n      for (i=0, n=path.length; i<n; ++i) {\n        for (command=path[i], j=0, m=command.length; j<m; ++j) {\n          if (command[j] === 'Z') break;\n          if ((current = +command[j]) === current) {\n            // if number, need to resize\n            index = pathStr.indexOf(current);\n            newPath += pathStr.substring(0, index) + (current * size);\n            pathStr  = pathStr.substring(index + (current+'').length);\n          }\n        }\n      }\n\n      return newPath + 'Z';\n    }\n  },\n  symbolTypes: dl.toMap(d3_svg.symbolTypes),\n  textAlign: {\n    'left':   'start',\n    'center': 'middle',\n    'right':  'end'\n  },\n  textBaseline: {\n    'top':    'before-edge',\n    'bottom': 'after-edge',\n    'middle': 'central'\n  },\n  styles: {\n    'fill':             'fill',\n    'fillOpacity':      'fill-opacity',\n    'stroke':           'stroke',\n    'strokeWidth':      'stroke-width',\n    'strokeOpacity':    'stroke-opacity',\n    'strokeCap':        'stroke-linecap',\n    'strokeDash':       'stroke-dasharray',\n    'strokeDashOffset': 'stroke-dashoffset',\n    'opacity':          'opacity'\n  },\n  styleProperties: [\n    'fill',\n    'fillOpacity',\n    'stroke',\n    'strokeWidth',\n    'strokeOpacity',\n    'strokeCap',\n    'strokeDash',\n    'strokeDashOffset',\n    'opacity'\n  ]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/svg.js\n// module id = zhsD\n// module chunks = 0","var util = require('./util');\n\nvar dl = {\n  version:    require('../package.json').version,\n  load:       require('./import/load'),\n  read:       require('./import/read'),\n  type:       require('./import/type'),\n  Aggregator: require('./aggregate/aggregator'),\n  groupby:    require('./aggregate/groupby'),\n  bins:       require('./bins/bins'),\n  $bin:       require('./bins/histogram').$bin,\n  histogram:  require('./bins/histogram').histogram,\n  format:     require('./format'),\n  template:   require('./template'),\n  time:       require('./time')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./accessor'));\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\nutil.extend(dl.format, require('./format-tables'));\n\n// backwards-compatible, deprecated API\n// will remove in the future\ndl.print = {\n  table:   dl.format.table,\n  summary: dl.format.summary\n};\n\nmodule.exports = dl;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/index.js\n// module id = zicW\n// module chunks = 0"],"sourceRoot":""}