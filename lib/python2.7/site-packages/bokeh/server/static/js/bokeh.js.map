{"version":3,"sources":["/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/base.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/client/connection.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/client/session.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/bokeh_events.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/build_views.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/dom.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/dom_view.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/enums.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/has_props.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/hittest.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/layout/alignments.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/layout/layout_canvas.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/layout/side_panel.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/layout/solver.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/logging.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/properties.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/property_mixins.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/selection_manager.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/selector.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/settings.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/signaling.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/ui_events.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/array.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/bbox.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/callback.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/canvas.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/color.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/data_structures.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/eq.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/math.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/object.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/proj4.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/projections.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/refs.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/selection.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/serialization.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/spatial.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/string.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/svg_colors.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/templating.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/text.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/throttle.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/types.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/wheel.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/util/zoom.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/view.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/core/visuals.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/document.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/embed.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/main.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/model.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/annotation.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/arrow.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/arrow_head.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/band.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/box_annotation.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/color_bar.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/label.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/label_set.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/legend.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/legend_item.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/poly_annotation.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/span.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/text_annotation.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/title.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/toolbar_panel.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/tooltip.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/annotations/whisker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/axes/axis.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/axes/categorical_axis.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/axes/continuous_axis.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/axes/datetime_axis.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/axes/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/axes/linear_axis.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/axes/log_axis.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/callbacks/customjs.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/callbacks/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/callbacks/open_url.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/canvas/canvas.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/canvas/cartesian_frame.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/canvas/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/expressions/expression.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/expressions/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/expressions/stack.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/filters/boolean_filter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/filters/customjs_filter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/filters/filter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/filters/group_filter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/filters/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/filters/index_filter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/formatters/basic_tick_formatter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/formatters/categorical_tick_formatter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/formatters/datetime_tick_formatter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/formatters/func_tick_formatter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/formatters/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/formatters/log_tick_formatter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/formatters/mercator_tick_formatter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/formatters/numeral_tick_formatter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/formatters/printf_tick_formatter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/formatters/tick_formatter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/annular_wedge.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/annulus.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/arc.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/bezier.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/box.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/circle.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/ellipse.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/glyph.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/hbar.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/image.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/image_rgba.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/image_url.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/line.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/multi_line.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/oval.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/patch.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/patches.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/quad.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/quadratic.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/ray.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/rect.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/segment.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/step.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/text.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/vbar.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/wedge.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/glyphs/xy_glyph.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/graphs/graph_hit_test_policy.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/graphs/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/graphs/layout_provider.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/graphs/static_layout_provider.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/grids/grid.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/grids/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/layouts/box.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/layouts/column.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/layouts/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/layouts/layout_dom.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/layouts/row.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/layouts/spacer.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/layouts/widget_box.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/mappers/categorical_color_mapper.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/mappers/color_mapper.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/mappers/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/mappers/linear_color_mapper.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/mappers/log_color_mapper.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/markers/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/markers/marker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/plots/gmap_plot.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/plots/gmap_plot_canvas.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/plots/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/plots/plot.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/plots/plot_canvas.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/ranges/data_range.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/ranges/data_range1d.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/ranges/factor_range.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/ranges/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/ranges/range.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/ranges/range1d.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/renderers/glyph_renderer.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/renderers/graph_renderer.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/renderers/guide_renderer.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/renderers/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/renderers/renderer.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/scales/categorical_scale.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/scales/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/scales/linear_scale.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/scales/log_scale.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/scales/scale.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/sources/ajax_data_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/sources/cds_view.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/sources/column_data_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/sources/columnar_data_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/sources/data_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/sources/geojson_data_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/sources/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/sources/remote_data_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/adaptive_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/basic_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/categorical_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/composite_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/continuous_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/datetime_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/days_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/fixed_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/log_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/mercator_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/months_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/single_interval_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/util.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tickers/years_ticker.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/bbox_tile_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/dynamic_image_renderer.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/image_pool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/image_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/mercator_tile_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/quadkey_tile_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/tile_renderer.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/tile_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/tile_utils.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/tms_tile_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tiles/wmts_tile_source.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/actions/action_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/actions/help_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/actions/redo_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/actions/reset_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/actions/save_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/actions/undo_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/actions/zoom_in_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/actions/zoom_out_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/button_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/gestures/box_select_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/gestures/box_zoom_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/gestures/gesture_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/gestures/lasso_select_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/gestures/pan_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/gestures/poly_select_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/gestures/select_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/gestures/tap_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/gestures/wheel_pan_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/gestures/wheel_zoom_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/inspectors/crosshair_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/inspectors/hover_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/inspectors/inspect_tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/on_off_button.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/tool.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/tool_proxy.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/toolbar.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/toolbar_base.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/tools/toolbar_box.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/transforms/customjs_transform.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/transforms/dodge.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/transforms/index.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/transforms/interpolator.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/transforms/jitter.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/transforms/linear_interpolator.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/transforms/step_interpolator.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/models/transforms/transform.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/polyfill.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/protocol/message.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/protocol/receiver.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/safely.js","/home/travis/build/bokeh/bokeh/bokehjs/build/js/tree/version.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/canvas2svg/canvas2svg.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/d/auto-bind.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/d/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/array/#/clear.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/array/#/e-index-of.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/array/from/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/array/from/is-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/array/from/shim.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/function/is-arguments.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/function/is-function.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/function/noop.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/global.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/math/sign/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/math/sign/is-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/math/sign/shim.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/number/is-nan/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/number/is-nan/is-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/number/is-nan/shim.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/number/to-integer.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/number/to-pos-integer.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/_iterate.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/assign/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/assign/is-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/assign/shim.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/copy.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/create.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/for-each.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/is-callable.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/is-object.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/is-value.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/keys/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/keys/is-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/keys/shim.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/map.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/normalize-options.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/set-prototype-of/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/set-prototype-of/is-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/set-prototype-of/shim.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/valid-callable.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/valid-object.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/object/valid-value.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/string/#/contains/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/string/#/contains/is-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/string/#/contains/shim.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/string/is-string.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es5-ext/string/random-uniq.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-iterator/array.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-iterator/for-of.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-iterator/get.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-iterator/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-iterator/is-iterable.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-iterator/string.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-iterator/valid-iterable.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-promise/dist/es6-promise.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-set/implement.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-set/is-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-set/is-native-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-set/lib/iterator.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-set/polyfill.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-symbol/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-symbol/is-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-symbol/is-symbol.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-symbol/polyfill.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-symbol/validate-symbol.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-weak-map/implement.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-weak-map/is-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-weak-map/is-native-implemented.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/es6-weak-map/polyfill.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/event-emitter/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/hammerjs/hammer.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/constraint.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/expression.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/maptype.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/solver.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/strength.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/tsu/algorithm.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/tsu/array_base.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/tsu/associative_array.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/tsu/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/tsu/iterator.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/tsu/pair.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/kiwi/build/variable.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/numbro/numbro.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/Proj.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/adjust_axis.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/common/adjust_lon.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/common/msfnz.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/common/phi2z.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/common/sign.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/common/toPoint.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/common/tsfnz.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/constants/Datum.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/constants/Ellipsoid.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/constants/PrimeMeridian.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/constants/units.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/core.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/datum.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/datumUtils.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/datum_transform.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/defs.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/deriveConstants.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/extend.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/global.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/parseCode.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/projString.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/projections.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/projections/longlat.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/projections/merc.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/transform.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/proj4/lib/wkt.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/quickselect/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/rbush/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/sprintf-js/src/sprintf.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/timezone/index.js","/home/travis/build/bokeh/bokeh/bokehjs/node_modules/tslib/tslib.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACznvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACprehLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpvvvjlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpdhjptGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACphFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxjl0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjvspplanlnidA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjrlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACttHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjvUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChxtnxlhaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjxxhRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACttnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrvnzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjplNA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzvNA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzjiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdliBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxrhNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClvSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdndzrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzrvhcrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjjrnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChjprdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtpanBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnxthvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChhiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxhnjpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClhpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbzxBA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChnzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvtjyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxlIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnjzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChhtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClznEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvjPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACblIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbxjbrtefile":"generated.js","sourceRoot":"","sourcesContent":["/*base*/\nfunction _(require, module, exports) {\n    var models = require(135    /* ./models/index */);\n    var object_1 = require(30    /* ./core/util/object */);\n    exports.overrides = {};\n    var _all_models = object_1.clone(models);\n    exports.Models = function (name) {\n        var model = exports.overrides[name] || _all_models[name];\n        if (model == null) {\n            throw new Error('Model \\'' + name + '\\' does not exist. This could be due to a widget\\n                     or a custom model not being registered before first usage.');\n        }\n        return model;\n    };\n    exports.Models.register = function (name, model) {\n        exports.overrides[name] = model;\n    };\n    exports.Models.unregister = function (name) {\n        delete exports.overrides[name];\n    };\n    exports.Models.register_models = function (models, force, errorFn) {\n        if (force === void 0) {\n            force = false;\n        }\n        if (models == null)\n            return;\n        for (var name_1 in models) {\n            var model = models[name_1];\n            if (force || !_all_models.hasOwnProperty(name_1))\n                _all_models[name_1] = model;\n            else if (errorFn != null)\n                errorFn(name_1);\n            else\n                console.warn('Model \\'' + name_1 + '\\' was already registered');\n        }\n    };\n    exports.register_models = exports.Models.register_models;\n    exports.Models.registered_names = function () {\n        return Object.keys(_all_models);\n    };\n    // \"index\" is a map from the toplevel model IDs rendered by\n    // embed.coffee, to the view objects for those models. It doesn't\n    // contain all views, only those explicitly rendered to an element\n    // by embed.coffee.\n    exports.index = {};    \n}","/*client/connection*/\nfunction _(require, module, exports) {\n    var es6_promise_1 = require(302    /* es6-promise */);\n    var logging_1 = require(14    /* core/logging */);\n    var document_1 = require(47    /* document */);\n    var message_1 = require(245    /* protocol/message */);\n    var receiver_1 = require(246    /* protocol/receiver */);\n    var session_1 = require(2    /* ./session */);\n    exports.DEFAULT_SERVER_WEBSOCKET_URL = 'ws://localhost:5006/ws';\n    exports.DEFAULT_SESSION_ID = 'default';\n    var _connection_count = 0;\n    var ClientConnection = function () {\n        function ClientConnection(url, id, args_string, _on_have_session_hook, _on_closed_permanently_hook) {\n            if (url === void 0) {\n                url = exports.DEFAULT_SERVER_WEBSOCKET_URL;\n            }\n            if (id === void 0) {\n                id = exports.DEFAULT_SESSION_ID;\n            }\n            if (args_string === void 0) {\n                args_string = null;\n            }\n            if (_on_have_session_hook === void 0) {\n                _on_have_session_hook = null;\n            }\n            if (_on_closed_permanently_hook === void 0) {\n                _on_closed_permanently_hook = null;\n            }\n            this.url = url;\n            this.id = id;\n            this.args_string = args_string;\n            this._on_have_session_hook = _on_have_session_hook;\n            this._on_closed_permanently_hook = _on_closed_permanently_hook;\n            this._number = _connection_count++;\n            this.socket = null;\n            this.session = null;\n            this.closed_permanently = false;\n            this._current_handler = null;\n            this._pending_ack = null;\n            // null or [resolve,reject]\n            this._pending_replies = {};\n            // map reqid to [resolve,reject]\n            this._receiver = new receiver_1.Receiver();\n            logging_1.logger.debug('Creating websocket ' + this._number + ' to \\'' + this.url + '\\' session \\'' + this.id + '\\'');\n        }\n        ClientConnection.prototype.connect = function () {\n            var _this = this;\n            if (this.closed_permanently)\n                return es6_promise_1.Promise.reject(new Error('Cannot connect() a closed ClientConnection'));\n            if (this.socket != null)\n                return es6_promise_1.Promise.reject(new Error('Already connected'));\n            this._pending_replies = {};\n            this._current_handler = null;\n            try {\n                var versioned_url = this.url + '?bokeh-protocol-version=1.0&bokeh-session-id=' + this.id;\n                if (this.args_string != null && this.args_string.length > 0)\n                    versioned_url += '&' + this.args_string;\n                this.socket = new WebSocket(versioned_url);\n                return new es6_promise_1.Promise(function (resolve, reject) {\n                    // \"arraybuffer\" gives us binary data we can look at;\n                    // if we just needed an opaque blob we could use \"blob\"\n                    _this.socket.binaryType = 'arraybuffer';\n                    _this.socket.onopen = function () {\n                        return _this._on_open(resolve, reject);\n                    };\n                    _this.socket.onmessage = function (event) {\n                        return _this._on_message(event);\n                    };\n                    _this.socket.onclose = function (event) {\n                        return _this._on_close(event);\n                    };\n                    _this.socket.onerror = function () {\n                        return _this._on_error(reject);\n                    };\n                });\n            } catch (error) {\n                logging_1.logger.error('websocket creation failed to url: ' + this.url);\n                logging_1.logger.error(' - ' + error);\n                return es6_promise_1.Promise.reject(error);\n            }\n        };\n        ClientConnection.prototype.close = function () {\n            if (!this.closed_permanently) {\n                logging_1.logger.debug('Permanently closing websocket connection ' + this._number);\n                this.closed_permanently = true;\n                if (this.socket != null)\n                    this.socket.close(1000, 'close method called on ClientConnection ' + this._number);\n                this.session._connection_closed();\n                if (this._on_closed_permanently_hook != null) {\n                    this._on_closed_permanently_hook();\n                    this._on_closed_permanently_hook = null;\n                }\n            }\n        };\n        ClientConnection.prototype._schedule_reconnect = function (milliseconds) {\n            var _this = this;\n            var retry = function () {\n                // TODO commented code below until we fix reconnection to repull\n                // the document when required. Otherwise, we get a lot of\n                // confusing errors that are causing trouble when debugging.\n                /*\n            if (this.closed_permanently) {\n            */\n                if (!_this.closed_permanently)\n                    logging_1.logger.info('Websocket connection ' + _this._number + ' disconnected, will not attempt to reconnect');\n                return;    /*\n            } else {\n              logger.debug(`Attempting to reconnect websocket ${this._number}`)\n              this.connect()\n            }\n            */\n            };\n            setTimeout(retry, milliseconds);\n        };\n        ClientConnection.prototype.send = function (message) {\n            if (this.socket == null)\n                throw new Error('not connected so cannot send ' + message);\n            message.send(this.socket);\n        };\n        ClientConnection.prototype.send_with_reply = function (message) {\n            var _this = this;\n            var promise = new es6_promise_1.Promise(function (resolve, reject) {\n                _this._pending_replies[message.msgid()] = [\n                    resolve,\n                    reject\n                ];\n                _this.send(message);\n            });\n            return promise.then(function (message) {\n                if (message.msgtype() === 'ERROR')\n                    throw new Error('Error reply ' + message.content['text']);\n                else\n                    return message;\n            }, function (error) {\n                throw error;\n            });\n        };\n        ClientConnection.prototype._pull_doc_json = function () {\n            var message = message_1.Message.create('PULL-DOC-REQ', {});\n            var promise = this.send_with_reply(message);\n            return promise.then(function (reply) {\n                if (!('doc' in reply.content))\n                    throw new Error('No \\'doc\\' field in PULL-DOC-REPLY');\n                return reply.content['doc'];\n            }, function (error) {\n                throw error;\n            });\n        };\n        ClientConnection.prototype._repull_session_doc = function () {\n            var _this = this;\n            if (this.session == null)\n                logging_1.logger.debug('Pulling session for first time');\n            else\n                logging_1.logger.debug('Repulling session');\n            this._pull_doc_json().then(function (doc_json) {\n                if (_this.session == null) {\n                    if (_this.closed_permanently)\n                        logging_1.logger.debug('Got new document after connection was already closed');\n                    else {\n                        var document_2 = document_1.Document.from_json(doc_json);\n                        // Constructing models changes some of their attributes, we deal with that\n                        // here. This happens when models set attributes during construction\n                        // or initialization.\n                        var patch = document_1.Document._compute_patch_since_json(doc_json, document_2);\n                        if (patch.events.length > 0) {\n                            logging_1.logger.debug('Sending ' + patch.events.length + ' changes from model construction back to server');\n                            var patch_message = message_1.Message.create('PATCH-DOC', {}, patch);\n                            _this.send(patch_message);\n                        }\n                        _this.session = new session_1.ClientSession(_this, document_2, _this.id);\n                        logging_1.logger.debug('Created a new session from new pulled doc');\n                        if (_this._on_have_session_hook != null) {\n                            _this._on_have_session_hook(_this.session);\n                            _this._on_have_session_hook = null;\n                        }\n                    }\n                } else {\n                    _this.session.document.replace_with_json(doc_json);\n                    logging_1.logger.debug('Updated existing session with new pulled doc');\n                }\n            }, function (error) {\n                // handling the error here is useless because we wouldn't\n                // get errors from the resolve handler above, so see\n                // the catch below instead\n                throw error;\n            }).catch(function (error) {\n                if (console.trace != null)\n                    console.trace(error);\n                logging_1.logger.error('Failed to repull session ' + error);\n            });\n        };\n        ClientConnection.prototype._on_open = function (resolve, reject) {\n            var _this = this;\n            logging_1.logger.info('Websocket connection ' + this._number + ' is now open');\n            this._pending_ack = [\n                resolve,\n                reject\n            ];\n            this._current_handler = function (message) {\n                _this._awaiting_ack_handler(message);\n            };\n        };\n        ClientConnection.prototype._on_message = function (event) {\n            if (this._current_handler == null)\n                logging_1.logger.error('Got a message with no current handler set');\n            try {\n                this._receiver.consume(event.data);\n            } catch (e) {\n                this._close_bad_protocol(e.toString());\n            }\n            if (this._receiver.message == null)\n                return;\n            var msg = this._receiver.message;\n            var problem = msg.problem();\n            if (problem != null)\n                this._close_bad_protocol(problem);\n            this._current_handler(msg);\n        };\n        ClientConnection.prototype._on_close = function (event) {\n            var _this = this;\n            logging_1.logger.info('Lost websocket ' + this._number + ' connection, ' + event.code + ' (' + event.reason + ')');\n            this.socket = null;\n            if (this._pending_ack != null) {\n                this._pending_ack[1](new Error('Lost websocket connection, ' + event.code + ' (' + event.reason + ')'));\n                this._pending_ack = null;\n            }\n            var pop_pending = function () {\n                for (var reqid in _this._pending_replies) {\n                    var promise_funcs_1 = _this._pending_replies[reqid];\n                    delete _this._pending_replies[reqid];\n                    return promise_funcs_1;\n                }\n                return null;\n            };\n            var promise_funcs = pop_pending();\n            while (promise_funcs != null) {\n                promise_funcs[1]('Disconnected');\n                promise_funcs = pop_pending();\n            }\n            if (!this.closed_permanently)\n                this._schedule_reconnect(2000);\n        };\n        ClientConnection.prototype._on_error = function (reject) {\n            logging_1.logger.debug('Websocket error on socket ' + this._number);\n            reject(new Error('Could not open websocket'));\n        };\n        ClientConnection.prototype._close_bad_protocol = function (detail) {\n            logging_1.logger.error('Closing connection: ' + detail);\n            if (this.socket != null)\n                this.socket.close(1002, detail);    // 1002 = protocol error\n        };\n        ClientConnection.prototype._awaiting_ack_handler = function (message) {\n            var _this = this;\n            if (message.msgtype() === 'ACK') {\n                this._current_handler = function (message) {\n                    return _this._steady_state_handler(message);\n                };\n                // Reload any sessions\n                // TODO (havocp) there's a race where we might get a PATCH before\n                // we send and get a reply to our pulls.\n                this._repull_session_doc();\n                if (this._pending_ack != null) {\n                    this._pending_ack[0](this);\n                    this._pending_ack = null;\n                }\n            } else\n                this._close_bad_protocol('First message was not an ACK');\n        };\n        ClientConnection.prototype._steady_state_handler = function (message) {\n            if (message.reqid() in this._pending_replies) {\n                var promise_funcs = this._pending_replies[message.reqid()];\n                delete this._pending_replies[message.reqid()];\n                promise_funcs[0](message);\n            } else\n                this.session.handle(message);\n        };\n        return ClientConnection;\n    }();\n    exports.ClientConnection = ClientConnection;\n    // Returns a promise of a ClientSession\n    // The returned promise has a close() method in case you want to close before\n    // getting a session; session.close() works too once you have a session.\n    function pull_session(url, session_id, args_string) {\n        var connection;\n        var promise = new es6_promise_1.Promise(function (resolve, reject) {\n            connection = new ClientConnection(url, session_id, args_string, function (session) {\n                try {\n                    resolve(session);\n                } catch (error) {\n                    logging_1.logger.error('Promise handler threw an error, closing session ' + error);\n                    session.close();\n                    throw error;\n                }\n            }, function () {\n                // we rely on reject() as a no-op if we already resolved\n                reject(new Error('Connection was closed before we successfully pulled a session'));\n            });\n            return connection.connect().then(function (_) {\n                return undefined;\n            }, function (error) {\n                logging_1.logger.error('Failed to connect to Bokeh server ' + error);\n                throw error;\n            });\n        });\n        /*\n    // add a \"close\" method to the promise... too weird?\n    promise.close = () => {\n      connection.close()\n    }\n    */\n        return promise;\n    }\n    exports.pull_session = pull_session;    \n}","/*client/session*/\nfunction _(require, module, exports) {\n    var logging_1 = require(14    /* core/logging */);\n    var document_1 = require(47    /* document */);\n    var message_1 = require(245    /* protocol/message */);\n    var ClientSession = function () {\n        function ClientSession(_connection, document, id) {\n            var _this = this;\n            this._connection = _connection;\n            this.document = document;\n            /*Document*/\n            this.id = id;\n            this._document_listener = function (event) {\n                return _this._document_changed(event);\n            };\n            this.document.on_change(this._document_listener);\n            this.event_manager = this.document.event_manager;\n            this.event_manager.session = this;\n        }\n        ClientSession.prototype.handle = function (message) {\n            var msgtype = message.msgtype();\n            if (msgtype === 'PATCH-DOC')\n                this._handle_patch(message);\n            else if (msgtype === 'OK')\n                this._handle_ok(message);\n            else if (msgtype === 'ERROR')\n                this._handle_error(message);\n            else\n                logging_1.logger.debug('Doing nothing with message ' + message.msgtype());\n        };\n        ClientSession.prototype.close = function () {\n            this._connection.close();\n        };\n        ClientSession.prototype.send_event = function (event) {\n            var message = message_1.Message.create('EVENT', {}, JSON.stringify(event));\n            this._connection.send(message);\n        };\n        /*protected*/\n        ClientSession.prototype._connection_closed = function () {\n            this.document.remove_on_change(this._document_listener);\n        };\n        // Sends a request to the server for info about the server, such as its Bokeh\n        // version. Returns a promise, the value of the promise is a free-form dictionary\n        // of server details.\n        ClientSession.prototype.request_server_info = function () {\n            var message = message_1.Message.create('SERVER-INFO-REQ', {});\n            var promise = this._connection.send_with_reply(message);\n            return promise.then(function (reply) {\n                return reply.content;\n            });\n        };\n        // Sends some request to the server (no guarantee about which one) and returns\n        // a promise which is completed when the server replies. The purpose of this\n        // is that if you wait for the promise to be completed, you know the server\n        // has processed the request. This is useful when writing tests because once\n        // the server has processed this request it should also have processed any\n        // events or requests you sent previously, which means you can check for the\n        // results of that processing without a race condition. (This assumes the\n        // server processes events in sequence, which it mostly has to semantically,\n        // since reordering events might change the final state.)\n        ClientSession.prototype.force_roundtrip = function () {\n            return this.request_server_info().then(function (_) {\n                return undefined;\n            });\n        };\n        ClientSession.prototype._document_changed = function (event) {\n            // Filter out events that were initiated by the ClientSession itself\n            if (event.setter_id === this.id)\n                return;\n            // Filter out changes to attributes that aren't server-visible\n            if (event instanceof document_1.ModelChangedEvent && !(event.attr in event.model.serializable_attributes()))\n                return;\n            // TODO (havocp) the connection may be closed here, which will\n            // cause this send to throw an error - need to deal with it more cleanly.\n            var message = message_1.Message.create('PATCH-DOC', {}, this.document.create_json_patch([event]));\n            this._connection.send(message);\n        };\n        ClientSession.prototype._handle_patch = function (message) {\n            this.document.apply_json_patch(message.content, message.buffers, this.id);\n        };\n        ClientSession.prototype._handle_ok = function (message) {\n            logging_1.logger.trace('Unhandled OK reply to ' + message.reqid());\n        };\n        ClientSession.prototype._handle_error = function (message) {\n            logging_1.logger.error('Unhandled ERROR reply to ' + message.reqid() + ': ' + message.content['text']);\n        };\n        return ClientSession;\n    }();\n    exports.ClientSession = ClientSession;    \n}","/*core/bokeh_events*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var logging_1 = require(14    /* ./logging */);\n    var object_1 = require(30    /* ./util/object */);\n    var event_classes = {};\n    function register_event_class(event_name) {\n        return function (event_cls) {\n            event_cls.prototype.event_name = event_name;\n            event_classes[event_name] = event_cls;\n        };\n    }\n    exports.register_event_class = register_event_class;\n    function register_with_event(event_cls) {\n        var models = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            models[_i - 1] = arguments[_i];\n        }\n        var applicable_models = event_cls.prototype.applicable_models.concat(models);\n        event_cls.prototype.applicable_models = applicable_models;\n    }\n    exports.register_with_event = register_with_event;\n    var BokehEvent = function () {\n        function BokehEvent(options) {\n            if (options === void 0) {\n                options = {};\n            }\n            this.model_id = null;\n            this._options = options;\n            if (options.model_id) {\n                this.model_id = options.model_id;\n            }\n        }\n        BokehEvent.prototype.set_model_id = function (id) {\n            this._options.model_id = id;\n            this.model_id = id;\n            return this;\n        };\n        BokehEvent.prototype.is_applicable_to = function (obj) {\n            return this.applicable_models.some(function (model) {\n                return obj instanceof model;\n            });\n        };\n        BokehEvent.event_class = function (e) {\n            // Given an event with a type attribute matching the event_name,\n            // return the appropriate BokehEvent class\n            if (e.type) {\n                return event_classes[e.type];\n            } else {\n                logging_1.logger.warn('BokehEvent.event_class required events with a string type attribute');\n            }\n        };\n        BokehEvent.prototype.toJSON = function () {\n            return {\n                event_name: this.event_name,\n                event_values: object_1.clone(this._options)\n            };\n        };\n        BokehEvent.prototype._customize_event = function (_model) {\n            return this;\n        };\n        return BokehEvent;\n    }();\n    exports.BokehEvent = BokehEvent;\n    BokehEvent.prototype.applicable_models = [];\n    var ButtonClick = function (_super) {\n        tslib_1.__extends(ButtonClick, _super);\n        function ButtonClick() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ButtonClick = tslib_1.__decorate([register_event_class('button_click')], ButtonClick);\n        return ButtonClick;\n    }(BokehEvent);\n    exports.ButtonClick = ButtonClick;\n    // A UIEvent is an event originating on a PlotCanvas this includes\n    // DOM events such as keystrokes as well as hammer events and LOD events.\n    var UIEvent = function (_super) {\n        tslib_1.__extends(UIEvent, _super);\n        function UIEvent() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return UIEvent;\n    }(BokehEvent);\n    exports.UIEvent = UIEvent;\n    var LODStart = function (_super) {\n        tslib_1.__extends(LODStart, _super);\n        function LODStart() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LODStart = tslib_1.__decorate([register_event_class('lodstart')], LODStart);\n        return LODStart;\n    }(UIEvent);\n    exports.LODStart = LODStart;\n    var LODEnd = function (_super) {\n        tslib_1.__extends(LODEnd, _super);\n        function LODEnd() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LODEnd = tslib_1.__decorate([register_event_class('lodend')], LODEnd);\n        return LODEnd;\n    }(UIEvent);\n    exports.LODEnd = LODEnd;\n    var SelectionGeometry = function (_super) {\n        tslib_1.__extends(SelectionGeometry, _super);\n        function SelectionGeometry(options) {\n            var _this = _super.call(this, options) || this;\n            _this.geometry = options.geometry;\n            _this.final = options.final;\n            return _this;\n        }\n        SelectionGeometry = tslib_1.__decorate([register_event_class('selectiongeometry')], SelectionGeometry);\n        return SelectionGeometry;\n    }(UIEvent);\n    exports.SelectionGeometry = SelectionGeometry;\n    var Reset = function (_super) {\n        tslib_1.__extends(Reset, _super);\n        function Reset() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Reset = tslib_1.__decorate([register_event_class('reset')], Reset);\n        return Reset;\n    }(UIEvent);\n    exports.Reset = Reset;\n    var PointEvent = function (_super) {\n        tslib_1.__extends(PointEvent, _super);\n        function PointEvent(options) {\n            var _this = _super.call(this, options) || this;\n            _this.sx = options.sx;\n            _this.sy = options.sy;\n            _this.x = null;\n            _this.y = null;\n            return _this;\n        }\n        PointEvent.from_event = function (e, model_id) {\n            if (model_id === void 0) {\n                model_id = null;\n            }\n            return new this({\n                sx: e.bokeh['sx'],\n                sy: e.bokeh['sy'],\n                model_id: model_id\n            });\n        };\n        PointEvent.prototype._customize_event = function (plot) {\n            var xscale = plot.plot_canvas.frame.xscales['default'];\n            var yscale = plot.plot_canvas.frame.yscales['default'];\n            this.x = xscale.invert(this.sx);\n            this.y = yscale.invert(this.sy);\n            this._options['x'] = this.x;\n            this._options['y'] = this.y;\n            return this;\n        };\n        return PointEvent;\n    }(UIEvent);\n    exports.PointEvent = PointEvent;\n    var Pan = function (_super) {\n        tslib_1.__extends(Pan, _super);\n        function Pan(options) {\n            if (options === void 0) {\n                options = {};\n            }\n            var _this = _super.call(this, options) || this;\n            _this.delta_x = options.delta_x;\n            _this.delta_y = options.delta_y;\n            return _this;\n        }\n        Pan.from_event = function (e, model_id) {\n            if (model_id === void 0) {\n                model_id = null;\n            }\n            return new this({\n                sx: e.bokeh['sx'],\n                sy: e.bokeh['sy'],\n                delta_x: e.deltaX,\n                delta_y: e.deltaY,\n                direction: e.direction,\n                model_id: model_id\n            });\n        };\n        Pan = tslib_1.__decorate([register_event_class('pan')], Pan);\n        return Pan;\n    }(PointEvent);\n    exports.Pan = Pan;\n    var Pinch = function (_super) {\n        tslib_1.__extends(Pinch, _super);\n        function Pinch(options) {\n            if (options === void 0) {\n                options = {};\n            }\n            var _this = _super.call(this, options) || this;\n            _this.scale = options.scale;\n            return _this;\n        }\n        Pinch.from_event = function (e, model_id) {\n            if (model_id === void 0) {\n                model_id = null;\n            }\n            return new this({\n                sx: e.bokeh['sx'],\n                sy: e.bokeh['sy'],\n                scale: e.scale,\n                model_id: model_id\n            });\n        };\n        Pinch = tslib_1.__decorate([register_event_class('pinch')], Pinch);\n        return Pinch;\n    }(PointEvent);\n    exports.Pinch = Pinch;\n    var MouseWheel = function (_super) {\n        tslib_1.__extends(MouseWheel, _super);\n        function MouseWheel(options) {\n            if (options === void 0) {\n                options = {};\n            }\n            var _this = _super.call(this, options) || this;\n            _this.delta = options.delta;\n            return _this;\n        }\n        MouseWheel.from_event = function (e, model_id) {\n            if (model_id === void 0) {\n                model_id = null;\n            }\n            return new this({\n                sx: e.bokeh['sx'],\n                sy: e.bokeh['sy'],\n                delta: e.bokeh['delta'],\n                model_id: model_id\n            });\n        };\n        MouseWheel = tslib_1.__decorate([register_event_class('wheel')], MouseWheel);\n        return MouseWheel;\n    }(PointEvent);\n    exports.MouseWheel = MouseWheel;\n    var MouseMove = function (_super) {\n        tslib_1.__extends(MouseMove, _super);\n        function MouseMove() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MouseMove = tslib_1.__decorate([register_event_class('mousemove')], MouseMove);\n        return MouseMove;\n    }(PointEvent);\n    exports.MouseMove = MouseMove;\n    var MouseEnter = function (_super) {\n        tslib_1.__extends(MouseEnter, _super);\n        function MouseEnter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MouseEnter = tslib_1.__decorate([register_event_class('mouseenter')], MouseEnter);\n        return MouseEnter;\n    }(PointEvent);\n    exports.MouseEnter = MouseEnter;\n    var MouseLeave = function (_super) {\n        tslib_1.__extends(MouseLeave, _super);\n        function MouseLeave() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MouseLeave = tslib_1.__decorate([register_event_class('mouseleave')], MouseLeave);\n        return MouseLeave;\n    }(PointEvent);\n    exports.MouseLeave = MouseLeave;\n    var Tap = function (_super) {\n        tslib_1.__extends(Tap, _super);\n        function Tap() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Tap = tslib_1.__decorate([register_event_class('tap')], Tap);\n        return Tap;\n    }(PointEvent);\n    exports.Tap = Tap;\n    var DoubleTap = function (_super) {\n        tslib_1.__extends(DoubleTap, _super);\n        function DoubleTap() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DoubleTap = tslib_1.__decorate([register_event_class('doubletap')], DoubleTap);\n        return DoubleTap;\n    }(PointEvent);\n    exports.DoubleTap = DoubleTap;\n    var Press = function (_super) {\n        tslib_1.__extends(Press, _super);\n        function Press() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Press = tslib_1.__decorate([register_event_class('press')], Press);\n        return Press;\n    }(PointEvent);\n    exports.Press = Press;\n    var PanStart = function (_super) {\n        tslib_1.__extends(PanStart, _super);\n        function PanStart() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PanStart = tslib_1.__decorate([register_event_class('panstart')], PanStart);\n        return PanStart;\n    }(PointEvent);\n    exports.PanStart = PanStart;\n    var PanEnd = function (_super) {\n        tslib_1.__extends(PanEnd, _super);\n        function PanEnd() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PanEnd = tslib_1.__decorate([register_event_class('panend')], PanEnd);\n        return PanEnd;\n    }(PointEvent);\n    exports.PanEnd = PanEnd;\n    var PinchStart = function (_super) {\n        tslib_1.__extends(PinchStart, _super);\n        function PinchStart() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PinchStart = tslib_1.__decorate([register_event_class('pinchstart')], PinchStart);\n        return PinchStart;\n    }(PointEvent);\n    exports.PinchStart = PinchStart;\n    var PinchEnd = function (_super) {\n        tslib_1.__extends(PinchEnd, _super);\n        function PinchEnd() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PinchEnd = tslib_1.__decorate([register_event_class('pinchend')], PinchEnd);\n        return PinchEnd;\n    }(PointEvent);\n    exports.PinchEnd = PinchEnd;    \n}","/*core/build_views*/\nfunction _(require, module, exports) {\n    var array_1 = require(22    /* ./util/array */);\n    var object_1 = require(30    /* ./util/object */);\n    function build_views(view_storage, models, options, cls) {\n        if (cls === void 0) {\n            cls = function (model) {\n                return model.default_view;\n            };\n        }\n        var to_remove = array_1.difference(Object.keys(view_storage), models.map(function (model) {\n            return model.id;\n        }));\n        for (var _i = 0, to_remove_1 = to_remove; _i < to_remove_1.length; _i++) {\n            var model_id = to_remove_1[_i];\n            view_storage[model_id].remove();\n            delete view_storage[model_id];\n        }\n        var created_views = [];\n        var new_models = models.filter(function (model) {\n            return view_storage[model.id] == null;\n        });\n        for (var _a = 0, new_models_1 = new_models; _a < new_models_1.length; _a++) {\n            var model = new_models_1[_a];\n            var view_cls = cls(model);\n            var view_options = object_1.extend({}, options, {\n                model: model,\n                connect_signals: false\n            });\n            var view = new view_cls(view_options);\n            view_storage[model.id] = view;\n            created_views.push(view);\n        }\n        for (var _b = 0, created_views_1 = created_views; _b < created_views_1.length; _b++) {\n            var view = created_views_1[_b];\n            view.connect_signals();\n        }\n        return created_views;\n    }\n    exports.build_views = build_views;\n    function remove_views(view_storage) {\n        for (var id in view_storage) {\n            view_storage[id].remove();\n            delete view_storage[id];\n        }\n    }\n    exports.remove_views = remove_views;    \n}","/*core/dom*/\nfunction _(require, module, exports) {\n    var types_1 = require(42    /* ./util/types */);\n    var _createElement = function (tag) {\n        return function (attrs) {\n            if (attrs === void 0) {\n                attrs = {};\n            }\n            var children = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                children[_i - 1] = arguments[_i];\n            }\n            var element = document.createElement(tag);\n            for (var attr in attrs) {\n                var value = attrs[attr];\n                if (value == null || types_1.isBoolean(value) && !value)\n                    continue;\n                if (attr === 'class' && types_1.isArray(value)) {\n                    for (var _a = 0, _b = value; _a < _b.length; _a++) {\n                        var cls = _b[_a];\n                        if (cls != null)\n                            element.classList.add(cls);\n                    }\n                    continue;\n                }\n                if (attr === 'style' && types_1.isObject(value)) {\n                    for (var prop in value) {\n                        element.style[prop] = value[prop];\n                    }\n                    continue;\n                }\n                if (attr === 'data' && types_1.isObject(value)) {\n                    for (var key in value) {\n                        element.dataset[key] = value[key];\n                    }\n                    continue;\n                }\n                element.setAttribute(attr, value);\n            }\n            function append(child) {\n                if (child instanceof HTMLElement)\n                    element.appendChild(child);\n                else if (types_1.isString(child))\n                    element.appendChild(document.createTextNode(child));\n                else if (child != null && child !== false)\n                    throw new Error('expected an HTMLElement, string, false or null, got ' + JSON.stringify(child));\n            }\n            for (var _c = 0, children_1 = children; _c < children_1.length; _c++) {\n                var child = children_1[_c];\n                if (types_1.isArray(child)) {\n                    for (var _d = 0, child_1 = child; _d < child_1.length; _d++) {\n                        var _child = child_1[_d];\n                        append(_child);\n                    }\n                } else\n                    append(child);\n            }\n            return element;\n        };\n    };\n    function createElement(tag, attrs) {\n        var children = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            children[_i - 2] = arguments[_i];\n        }\n        return _createElement(tag).apply(void 0, [attrs].concat(children));\n    }\n    exports.createElement = createElement;\n    exports.div = _createElement('div'), exports.span = _createElement('span'), exports.link = _createElement('link'), exports.style = _createElement('style'), exports.a = _createElement('a'), exports.p = _createElement('p'), exports.pre = _createElement('pre'), exports.button = _createElement('button'), exports.label = _createElement('label'), exports.input = _createElement('input'), exports.select = _createElement('select'), exports.option = _createElement('option'), exports.optgroup = _createElement('optgroup'), exports.canvas = _createElement('canvas'), exports.ul = _createElement('ul'), exports.ol = _createElement('ol'), exports.li = _createElement('li');\n    exports.nbsp = document.createTextNode('\\xA0');\n    function removeElement(element) {\n        var parent = element.parentNode;\n        if (parent != null) {\n            parent.removeChild(element);\n        }\n    }\n    exports.removeElement = removeElement;\n    function replaceWith(element, replacement) {\n        var parent = element.parentNode;\n        if (parent != null) {\n            parent.replaceChild(replacement, element);\n        }\n    }\n    exports.replaceWith = replaceWith;\n    function prepend(element) {\n        var nodes = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            nodes[_i - 1] = arguments[_i];\n        }\n        var first = element.firstChild;\n        for (var _a = 0, nodes_1 = nodes; _a < nodes_1.length; _a++) {\n            var node = nodes_1[_a];\n            element.insertBefore(node, first);\n        }\n    }\n    exports.prepend = prepend;\n    function empty(element) {\n        var child;\n        while (child = element.firstChild) {\n            element.removeChild(child);\n        }\n    }\n    exports.empty = empty;\n    function show(element) {\n        element.style.display = '';\n    }\n    exports.show = show;\n    function hide(element) {\n        element.style.display = 'none';\n    }\n    exports.hide = hide;\n    function position(element) {\n        return {\n            top: element.offsetTop,\n            left: element.offsetLeft\n        };\n    }\n    exports.position = position;\n    function offset(element) {\n        var rect = element.getBoundingClientRect();\n        return {\n            top: rect.top + window.pageYOffset - document.documentElement.clientTop,\n            left: rect.left + window.pageXOffset - document.documentElement.clientLeft\n        };\n    }\n    exports.offset = offset;\n    function matches(el, selector) {\n        var p = Element.prototype;\n        var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector;\n        return f.call(el, selector);\n    }\n    exports.matches = matches;\n    function parent(el, selector) {\n        var node = el;\n        while (node = node.parentElement) {\n            if (matches(node, selector))\n                return node;\n        }\n        return null;\n    }\n    exports.parent = parent;\n    var Keys;\n    (function (Keys) {\n        Keys[Keys['Tab'] = 9] = 'Tab';\n        Keys[Keys['Enter'] = 13] = 'Enter';\n        Keys[Keys['Esc'] = 27] = 'Esc';\n        Keys[Keys['PageUp'] = 33] = 'PageUp';\n        Keys[Keys['PageDown'] = 34] = 'PageDown';\n        Keys[Keys['Up'] = 38] = 'Up';\n        Keys[Keys['Down'] = 40] = 'Down';\n    }(Keys = exports.Keys || (exports.Keys = {})));    \n}","/*core/dom_view*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var view_1 = require(45    /* ./view */);\n    var DOM = require(5    /* ./dom */);\n    var DOMView = function (_super) {\n        tslib_1.__extends(DOMView, _super);\n        function DOMView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DOMView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this._has_finished = false;\n            this.el = this._createElement();\n        };\n        DOMView.prototype.remove = function () {\n            DOM.removeElement(this.el);\n            _super.prototype.remove.call(this);\n        };\n        DOMView.prototype.layout = function () {\n        };\n        DOMView.prototype.render = function () {\n        };\n        DOMView.prototype.renderTo = function (element, replace) {\n            if (replace === void 0) {\n                replace = false;\n            }\n            if (!replace)\n                element.appendChild(this.el);\n            else\n                DOM.replaceWith(element, this.el);\n            this.layout();\n        };\n        DOMView.prototype.has_finished = function () {\n            return this._has_finished;\n        };\n        Object.defineProperty(DOMView.prototype, '_root_element', {\n            get: function () {\n                return DOM.parent(this.el, '.bk-root');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DOMView.prototype, 'solver', {\n            get: function () {\n                return this.is_root ? this._solver : this.parent.solver;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DOMView.prototype, 'is_idle', {\n            get: function () {\n                return this.has_finished();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DOMView.prototype._createElement = function () {\n            return DOM.createElement(this.tagName, {\n                id: this.id,\n                class: this.className\n            });\n        };\n        return DOMView;\n    }(view_1.View);\n    exports.DOMView = DOMView;\n    DOMView.prototype.tagName = 'div';\n    DOMView.prototype.className = null;    \n}","/*core/enums*/\nfunction _(require, module, exports) {\n    exports.AngleUnits = [\n        'deg',\n        'rad'\n    ];\n    exports.Dimension = [\n        'width',\n        'height'\n    ];\n    exports.Dimensions = [\n        'width',\n        'height',\n        'both'\n    ];\n    exports.Direction = [\n        'clock',\n        'anticlock'\n    ];\n    exports.FontStyle = [\n        'normal',\n        'italic',\n        'bold'\n    ];\n    exports.LatLon = [\n        'lat',\n        'lon'\n    ];\n    exports.LineCap = [\n        'butt',\n        'round',\n        'square'\n    ];\n    exports.LineJoin = [\n        'miter',\n        'round',\n        'bevel'\n    ];\n    exports.Location = [\n        'above',\n        'below',\n        'left',\n        'right'\n    ];\n    exports.LegendLocation = [\n        'top_left',\n        'top_center',\n        'top_right',\n        'center_left',\n        'center',\n        'center_right',\n        'bottom_left',\n        'bottom_center',\n        'bottom_right'\n    ];\n    exports.Orientation = [\n        'vertical',\n        'horizontal'\n    ];\n    exports.OutputBackend = [\n        'canvas',\n        'svg',\n        'webgl'\n    ];\n    exports.RenderLevel = [\n        'image',\n        'underlay',\n        'glyph',\n        'annotation',\n        'overlay'\n    ];\n    exports.RenderMode = [\n        'canvas',\n        'css'\n    ];\n    exports.Side = [\n        'left',\n        'right'\n    ];\n    exports.SpatialUnits = [\n        'screen',\n        'data'\n    ];\n    exports.StartEnd = [\n        'start',\n        'end'\n    ];\n    exports.VerticalAlign = [\n        'top',\n        'middle',\n        'bottom'\n    ];\n    exports.TextAlign = [\n        'left',\n        'right',\n        'center'\n    ];\n    exports.TextBaseline = [\n        'top',\n        'middle',\n        'bottom',\n        'alphabetic',\n        'hanging',\n        'ideographic'\n    ];\n    exports.DistributionTypes = [\n        'uniform',\n        'normal'\n    ];\n    exports.StepModes = [\n        'after',\n        'before',\n        'center'\n    ];\n    exports.SizingMode = [\n        'stretch_both',\n        'scale_width',\n        'scale_height',\n        'scale_both',\n        'fixed'\n    ];\n    exports.PaddingUnits = [\n        'percent',\n        'absolute'\n    ];    \n}","/*core/has_props*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var signaling_1 = require(20    /* ./signaling */);\n    var property_mixins = require(16    /* ./property_mixins */);\n    var refs_1 = require(33    /* ./util/refs */);\n    var p = require(15    /* ./properties */);\n    var string_1 = require(37    /* ./util/string */);\n    var array_1 = require(22    /* ./util/array */);\n    var object_1 = require(30    /* ./util/object */);\n    var types_1 = require(42    /* ./util/types */);\n    var eq_1 = require(28    /* ./util/eq */);\n    var HasProps = function (_super) {\n        tslib_1.__extends(HasProps, _super);\n        function HasProps(attributes, options) {\n            if (attributes === void 0) {\n                attributes = {};\n            }\n            if (options === void 0) {\n                options = {};\n            }\n            var _this = _super.call(this) || this;\n            _this._subtype = undefined;\n            _this.document = null;\n            _this.destroyed = new signaling_1.Signal(_this, 'destroyed');\n            _this.change = new signaling_1.Signal(_this, 'change');\n            _this.transformchange = new signaling_1.Signal(_this, 'transformchange');\n            _this.attributes = {};\n            _this.properties = {};\n            _this._set_after_defaults = {};\n            _this._pending = false;\n            _this._changing = false;\n            for (var name_1 in _this.props) {\n                var _a = _this.props[name_1], type = _a.type, default_value = _a.default_value;\n                if (type != null)\n                    _this.properties[name_1] = new type(_this, name_1, default_value);\n                else\n                    throw new Error('undefined property type for ' + _this.type + '.' + name_1);\n            }\n            // auto generating ID\n            if (attributes.id == null)\n                _this.setv([\n                    'id',\n                    string_1.uniqueId()\n                ], { silent: true });\n            _this.setv(attributes, object_1.extend({ silent: true }, options));\n            // allowing us to defer initialization when loading many models\n            // when loading a bunch of models, we want to do initialization as a second pass\n            // because other objects that this one depends on might not be loaded yet\n            if (!options.defer_initialization)\n                _this.finalize(attributes, options);\n            return _this;\n        }\n        // }}}\n        HasProps.getters = function (specs) {\n            for (var name_2 in specs) {\n                var fn = specs[name_2];\n                Object.defineProperty(this.prototype, name_2, { get: fn });\n            }\n        };\n        HasProps._fix_default = function (default_value, _attr) {\n            if (default_value === undefined)\n                return undefined;\n            else if (types_1.isFunction(default_value))\n                return default_value;\n            else if (!types_1.isObject(default_value))\n                return function () {\n                    return default_value;\n                };\n            else {\n                //logger.warn(`${this.prototype.type}.${attr} uses unwrapped non-primitive default value`)\n                if (types_1.isArray(default_value))\n                    return function () {\n                        return array_1.copy(default_value);\n                    };\n                else\n                    return function () {\n                        return object_1.clone(default_value);\n                    };\n            }\n        };\n        HasProps.define = function (obj) {\n            var _loop_1 = function (name_3) {\n                var prop = obj[name_3];\n                if (this_1.prototype.props[name_3] != null)\n                    throw new Error('attempted to redefine property \\'' + this_1.prototype.type + '.' + name_3 + '\\'');\n                if (this_1.prototype[name_3] != null)\n                    throw new Error('attempted to redefine attribute \\'' + this_1.prototype.type + '.' + name_3 + '\\'');\n                Object.defineProperty(this_1.prototype, name_3, {\n                    // XXX: don't use tail calls in getters/setters due to https://bugs.webkit.org/show_bug.cgi?id=164306\n                    get: function () {\n                        var value = this.getv(name_3);\n                        return value;\n                    },\n                    set: function (value) {\n                        this.setv([\n                            name_3,\n                            value\n                        ]);\n                        return this;\n                    },\n                    configurable: false,\n                    enumerable: true\n                });\n                var type = prop[0], default_value = prop[1], internal = prop[2];\n                var refined_prop = {\n                    type: type,\n                    default_value: this_1._fix_default(default_value, name_3),\n                    internal: internal || false\n                };\n                var props = object_1.clone(this_1.prototype.props);\n                props[name_3] = refined_prop;\n                this_1.prototype.props = props;\n            };\n            var this_1 = this;\n            for (var name_3 in obj) {\n                _loop_1(name_3);\n            }\n        };\n        HasProps.internal = function (obj) {\n            var _object = {};\n            for (var name_4 in obj) {\n                var prop = obj[name_4];\n                var type = prop[0], default_value = prop[1];\n                _object[name_4] = [\n                    type,\n                    default_value,\n                    true\n                ];\n            }\n            this.define(_object);\n        };\n        HasProps.mixin = function () {\n            var names = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                names[_i] = arguments[_i];\n            }\n            this.define(property_mixins.create(names));\n            var mixins = this.prototype.mixins.concat(names);\n            this.prototype.mixins = mixins;\n        };\n        HasProps.mixins = function (names) {\n            this.mixin.apply(this, names);\n        };\n        HasProps.override = function (obj) {\n            for (var name_5 in obj) {\n                var default_value = this._fix_default(obj[name_5], name_5);\n                var value = this.prototype.props[name_5];\n                if (value == null)\n                    throw new Error('attempted to override nonexistent \\'' + this.prototype.type + '.' + name_5 + '\\'');\n                var props = object_1.clone(this.prototype.props);\n                props[name_5] = object_1.extend({}, value, { default_value: default_value });\n                this.prototype.props = props;\n            }\n        };\n        HasProps.prototype.toString = function () {\n            return this.type + '(' + this.id + ')';\n        };\n        HasProps.prototype.finalize = function (attributes, options) {\n            var _this = this;\n            // This is necessary because the initial creation of properties relies on\n            // model.get which is not usable at that point yet in the constructor. This\n            // initializer is called when deferred initialization happens for all models\n            // and insures that the Bokeh properties are initialized from Backbone\n            // attributes in a consistent way.\n            //\n            // TODO (bev) split property creation up into two parts so that only the\n            // portion of init that can be done happens in HasProps constructor and so\n            // that subsequent updates do not duplicate that setup work.\n            for (var name_6 in this.properties) {\n                var prop = this.properties[name_6];\n                prop.update();\n                if (prop.spec.transform != null)\n                    this.connect(prop.spec.transform.change, function () {\n                        return _this.transformchange.emit(undefined);\n                    });\n            }\n            this.initialize(attributes, options);\n            this.connect_signals();\n        };\n        HasProps.prototype.initialize = function (_attributes, _options) {\n        };\n        HasProps.prototype.connect_signals = function () {\n        };\n        HasProps.prototype.disconnect_signals = function () {\n            signaling_1.Signal.disconnectReceiver(this);\n        };\n        HasProps.prototype.destroy = function () {\n            this.disconnect_signals();\n            this.destroyed.emit(undefined);\n        };\n        // Create a new model with identical attributes to this one.\n        HasProps.prototype.clone = function () {\n            return new this.constructor(this.attributes);\n        };\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\n        // the core primitive operation of a model, updating the data and notifying\n        // anyone who needs to know about the change in state. The heart of the beast.\n        HasProps.prototype._setv = function (attrs, options) {\n            // Extract attributes and options.\n            var check_eq = options.check_eq;\n            var silent = options.silent;\n            var changes = [];\n            var changing = this._changing;\n            this._changing = true;\n            var current = this.attributes;\n            // For each `set` attribute, update or delete the current value.\n            for (var attr in attrs) {\n                var val = attrs[attr];\n                if (check_eq !== false) {\n                    if (!eq_1.isEqual(current[attr], val))\n                        changes.push(attr);\n                } else\n                    changes.push(attr);\n                current[attr] = val;\n            }\n            // Trigger all relevant attribute changes.\n            if (!silent) {\n                if (changes.length > 0)\n                    this._pending = true;\n                for (var i = 0; i < changes.length; i++)\n                    this.properties[changes[i]].change.emit(current[changes[i]]);\n            }\n            // You might be wondering why there's a `while` loop here. Changes can\n            // be recursively nested within `\"change\"` events.\n            if (changing)\n                return;\n            if (!silent && !options.no_change) {\n                while (this._pending) {\n                    this._pending = false;\n                    this.change.emit(undefined);\n                }\n            }\n            this._pending = false;\n            this._changing = false;\n        };\n        HasProps.prototype.setv = function (obj, options) {\n            if (options === void 0) {\n                options = {};\n            }\n            var attrs = {};\n            if (types_1.isArray(obj)) {\n                var _a = obj, attr = _a[0], value = _a[1];\n                attrs[attr] = value;\n            } else\n                attrs = obj;\n            for (var key in attrs) {\n                if (!attrs.hasOwnProperty(key))\n                    continue;\n                var prop_name = key;\n                if (this.props[prop_name] == null)\n                    throw new Error('property ' + this.type + '.' + prop_name + ' wasn\\'t declared');\n                if (!(options != null && options.defaults))\n                    this._set_after_defaults[key] = true;\n            }\n            if (!object_1.isEmpty(attrs)) {\n                var old = {};\n                for (var key in attrs)\n                    old[key] = this.getv(key);\n                this._setv(attrs, options);\n                var silent = options.silent;\n                if (silent == null || !silent) {\n                    for (var key in attrs)\n                        this._tell_document_about_change(key, old[key], this.getv(key), options);\n                }\n            }\n        };\n        HasProps.prototype.getv = function (prop_name) {\n            if (this.props[prop_name] == null)\n                throw new Error('property ' + this.type + '.' + prop_name + ' wasn\\'t declared');\n            else\n                return this.attributes[prop_name];\n        };\n        HasProps.prototype.ref = function () {\n            return refs_1.create_ref(this);\n        };\n        // we only keep the subtype so we match Python;\n        // only Python cares about this\n        HasProps.prototype.set_subtype = function (subtype) {\n            this._subtype = subtype;\n        };\n        HasProps.prototype.attribute_is_serializable = function (attr) {\n            var prop = this.props[attr];\n            if (prop == null)\n                throw new Error(this.type + '.attribute_is_serializable(\\'' + attr + '\\'): ' + attr + ' wasn\\'t declared');\n            else\n                return !prop.internal;\n        };\n        // dict of attributes that should be serialized to the server. We\n        // sometimes stick things in attributes that aren't part of the\n        // Document's models, subtypes that do that have to remove their\n        // extra attributes here.\n        HasProps.prototype.serializable_attributes = function () {\n            var attrs = {};\n            for (var name_7 in this.attributes) {\n                var value = this.attributes[name_7];\n                if (this.attribute_is_serializable(name_7))\n                    attrs[name_7] = value;\n            }\n            return attrs;\n        };\n        HasProps._value_to_json = function (_key, value, _optional_parent_object) {\n            if (value instanceof HasProps)\n                return value.ref();\n            else if (types_1.isArray(value)) {\n                var ref_array = [];\n                for (var i = 0; i < value.length; i++) {\n                    var v = value[i];\n                    ref_array.push(HasProps._value_to_json(i.toString(), v, value));\n                }\n                return ref_array;\n            } else if (types_1.isObject(value)) {\n                var ref_obj = {};\n                for (var subkey in value) {\n                    if (value.hasOwnProperty(subkey))\n                        ref_obj[subkey] = HasProps._value_to_json(subkey, value[subkey], value);\n                }\n                return ref_obj;\n            } else\n                return value;\n        };\n        // Convert attributes to \"shallow\" JSON (values which are themselves models\n        // are included as just references)\n        // TODO (havocp) can this just be toJSON (from Backbone / JSON.stingify?)\n        // backbone will have implemented a toJSON already that we may need to override\n        // optional value_to_json is for test to override with a \"deep\" version to replace the\n        // standard \"shallow\" HasProps._value_to_json\n        HasProps.prototype.attributes_as_json = function (include_defaults, value_to_json) {\n            if (include_defaults === void 0) {\n                include_defaults = true;\n            }\n            if (value_to_json === void 0) {\n                value_to_json = HasProps._value_to_json;\n            }\n            var serializable = this.serializable_attributes();\n            var attrs = {};\n            for (var key in serializable) {\n                if (serializable.hasOwnProperty(key)) {\n                    var value = serializable[key];\n                    if (include_defaults)\n                        attrs[key] = value;\n                    else if (key in this._set_after_defaults)\n                        attrs[key] = value;\n                }\n            }\n            return value_to_json('attributes', attrs, this);\n        };\n        // this is like _value_record_references but expects to find refs\n        // instead of models, and takes a doc to look up the refs in\n        HasProps._json_record_references = function (doc, v, result, recurse) {\n            if (v == null) {\n            } else if (refs_1.is_ref(v)) {\n                if (!(v.id in result)) {\n                    var model = doc.get_model_by_id(v.id);\n                    HasProps._value_record_references(model, result, recurse);\n                }\n            } else if (types_1.isArray(v)) {\n                for (var _i = 0, v_1 = v; _i < v_1.length; _i++) {\n                    var elem = v_1[_i];\n                    HasProps._json_record_references(doc, elem, result, recurse);\n                }\n            } else if (types_1.isObject(v)) {\n                for (var k in v) {\n                    if (v.hasOwnProperty(k)) {\n                        var elem = v[k];\n                        HasProps._json_record_references(doc, elem, result, recurse);\n                    }\n                }\n            }\n        };\n        // add all references from 'v' to 'result', if recurse\n        // is true then descend into refs, if false only\n        // descend into non-refs\n        HasProps._value_record_references = function (v, result, recurse) {\n            if (v == null) {\n            } else if (v instanceof HasProps) {\n                if (!(v.id in result)) {\n                    result[v.id] = v;\n                    if (recurse) {\n                        var immediate = v._immediate_references();\n                        for (var _i = 0, immediate_1 = immediate; _i < immediate_1.length; _i++) {\n                            var obj = immediate_1[_i];\n                            HasProps._value_record_references(obj, result, true);\n                        }    // true=recurse\n                    }\n                }\n            } else if (v.buffer instanceof ArrayBuffer) {\n            } else if (types_1.isArray(v)) {\n                for (var _a = 0, v_2 = v; _a < v_2.length; _a++) {\n                    var elem = v_2[_a];\n                    HasProps._value_record_references(elem, result, recurse);\n                }\n            } else if (types_1.isObject(v)) {\n                for (var k in v) {\n                    if (v.hasOwnProperty(k)) {\n                        var elem = v[k];\n                        HasProps._value_record_references(elem, result, recurse);\n                    }\n                }\n            }\n        };\n        // Get models that are immediately referenced by our properties\n        // (do not recurse, do not include ourselves)\n        HasProps.prototype._immediate_references = function () {\n            var result = {};\n            var attrs = this.serializable_attributes();\n            for (var key in attrs) {\n                var value = attrs[key];\n                HasProps._value_record_references(value, result, false);    // false = no recurse\n            }\n            return object_1.values(result);\n        };\n        HasProps.prototype.references = function () {\n            var references = {};\n            HasProps._value_record_references(this, references, true);\n            return object_1.values(references);\n        };\n        HasProps.prototype._doc_attached = function () {\n        };\n        HasProps.prototype.attach_document = function (doc) {\n            // This should only be called by the Document implementation to set the document field\n            if (this.document != null && this.document != doc)\n                throw new Error('models must be owned by only a single document');\n            this.document = doc;\n            this._doc_attached();\n        };\n        HasProps.prototype.detach_document = function () {\n            // This should only be called by the Document implementation to unset the document field\n            this.document = null;\n        };\n        HasProps.prototype._tell_document_about_change = function (attr, old, new_, options) {\n            if (!this.attribute_is_serializable(attr))\n                return;\n            if (this.document != null) {\n                var new_refs = {};\n                HasProps._value_record_references(new_, new_refs, false);\n                var old_refs = {};\n                HasProps._value_record_references(old, old_refs, false);\n                var need_invalidate = false;\n                for (var new_id in new_refs) {\n                    if (!(new_id in old_refs)) {\n                        need_invalidate = true;\n                        break;\n                    }\n                }\n                if (!need_invalidate) {\n                    for (var old_id in old_refs) {\n                        if (!(old_id in new_refs)) {\n                            need_invalidate = true;\n                            break;\n                        }\n                    }\n                }\n                if (need_invalidate)\n                    this.document._invalidate_all_models();\n                this.document._notify_change(this, attr, old, new_, options);\n            }\n        };\n        HasProps.prototype.materialize_dataspecs = function (source) {\n            // Note: this should be moved to a function separate from HasProps\n            var data = {};\n            for (var name_8 in this.properties) {\n                var prop = this.properties[name_8];\n                if (!prop.dataspec)\n                    continue;\n                // this skips optional properties like radius for circles\n                if (prop.optional && prop.spec.value == null && !(name_8 in this._set_after_defaults))\n                    continue;\n                data['_' + name_8] = prop.array(source);\n                // the shapes are indexed by the column name, but when we materialize the dataspec, we should\n                // store under the canonical field name, e.g. _image_shape, even if the column name is \"foo\"\n                if (prop.spec.field != null && prop.spec.field in source._shapes)\n                    data['_' + name_8 + '_shape'] = source._shapes[prop.spec.field];\n                if (prop instanceof p.Distance)\n                    data['max_' + name_8] = array_1.max(data['_' + name_8]);\n            }\n            return data;\n        };\n        return HasProps;\n    }(signaling_1.Signalable());\n    exports.HasProps = HasProps;\n    HasProps.prototype.type = 'HasProps';\n    HasProps.prototype.props = {};\n    HasProps.prototype.mixins = [];\n    HasProps.define({ id: [p.Any] });    \n}","/*core/hittest*/\nfunction _(require, module, exports) {\n    var array_1 = require(22    /* ./util/array */);\n    var object_1 = require(30    /* ./util/object */);\n    function point_in_poly(x, y, px, py) {\n        var inside = false;\n        var x1 = px[px.length - 1];\n        var y1 = py[py.length - 1];\n        for (var i = 0; i < px.length; i++) {\n            var x2 = px[i];\n            var y2 = py[i];\n            if (y1 < y != y2 < y) {\n                if (x1 + (y - y1) / (y2 - y1) * (x2 - x1) < x)\n                    inside = !inside;\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n        return inside;\n    }\n    exports.point_in_poly = point_in_poly;\n    var nullreturner = function () {\n        return null;\n    };\n    // stub function shared by all hittests by default\n    var HitTestResult = function () {\n        function HitTestResult() {\n            // 0d is only valid for line and patch glyphs\n            this['0d'] = {\n                // the glyph that was picked\n                glyph: null,\n                get_view: nullreturner,\n                // array with the [smallest] index of the segment of the line that was hit\n                indices: []\n            };\n            // 1d for all other glyphs apart from multilines and multi patches\n            this['1d'] = {\n                // index of the closest point to the crossed segment\n                // useful for special glyphs like line that are continuous and\n                // not discrete between 2 data points\n                indices: []\n            };\n            // 2d for all for multilines and multi patches\n            this['2d'] = {\n                // mapping of indices of the multiglyph to array of glyph indices that were hit\n                // e.g. {3: [5, 6], 4: [5]}\n                indices: {}\n            };\n        }\n        Object.defineProperty(HitTestResult.prototype, '_0d', {\n            get: function () {\n                return this['0d'];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(HitTestResult.prototype, '_1d', {\n            get: function () {\n                return this['1d'];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(HitTestResult.prototype, '_2d', {\n            get: function () {\n                return this['2d'];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        HitTestResult.prototype.is_empty = function () {\n            return this._0d.indices.length == 0 && this._1d.indices.length == 0 && object_1.isEmpty(this._2d.indices);\n        };\n        HitTestResult.prototype.update_through_union = function (other) {\n            this._0d.indices = array_1.union(other._0d.indices, this._0d.indices);\n            this._0d.glyph = other._0d.glyph || this._0d.glyph;\n            this._1d.indices = array_1.union(other._1d.indices, this._1d.indices);\n            this._2d.indices = object_1.merge(other._2d.indices, this._2d.indices);\n        };\n        return HitTestResult;\n    }();\n    exports.HitTestResult = HitTestResult;\n    function create_hit_test_result() {\n        return new HitTestResult();\n    }\n    exports.create_hit_test_result = create_hit_test_result;\n    function create_1d_hit_test_result(hits) {\n        var result = new HitTestResult();\n        result._1d.indices = array_1.sortBy(hits, function (_a) {\n            var _i = _a[0], dist = _a[1];\n            return dist;\n        }).map(function (_a) {\n            var i = _a[0], _dist = _a[1];\n            return i;\n        });\n        return result;\n    }\n    exports.create_1d_hit_test_result = create_1d_hit_test_result;\n    function validate_bbox_coords(_a, _b) {\n        var x0 = _a[0], x1 = _a[1];\n        var y0 = _b[0], y1 = _b[1];\n        // rbush expects x0, y0 to be min, x1, y1 max\n        if (x0 > x1)\n            _c = [\n                x1,\n                x0\n            ], x0 = _c[0], x1 = _c[1];\n        if (y0 > y1)\n            _d = [\n                y1,\n                y0\n            ], y0 = _d[0], y1 = _d[1];\n        return {\n            minX: x0,\n            minY: y0,\n            maxX: x1,\n            maxY: y1\n        };\n        var _c, _d;\n    }\n    exports.validate_bbox_coords = validate_bbox_coords;\n    function sqr(x) {\n        return x * x;\n    }\n    function dist_2_pts(x0, y0, x1, y1) {\n        return sqr(x0 - x1) + sqr(y0 - y1);\n    }\n    exports.dist_2_pts = dist_2_pts;\n    function dist_to_segment_squared(p, v, w) {\n        var l2 = dist_2_pts(v.x, v.y, w.x, w.y);\n        if (l2 == 0)\n            return dist_2_pts(p.x, p.y, v.x, v.y);\n        var t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2;\n        if (t < 0)\n            return dist_2_pts(p.x, p.y, v.x, v.y);\n        if (t > 1)\n            return dist_2_pts(p.x, p.y, w.x, w.y);\n        return dist_2_pts(p.x, p.y, v.x + t * (w.x - v.x), v.y + t * (w.y - v.y));\n    }\n    exports.dist_to_segment_squared = dist_to_segment_squared;\n    function dist_to_segment(p, v, w) {\n        return Math.sqrt(dist_to_segment_squared(p, v, w));\n    }\n    exports.dist_to_segment = dist_to_segment;\n    function check_2_segments_intersect(l0_x0, l0_y0, l0_x1, l0_y1, l1_x0, l1_y0, l1_x1, l1_y1) {\n        /*\n     *  Check if 2 segments (l0 and l1) intersect. Returns a structure with\n     *  the following attributes:\n     *   * hit (boolean): whether the 2 segments intersect\n     *   * x (float): x coordinate of the intersection point\n     *   * y (float): y coordinate of the intersection point\n     */\n        var den = (l1_y1 - l1_y0) * (l0_x1 - l0_x0) - (l1_x1 - l1_x0) * (l0_y1 - l0_y0);\n        if (den == 0) {\n            return {\n                hit: false,\n                x: null,\n                y: null\n            };\n        } else {\n            var a = l0_y0 - l1_y0;\n            var b = l0_x0 - l1_x0;\n            var num1 = (l1_x1 - l1_x0) * a - (l1_y1 - l1_y0) * b;\n            var num2 = (l0_x1 - l0_x0) * a - (l0_y1 - l0_y0) * b;\n            a = num1 / den;\n            b = num2 / den;\n            var x = l0_x0 + a * (l0_x1 - l0_x0);\n            var y = l0_y0 + a * (l0_y1 - l0_y0);\n            return {\n                hit: a > 0 && a < 1 && (b > 0 && b < 1),\n                x: x,\n                y: y\n            };\n        }\n    }\n    exports.check_2_segments_intersect = check_2_segments_intersect;    \n}","/*core/layout/alignments*/\nfunction _(require, module, exports) {\n    var solver_1 = require(13    /* ./solver */);\n    var array_1 = require(22    /* ../util/array */);\n    function vstack(container, children) {\n        var constraints = [];\n        if (children.length > 0) {\n            constraints.push(solver_1.EQ(array_1.head(children)._bottom, [\n                -1,\n                container._bottom\n            ]));\n            constraints.push(solver_1.EQ(array_1.tail(children)._top, [\n                -1,\n                container._top\n            ]));\n            constraints.push.apply(constraints, array_1.pairwise(children, function (prev, next) {\n                return solver_1.EQ(prev._top, [\n                    -1,\n                    next._bottom\n                ]);\n            }));\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                var child = children_1[_i];\n                constraints.push(solver_1.EQ(child._left, [\n                    -1,\n                    container._left\n                ]));\n                constraints.push(solver_1.EQ(child._right, [\n                    -1,\n                    container._right\n                ]));\n            }\n        }\n        return constraints;\n    }\n    exports.vstack = vstack;\n    function hstack(container, children) {\n        var constraints = [];\n        if (children.length > 0) {\n            constraints.push(solver_1.EQ(array_1.head(children)._right, [\n                -1,\n                container._right\n            ]));\n            constraints.push(solver_1.EQ(array_1.tail(children)._left, [\n                -1,\n                container._left\n            ]));\n            constraints.push.apply(constraints, array_1.pairwise(children, function (prev, next) {\n                return solver_1.EQ(prev._left, [\n                    -1,\n                    next._right\n                ]);\n            }));\n            for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {\n                var child = children_2[_i];\n                constraints.push(solver_1.EQ(child._top, [\n                    -1,\n                    container._top\n                ]));\n                constraints.push(solver_1.EQ(child._bottom, [\n                    -1,\n                    container._bottom\n                ]));\n            }\n        }\n        return constraints;\n    }\n    exports.hstack = hstack;    \n}","/*core/layout/layout_canvas*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var solver_1 = require(13    /* ./solver */);\n    var has_props_1 = require(8    /* ../has_props */);\n    var bbox_1 = require(23    /* ../util/bbox */);\n    var LayoutCanvas = function (_super) {\n        tslib_1.__extends(LayoutCanvas, _super);\n        function LayoutCanvas() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LayoutCanvas.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this._top = new solver_1.Variable(this.toString() + '.top');\n            this._left = new solver_1.Variable(this.toString() + '.left');\n            this._width = new solver_1.Variable(this.toString() + '.width');\n            this._height = new solver_1.Variable(this.toString() + '.height');\n            this._right = new solver_1.Variable(this.toString() + '.right');\n            this._bottom = new solver_1.Variable(this.toString() + '.bottom');\n            this._hcenter = new solver_1.Variable(this.toString() + '.hcenter');\n            this._vcenter = new solver_1.Variable(this.toString() + '.vcenter');\n        };\n        LayoutCanvas.prototype.get_editables = function () {\n            return [];\n        };\n        LayoutCanvas.prototype.get_constraints = function () {\n            return [\n                solver_1.GE(this._top),\n                solver_1.GE(this._bottom),\n                solver_1.GE(this._left),\n                solver_1.GE(this._right),\n                solver_1.GE(this._width),\n                solver_1.GE(this._height),\n                solver_1.EQ(this._left, this._width, [\n                    -1,\n                    this._right\n                ]),\n                solver_1.EQ(this._top, this._height, [\n                    -1,\n                    this._bottom\n                ]),\n                solver_1.EQ([\n                    2,\n                    this._hcenter\n                ], [\n                    -1,\n                    this._left\n                ], [\n                    -1,\n                    this._right\n                ]),\n                solver_1.EQ([\n                    2,\n                    this._vcenter\n                ], [\n                    -1,\n                    this._top\n                ], [\n                    -1,\n                    this._bottom\n                ])\n            ];\n        };\n        Object.defineProperty(LayoutCanvas.prototype, 'bbox', {\n            get: function () {\n                return new bbox_1.BBox({\n                    x0: this._left.value,\n                    y0: this._top.value,\n                    x1: this._right.value,\n                    y1: this._bottom.value\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LayoutCanvas.prototype, 'layout_bbox', {\n            get: function () {\n                return {\n                    top: this._top.value,\n                    left: this._left.value,\n                    width: this._width.value,\n                    height: this._height.value,\n                    right: this._right.value,\n                    bottom: this._bottom.value,\n                    hcenter: this._hcenter.value,\n                    vcenter: this._vcenter.value\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LayoutCanvas.prototype, 'xview', {\n            get: function () {\n                var _this = this;\n                return {\n                    compute: function (x) {\n                        return _this._left.value + x;\n                    },\n                    v_compute: function (xx) {\n                        var _xx = new Float64Array(xx.length);\n                        var left = _this._left.value;\n                        for (var i = 0; i < xx.length; i++) {\n                            _xx[i] = left + xx[i];\n                        }\n                        return _xx;\n                    }\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LayoutCanvas.prototype, 'yview', {\n            get: function () {\n                var _this = this;\n                return {\n                    compute: function (y) {\n                        return _this._bottom.value - y;\n                    },\n                    v_compute: function (yy) {\n                        var _yy = new Float64Array(yy.length);\n                        var bottom = _this._bottom.value;\n                        for (var i = 0; i < yy.length; i++) {\n                            _yy[i] = bottom - yy[i];\n                        }\n                        return _yy;\n                    }\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LayoutCanvas;\n    }(has_props_1.HasProps);\n    exports.LayoutCanvas = LayoutCanvas;\n    LayoutCanvas.prototype.type = 'LayoutCanvas';    \n}","/*core/layout/side_panel*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var ALPHABETIC, BOTTOM, CENTER, HANGING, LEFT, MIDDLE, RIGHT, TOP, _align_lookup, _align_lookup_negative, _align_lookup_positive, _angle_lookup, _baseline_lookup, pi2;\n    var solver_1 = require(13    /* ./solver */);\n    var layout_canvas_1 = require(11    /* ./layout_canvas */);\n    var p = require(15    /* core/properties */);\n    var logging_1 = require(14    /* core/logging */);\n    var types_1 = require(42    /* core/util/types */);\n    // This table lays out the rules for configuring the baseline, alignment, etc. of\n    // title text, based on it's location and orientation\n    // side    orient        baseline   align     angle   normal-dist\n    // ------------------------------------------------------------------------------\n    // above   parallel      bottom     center    0       height\n    //         normal        middle     left      -90     width\n    //         horizontal    bottom     center    0       height\n    //         [angle > 0]   middle     left              width * sin + height * cos\n    //         [angle < 0]   middle     right             width * sin + height * cos\n    // below   parallel      top        center    0       height\n    //         normal        middle     right     90      width\n    //         horizontal    top        center    0       height\n    //         [angle > 0]   middle     right             width * sin + height * cos\n    //         [angle < 0]   middle     left              width * sin + height * cos\n    // left    parallel      bottom     center    90      height\n    //         normal        middle     right     0       width\n    //         horizontal    middle     right     0       width\n    //         [angle > 0]   middle     right             width * cos + height * sin\n    //         [angle < 0]   middle     right             width * cos + height + sin\n    // right   parallel      bottom     center   -90      height\n    //         normal        middle     left     0        width\n    //         horizontal    middle     left     0        width\n    //         [angle > 0]   middle     left              width * cos + height * sin\n    //         [angle < 0]   middle     left              width * cos + height + sin\n    pi2 = Math.PI / 2;\n    ALPHABETIC = 'alphabetic';\n    TOP = 'top';\n    BOTTOM = 'bottom';\n    MIDDLE = 'middle';\n    HANGING = 'hanging';\n    LEFT = 'left';\n    RIGHT = 'right';\n    CENTER = 'center';\n    _angle_lookup = {\n        above: {\n            parallel: 0,\n            normal: -pi2,\n            horizontal: 0,\n            vertical: -pi2\n        },\n        below: {\n            parallel: 0,\n            normal: pi2,\n            horizontal: 0,\n            vertical: pi2\n        },\n        left: {\n            parallel: -pi2,\n            normal: 0,\n            horizontal: 0,\n            vertical: -pi2\n        },\n        right: {\n            parallel: pi2,\n            normal: 0,\n            horizontal: 0,\n            vertical: pi2\n        }\n    };\n    _baseline_lookup = {\n        above: {\n            justified: TOP,\n            parallel: ALPHABETIC,\n            normal: MIDDLE,\n            horizontal: ALPHABETIC,\n            vertical: MIDDLE\n        },\n        below: {\n            justified: BOTTOM,\n            parallel: HANGING,\n            normal: MIDDLE,\n            horizontal: HANGING,\n            vertical: MIDDLE\n        },\n        left: {\n            justified: TOP,\n            parallel: ALPHABETIC,\n            normal: MIDDLE,\n            horizontal: MIDDLE,\n            vertical: ALPHABETIC\n        },\n        right: {\n            justified: TOP,\n            parallel: ALPHABETIC,\n            normal: MIDDLE,\n            horizontal: MIDDLE,\n            vertical: ALPHABETIC\n        }\n    };\n    _align_lookup = {\n        above: {\n            justified: CENTER,\n            parallel: CENTER,\n            normal: LEFT,\n            horizontal: CENTER,\n            vertical: LEFT\n        },\n        below: {\n            justified: CENTER,\n            parallel: CENTER,\n            normal: LEFT,\n            horizontal: CENTER,\n            vertical: LEFT\n        },\n        left: {\n            justified: CENTER,\n            parallel: CENTER,\n            normal: RIGHT,\n            horizontal: RIGHT,\n            vertical: CENTER\n        },\n        right: {\n            justified: CENTER,\n            parallel: CENTER,\n            normal: LEFT,\n            horizontal: LEFT,\n            vertical: CENTER\n        }\n    };\n    _align_lookup_negative = {\n        above: RIGHT,\n        below: LEFT,\n        left: RIGHT,\n        right: LEFT\n    };\n    _align_lookup_positive = {\n        above: LEFT,\n        below: RIGHT,\n        left: RIGHT,\n        right: LEFT\n    };\n    exports._view_sizes = new WeakMap();\n    // <View, number>\n    exports.update_panel_constraints = function (view) {\n        var s, size;\n        size = view.get_size();\n        s = view.solver;\n        if (view._size_constraint != null && s.has_constraint(view._size_constraint)) {\n            if (exports._view_sizes.get(view) === size) {\n                return;\n            }\n            s.remove_constraint(view._size_constraint);\n        }\n        exports._view_sizes.set(view, size);\n        view._size_constraint = solver_1.GE(view.model.panel._size, -size);\n        return s.add_constraint(view._size_constraint);\n    };\n    var SidePanel = function (_super) {\n        tslib_1.__extends(SidePanel, _super);\n        function SidePanel() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SidePanel.prototype.toString = function () {\n            return this.type + '(' + this.id + ', ' + this.side + ')';\n        };\n        SidePanel.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            switch (this.side) {\n            case 'above':\n                this._dim = 0;\n                this._normals = [\n                    0,\n                    -1\n                ];\n                return this._size = this._height;\n            case 'below':\n                this._dim = 0;\n                this._normals = [\n                    0,\n                    1\n                ];\n                return this._size = this._height;\n            case 'left':\n                this._dim = 1;\n                this._normals = [\n                    -1,\n                    0\n                ];\n                return this._size = this._width;\n            case 'right':\n                this._dim = 1;\n                this._normals = [\n                    1,\n                    0\n                ];\n                return this._size = this._width;\n            default:\n                return logging_1.logger.error('unrecognized side: \\'' + this.side + '\\'');\n            }\n        };\n        SidePanel.prototype.apply_label_text_heuristics = function (ctx, orient) {\n            var align, baseline, side;\n            side = this.side;\n            if (types_1.isString(orient)) {\n                baseline = _baseline_lookup[side][orient];\n                align = _align_lookup[side][orient];\n            } else if (orient === 0) {\n                baseline = _baseline_lookup[side][orient];\n                align = _align_lookup[side][orient];\n            } else if (orient < 0) {\n                baseline = 'middle';\n                align = _align_lookup_negative[side];\n            } else if (orient > 0) {\n                baseline = 'middle';\n                align = _align_lookup_positive[side];\n            }\n            ctx.textBaseline = baseline;\n            ctx.textAlign = align;\n            return ctx;\n        };\n        SidePanel.prototype.get_label_angle_heuristic = function (orient) {\n            var side;\n            side = this.side;\n            return _angle_lookup[side][orient];\n        };\n        return SidePanel;\n    }(layout_canvas_1.LayoutCanvas);\n    exports.SidePanel = SidePanel;\n    ;\n    SidePanel.prototype.type = 'SidePanel';\n    SidePanel.internal({ side: [p.String] });\n    SidePanel.getters({\n        is_horizontal: function () {\n            return this.side === 'above' || this.side === 'below';\n        },\n        is_vertical: function () {\n            return this.side === 'left' || this.side === 'right';\n        }\n    });    \n}","/*core/layout/solver*/\nfunction _(require, module, exports) {\n    var kiwi_1 = require(321    /* kiwi */);\n    exports.Variable = kiwi_1.Variable;\n    exports.Expression = kiwi_1.Expression;\n    exports.Constraint = kiwi_1.Constraint;\n    exports.Operator = kiwi_1.Operator;\n    exports.Strength = kiwi_1.Strength;\n    function _constrainer(op) {\n        return function () {\n            var terms = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                terms[_i] = arguments[_i];\n            }\n            return new kiwi_1.Constraint(new (kiwi_1.Expression.bind.apply(kiwi_1.Expression, [void 0].concat(terms)))(), op);\n        };\n    }\n    function _weak_constrainer(op) {\n        return function () {\n            var terms = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                terms[_i] = arguments[_i];\n            }\n            return new kiwi_1.Constraint(new (kiwi_1.Expression.bind.apply(kiwi_1.Expression, [void 0].concat(terms)))(), op, kiwi_1.Strength.weak);\n        };\n    }\n    exports.EQ = _constrainer(kiwi_1.Operator.Eq);\n    exports.LE = _constrainer(kiwi_1.Operator.Le);\n    exports.GE = _constrainer(kiwi_1.Operator.Ge);\n    exports.WEAK_EQ = _weak_constrainer(kiwi_1.Operator.Eq);\n    exports.WEAK_LE = _weak_constrainer(kiwi_1.Operator.Le);\n    exports.WEAK_GE = _weak_constrainer(kiwi_1.Operator.Ge);\n    var Solver = function () {\n        function Solver() {\n            this.solver = new kiwi_1.Solver();\n        }\n        Solver.prototype.clear = function () {\n            this.solver = new kiwi_1.Solver();\n        };\n        Solver.prototype.toString = function () {\n            return 'Solver(num_constraints=' + this.num_constraints + ', num_editables=' + this.num_editables + ')';\n        };\n        Object.defineProperty(Solver.prototype, 'num_constraints', {\n            get: function () {\n                return this.solver.numConstraints;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Solver.prototype, 'num_editables', {\n            get: function () {\n                return this.solver.numEditVariables;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Solver.prototype.get_constraints = function () {\n            return this.solver.getConstraints();\n        };\n        Solver.prototype.update_variables = function () {\n            this.solver.updateVariables();\n        };\n        Solver.prototype.has_constraint = function (constraint) {\n            return this.solver.hasConstraint(constraint);\n        };\n        Solver.prototype.add_constraint = function (constraint) {\n            try {\n                this.solver.addConstraint(constraint);\n            } catch (e) {\n                throw new Error(e.message + ': ' + constraint.toString());\n            }\n        };\n        Solver.prototype.remove_constraint = function (constraint) {\n            this.solver.removeConstraint(constraint);\n        };\n        Solver.prototype.add_edit_variable = function (variable, strength) {\n            this.solver.addEditVariable(variable, strength);\n        };\n        Solver.prototype.remove_edit_variable = function (variable) {\n            this.solver.removeEditVariable(variable);\n        };\n        Solver.prototype.suggest_value = function (variable, value) {\n            this.solver.suggestValue(variable, value);\n        };\n        return Solver;\n    }();\n    exports.Solver = Solver;    \n}","/*core/logging*/\nfunction _(require, module, exports) {\n    var types_1 = require(42    /* ./util/types */);\n    var _loggers = {};\n    var LogLevel = function () {\n        function LogLevel(name, level) {\n            this.name = name;\n            this.level = level;\n        }\n        return LogLevel;\n    }();\n    exports.LogLevel = LogLevel;\n    var Logger = function () {\n        function Logger(name, level) {\n            if (level === void 0) {\n                level = Logger.INFO;\n            }\n            this._name = name;\n            this.set_level(level);\n        }\n        Object.defineProperty(Logger, 'levels', {\n            get: function () {\n                return Object.keys(Logger.log_levels);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Logger.get = function (name, level) {\n            if (level === void 0) {\n                level = Logger.INFO;\n            }\n            if (name.length > 0) {\n                var logger_1 = _loggers[name];\n                if (logger_1 == null)\n                    _loggers[name] = logger_1 = new Logger(name, level);\n                return logger_1;\n            } else\n                throw new TypeError('Logger.get() expects a non-empty string name and an optional log-level');\n        };\n        Object.defineProperty(Logger.prototype, 'level', {\n            get: function () {\n                return this.get_level();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Logger.prototype.get_level = function () {\n            return this._log_level;\n        };\n        Logger.prototype.set_level = function (log_level) {\n            if (log_level instanceof LogLevel)\n                this._log_level = log_level;\n            else if (types_1.isString(log_level) && Logger.log_levels[log_level] != null)\n                this._log_level = Logger.log_levels[log_level];\n            else\n                throw new Error('Logger.set_level() expects a log-level object or a string name of a log-level');\n            var logger_name = '[' + this._name + ']';\n            for (var name_1 in Logger.log_levels) {\n                var log_level_1 = Logger.log_levels[name_1];\n                if (log_level_1.level < this._log_level.level || this._log_level.level === Logger.OFF.level)\n                    this[name_1] = function () {\n                    };\n                else\n                    this[name_1] = _method_factory(name_1, logger_name);\n            }\n        };\n        Logger.prototype.trace = function () {\n            var _args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                _args[_i] = arguments[_i];\n            }\n        };\n        Logger.prototype.debug = function () {\n            var _args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                _args[_i] = arguments[_i];\n            }\n        };\n        Logger.prototype.info = function () {\n            var _args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                _args[_i] = arguments[_i];\n            }\n        };\n        Logger.prototype.warn = function () {\n            var _args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                _args[_i] = arguments[_i];\n            }\n        };\n        Logger.prototype.error = function () {\n            var _args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                _args[_i] = arguments[_i];\n            }\n        };\n        Logger.TRACE = new LogLevel('trace', 0);\n        Logger.DEBUG = new LogLevel('debug', 1);\n        Logger.INFO = new LogLevel('info', 2);\n        Logger.WARN = new LogLevel('warn', 6);\n        Logger.ERROR = new LogLevel('error', 7);\n        Logger.FATAL = new LogLevel('fatal', 8);\n        Logger.OFF = new LogLevel('off', 9);\n        Logger.log_levels = {\n            trace: Logger.TRACE,\n            debug: Logger.DEBUG,\n            info: Logger.INFO,\n            warn: Logger.WARN,\n            error: Logger.ERROR,\n            fatal: Logger.FATAL,\n            off: Logger.OFF\n        };\n        return Logger;\n    }();\n    exports.Logger = Logger;\n    function _method_factory(method_name, logger_name) {\n        if (console[method_name] != null)\n            return console[method_name].bind(console, logger_name);\n        else if (console.log != null)\n            return console.log.bind(console, logger_name);\n        else\n            return function () {\n            };\n    }\n    exports.logger = Logger.get('bokeh');\n    function set_log_level(level) {\n        if (Logger.log_levels[level] == null) {\n            console.log('[bokeh] unrecognized logging level \\'' + level + '\\' passed to Bokeh.set_log_level(), ignoring');\n            console.log('[bokeh] valid log levels are: ' + Logger.levels.join(', '));\n        } else {\n            console.log('[bokeh] setting log level to: \\'' + level + '\\'');\n            exports.logger.set_level(level);\n        }\n    }\n    exports.set_log_level = set_log_level;    \n}","/*core/properties*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var signaling_1 = require(20    /* ./signaling */);\n    var enums = require(7    /* ./enums */);\n    var svg_colors = require(38    /* ./util/svg_colors */);\n    var color_1 = require(26    /* ./util/color */);\n    var array_1 = require(22    /* ./util/array */);\n    var types_1 = require(42    /* ./util/types */);\n    function valueToString(value) {\n        try {\n            return JSON.stringify(value);\n        } catch (_a) {\n            return value.toString();\n        }\n    }\n    //\n    // Property base class\n    //\n    var Property = function (_super) {\n        tslib_1.__extends(Property, _super);\n        function Property(obj, attr, default_value) {\n            var _this = _super.call(this) || this;\n            _this.obj = obj;\n            _this.attr = attr;\n            _this.default_value = default_value;\n            _this.optional = false;\n            _this.change = new signaling_1.Signal(_this.obj, 'change');\n            _this._init();\n            _this.connect(_this.change, function () {\n                return _this._init();\n            });\n            return _this;\n        }\n        Property.prototype.update = function () {\n            this._init();\n        };\n        // ----- customizable policies\n        Property.prototype.init = function () {\n        };\n        Property.prototype.transform = function (values) {\n            return values;\n        };\n        Property.prototype.validate = function (_value) {\n        };\n        // ----- property accessors\n        Property.prototype.value = function (do_spec_transform) {\n            if (do_spec_transform === void 0) {\n                do_spec_transform = true;\n            }\n            if (this.spec.value === undefined)\n                throw new Error('attempted to retrieve property value for property without value specification');\n            var ret = this.transform([this.spec.value])[0];\n            if (this.spec.transform != null && do_spec_transform)\n                ret = this.spec.transform.compute(ret);\n            return ret;\n        };\n        Property.prototype.array = function (source) {\n            if (!this.dataspec)\n                throw new Error('attempted to retrieve property array for non-dataspec property');\n            var data = source.data;\n            var ret;\n            if (this.spec.field != null) {\n                if (this.spec.field in data)\n                    ret = this.transform(source.get_column(this.spec.field));\n                else\n                    throw new Error('attempted to retrieve property array for nonexistent field \\'' + this.spec.field + '\\'');\n            } else if (this.spec.expr != null) {\n                ret = this.transform(this.spec.expr._v_compute(source));\n            } else {\n                var length_1 = source.get_length();\n                if (length_1 == null)\n                    length_1 = 1;\n                var value = this.value(false);\n                // don't apply any spec transform\n                ret = array_1.repeat(value, length_1);\n            }\n            if (this.spec.transform != null)\n                ret = this.spec.transform.v_compute(ret);\n            return ret;\n        };\n        // ----- private methods\n        /*protected*/\n        Property.prototype._init = function () {\n            var obj = this.obj;\n            var attr = this.attr;\n            var attr_value = obj.getv(attr);\n            if (attr_value === undefined) {\n                var default_value = this.default_value;\n                if (default_value !== undefined)\n                    attr_value = default_value(obj);\n                else\n                    attr_value = null;\n                obj.setv([\n                    attr,\n                    attr_value\n                ], {\n                    silent: true,\n                    defaults: true\n                });\n            }\n            if (types_1.isArray(attr_value))\n                this.spec = { value: attr_value };\n            else if (types_1.isObject(attr_value) && (attr_value.value === undefined ? 0 : 1) + (attr_value.field === undefined ? 0 : 1) + (attr_value.expr === undefined ? 0 : 1) == 1)\n                this.spec = attr_value;\n            else\n                this.spec = { value: attr_value };\n            if (this.spec.field != null && !types_1.isString(this.spec.field))\n                throw new Error('field value for property \\'' + attr + '\\' is not a string');\n            if (this.spec.value != null)\n                this.validate(this.spec.value);\n            this.init();\n        };\n        Property.prototype.toString = function () {\n            /*${this.name}*/\n            return 'Prop(' + this.obj + '.' + this.attr + ', spec: ' + valueToString(this.spec) + ')';\n        };\n        return Property;\n    }(signaling_1.Signalable());\n    exports.Property = Property;\n    Property.prototype.dataspec = false;\n    //\n    // Simple Properties\n    //\n    function simple_prop(name, pred) {\n        return function (_super) {\n            tslib_1.__extends(class_1, _super);\n            function class_1() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            class_1.prototype.validate = function (value) {\n                if (!pred(value))\n                    throw new Error(name + ' property \\'' + this.attr + '\\' given invalid value: ' + valueToString(value));\n            };\n            return class_1;\n        }(Property);\n    }\n    exports.simple_prop = simple_prop;\n    var Any = function (_super) {\n        tslib_1.__extends(Any, _super);\n        function Any() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Any;\n    }(simple_prop('Any', function (_x) {\n        return true;\n    }));\n    exports.Any = Any;\n    var Array = function (_super) {\n        tslib_1.__extends(Array, _super);\n        function Array() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Array;\n    }(simple_prop('Array', function (x) {\n        return types_1.isArray(x) || x instanceof Float64Array;\n    }));\n    exports.Array = Array;\n    var Bool = function (_super) {\n        tslib_1.__extends(Bool, _super);\n        function Bool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Bool;\n    }(simple_prop('Bool', types_1.isBoolean));\n    exports.Bool = Bool;\n    exports.Boolean = Bool;\n    var Color = function (_super) {\n        tslib_1.__extends(Color, _super);\n        function Color() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Color;\n    }(simple_prop('Color', function (x) {\n        return svg_colors[x.toLowerCase()] != null || x.substring(0, 1) == '#' || color_1.valid_rgb(x);\n    }));\n    exports.Color = Color;\n    var Instance = function (_super) {\n        tslib_1.__extends(Instance, _super);\n        function Instance() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Instance;\n    }(simple_prop('Instance', function (x) {\n        return x.properties != null;\n    }));\n    exports.Instance = Instance;\n    // TODO (bev) separate booleans?\n    var Number = function (_super) {\n        tslib_1.__extends(Number, _super);\n        function Number() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Number;\n    }(simple_prop('Number', function (x) {\n        return types_1.isNumber(x) || types_1.isBoolean(x);\n    }));\n    exports.Number = Number;\n    exports.Int = Number;\n    // TODO extend Number instead of copying it's predicate\n    //class Percent extends Number(\"Percent\", (x) -> 0 <= x <= 1.0)\n    var Percent = function (_super) {\n        tslib_1.__extends(Percent, _super);\n        function Percent() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Percent;\n    }(simple_prop('Number', function (x) {\n        return (types_1.isNumber(x) || types_1.isBoolean(x)) && 0 <= x && x <= 1;\n    }));\n    exports.Percent = Percent;\n    var String = function (_super) {\n        tslib_1.__extends(String, _super);\n        function String() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return String;\n    }(simple_prop('String', types_1.isString));\n    exports.String = String;\n    // TODO (bev) don't think this exists python side\n    var Font = function (_super) {\n        tslib_1.__extends(Font, _super);\n        function Font() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Font;\n    }(String);\n    exports.Font = Font;\n    //\n    // Enum properties\n    //\n    function enum_prop(name, enum_values) {\n        return function (_super) {\n            tslib_1.__extends(class_2, _super);\n            function class_2() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return class_2;\n        }(simple_prop(name, function (x) {\n            return array_1.contains(enum_values, x);\n        }));\n    }\n    exports.enum_prop = enum_prop;\n    var Anchor = function (_super) {\n        tslib_1.__extends(Anchor, _super);\n        function Anchor() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Anchor;\n    }(enum_prop('Anchor', enums.LegendLocation));\n    exports.Anchor = Anchor;\n    var AngleUnits = function (_super) {\n        tslib_1.__extends(AngleUnits, _super);\n        function AngleUnits() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return AngleUnits;\n    }(enum_prop('AngleUnits', enums.AngleUnits));\n    exports.AngleUnits = AngleUnits;\n    var Direction = function (_super) {\n        tslib_1.__extends(Direction, _super);\n        function Direction() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Direction.prototype.transform = function (values) {\n            var result = new Uint8Array(values.length);\n            for (var i = 0; i < values.length; i++) {\n                switch (values[i]) {\n                case 'clock':\n                    result[i] = 0;\n                    break;\n                case 'anticlock':\n                    result[i] = 1;\n                    break;\n                }\n            }\n            return result;\n        };\n        return Direction;\n    }(enum_prop('Direction', enums.Direction));\n    exports.Direction = Direction;\n    var Dimension = function (_super) {\n        tslib_1.__extends(Dimension, _super);\n        function Dimension() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Dimension;\n    }(enum_prop('Dimension', enums.Dimension));\n    exports.Dimension = Dimension;\n    var Dimensions = function (_super) {\n        tslib_1.__extends(Dimensions, _super);\n        function Dimensions() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Dimensions;\n    }(enum_prop('Dimensions', enums.Dimensions));\n    exports.Dimensions = Dimensions;\n    var FontStyle = function (_super) {\n        tslib_1.__extends(FontStyle, _super);\n        function FontStyle() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return FontStyle;\n    }(enum_prop('FontStyle', enums.FontStyle));\n    exports.FontStyle = FontStyle;\n    var LatLon = function (_super) {\n        tslib_1.__extends(LatLon, _super);\n        function LatLon() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return LatLon;\n    }(enum_prop('LatLon', enums.LatLon));\n    exports.LatLon = LatLon;\n    var LineCap = function (_super) {\n        tslib_1.__extends(LineCap, _super);\n        function LineCap() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return LineCap;\n    }(enum_prop('LineCap', enums.LineCap));\n    exports.LineCap = LineCap;\n    var LineJoin = function (_super) {\n        tslib_1.__extends(LineJoin, _super);\n        function LineJoin() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return LineJoin;\n    }(enum_prop('LineJoin', enums.LineJoin));\n    exports.LineJoin = LineJoin;\n    var LegendLocation = function (_super) {\n        tslib_1.__extends(LegendLocation, _super);\n        function LegendLocation() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return LegendLocation;\n    }(enum_prop('LegendLocation', enums.LegendLocation));\n    exports.LegendLocation = LegendLocation;\n    var Location = function (_super) {\n        tslib_1.__extends(Location, _super);\n        function Location() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Location;\n    }(enum_prop('Location', enums.Location));\n    exports.Location = Location;\n    var OutputBackend = function (_super) {\n        tslib_1.__extends(OutputBackend, _super);\n        function OutputBackend() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return OutputBackend;\n    }(enum_prop('OutputBackend', enums.OutputBackend));\n    exports.OutputBackend = OutputBackend;\n    var Orientation = function (_super) {\n        tslib_1.__extends(Orientation, _super);\n        function Orientation() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Orientation;\n    }(enum_prop('Orientation', enums.Orientation));\n    exports.Orientation = Orientation;\n    var VerticalAlign = function (_super) {\n        tslib_1.__extends(VerticalAlign, _super);\n        function VerticalAlign() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return VerticalAlign;\n    }(enum_prop('VerticalAlign', enums.VerticalAlign));\n    exports.VerticalAlign = VerticalAlign;\n    var TextAlign = function (_super) {\n        tslib_1.__extends(TextAlign, _super);\n        function TextAlign() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return TextAlign;\n    }(enum_prop('TextAlign', enums.TextAlign));\n    exports.TextAlign = TextAlign;\n    var TextBaseline = function (_super) {\n        tslib_1.__extends(TextBaseline, _super);\n        function TextBaseline() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return TextBaseline;\n    }(enum_prop('TextBaseline', enums.TextBaseline));\n    exports.TextBaseline = TextBaseline;\n    var RenderLevel = function (_super) {\n        tslib_1.__extends(RenderLevel, _super);\n        function RenderLevel() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return RenderLevel;\n    }(enum_prop('RenderLevel', enums.RenderLevel));\n    exports.RenderLevel = RenderLevel;\n    var RenderMode = function (_super) {\n        tslib_1.__extends(RenderMode, _super);\n        function RenderMode() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return RenderMode;\n    }(enum_prop('RenderMode', enums.RenderMode));\n    exports.RenderMode = RenderMode;\n    var SizingMode = function (_super) {\n        tslib_1.__extends(SizingMode, _super);\n        function SizingMode() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return SizingMode;\n    }(enum_prop('SizingMode', enums.SizingMode));\n    exports.SizingMode = SizingMode;\n    var SpatialUnits = function (_super) {\n        tslib_1.__extends(SpatialUnits, _super);\n        function SpatialUnits() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return SpatialUnits;\n    }(enum_prop('SpatialUnits', enums.SpatialUnits));\n    exports.SpatialUnits = SpatialUnits;\n    var Distribution = function (_super) {\n        tslib_1.__extends(Distribution, _super);\n        function Distribution() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Distribution;\n    }(enum_prop('Distribution', enums.DistributionTypes));\n    exports.Distribution = Distribution;\n    var StepMode = function (_super) {\n        tslib_1.__extends(StepMode, _super);\n        function StepMode() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return StepMode;\n    }(enum_prop('StepMode', enums.StepModes));\n    exports.StepMode = StepMode;\n    var PaddingUnits = function (_super) {\n        tslib_1.__extends(PaddingUnits, _super);\n        function PaddingUnits() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return PaddingUnits;\n    }(enum_prop('PaddingUnits', enums.PaddingUnits));\n    exports.PaddingUnits = PaddingUnits;\n    var StartEnd = function (_super) {\n        tslib_1.__extends(StartEnd, _super);\n        function StartEnd() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return StartEnd;\n    }(enum_prop('StartEnd', enums.StartEnd));\n    exports.StartEnd = StartEnd;\n    //\n    // Units Properties\n    //\n    function units_prop(name, valid_units, default_units) {\n        return function (_super) {\n            tslib_1.__extends(class_3, _super);\n            function class_3() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            class_3.prototype.init = function () {\n                if (this.spec.units == null)\n                    this.spec.units = default_units;\n                var units = this.spec.units;\n                if (!array_1.contains(valid_units, units))\n                    throw new Error(name + ' units must be one of ' + valid_units + ', given invalid value: ' + units);\n            };\n            Object.defineProperty(class_3.prototype, 'units', {\n                get: function () {\n                    return this.spec.units;\n                },\n                set: function (units) {\n                    this.spec.units = units;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            return class_3;\n        }(Number);\n    }\n    exports.units_prop = units_prop;\n    var Angle = function (_super) {\n        tslib_1.__extends(Angle, _super);\n        function Angle() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Angle.prototype.transform = function (values) {\n            if (this.spec.units == 'deg')\n                values = array_1.map(values, function (x) {\n                    return x * Math.PI / 180;\n                });\n            values = array_1.map(values, function (x) {\n                return -x;\n            });\n            return _super.prototype.transform.call(this, values);\n        };\n        return Angle;\n    }(units_prop('Angle', enums.AngleUnits, 'rad'));\n    exports.Angle = Angle;\n    var Distance = function (_super) {\n        tslib_1.__extends(Distance, _super);\n        function Distance() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Distance;\n    }(units_prop('Distance', enums.SpatialUnits, 'data'));\n    exports.Distance = Distance;\n    //\n    // DataSpec properties\n    //\n    var AngleSpec = function (_super) {\n        tslib_1.__extends(AngleSpec, _super);\n        function AngleSpec() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return AngleSpec;\n    }(Angle);\n    exports.AngleSpec = AngleSpec;\n    AngleSpec.prototype.dataspec = true;\n    var ColorSpec = function (_super) {\n        tslib_1.__extends(ColorSpec, _super);\n        function ColorSpec() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ColorSpec;\n    }(Color);\n    exports.ColorSpec = ColorSpec;\n    ColorSpec.prototype.dataspec = true;\n    var DirectionSpec = function (_super) {\n        tslib_1.__extends(DirectionSpec, _super);\n        function DirectionSpec() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return DirectionSpec;\n    }(Distance);\n    exports.DirectionSpec = DirectionSpec;\n    DirectionSpec.prototype.dataspec = true;\n    var DistanceSpec = function (_super) {\n        tslib_1.__extends(DistanceSpec, _super);\n        function DistanceSpec() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return DistanceSpec;\n    }(Distance);\n    exports.DistanceSpec = DistanceSpec;\n    DistanceSpec.prototype.dataspec = true;\n    var FontSizeSpec = function (_super) {\n        tslib_1.__extends(FontSizeSpec, _super);\n        function FontSizeSpec() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return FontSizeSpec;\n    }(String);\n    exports.FontSizeSpec = FontSizeSpec;\n    FontSizeSpec.prototype.dataspec = true;\n    var NumberSpec = function (_super) {\n        tslib_1.__extends(NumberSpec, _super);\n        function NumberSpec() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return NumberSpec;\n    }(Number);\n    exports.NumberSpec = NumberSpec;\n    NumberSpec.prototype.dataspec = true;\n    var StringSpec = function (_super) {\n        tslib_1.__extends(StringSpec, _super);\n        function StringSpec() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return StringSpec;\n    }(String);\n    exports.StringSpec = StringSpec;\n    StringSpec.prototype.dataspec = true;    \n}","/*core/property_mixins*/\nfunction _(require, module, exports) {\n    var _fill_mixin, _gen_mixin, _line_mixin, _text_mixin;\n    var p = require(15    /* ./properties */);\n    var object_1 = require(30    /* ./util/object */);\n    _gen_mixin = function (mixin, prefix) {\n        var name, result, type;\n        result = {};\n        if (prefix == null) {\n            prefix = '';\n        }\n        for (name in mixin) {\n            type = mixin[name];\n            result[prefix + name] = type;\n        }\n        return result;\n    };\n    _line_mixin = {\n        line_color: [\n            p.ColorSpec,\n            'black'\n        ],\n        line_width: [\n            p.NumberSpec,\n            1\n        ],\n        line_alpha: [\n            p.NumberSpec,\n            1\n        ],\n        line_join: [\n            p.LineJoin,\n            'miter'\n        ],\n        line_cap: [\n            p.LineCap,\n            'butt'\n        ],\n        line_dash: [\n            p.Array,\n            []\n        ],\n        line_dash_offset: [\n            p.Number,\n            0\n        ]\n    };\n    exports.line = function (prefix) {\n        return _gen_mixin(_line_mixin, prefix);\n    };\n    _fill_mixin = {\n        fill_color: [\n            p.ColorSpec,\n            'gray'\n        ],\n        fill_alpha: [\n            p.NumberSpec,\n            1\n        ]\n    };\n    exports.fill = function (prefix) {\n        return _gen_mixin(_fill_mixin, prefix);\n    };\n    _text_mixin = {\n        text_font: [\n            p.Font,\n            'helvetica'\n        ],\n        text_font_size: [\n            p.FontSizeSpec,\n            '12pt'\n        ],\n        text_font_style: [\n            p.FontStyle,\n            'normal'\n        ],\n        text_color: [\n            p.ColorSpec,\n            '#444444'\n        ],\n        text_alpha: [\n            p.NumberSpec,\n            1\n        ],\n        text_align: [\n            p.TextAlign,\n            'left'\n        ],\n        text_baseline: [\n            p.TextBaseline,\n            'bottom'\n        ],\n        text_line_height: [\n            p.Number,\n            1.2\n        ]\n    };\n    exports.text = function (prefix) {\n        return _gen_mixin(_text_mixin, prefix);\n    };\n    exports.create = function (configs) {\n        var config, i, kind, len, prefix, result;\n        result = {};\n        for (i = 0, len = configs.length; i < len; i++) {\n            config = configs[i];\n            _a = config.split(':'), kind = _a[0], prefix = _a[1];\n            if (this[kind] == null) {\n                throw new Error('Unknown property mixin kind \\'' + kind + '\\'');\n            }\n            result = object_1.extend(result, this[kind](prefix));\n        }\n        return result;\n        var _a;\n    };    \n}","/*core/selection_manager*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var has_props_1 = require(8    /* ./has_props */);\n    var selector_1 = require(18    /* ./selector */);\n    var hittest = require(9    /* ./hittest */);\n    var p = require(15    /* ./properties */);\n    var SelectionManager = function (_super) {\n        tslib_1.__extends(SelectionManager, _super);\n        function SelectionManager() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SelectionManager.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this.selector = new selector_1.Selector();\n            this.inspectors = {};\n        };\n        SelectionManager.prototype.select = function (renderer_views, geometry, final, append) {\n            if (append === void 0) {\n                append = false;\n            }\n            var did_hit = false;\n            for (var _i = 0, renderer_views_1 = renderer_views; _i < renderer_views_1.length; _i++) {\n                var r = renderer_views_1[_i];\n                did_hit = did_hit || r.hit_test(geometry, final, append);\n            }\n            return did_hit;\n        };\n        SelectionManager.prototype.inspect = function (renderer_view, geometry) {\n            var did_hit = false;\n            did_hit = did_hit || renderer_view.hit_test(geometry, false, false, 'inspect');\n            return did_hit;\n        };\n        SelectionManager.prototype.clear = function (_rview) {\n            this.selector.clear();\n            this.source.selected = hittest.create_hit_test_result();\n        };\n        SelectionManager.prototype.get_or_create_inspector = function (rmodel) {\n            if (this.inspectors[rmodel.id] == null)\n                this.inspectors[rmodel.id] = new selector_1.Selector();\n            return this.inspectors[rmodel.id];\n        };\n        return SelectionManager;\n    }(has_props_1.HasProps);\n    exports.SelectionManager = SelectionManager;\n    SelectionManager.prototype.type = 'SelectionManager';\n    SelectionManager.internal({ source: [p.Any] });    \n}","/*core/selector*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var has_props_1 = require(8    /* ./has_props */);\n    var hittest_1 = require(9    /* ./hittest */);\n    var p = require(15    /* ./properties */);\n    var Selector = function (_super) {\n        tslib_1.__extends(Selector, _super);\n        function Selector() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Selector.prototype.update = function (indices, final, append, silent) {\n            if (silent === void 0) {\n                silent = false;\n            }\n            this.setv({ timestamp: new Date() }, { silent: silent });\n            this.setv({ final: final }, { silent: silent });\n            if (append)\n                indices.update_through_union(this.indices);\n            this.setv({ indices: indices }, { silent: silent });\n        };\n        Selector.prototype.clear = function () {\n            this.timestamp = new Date();\n            this.final = true;\n            this.indices = new hittest_1.HitTestResult();\n        };\n        return Selector;\n    }(has_props_1.HasProps);\n    exports.Selector = Selector;\n    Selector.prototype.type = 'Selector';\n    Selector.internal({\n        indices: [\n            p.Any,\n            function () {\n                return new hittest_1.HitTestResult();\n            }\n        ],\n        final: [p.Boolean],\n        timestamp: [p.Any]\n    });    \n}","/*core/settings*/\nfunction _(require, module, exports) {\n    var Settings = function () {\n        function Settings() {\n            this._dev = false;\n        }\n        Object.defineProperty(Settings.prototype, 'dev', {\n            get: function () {\n                return this._dev;\n            },\n            set: function (dev) {\n                this._dev = dev;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Settings;\n    }();\n    exports.Settings = Settings;\n    exports.settings = new Settings();    \n}","/*core/signaling*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var callback_1 = require(24    /* ./util/callback */);\n    var array_1 = require(22    /* ./util/array */);\n    var Signal = function () {\n        function Signal(sender, name) {\n            this.sender = sender;\n            this.name = name;\n        }\n        Signal.prototype.connect = function (slot, context) {\n            if (context === void 0) {\n                context = null;\n            }\n            if (!receiversForSender.has(this.sender)) {\n                receiversForSender.set(this.sender, []);\n            }\n            var receivers = receiversForSender.get(this.sender);\n            if (findConnection(receivers, this, slot, context) != null) {\n                return false;\n            }\n            var receiver = context || slot;\n            if (!sendersForReceiver.has(receiver)) {\n                sendersForReceiver.set(receiver, []);\n            }\n            var senders = sendersForReceiver.get(receiver);\n            var connection = {\n                signal: this,\n                slot: slot,\n                context: context\n            };\n            receivers.push(connection);\n            senders.push(connection);\n            return true;\n        };\n        Signal.prototype.disconnect = function (slot, context) {\n            if (context === void 0) {\n                context = null;\n            }\n            var receivers = receiversForSender.get(this.sender);\n            if (receivers == null || receivers.length === 0) {\n                return false;\n            }\n            var connection = findConnection(receivers, this, slot, context);\n            if (connection == null) {\n                return false;\n            }\n            var receiver = context || slot;\n            var senders = sendersForReceiver.get(receiver);\n            connection.signal = null;\n            scheduleCleanup(receivers);\n            scheduleCleanup(senders);\n            return true;\n        };\n        Signal.prototype.emit = function (args) {\n            var receivers = receiversForSender.get(this.sender) || [];\n            for (var _i = 0, receivers_1 = receivers; _i < receivers_1.length; _i++) {\n                var _a = receivers_1[_i], signal = _a.signal, slot = _a.slot, context = _a.context;\n                if (signal === this) {\n                    slot.call(context, args, this.sender);\n                }\n            }\n        };\n        return Signal;\n    }();\n    exports.Signal = Signal;\n    (function (Signal) {\n        function disconnectBetween(sender, receiver) {\n            var receivers = receiversForSender.get(sender);\n            if (receivers == null || receivers.length === 0)\n                return;\n            var senders = sendersForReceiver.get(receiver);\n            if (senders == null || senders.length === 0)\n                return;\n            for (var _i = 0, senders_1 = senders; _i < senders_1.length; _i++) {\n                var connection = senders_1[_i];\n                if (connection.signal == null)\n                    return;\n                if (connection.signal.sender === sender)\n                    connection.signal = null;\n            }\n            scheduleCleanup(receivers);\n            scheduleCleanup(senders);\n        }\n        Signal.disconnectBetween = disconnectBetween;\n        function disconnectSender(sender) {\n            var receivers = receiversForSender.get(sender);\n            if (receivers == null || receivers.length === 0)\n                return;\n            for (var _i = 0, receivers_2 = receivers; _i < receivers_2.length; _i++) {\n                var connection = receivers_2[_i];\n                if (connection.signal == null)\n                    return;\n                var receiver = connection.context || connection.slot;\n                connection.signal = null;\n                scheduleCleanup(sendersForReceiver.get(receiver));\n            }\n            scheduleCleanup(receivers);\n        }\n        Signal.disconnectSender = disconnectSender;\n        function disconnectReceiver(receiver) {\n            var senders = sendersForReceiver.get(receiver);\n            if (senders == null || senders.length === 0)\n                return;\n            for (var _i = 0, senders_2 = senders; _i < senders_2.length; _i++) {\n                var connection = senders_2[_i];\n                if (connection.signal == null)\n                    return;\n                var sender = connection.signal.sender;\n                connection.signal = null;\n                scheduleCleanup(receiversForSender.get(sender));\n            }\n            scheduleCleanup(senders);\n        }\n        Signal.disconnectReceiver = disconnectReceiver;\n        function disconnectAll(obj) {\n            var receivers = receiversForSender.get(obj);\n            if (receivers != null && receivers.length !== 0) {\n                for (var _i = 0, receivers_3 = receivers; _i < receivers_3.length; _i++) {\n                    var connection = receivers_3[_i];\n                    connection.signal = null;\n                }\n                scheduleCleanup(receivers);\n            }\n            var senders = sendersForReceiver.get(obj);\n            if (senders != null && senders.length !== 0) {\n                for (var _a = 0, senders_3 = senders; _a < senders_3.length; _a++) {\n                    var connection = senders_3[_a];\n                    connection.signal = null;\n                }\n                scheduleCleanup(senders);\n            }\n        }\n        Signal.disconnectAll = disconnectAll;\n    }(Signal = exports.Signal || (exports.Signal = {})));\n    exports.Signal = Signal;\n    function Signalable(Base) {\n        // XXX: `class Foo extends Signalable(Object)` doesn't work (compiles, but fails at runtime), so\n        // we have to do this to allow signalable classes without an explict base class.\n        if (Base != null) {\n            return function (_super) {\n                tslib_1.__extends(class_1, _super);\n                function class_1() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                class_1.prototype.connect = function (signal, slot) {\n                    return signal.connect(slot, this);\n                };\n                return class_1;\n            }(Base);\n        } else {\n            return function () {\n                function class_2() {\n                }\n                class_2.prototype.connect = function (signal, slot) {\n                    return signal.connect(slot, this);\n                };\n                return class_2;\n            }();\n        }\n    }\n    exports.Signalable = Signalable;\n    var _Signalable;\n    (function (_Signalable) {\n        function connect(signal, slot) {\n            return signal.connect(slot, this);\n        }\n        _Signalable.connect = connect;\n    }(_Signalable = exports._Signalable || (exports._Signalable = {})));\n    var receiversForSender = new WeakMap();\n    var sendersForReceiver = new WeakMap();\n    function findConnection(conns, signal, slot, context) {\n        return array_1.find(conns, function (conn) {\n            return conn.signal === signal && conn.slot === slot && conn.context === context;\n        });\n    }\n    var dirtySet = new Set();\n    function scheduleCleanup(connections) {\n        if (dirtySet.size === 0) {\n            callback_1.defer(cleanupDirtySet);\n        }\n        dirtySet.add(connections);\n    }\n    function cleanupDirtySet() {\n        dirtySet.forEach(function (connections) {\n            array_1.removeBy(connections, function (connection) {\n                return connection.signal == null;\n            });\n        });\n        dirtySet.clear();\n    }    \n}","/*core/ui_events*/\nfunction _(require, module, exports) {\n    var Hammer = require(318    /* hammerjs */);\n    var signaling_1 = require(20    /* ./signaling */);\n    var logging_1 = require(14    /* ./logging */);\n    var dom_1 = require(5    /* ./dom */);\n    var wheel_1 = require(43    /* ./util/wheel */);\n    var object_1 = require(30    /* ./util/object */);\n    var bokeh_events_1 = require(3    /* ./bokeh_events */);\n    exports.UIEvents = function () {\n        // new (plot_view: PlotCanvasView, toolbar: Toolbar, hit_area: Element, plot: Plot)\n        function UIEvents(plot_view, toolbar, hit_area, plot) {\n            this.plot_view = plot_view;\n            this.toolbar = toolbar;\n            this.hit_area = hit_area;\n            this.plot = plot;\n            this.tap = new signaling_1.Signal(this, 'tap');\n            this.doubletap = new signaling_1.Signal(this, 'doubletap');\n            this.press = new signaling_1.Signal(this, 'press');\n            this.pan_start = new signaling_1.Signal(this, 'pan:start');\n            this.pan = new signaling_1.Signal(this, 'pan');\n            this.pan_end = new signaling_1.Signal(this, 'pan:end');\n            this.pinch_start = new signaling_1.Signal(this, 'pinch:start');\n            this.pinch = new signaling_1.Signal(this, 'pinch');\n            this.pinch_end = new signaling_1.Signal(this, 'pinch:end');\n            this.rotate_start = new signaling_1.Signal(this, 'rotate:start');\n            this.rotate = new signaling_1.Signal(this, 'rotate');\n            this.rotate_end = new signaling_1.Signal(this, 'rotate:end');\n            this.move_enter = new signaling_1.Signal(this, 'move:enter');\n            this.move = new signaling_1.Signal(this, 'move');\n            this.move_exit = new signaling_1.Signal(this, 'move:exit');\n            this.scroll = new signaling_1.Signal(this, 'scroll');\n            this.keydown = new signaling_1.Signal(this, 'keydown');\n            this.keyup = new signaling_1.Signal(this, 'keyup');\n            this._configure_hammerjs();\n        }\n        UIEvents.prototype._configure_hammerjs = function () {\n            var _this = this;\n            this.hammer = new Hammer(this.hit_area);\n            // This is to be able to distinguish double taps from single taps\n            this.hammer.get('doubletap').recognizeWith('tap');\n            this.hammer.get('tap').requireFailure('doubletap');\n            this.hammer.get('doubletap').dropRequireFailure('tap');\n            this.hammer.on('doubletap', function (e) {\n                return _this._doubletap(e);\n            });\n            this.hammer.on('tap', function (e) {\n                return _this._tap(e);\n            });\n            this.hammer.on('press', function (e) {\n                return _this._press(e);\n            });\n            this.hammer.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n            this.hammer.on('panstart', function (e) {\n                return _this._pan_start(e);\n            });\n            this.hammer.on('pan', function (e) {\n                return _this._pan(e);\n            });\n            this.hammer.on('panend', function (e) {\n                return _this._pan_end(e);\n            });\n            this.hammer.get('pinch').set({ enable: true });\n            this.hammer.on('pinchstart', function (e) {\n                return _this._pinch_start(e);\n            });\n            this.hammer.on('pinch', function (e) {\n                return _this._pinch(e);\n            });\n            this.hammer.on('pinchend', function (e) {\n                return _this._pinch_end(e);\n            });\n            this.hammer.get('rotate').set({ enable: true });\n            this.hammer.on('rotatestart', function (e) {\n                return _this._rotate_start(e);\n            });\n            this.hammer.on('rotate', function (e) {\n                return _this._rotate(e);\n            });\n            this.hammer.on('rotateend', function (e) {\n                return _this._rotate_end(e);\n            });\n            this.hit_area.addEventListener('mousemove', function (e) {\n                return _this._mouse_move(e);\n            });\n            this.hit_area.addEventListener('mouseenter', function (e) {\n                return _this._mouse_enter(e);\n            });\n            this.hit_area.addEventListener('mouseleave', function (e) {\n                return _this._mouse_exit(e);\n            });\n            this.hit_area.addEventListener('wheel', function (e) {\n                return _this._mouse_wheel(e);\n            });\n            document.addEventListener('keydown', function (e) {\n                return _this._key_down(e);\n            });\n            return document.addEventListener('keyup', function (e) {\n                return _this._key_up(e);\n            });\n        };\n        UIEvents.prototype.register_tool = function (tool_view, event_type) {\n            var e, et, i, id, len, type, v;\n            et = event_type || tool_view.model.event_type;\n            if (et != null && !(typeof et === 'string')) {\n                for (i = 0, len = et.length; i < len; i++) {\n                    e = et[i];\n                    this.register_tool(tool_view, e);\n                }\n                return;\n            }\n            id = tool_view.model.id;\n            type = tool_view.model.type;\n            // tool_viewbar button events handled by tool_view manager\n            if (et == null) {\n                logging_1.logger.debug('Button tool: ' + type);\n                return;\n            }\n            v = tool_view;\n            switch (et) {\n            case 'pan':\n                if (v._pan_start != null) {\n                    v.connect(this.pan_start, function (x) {\n                        if (x.id === id) {\n                            return v._pan_start(x.e);\n                        }\n                    });\n                }\n                if (v._pan != null) {\n                    v.connect(this.pan, function (x) {\n                        if (x.id === id) {\n                            return v._pan(x.e);\n                        }\n                    });\n                }\n                if (v._pan_end != null) {\n                    v.connect(this.pan_end, function (x) {\n                        if (x.id === id) {\n                            return v._pan_end(x.e);\n                        }\n                    });\n                }\n                break;\n            case 'pinch':\n                if (v._pinch_start != null) {\n                    v.connect(this.pinch_start, function (x) {\n                        if (x.id === id) {\n                            return v._pinch_start(x.e);\n                        }\n                    });\n                }\n                if (v._pinch != null) {\n                    v.connect(this.pinch, function (x) {\n                        if (x.id === id) {\n                            return v._pinch(x.e);\n                        }\n                    });\n                }\n                if (v._pinch_end != null) {\n                    v.connect(this.pinch_end, function (x) {\n                        if (x.id === id) {\n                            return v._pinch_end(x.e);\n                        }\n                    });\n                }\n                break;\n            case 'rotate':\n                if (v._rotate_start != null) {\n                    v.connect(this.rotate_start, function (x) {\n                        if (x.id === id) {\n                            return v._rotate_start(x.e);\n                        }\n                    });\n                }\n                if (v._rotate != null) {\n                    v.connect(this.rotate, function (x) {\n                        if (x.id === id) {\n                            return v._rotate(x.e);\n                        }\n                    });\n                }\n                if (v._rotate_end != null) {\n                    v.connect(this.rotate_end, function (x) {\n                        if (x.id === id) {\n                            return v._rotate_end(x.e);\n                        }\n                    });\n                }\n                break;\n            case 'move':\n                if (v._move_enter != null) {\n                    v.connect(this.move_enter, function (x) {\n                        if (x.id === id) {\n                            return v._move_enter(x.e);\n                        }\n                    });\n                }\n                if (v._move != null) {\n                    v.connect(this.move, function (x) {\n                        if (x.id === id) {\n                            return v._move(x.e);\n                        }\n                    });\n                }\n                if (v._move_exit != null) {\n                    v.connect(this.move_exit, function (x) {\n                        if (x.id === id) {\n                            return v._move_exit(x.e);\n                        }\n                    });\n                }\n                break;\n            case 'tap':\n                if (v._tap != null) {\n                    v.connect(this.tap, function (x) {\n                        if (x.id === id) {\n                            return v._tap(x.e);\n                        }\n                    });\n                }\n                break;\n            case 'press':\n                if (v._press != null) {\n                    v.connect(this.press, function (x) {\n                        if (x.id === id) {\n                            return v._press(x.e);\n                        }\n                    });\n                }\n                break;\n            case 'scroll':\n                if (v._scroll != null) {\n                    v.connect(this.scroll, function (x) {\n                        if (x.id === id) {\n                            return v._scroll(x.e);\n                        }\n                    });\n                }\n                break;\n            default:\n                throw new Error('unsupported event_type: ' + ev);\n            }\n            if (v._doubletap != null) {\n                v.connect(this.doubletap, function (x) {\n                    return v._doubletap(x.e);\n                });\n            }\n            if (v._keydown != null) {\n                v.connect(this.keydown, function (x) {\n                    return v._keydown(x.e);\n                });\n            }\n            if (v._keyup != null) {\n                v.connect(this.keyup, function (x) {\n                    return v._keyup(x.e);\n                });\n            }\n            // Dual touch hack part 1/2\n            // This is a hack for laptops with touch screen who may be pinching or scrolling\n            // in order to use the wheel zoom tool. If it's a touch screen the WheelZoomTool event\n            // will be linked to pinch. But we also want to trigger in the case of a scroll.\n            if ('ontouchstart' in window || navigator.maxTouchPoints > 0) {\n                if (et === 'pinch') {\n                    logging_1.logger.debug('Registering scroll on touch screen');\n                    return v.connect(this.scroll, function (x) {\n                        if (x.id === id) {\n                            return v._scroll(x.e);\n                        }\n                    });\n                }\n            }\n        };\n        UIEvents.prototype._hit_test_renderers = function (sx, sy) {\n            var i, ref, ref1, view;\n            ref = this.plot_view.get_renderer_views();\n            for (i = ref.length - 1; i >= 0; i += -1) {\n                view = ref[i];\n                if (((ref1 = view.model.level) === 'annotation' || ref1 === 'overlay') && view.bbox != null) {\n                    if (view.bbox().contains(sx, sy)) {\n                        return view;\n                    }\n                }\n            }\n            return null;\n        };\n        UIEvents.prototype._hit_test_frame = function (sx, sy) {\n            return this.plot_view.frame.bbox.contains(sx, sy);\n        };\n        UIEvents.prototype._trigger = function (signal, e) {\n            var active_gesture, active_inspectors, base, base_type, cursor, event_type, i, inspector, len, results, view;\n            event_type = signal.name;\n            base_type = event_type.split(':')[0];\n            view = this._hit_test_renderers(e.bokeh.sx, e.bokeh.sy);\n            switch (base_type) {\n            case 'move':\n                active_inspectors = this.toolbar.inspectors.filter(function (t) {\n                    return t.active;\n                });\n                cursor = 'default';\n                // the event happened on a renderer\n                if (view != null) {\n                    if (view.model.cursor != null) {\n                        cursor = view.model.cursor();\n                    }\n                    if (!object_1.isEmpty(active_inspectors)) {\n                        // override event_type to cause inspectors to clear overlays\n                        signal = this.move_exit;\n                        event_type = signal.name;\n                    }    // the event happened on the plot frame but off a renderer\n                } else if (this._hit_test_frame(e.bokeh.sx, e.bokeh.sy)) {\n                    if (!object_1.isEmpty(active_inspectors)) {\n                        cursor = 'crosshair';\n                    }\n                }\n                this.plot_view.set_cursor(cursor);\n                results = [];\n                for (i = 0, len = active_inspectors.length; i < len; i++) {\n                    inspector = active_inspectors[i];\n                    results.push(this.trigger(signal, e, inspector.id));\n                }\n                return results;\n                break;\n            case 'tap':\n                if (view != null) {\n                    if (typeof view.on_hit === 'function') {\n                        view.on_hit(e.bokeh.sx, e.bokeh.sy);\n                    }\n                }\n                active_gesture = this.toolbar.gestures[base_type].active;\n                if (active_gesture != null) {\n                    return this.trigger(signal, e, active_gesture.id);\n                }\n                break;\n            case 'scroll':\n                // Dual touch hack part 2/2\n                // This is a hack for laptops with touch screen who may be pinching or scrolling\n                // in order to use the wheel zoom tool. If it's a touch screen the WheelZoomTool event\n                // will be linked to pinch. But we also want to trigger in the case of a scroll.\n                base = 'ontouchstart' in window || navigator.maxTouchPoints > 0 ? 'pinch' : 'scroll';\n                active_gesture = this.toolbar.gestures[base].active;\n                if (active_gesture != null) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return this.trigger(signal, e, active_gesture.id);\n                }\n                break;\n            default:\n                active_gesture = this.toolbar.gestures[base_type].active;\n                if (active_gesture != null) {\n                    return this.trigger(signal, e, active_gesture.id);\n                }\n            }\n        };\n        UIEvents.prototype.trigger = function (signal, event, id) {\n            if (id === void 0) {\n                id = null;\n            }\n            return signal.emit({\n                id: id,\n                e: event\n            });\n        };\n        UIEvents.prototype._event_sxy = function (event) {\n            var left, top;\n            _a = dom_1.offset(this.hit_area), left = _a.left, top = _a.top;\n            return {\n                sx: event.pageX - left,\n                sy: event.pageY - top\n            };\n            var _a;\n        };\n        UIEvents.prototype._bokify_hammer = function (e, extras) {\n            if (extras === void 0) {\n                extras = {};\n            }\n            var event_cls;\n            e.bokeh = object_1.extend(this._event_sxy(e.srcEvent), extras);\n            event_cls = bokeh_events_1.BokehEvent.event_class(e);\n            if (event_cls != null) {\n                return this.plot.trigger_event(event_cls.from_event(e));\n            } else {\n                return logging_1.logger.debug('Unhandled event of type ' + e.type);\n            }\n        };\n        UIEvents.prototype._bokify_point_event = function (e, extras) {\n            if (extras === void 0) {\n                extras = {};\n            }\n            var event_cls;\n            e.bokeh = object_1.extend(this._event_sxy(e), extras);\n            event_cls = bokeh_events_1.BokehEvent.event_class(e);\n            if (event_cls != null) {\n                return this.plot.trigger_event(event_cls.from_event(e));\n            } else {\n                return logging_1.logger.debug('Unhandled event of type ' + e.type);\n            }\n        };\n        UIEvents.prototype._tap = function (e) {\n            this._bokify_hammer(e);\n            return this._trigger(this.tap, e);\n        };\n        UIEvents.prototype._doubletap = function (e) {\n            // NOTE: doubletap event triggered unconditionally\n            this._bokify_hammer(e);\n            return this.trigger(this.doubletap, e);\n        };\n        UIEvents.prototype._press = function (e) {\n            this._bokify_hammer(e);\n            return this._trigger(this.press, e);\n        };\n        UIEvents.prototype._pan_start = function (e) {\n            this._bokify_hammer(e);\n            // back out delta to get original center point\n            e.bokeh.sx -= e.deltaX;\n            e.bokeh.sy -= e.deltaY;\n            return this._trigger(this.pan_start, e);\n        };\n        UIEvents.prototype._pan = function (e) {\n            this._bokify_hammer(e);\n            return this._trigger(this.pan, e);\n        };\n        UIEvents.prototype._pan_end = function (e) {\n            this._bokify_hammer(e);\n            return this._trigger(this.pan_end, e);\n        };\n        UIEvents.prototype._pinch_start = function (e) {\n            this._bokify_hammer(e);\n            return this._trigger(this.pinch_start, e);\n        };\n        UIEvents.prototype._pinch = function (e) {\n            this._bokify_hammer(e);\n            return this._trigger(this.pinch, e);\n        };\n        UIEvents.prototype._pinch_end = function (e) {\n            this._bokify_hammer(e);\n            return this._trigger(this.pinch_end, e);\n        };\n        UIEvents.prototype._rotate_start = function (e) {\n            this._bokify_hammer(e);\n            return this._trigger(this.rotate_start, e);\n        };\n        UIEvents.prototype._rotate = function (e) {\n            this._bokify_hammer(e);\n            return this._trigger(this.rotate, e);\n        };\n        UIEvents.prototype._rotate_end = function (e) {\n            this._bokify_hammer(e);\n            return this._trigger(this.rotate_end, e);\n        };\n        UIEvents.prototype._mouse_enter = function (e) {\n            this._bokify_point_event(e);\n            return this._trigger(this.move_enter, e);\n        };\n        UIEvents.prototype._mouse_move = function (e) {\n            this._bokify_point_event(e);\n            return this._trigger(this.move, e);\n        };\n        UIEvents.prototype._mouse_exit = function (e) {\n            this._bokify_point_event(e);\n            return this._trigger(this.move_exit, e);\n        };\n        UIEvents.prototype._mouse_wheel = function (e) {\n            this._bokify_point_event(e, { delta: wheel_1.getDeltaY(e) });\n            return this._trigger(this.scroll, e);\n        };\n        UIEvents.prototype._key_down = function (e) {\n            // NOTE: keyup event triggered unconditionally\n            return this.trigger(this.keydown, e);\n        };\n        UIEvents.prototype._key_up = function (e) {\n            // NOTE: keyup event triggered unconditionally\n            return this.trigger(this.keyup, e);\n        };\n        return UIEvents;\n    }();    \n}","/*core/util/array*/\nfunction _(require, module, exports) {\n    var math_1 = require(29    /* ./math */);\n    var slice = Array.prototype.slice;\n    function head(array) {\n        return array[0];\n    }\n    exports.head = head;\n    function tail(array) {\n        return array[array.length - 1];\n    }\n    exports.tail = tail;\n    function last(array) {\n        return array[array.length - 1];\n    }\n    exports.last = last;\n    function copy(array) {\n        return slice.call(array);\n    }\n    exports.copy = copy;\n    function concat(arrays) {\n        return (_a = []).concat.apply(_a, arrays);\n        var _a;\n    }\n    exports.concat = concat;\n    function contains(array, value) {\n        return array.indexOf(value) !== -1;\n    }\n    exports.contains = contains;\n    function nth(array, index) {\n        return array[index >= 0 ? index : array.length + index];\n    }\n    exports.nth = nth;\n    function zip(As, Bs) {\n        var n = Math.min(As.length, Bs.length);\n        var ABs = new Array(n);\n        for (var i = 0; i < n; i++) {\n            ABs[i] = [\n                As[i],\n                Bs[i]\n            ];\n        }\n        return ABs;\n    }\n    exports.zip = zip;\n    function unzip(ABs) {\n        var n = ABs.length;\n        var As = new Array(n);\n        var Bs = new Array(n);\n        for (var i = 0; i < n; i++) {\n            _a = ABs[i], As[i] = _a[0], Bs[i] = _a[1];\n        }\n        return [\n            As,\n            Bs\n        ];\n        var _a;\n    }\n    exports.unzip = unzip;\n    function range(start, stop, step) {\n        if (step === void 0) {\n            step = 1;\n        }\n        if (stop == null) {\n            stop = start;\n            start = 0;\n        }\n        var length = Math.max(Math.ceil((stop - start) / step), 0);\n        var range = Array(length);\n        for (var i = 0; i < length; i++, start += step) {\n            range[i] = start;\n        }\n        return range;\n    }\n    exports.range = range;\n    function linspace(start, stop, num) {\n        if (num === void 0) {\n            num = 100;\n        }\n        var step = (stop - start) / (num - 1);\n        var array = new Array(num);\n        for (var i = 0; i < num; i++) {\n            array[i] = start + step * i;\n        }\n        return array;\n    }\n    exports.linspace = linspace;\n    function transpose(array) {\n        var rows = array.length;\n        var cols = array[0].length;\n        var transposed = [];\n        for (var j = 0; j < cols; j++) {\n            transposed[j] = [];\n            for (var i = 0; i < rows; i++) {\n                transposed[j][i] = array[i][j];\n            }\n        }\n        return transposed;\n    }\n    exports.transpose = transpose;\n    function sum(array) {\n        return array.reduce(function (a, b) {\n            return a + b;\n        }, 0);\n    }\n    exports.sum = sum;\n    function cumsum(array) {\n        var result = [];\n        array.reduce(function (a, b, i) {\n            return result[i] = a + b;\n        }, 0);\n        return result;\n    }\n    exports.cumsum = cumsum;\n    function min(array) {\n        var value;\n        var result = Infinity;\n        for (var i = 0, length_1 = array.length; i < length_1; i++) {\n            value = array[i];\n            if (value < result) {\n                result = value;\n            }\n        }\n        return result;\n    }\n    exports.min = min;\n    function minBy(array, key) {\n        if (array.length == 0)\n            throw new Error('minBy() called with an empty array');\n        var result = array[0];\n        var resultComputed = key(result);\n        for (var i = 1, length_2 = array.length; i < length_2; i++) {\n            var value = array[i];\n            var computed = key(value);\n            if (computed < resultComputed) {\n                result = value;\n                resultComputed = computed;\n            }\n        }\n        return result;\n    }\n    exports.minBy = minBy;\n    function max(array) {\n        var value;\n        var result = -Infinity;\n        for (var i = 0, length_3 = array.length; i < length_3; i++) {\n            value = array[i];\n            if (value > result) {\n                result = value;\n            }\n        }\n        return result;\n    }\n    exports.max = max;\n    function maxBy(array, key) {\n        if (array.length == 0)\n            throw new Error('maxBy() called with an empty array');\n        var result = array[0];\n        var resultComputed = key(result);\n        for (var i = 1, length_4 = array.length; i < length_4; i++) {\n            var value = array[i];\n            var computed = key(value);\n            if (computed > resultComputed) {\n                result = value;\n                resultComputed = computed;\n            }\n        }\n        return result;\n    }\n    exports.maxBy = maxBy;\n    function argmin(array) {\n        return minBy(range(array.length), function (i) {\n            return array[i];\n        });\n    }\n    exports.argmin = argmin;\n    function argmax(array) {\n        return maxBy(range(array.length), function (i) {\n            return array[i];\n        });\n    }\n    exports.argmax = argmax;\n    function all(array, predicate) {\n        for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n            var item = array_1[_i];\n            if (!predicate(item))\n                return false;\n        }\n        return true;\n    }\n    exports.all = all;\n    function any(array, predicate) {\n        for (var _i = 0, array_2 = array; _i < array_2.length; _i++) {\n            var item = array_2[_i];\n            if (predicate(item))\n                return true;\n        }\n        return false;\n    }\n    exports.any = any;\n    function findIndexFactory(dir) {\n        return function (array, predicate) {\n            var length = array.length;\n            var index = dir > 0 ? 0 : length - 1;\n            for (; index >= 0 && index < length; index += dir) {\n                if (predicate(array[index]))\n                    return index;\n            }\n            return -1;\n        };\n    }\n    exports.findIndex = findIndexFactory(1);\n    exports.findLastIndex = findIndexFactory(-1);\n    function find(array, predicate) {\n        var index = exports.findIndex(array, predicate);\n        return index == -1 ? undefined : array[index];\n    }\n    exports.find = find;\n    function findLast(array, predicate) {\n        var index = exports.findLastIndex(array, predicate);\n        return index == -1 ? undefined : array[index];\n    }\n    exports.findLast = findLast;\n    function sortedIndex(array, value) {\n        var low = 0;\n        var high = array.length;\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (array[mid] < value)\n                low = mid + 1;\n            else\n                high = mid;\n        }\n        return low;\n    }\n    exports.sortedIndex = sortedIndex;\n    function sortBy(array, key) {\n        var tmp = array.map(function (value, index) {\n            return {\n                value: value,\n                index: index,\n                key: key(value)\n            };\n        });\n        tmp.sort(function (left, right) {\n            var a = left.key;\n            var b = right.key;\n            if (a !== b) {\n                if (a > b || a === undefined)\n                    return 1;\n                if (a < b || b === undefined)\n                    return -1;\n            }\n            return left.index - right.index;\n        });\n        return tmp.map(function (item) {\n            return item.value;\n        });\n    }\n    exports.sortBy = sortBy;\n    function uniq(array) {\n        var result = [];\n        for (var _i = 0, array_3 = array; _i < array_3.length; _i++) {\n            var value = array_3[_i];\n            if (!contains(result, value)) {\n                result.push(value);\n            }\n        }\n        return result;\n    }\n    exports.uniq = uniq;\n    function uniqBy(array, key) {\n        var result = [];\n        var seen = [];\n        for (var _i = 0, array_4 = array; _i < array_4.length; _i++) {\n            var value = array_4[_i];\n            var computed = key(value);\n            if (!contains(seen, computed)) {\n                seen.push(computed);\n                result.push(value);\n            }\n        }\n        return result;\n    }\n    exports.uniqBy = uniqBy;\n    function union() {\n        var arrays = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            arrays[_i] = arguments[_i];\n        }\n        return uniq(concat(arrays));\n    }\n    exports.union = union;\n    function intersection(array) {\n        var arrays = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            arrays[_i - 1] = arguments[_i];\n        }\n        var result = [];\n        top:\n            for (var _a = 0, array_5 = array; _a < array_5.length; _a++) {\n                var item = array_5[_a];\n                if (contains(result, item))\n                    continue;\n                for (var _b = 0, arrays_1 = arrays; _b < arrays_1.length; _b++) {\n                    var other = arrays_1[_b];\n                    if (!contains(other, item))\n                        continue top;\n                }\n                result.push(item);\n            }\n        return result;\n    }\n    exports.intersection = intersection;\n    function difference(array) {\n        var arrays = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            arrays[_i - 1] = arguments[_i];\n        }\n        var rest = concat(arrays);\n        return array.filter(function (value) {\n            return !contains(rest, value);\n        });\n    }\n    exports.difference = difference;\n    function removeBy(array, key) {\n        for (var i = 0; i < array.length;) {\n            if (key(array[i]))\n                array.splice(i, 1);\n            else\n                i++;\n        }\n    }\n    exports.removeBy = removeBy;\n    // Shuffle a collection, using the modern version of the\n    // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n    function shuffle(array) {\n        var length = array.length;\n        var shuffled = new Array(length);\n        for (var i = 0; i < length; i++) {\n            var rand = math_1.randomIn(0, i);\n            if (rand !== i)\n                shuffled[i] = shuffled[rand];\n            shuffled[rand] = array[i];\n        }\n        return shuffled;\n    }\n    exports.shuffle = shuffle;\n    function pairwise(array, fn) {\n        var n = array.length;\n        var result = new Array(n - 1);\n        for (var i = 0; i < n - 1; i++) {\n            result[i] = fn(array[i], array[i + 1]);\n        }\n        return result;\n    }\n    exports.pairwise = pairwise;\n    function reversed(array) {\n        var n = array.length;\n        var result = new Array(n);\n        for (var i = 0; i < n; i++) {\n            result[n - i - 1] = array[i];\n        }\n        return result;\n    }\n    exports.reversed = reversed;\n    function repeat(value, n) {\n        var result = new Array(n);\n        for (var i = 0; i < n; i++) {\n            result[i] = value;\n        }\n        return result;\n    }\n    exports.repeat = repeat;\n    function map(array, fn) {\n        var n = array.length;\n        var result = new Array(n);\n        for (var i = 0; i < n; i++) {\n            result[i] = fn(array[i]);\n        }\n        return result;\n    }\n    exports.map = map;    \n}","/*core/util/bbox*/\nfunction _(require, module, exports) {\n    var min = Math.min, max = Math.max;\n    function empty() {\n        return {\n            minX: Infinity,\n            minY: Infinity,\n            maxX: -Infinity,\n            maxY: -Infinity\n        };\n    }\n    exports.empty = empty;\n    function positive_x() {\n        return {\n            minX: Number.MIN_VALUE,\n            minY: -Infinity,\n            maxX: Infinity,\n            maxY: Infinity\n        };\n    }\n    exports.positive_x = positive_x;\n    function positive_y() {\n        return {\n            minX: -Infinity,\n            minY: Number.MIN_VALUE,\n            maxX: Infinity,\n            maxY: Infinity\n        };\n    }\n    exports.positive_y = positive_y;\n    function union(a, b) {\n        return {\n            minX: min(a.minX, b.minX),\n            maxX: max(a.maxX, b.maxX),\n            minY: min(a.minY, b.minY),\n            maxY: max(a.maxY, b.maxY)\n        };\n    }\n    exports.union = union;\n    var BBox = function () {\n        function BBox(box) {\n            if ('x0' in box && 'y0' in box && 'x1' in box && 'y1' in box) {\n                var _a = box, x0 = _a.x0, y0 = _a.y0, x1 = _a.x1, y1 = _a.y1;\n                if (!(x0 <= x1 && y0 <= y1))\n                    throw new Error('invalid bbox {x0: ' + x0 + ', y0: ' + y0 + ', x1: ' + x1 + ', y1: ' + y1 + '}');\n                this.x0 = x0;\n                this.y0 = y0;\n                this.x1 = x1;\n                this.y1 = y1;\n            } else {\n                var _b = box, x = _b.x, y = _b.y, width = _b.width, height = _b.height;\n                if (!(width >= 0 && height >= 0))\n                    throw new Error('invalid bbox {x: ' + x + ', y: ' + y + ', width: ' + width + ', height: ' + height + '}');\n                this.x0 = x;\n                this.y0 = y;\n                this.x1 = x + width;\n                this.y1 = y + height;\n            }\n        }\n        Object.defineProperty(BBox.prototype, 'minX', {\n            get: function () {\n                return this.x0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'minY', {\n            get: function () {\n                return this.y0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'maxX', {\n            get: function () {\n                return this.x1;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'maxY', {\n            get: function () {\n                return this.y1;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'left', {\n            get: function () {\n                return this.x0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'top', {\n            get: function () {\n                return this.y0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'right', {\n            get: function () {\n                return this.x1;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'bottom', {\n            get: function () {\n                return this.y1;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'p0', {\n            get: function () {\n                return [\n                    this.x0,\n                    this.y0\n                ];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'p1', {\n            get: function () {\n                return [\n                    this.x1,\n                    this.y1\n                ];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'x', {\n            get: function () {\n                return this.x0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'y', {\n            get: function () {\n                return this.y0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'width', {\n            get: function () {\n                return this.x1 - this.x0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'height', {\n            get: function () {\n                return this.y1 - this.y0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'rect', {\n            get: function () {\n                return {\n                    x: this.x,\n                    y: this.y,\n                    width: this.width,\n                    height: this.height\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'h_range', {\n            get: function () {\n                return {\n                    start: this.x0,\n                    end: this.x1\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'v_range', {\n            get: function () {\n                return {\n                    start: this.y0,\n                    end: this.y1\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'ranges', {\n            get: function () {\n                return [\n                    this.h_range,\n                    this.v_range\n                ];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BBox.prototype, 'aspect', {\n            get: function () {\n                return this.width / this.height;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        BBox.prototype.contains = function (x, y) {\n            return x >= this.x0 && x <= this.x1 && y >= this.y0 && y <= this.y1;\n        };\n        BBox.prototype.clip = function (x, y) {\n            if (x < this.x0)\n                x = this.x0;\n            else if (x > this.x1)\n                x = this.x1;\n            if (y < this.y0)\n                y = this.y0;\n            else if (y > this.y1)\n                y = this.y1;\n            return [\n                x,\n                y\n            ];\n        };\n        BBox.prototype.union = function (that) {\n            return new BBox({\n                x0: min(this.x0, that.x0),\n                y0: min(this.y0, that.y0),\n                x1: max(this.x1, that.x1),\n                y1: max(this.y1, that.y1)\n            });\n        };\n        return BBox;\n    }();\n    exports.BBox = BBox;    \n}","/*core/util/callback*/\nfunction _(require, module, exports) {\n    function delay(func, wait) {\n        return setTimeout(func, wait);\n    }\n    exports.delay = delay;\n    var _defer = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : setImmediate;\n    function defer(func) {\n        return _defer(func);\n    }\n    exports.defer = defer;\n    function throttle(func, wait, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var context, args, result;\n        var timeout = null;\n        var previous = 0;\n        var later = function () {\n            previous = options.leading === false ? 0 : Date.now();\n            timeout = null;\n            result = func.apply(context, args);\n            if (!timeout)\n                context = args = null;\n        };\n        return function () {\n            var now = Date.now();\n            if (!previous && options.leading === false)\n                previous = now;\n            var remaining = wait - (now - previous);\n            context = this;\n            args = arguments;\n            if (remaining <= 0 || remaining > wait) {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                previous = now;\n                result = func.apply(context, args);\n                if (!timeout)\n                    context = args = null;\n            } else if (!timeout && options.trailing !== false) {\n                timeout = setTimeout(later, remaining);\n            }\n            return result;\n        };\n    }\n    exports.throttle = throttle;\n    function once(func) {\n        var done = false;\n        var memo;\n        return function () {\n            if (!done) {\n                done = true;\n                memo = func();\n            }\n            return memo;\n        };\n    }\n    exports.once = once;    \n}","/*core/util/canvas*/\nfunction _(require, module, exports) {\n    function fixup_line_dash(ctx) {\n        if (!ctx.setLineDash) {\n            ctx.setLineDash = function (dash) {\n                ctx.mozDash = dash;\n                ctx.webkitLineDash = dash;\n            };\n        }\n        if (!ctx.getLineDash) {\n            ctx.getLineDash = function () {\n                return ctx.mozDash;\n            };\n        }\n    }\n    function fixup_line_dash_offset(ctx) {\n        ctx.setLineDashOffset = function (dash_offset) {\n            ctx.lineDashOffset = dash_offset;\n            ctx.mozDashOffset = dash_offset;\n            ctx.webkitLineDashOffset = dash_offset;\n        };\n        ctx.getLineDashOffset = function () {\n            return ctx.mozDashOffset;\n        };\n    }\n    function fixup_image_smoothing(ctx) {\n        ctx.setImageSmoothingEnabled = function (value) {\n            ctx.imageSmoothingEnabled = value;\n            ctx.mozImageSmoothingEnabled = value;\n            ctx.oImageSmoothingEnabled = value;\n            ctx.webkitImageSmoothingEnabled = value;\n            ctx.msImageSmoothingEnabled = value;\n        };\n        ctx.getImageSmoothingEnabled = function () {\n            var val = ctx.imageSmoothingEnabled;\n            return val != null ? val : true;\n        };\n    }\n    function fixup_measure_text(ctx) {\n        if (ctx.measureText && ctx.html5MeasureText == null) {\n            ctx.html5MeasureText = ctx.measureText;\n            ctx.measureText = function (text) {\n                var textMetrics = ctx.html5MeasureText(text);\n                // fake it til you make it\n                textMetrics.ascent = ctx.html5MeasureText('m').width * 1.6;\n                return textMetrics;\n            };\n        }\n    }\n    function fixup_ellipse(ctx) {\n        // implementing the ctx.ellipse function with bezier curves\n        // we don't implement the startAngle, endAngle and anticlockwise arguments.\n        function ellipse_bezier(x, y, radiusX, radiusY, rotation, _startAngle, _endAngle, anticlockwise) {\n            if (anticlockwise === void 0) {\n                anticlockwise = false;\n            }\n            var c = 0.551784;\n            // see http://www.tinaja.com/glib/ellipse4.pdf\n            ctx.translate(x, y);\n            ctx.rotate(rotation);\n            var rx = radiusX;\n            var ry = radiusY;\n            if (anticlockwise) {\n                rx = -radiusX;\n                ry = -radiusY;\n            }\n            ctx.moveTo(-rx, 0);\n            // start point of first curve\n            ctx.bezierCurveTo(-rx, ry * c, -rx * c, ry, 0, ry);\n            ctx.bezierCurveTo(rx * c, ry, rx, ry * c, rx, 0);\n            ctx.bezierCurveTo(rx, -ry * c, rx * c, -ry, 0, -ry);\n            ctx.bezierCurveTo(-rx * c, -ry, -rx, -ry * c, -rx, 0);\n            ctx.rotate(-rotation);\n            ctx.translate(-x, -y);\n        }\n        if (!ctx.ellipse)\n            ctx.ellipse = ellipse_bezier;\n    }\n    function fixup_ctx(ctx) {\n        fixup_line_dash(ctx);\n        fixup_line_dash_offset(ctx);\n        fixup_image_smoothing(ctx);\n        fixup_measure_text(ctx);\n        fixup_ellipse(ctx);\n    }\n    exports.fixup_ctx = fixup_ctx;\n    function get_scale_ratio(ctx, hidpi, backend) {\n        if (backend == 'svg')\n            return 1;\n        else if (hidpi) {\n            var devicePixelRatio_1 = window.devicePixelRatio || 1;\n            var backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n            return devicePixelRatio_1 / backingStoreRatio;\n        } else\n            return 1;\n    }\n    exports.get_scale_ratio = get_scale_ratio;    \n}","/*core/util/color*/\nfunction _(require, module, exports) {\n    var _component2hex, indexOf = [].indexOf;\n    var svg_colors = require(38    /* ./svg_colors */);\n    _component2hex = function (v) {\n        var h;\n        h = Number(v).toString(16);\n        return h = h.length === 1 ? '0' + h : h;\n    };\n    exports.color2hex = function (color) {\n        var hex, hex_string, rgb, v;\n        color = color + '';\n        if (color.indexOf('#') === 0) {\n            return color;\n        } else if (svg_colors[color] != null) {\n            return svg_colors[color];\n        } else if (color.indexOf('rgb') === 0) {\n            rgb = color.replace(/^rgba?\\(|\\s+|\\)$/g, '').split(',');\n            hex = function () {\n                var j, len, ref, results;\n                ref = rgb.slice(0, 3);\n                results = [];\n                for (j = 0, len = ref.length; j < len; j++) {\n                    v = ref[j];\n                    results.push(_component2hex(v));\n                }\n                return results;\n            }().join('');\n            if (rgb.length === 4) {\n                hex = hex + _component2hex(Math.floor(parseFloat(rgb.slice(3)) * 255));\n            }\n            hex_string = '#' + hex.slice(0, 8);\n            // can also be rgba\n            return hex_string;\n        } else {\n            return color;\n        }\n    };\n    exports.color2rgba = function (color, alpha) {\n        if (alpha === void 0) {\n            alpha = 1;\n        }\n        var hex, i, rgba;\n        if (!color) {\n            return [\n                0,\n                0,\n                0,\n                0    // transparent\n            ];\n        }\n        // Convert to hex and then to clean version of 6 or 8 chars\n        hex = exports.color2hex(color);\n        hex = hex.replace(/ |#/g, '');\n        if (hex.length <= 4) {\n            hex = hex.replace(/(.)/g, '$1$1');\n        }\n        // Convert pairs to numbers\n        hex = hex.match(/../g);\n        rgba = function () {\n            var j, len, results;\n            results = [];\n            for (j = 0, len = hex.length; j < len; j++) {\n                i = hex[j];\n                results.push(parseInt(i, 16) / 255);\n            }\n            return results;\n        }();\n        // Ensure correct length, add alpha if necessary\n        while (rgba.length < 3) {\n            rgba.push(0);\n        }\n        if (rgba.length < 4) {\n            rgba.push(alpha);\n        }\n        return rgba.slice(0, 4);    // return 4 elements\n    };\n    exports.valid_rgb = function (value) {\n        var contents, params, ref, rgb;\n        switch (value.substring(0, 4)) {\n        case 'rgba':\n            params = {\n                start: 'rgba(',\n                len: 4,\n                alpha: true\n            };\n            break;\n        case 'rgb(':\n            params = {\n                start: 'rgb(',\n                len: 3,\n                alpha: false\n            };\n            break;\n        default:\n            return false;\n        }\n        // if '.' and then ',' found, we know decimals are used on rgb\n        if (new RegExp('.*?(\\\\.).*(,)').test(value)) {\n            throw new Error('color expects integers for rgb in rgb/rgba tuple, received ' + value);\n        }\n        // extract the numerical values from inside parens\n        contents = value.replace(params.start, '').replace(')', '').split(',').map(parseFloat);\n        // check length of array based on rgb/rgba\n        if (contents.length !== params.len) {\n            throw new Error('color expects rgba ' + expect_len + '-tuple, received ' + value);\n        }\n        // check for valid numerical values for rgba\n        if (params.alpha && !(0 <= (ref = contents[3]) && ref <= 1)) {\n            throw new Error('color expects rgba 4-tuple to have alpha value between 0 and 1');\n        }\n        if (indexOf.call(function () {\n                var j, len, ref1, results;\n                ref1 = contents.slice(0, 3);\n                results = [];\n                for (j = 0, len = ref1.length; j < len; j++) {\n                    rgb = ref1[j];\n                    results.push(0 <= rgb && rgb <= 255);\n                }\n                return results;\n            }(), false) >= 0) {\n            throw new Error('color expects rgb to have value between 0 and 255');\n        }\n        return true;\n    };    \n}","/*core/util/data_structures*/\nfunction _(require, module, exports) {\n    var array_1 = require(22    /* ./array */);\n    var eq_1 = require(28    /* ./eq */);\n    var types_1 = require(42    /* ./types */);\n    var MultiDict = function () {\n        function MultiDict() {\n            this._dict = {};\n        }\n        MultiDict.prototype._existing = function (key) {\n            if (key in this._dict)\n                return this._dict[key];\n            else\n                return null;\n        };\n        MultiDict.prototype.add_value = function (key, value) {\n            /*\n        if value == null\n          throw new Error(\"Can't put null in this dict\")\n        if isArray(value)\n          throw new Error(\"Can't put arrays in this dict\")\n        */\n            var existing = this._existing(key);\n            if (existing == null) {\n                this._dict[key] = value;\n            } else if (types_1.isArray(existing)) {\n                existing.push(value);\n            } else {\n                this._dict[key] = [\n                    existing,\n                    value\n                ];\n            }\n        };\n        MultiDict.prototype.remove_value = function (key, value) {\n            var existing = this._existing(key);\n            if (types_1.isArray(existing)) {\n                var new_array = array_1.difference(existing, [value]);\n                if (new_array.length > 0)\n                    this._dict[key] = new_array;\n                else\n                    delete this._dict[key];\n            } else if (eq_1.isEqual(existing, value)) {\n                delete this._dict[key];\n            }\n        };\n        MultiDict.prototype.get_one = function (key, duplicate_error) {\n            var existing = this._existing(key);\n            if (types_1.isArray(existing)) {\n                if (existing.length === 1)\n                    return existing[0];\n                else\n                    throw new Error(duplicate_error);\n            } else\n                return existing;\n        };\n        return MultiDict;\n    }();\n    exports.MultiDict = MultiDict;\n    var Set = function () {\n        function Set(obj) {\n            if (obj == null) {\n                this.values = [];\n            } else if (obj instanceof Set) {\n                this.values = array_1.copy(obj.values);\n            } else {\n                this.values = this._compact(obj);\n            }\n        }\n        Set.prototype._compact = function (array) {\n            var newArray = [];\n            for (var _i = 0, array_2 = array; _i < array_2.length; _i++) {\n                var item = array_2[_i];\n                if (newArray.indexOf(item) === -1) {\n                    newArray.push(item);\n                }\n            }\n            return newArray;\n        };\n        Set.prototype.push = function (item) {\n            if (this.missing(item))\n                this.values.push(item);\n        };\n        Set.prototype.remove = function (item) {\n            var i = this.values.indexOf(item);\n            this.values = this.values.slice(0, i).concat(this.values.slice(i + 1));\n        };\n        Set.prototype.length = function () {\n            return this.values.length;\n        };\n        Set.prototype.includes = function (item) {\n            return this.values.indexOf(item) != -1;\n        };\n        Set.prototype.missing = function (item) {\n            return !this.includes(item);\n        };\n        Set.prototype.slice = function (from, to) {\n            return this.values.slice(from, to);\n        };\n        Set.prototype.join = function (str) {\n            return this.values.join(str);\n        };\n        Set.prototype.toString = function () {\n            return this.join(', ');\n        };\n        Set.prototype.union = function (set) {\n            set = new Set(set);\n            return new Set(this.values.concat(set.values));\n        };\n        Set.prototype.intersect = function (set) {\n            set = new Set(set);\n            var newSet = new Set();\n            for (var _i = 0, _a = set.values; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (this.includes(item) && set.includes(item))\n                    newSet.push(item);\n            }\n            return newSet;\n        };\n        Set.prototype.diff = function (set) {\n            set = new Set(set);\n            var newSet = new Set();\n            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (set.missing(item))\n                    newSet.push(item);\n            }\n            return newSet;\n        };\n        return Set;\n    }();\n    exports.Set = Set;    \n}","/*core/util/eq*/\nfunction _(require, module, exports) {\n    var types_1 = require(42    /* ./types */);\n    var toString = Object.prototype.toString;\n    // Internal recursive comparison function for `isEqual`.\n    function eq(a, b, aStack, bStack) {\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n        if (a === b)\n            return a !== 0 || 1 / a === 1 / b;\n        // A strict comparison is necessary because `null == undefined`.\n        if (a == null || b == null)\n            return a === b;\n        // Compare `[[Class]]` names.\n        var className = toString.call(a);\n        if (className !== toString.call(b))\n            return false;\n        switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case '[object RegExp]':\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case '[object String]':\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return '' + a === '' + b;\n        case '[object Number]':\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN\n            if (+a !== +a)\n                return +b !== +b;\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n        case '[object Date]':\n        case '[object Boolean]':\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b;\n        }\n        var areArrays = className === '[object Array]';\n        if (!areArrays) {\n            if (typeof a != 'object' || typeof b != 'object')\n                return false;\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n            // from different frames are.\n            var aCtor = a.constructor, bCtor = b.constructor;\n            if (aCtor !== bCtor && !(types_1.isFunction(aCtor) && aCtor instanceof aCtor && types_1.isFunction(bCtor) && bCtor instanceof bCtor) && ('constructor' in a && 'constructor' in b)) {\n                return false;\n            }\n        }\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n        // Initializing stack of traversed objects.\n        // It's done here since we only need them for objects and arrays comparison.\n        aStack = aStack || [];\n        bStack = bStack || [];\n        var length = aStack.length;\n        while (length--) {\n            // Linear search. Performance is inversely proportional to the number of\n            // unique nested structures.\n            if (aStack[length] === a)\n                return bStack[length] === b;\n        }\n        // Add the first object to the stack of traversed objects.\n        aStack.push(a);\n        bStack.push(b);\n        // Recursively compare objects and arrays.\n        if (areArrays) {\n            // Compare array lengths to determine if a deep comparison is necessary.\n            length = a.length;\n            if (length !== b.length)\n                return false;\n            // Deep compare the contents, ignoring non-numeric properties.\n            while (length--) {\n                if (!eq(a[length], b[length], aStack, bStack))\n                    return false;\n            }\n        } else {\n            // Deep compare objects.\n            var keys = Object.keys(a);\n            var key = void 0;\n            length = keys.length;\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\n            if (Object.keys(b).length !== length)\n                return false;\n            while (length--) {\n                // Deep compare each member\n                key = keys[length];\n                if (!(b.hasOwnProperty(key) && eq(a[key], b[key], aStack, bStack)))\n                    return false;\n            }\n        }\n        // Remove the first object from the stack of traversed objects.\n        aStack.pop();\n        bStack.pop();\n        return true;\n    }\n    // Perform a deep comparison to check if two objects are equal.\n    function isEqual(a, b) {\n        return eq(a, b);\n    }\n    exports.isEqual = isEqual;    \n}","/*core/util/math*/\nfunction _(require, module, exports) {\n    function angle_norm(angle) {\n        while (angle < 0) {\n            angle += 2 * Math.PI;\n        }\n        while (angle > 2 * Math.PI) {\n            angle -= 2 * Math.PI;\n        }\n        return angle;\n    }\n    exports.angle_norm = angle_norm;\n    function angle_dist(lhs, rhs) {\n        return Math.abs(angle_norm(lhs - rhs));\n    }\n    exports.angle_dist = angle_dist;\n    function angle_between(mid, lhs, rhs, direction) {\n        var norm_mid = angle_norm(mid);\n        var d = angle_dist(lhs, rhs);\n        var cond = angle_dist(lhs, norm_mid) <= d && angle_dist(norm_mid, rhs) <= d;\n        if (direction == 'anticlock')\n            return cond;\n        else\n            return !cond;\n    }\n    exports.angle_between = angle_between;\n    function random() {\n        return Math.random();\n    }\n    exports.random = random;\n    function randomIn(min, max) {\n        if (max == null) {\n            max = min;\n            min = 0;\n        }\n        return min + Math.floor(Math.random() * (max - min + 1));\n    }\n    exports.randomIn = randomIn;\n    function atan2(start, end) {\n        /*\n     * Calculate the angle between a line containing start and end points (composed\n     * of [x, y] arrays) and the positive x-axis.\n     */\n        return Math.atan2(end[1] - start[1], end[0] - start[0]);\n    }\n    exports.atan2 = atan2;\n    // http://www2.econ.osaka-u.ac.jp/~tanizaki/class/2013/econome3/13.pdf (Page 432)\n    function rnorm(mu, sigma) {\n        // Generate a random normal with a mean of 0 and a sigma of 1\n        var r1;\n        var r2;\n        while (true) {\n            r1 = random();\n            r2 = random();\n            r2 = (2 * r2 - 1) * Math.sqrt(2 * (1 / Math.E));\n            if (-4 * r1 * r1 * Math.log(r1) >= r2 * r2)\n                break;\n        }\n        var rn = r2 / r1;\n        // Transform the standard normal to meet the characteristics that we want (mu, sigma)\n        rn = mu + sigma * rn;\n        return rn;\n    }\n    exports.rnorm = rnorm;\n    function clamp(val, min, max) {\n        if (val > max)\n            return max;\n        if (val < min)\n            return min;\n        return val;\n    }\n    exports.clamp = clamp;    \n}","/*core/util/object*/\nfunction _(require, module, exports) {\n    var array_1 = require(22    /* ./array */);\n    exports.keys = Object.keys;\n    function values(object) {\n        var keys = Object.keys(object);\n        var length = keys.length;\n        var values = new Array(length);\n        for (var i = 0; i < length; i++) {\n            values[i] = object[keys[i]];\n        }\n        return values;\n    }\n    exports.values = values;\n    function extend(dest) {\n        var sources = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            sources[_i - 1] = arguments[_i];\n        }\n        for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n            var source = sources_1[_a];\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n        return dest;\n    }\n    exports.extend = extend;\n    function clone(obj) {\n        return extend({}, obj);\n    }\n    exports.clone = clone;\n    function merge(obj1, obj2) {\n        /*\n     * Returns an object with the array values for obj1 and obj2 unioned by key.\n     */\n        var result = Object.create(Object.prototype);\n        var keys = array_1.concat([\n            Object.keys(obj1),\n            Object.keys(obj2)\n        ]);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            var arr1 = obj1.hasOwnProperty(key) ? obj1[key] : [];\n            var arr2 = obj2.hasOwnProperty(key) ? obj2[key] : [];\n            result[key] = array_1.union(arr1, arr2);\n        }\n        return result;\n    }\n    exports.merge = merge;\n    function size(obj) {\n        return Object.keys(obj).length;\n    }\n    exports.size = size;\n    function isEmpty(obj) {\n        return size(obj) === 0;\n    }\n    exports.isEmpty = isEmpty;    \n}","/*core/util/proj4*/\nfunction _(require, module, exports) {\n    var latlon_bounds;\n    var proj4 = require(345    /* proj4/lib/core */);\n    exports.proj4 = proj4;\n    var Proj = require(333    /* proj4/lib/Proj */);\n    var toPoint = require(339    /* proj4/lib/common/toPoint */);\n    var defs = require(349    /* proj4/lib/defs */);\n    var transform = require(358    /* proj4/lib/transform */);\n    proj4.defaultDatum = 'WGS84';\n    // default datum\n    proj4.WGS84 = new Proj('WGS84');\n    proj4.Proj = Proj;\n    proj4.toPoint = toPoint;\n    proj4.defs = defs;\n    proj4.transform = transform;\n    exports.mercator = defs('GOOGLE');\n    exports.wgs84 = defs('WGS84');\n    exports.mercator_bounds = {\n        lon: [\n            -20026376.39,\n            20026376.39\n        ],\n        lat: [\n            -20048966.1,\n            20048966.1\n        ]\n    };\n    latlon_bounds = {\n        lon: [\n            -180,\n            180\n        ],\n        lat: [\n            -85.06,\n            85.06\n        ]\n    };\n    exports.clip_mercator = function (low, high, dimension) {\n        var max, min;\n        _a = exports.mercator_bounds[dimension], min = _a[0], max = _a[1];\n        return [\n            Math.max(low, min),\n            Math.min(high, max)\n        ];\n        var _a;\n    };\n    exports.in_bounds = function (value, dimension) {\n        return value > latlon_bounds[dimension][0] && value < latlon_bounds[dimension][1];\n    };    \n}","/*core/util/projections*/\nfunction _(require, module, exports) {\n    var proj4_1 = require(31    /* ./proj4 */);\n    function project_xy(x, y) {\n        var n = Math.min(x.length, y.length);\n        var merc_x_s = new Array(n);\n        var merc_y_s = new Array(n);\n        for (var i = 0; i < n; i++) {\n            var _a = proj4_1.proj4(proj4_1.mercator, [\n                    x[i],\n                    y[i]\n                ]), merc_x = _a[0], merc_y = _a[1];\n            merc_x_s[i] = merc_x;\n            merc_y_s[i] = merc_y;\n        }\n        return [\n            merc_x_s,\n            merc_y_s\n        ];\n    }\n    exports.project_xy = project_xy;\n    function project_xsys(xs, ys) {\n        var n = Math.min(xs.length, ys.length);\n        var merc_xs_s = new Array(n);\n        var merc_ys_s = new Array(n);\n        for (var i = 0; i < n; i++) {\n            var _a = project_xy(xs[i], ys[i]), merc_x_s = _a[0], merc_y_s = _a[1];\n            merc_xs_s[i] = merc_x_s;\n            merc_ys_s[i] = merc_y_s;\n        }\n        return [\n            merc_xs_s,\n            merc_ys_s\n        ];\n    }\n    exports.project_xsys = project_xsys;    \n}","/*core/util/refs*/\nfunction _(require, module, exports) {\n    var types_1 = require(42    /* ./types */);\n    // Create a Bokeh reference from a HasProps subclass\n    //\n    // @param obj [HasProps] the object to create a reference for\n    // @return [Object] a Bokeh reference for `obj`\n    // @throw Error if `obj` is not a HasProps\n    //\n    function create_ref(obj) {\n        var ref = {\n            type: obj.type,\n            id: obj.id\n        };\n        if (obj._subtype != null) {\n            ref.subtype = obj._subtype;\n        }\n        return ref;\n    }\n    exports.create_ref = create_ref;\n    // Determine whether an object has the proper format of a Bokeh reference\n    //\n    // @param arg [Object] the object to test\n    // @return [bool] whether the object is a refererence\n    //\n    // @note this function does not check that the id and types are valid,\n    //   only that the format is correct (all required keys are present)\n    //\n    function is_ref(arg) {\n        if (types_1.isObject(arg)) {\n            var keys = Object.keys(arg).sort();\n            if (keys.length == 2)\n                return keys[0] == 'id' && keys[1] == 'type';\n            if (keys.length == 3)\n                return keys[0] == 'id' && keys[1] == 'subtype' && keys[2] == 'type';\n        }\n        return false;\n    }\n    exports.is_ref = is_ref;    \n}","/*core/util/selection*/\nfunction _(require, module, exports) {\n    function get_indices(data_source) {\n        var selected = data_source.selected;\n        if (selected['0d'].glyph)\n            return selected['0d'].indices;\n        else if (selected['1d'].indices.length > 0)\n            return selected['1d'].indices;\n        else if (selected['2d'].indices.length > 0)\n            return selected['2d'].indices;\n        else\n            return [];\n    }\n    exports.get_indices = get_indices;    \n}","/*core/util/serialization*/\nfunction _(require, module, exports) {\n    var _order, buf, buf16, buf8, k, v;\n    var types_1 = require(42    /* ./types */);\n    exports.ARRAY_TYPES = {\n        float32: Float32Array,\n        float64: Float64Array,\n        uint8: Uint8Array,\n        int8: Int8Array,\n        uint16: Uint16Array,\n        int16: Int16Array,\n        uint32: Uint32Array,\n        int32: Int32Array\n    };\n    exports.DTYPES = {};\n    for (k in exports.ARRAY_TYPES) {\n        v = exports.ARRAY_TYPES[k];\n        exports.DTYPES[v.name] = k;\n    }\n    // record endian-ness\n    buf = new ArrayBuffer(2);\n    buf8 = new Uint8Array(buf);\n    buf16 = new Uint16Array(buf);\n    buf8[0] = 170;\n    buf8[1] = 187;\n    if (buf16[0] === 48042) {\n        _order = 'little';\n    } else {\n        _order = 'big';\n    }\n    exports.BYTE_ORDER = _order;\n    exports.swap16 = function (a) {\n        var i, j, ref, t, x;\n        x = new Uint8Array(a.buffer, a.byteOffset, a.length * 2);\n        for (i = j = 0, ref = x.length; j < ref; i = j += 2) {\n            t = x[i];\n            x[i] = x[i + 1];\n            x[i + 1] = t;\n        }\n        return null;\n    };\n    exports.swap32 = function (a) {\n        var i, j, ref, t, x;\n        x = new Uint8Array(a.buffer, a.byteOffset, a.length * 4);\n        for (i = j = 0, ref = x.length; j < ref; i = j += 4) {\n            t = x[i];\n            x[i] = x[i + 3];\n            x[i + 3] = t;\n            t = x[i + 1];\n            x[i + 1] = x[i + 2];\n            x[i + 2] = t;\n        }\n        return null;\n    };\n    exports.swap64 = function (a) {\n        var i, j, ref, t, x;\n        x = new Uint8Array(a.buffer, a.byteOffset, a.length * 8);\n        for (i = j = 0, ref = x.length; j < ref; i = j += 8) {\n            t = x[i];\n            x[i] = x[i + 7];\n            x[i + 7] = t;\n            t = x[i + 1];\n            x[i + 1] = x[i + 6];\n            x[i + 6] = t;\n            t = x[i + 2];\n            x[i + 2] = x[i + 5];\n            x[i + 5] = t;\n            t = x[i + 3];\n            x[i + 3] = x[i + 4];\n            x[i + 4] = t;\n        }\n        return null;\n    };\n    exports.process_buffer = function (spec, buffers) {\n        var arr, bytes, header, j, len1, need_swap, shape;\n        need_swap = spec.order !== exports.BYTE_ORDER;\n        shape = spec.shape;\n        bytes = null;\n        for (j = 0, len1 = buffers.length; j < len1; j++) {\n            buf = buffers[j];\n            header = JSON.parse(buf[0]);\n            if (header.id === spec.__buffer__) {\n                bytes = buf[1];\n                break;\n            }\n        }\n        arr = new exports.ARRAY_TYPES[spec.dtype](bytes);\n        if (need_swap) {\n            if (arr.BYTES_PER_ELEMENT === 2) {\n                exports.swap16(arr);\n            } else if (arr.BYTES_PER_ELEMENT === 4) {\n                exports.swap32(arr);\n            } else if (arr.BYTES_PER_ELEMENT === 8) {\n                exports.swap64(arr);\n            }\n        }\n        return [\n            arr,\n            shape\n        ];\n    };\n    exports.process_array = function (obj, buffers) {\n        if (types_1.isObject(obj) && '__ndarray__' in obj) {\n            return exports.decode_base64(obj);\n        } else if (types_1.isObject(obj) && '__buffer__' in obj) {\n            return exports.process_buffer(obj, buffers);\n        } else if (types_1.isArray(obj)) {\n            return [\n                obj,\n                []\n            ];\n        }\n    };\n    exports.arrayBufferToBase64 = function (buffer) {\n        var b, binary, bytes;\n        bytes = new Uint8Array(buffer);\n        binary = function () {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = bytes.length; j < len1; j++) {\n                b = bytes[j];\n                results.push(String.fromCharCode(b));\n            }\n            return results;\n        }();\n        return btoa(binary.join(''));\n    };\n    exports.base64ToArrayBuffer = function (base64) {\n        var binary_string, bytes, i, j, len, ref;\n        binary_string = atob(base64);\n        len = binary_string.length;\n        bytes = new Uint8Array(len);\n        for (i = j = 0, ref = len; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            bytes[i] = binary_string.charCodeAt(i);\n        }\n        return bytes.buffer;\n    };\n    exports.decode_base64 = function (input) {\n        var array, bytes, dtype, shape;\n        bytes = exports.base64ToArrayBuffer(input['__ndarray__']);\n        dtype = input['dtype'];\n        if (dtype in exports.ARRAY_TYPES) {\n            array = new exports.ARRAY_TYPES[dtype](bytes);\n        }\n        shape = input['shape'];\n        return [\n            array,\n            shape\n        ];\n    };\n    exports.encode_base64 = function (array, shape) {\n        var b64, data, dtype;\n        b64 = exports.arrayBufferToBase64(array.buffer);\n        dtype = exports.DTYPES[array.constructor.name];\n        data = {\n            __ndarray__: b64,\n            shape: shape,\n            dtype: dtype\n        };\n        return data;\n    };\n    exports.decode_column_data = function (data, buffers) {\n        var arr, arrays, j, len1, new_data, new_shapes, obj, shape, shapes;\n        new_data = {};\n        new_shapes = {};\n        for (k in data) {\n            v = data[k];\n            // might be array of scalars, or might be ragged array or arrays\n            if (types_1.isArray(v)) {\n                // v is just a regular array of scalars\n                if (v.length === 0 || !(types_1.isObject(v[0]) || types_1.isArray(v[0]))) {\n                    new_data[k] = v;\n                    continue;\n                }\n                // v is a ragged array of arrays\n                arrays = [];\n                shapes = [];\n                for (j = 0, len1 = v.length; j < len1; j++) {\n                    obj = v[j];\n                    _a = exports.process_array(obj, buffers), arr = _a[0], shape = _a[1];\n                    arrays.push(arr);\n                    shapes.push(shape);\n                }\n                new_data[k] = arrays;\n                new_shapes[k] = shapes;\n            } else {\n                // must be object or array (single array case)\n                _b = exports.process_array(v, buffers), arr = _b[0], shape = _b[1];\n                new_data[k] = arr;\n                new_shapes[k] = shape;\n            }\n        }\n        return [\n            new_data,\n            new_shapes\n        ];\n        var _a, _b;\n    };\n    exports.encode_column_data = function (data, shapes) {\n        var i, j, new_array, new_data, ref, ref1, ref2;\n        new_data = {};\n        for (k in data) {\n            v = data[k];\n            if ((v != null ? v.buffer : void 0) instanceof ArrayBuffer) {\n                v = exports.encode_base64(v, shapes != null ? shapes[k] : void 0);\n            } else if (types_1.isArray(v)) {\n                new_array = [];\n                for (i = j = 0, ref = v.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    if (((ref1 = v[i]) != null ? ref1.buffer : void 0) instanceof ArrayBuffer) {\n                        new_array.push(exports.encode_base64(v[i], shapes != null ? (ref2 = shapes[k]) != null ? ref2[i] : void 0 : void 0));\n                    } else {\n                        new_array.push(v[i]);\n                    }\n                }\n                v = new_array;\n            }\n            new_data[k] = v;\n        }\n        return new_data;\n    };    \n}","/*core/util/spatial*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    /// <reference types=\"@types/rbush\" />\n    var rbush = require(361    /* rbush */);\n    var SpatialIndex = function () {\n        function SpatialIndex() {\n        }\n        return SpatialIndex;\n    }();\n    exports.SpatialIndex = SpatialIndex;\n    var RBush = function (_super) {\n        tslib_1.__extends(RBush, _super);\n        function RBush(points) {\n            var _this = _super.call(this) || this;\n            _this.index = rbush();\n            _this.index.load(points);\n            return _this;\n        }\n        Object.defineProperty(RBush.prototype, 'bbox', {\n            get: function () {\n                var _a = this.index.toJSON(), minX = _a.minX, minY = _a.minY, maxX = _a.maxX, maxY = _a.maxY;\n                return {\n                    minX: minX,\n                    minY: minY,\n                    maxX: maxX,\n                    maxY: maxY\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RBush.prototype.search = function (rect) {\n            return this.index.search(rect);\n        };\n        RBush.prototype.indices = function (rect) {\n            var points = this.search(rect);\n            var n = points.length;\n            var indices = new Array(n);\n            for (var j = 0; j < n; j++) {\n                indices[j] = points[j].i;\n            }\n            return indices;\n        };\n        return RBush;\n    }(SpatialIndex);\n    exports.RBush = RBush;    \n}","/*core/util/string*/\nfunction _(require, module, exports) {\n    var settings_1 = require(19    /* ../settings */);\n    function startsWith(str, searchString, position) {\n        if (position === void 0) {\n            position = 0;\n        }\n        return str.substr(position, searchString.length) == searchString;\n    }\n    exports.startsWith = startsWith;\n    function uuid4() {\n        // from ipython project\n        // http://www.ietf.org/rfc/rfc4122.txt\n        var s = new Array(32);\n        var hexDigits = '0123456789ABCDEF';\n        for (var i = 0; i < 32; i++) {\n            s[i] = hexDigits.substr(Math.floor(Math.random() * 16), 1);\n        }\n        s[12] = '4';\n        // bits 12-15 of the time_hi_and_version field to 0010\n        s[16] = hexDigits.substr(s[16].charCodeAt(0) & 3 | 8, 1);\n        // bits 6-7 of the clock_seq_hi_and_reserved to 01\n        return s.join('');\n    }\n    exports.uuid4 = uuid4;\n    var counter = 1000;\n    function uniqueId(prefix) {\n        var id = settings_1.settings.dev ? 'j' + counter++ : uuid4();\n        if (prefix != null)\n            return prefix + '-' + id;\n        else\n            return id;\n    }\n    exports.uniqueId = uniqueId;\n    function escape(s) {\n        return s.replace(/(?:[&<>\"'`])/g, function (ch) {\n            switch (ch) {\n            case '&':\n                return '&amp;';\n            case '<':\n                return '&lt;';\n            case '>':\n                return '&gt;';\n            case '\"':\n                return '&quot;';\n            case '\\'':\n                return '&#x27;';\n            case '`':\n                return '&#x60;';\n            default:\n                return ch;\n            }\n        });\n    }\n    exports.escape = escape;\n    function unescape(s) {\n        return s.replace(/&(amp|lt|gt|quot|#x27|#x60);/g, function (_, entity) {\n            switch (entity) {\n            case 'amp':\n                return '&';\n            case 'lt':\n                return '<';\n            case 'gt':\n                return '>';\n            case 'quot':\n                return '\"';\n            case '#x27':\n                return '\\'';\n            case '#x60':\n                return '`';\n            default:\n                return entity;\n            }\n        });\n    }\n    exports.unescape = unescape;    \n}","/*core/util/svg_colors*/\nfunction _(require, module, exports) {\n    exports.indianred = '#CD5C5C';\n    exports.lightcoral = '#F08080';\n    exports.salmon = '#FA8072';\n    exports.darksalmon = '#E9967A';\n    exports.lightsalmon = '#FFA07A';\n    exports.crimson = '#DC143C';\n    exports.red = '#FF0000';\n    exports.firebrick = '#B22222';\n    exports.darkred = '#8B0000';\n    exports.pink = '#FFC0CB';\n    exports.lightpink = '#FFB6C1';\n    exports.hotpink = '#FF69B4';\n    exports.deeppink = '#FF1493';\n    exports.mediumvioletred = '#C71585';\n    exports.palevioletred = '#DB7093';\n    exports.coral = '#FF7F50';\n    exports.tomato = '#FF6347';\n    exports.orangered = '#FF4500';\n    exports.darkorange = '#FF8C00';\n    exports.orange = '#FFA500';\n    exports.gold = '#FFD700';\n    exports.yellow = '#FFFF00';\n    exports.lightyellow = '#FFFFE0';\n    exports.lemonchiffon = '#FFFACD';\n    exports.lightgoldenrodyellow = '#FAFAD2';\n    exports.papayawhip = '#FFEFD5';\n    exports.moccasin = '#FFE4B5';\n    exports.peachpuff = '#FFDAB9';\n    exports.palegoldenrod = '#EEE8AA';\n    exports.khaki = '#F0E68C';\n    exports.darkkhaki = '#BDB76B';\n    exports.lavender = '#E6E6FA';\n    exports.thistle = '#D8BFD8';\n    exports.plum = '#DDA0DD';\n    exports.violet = '#EE82EE';\n    exports.orchid = '#DA70D6';\n    exports.fuchsia = '#FF00FF';\n    exports.magenta = '#FF00FF';\n    exports.mediumorchid = '#BA55D3';\n    exports.mediumpurple = '#9370DB';\n    exports.blueviolet = '#8A2BE2';\n    exports.darkviolet = '#9400D3';\n    exports.darkorchid = '#9932CC';\n    exports.darkmagenta = '#8B008B';\n    exports.purple = '#800080';\n    exports.indigo = '#4B0082';\n    exports.slateblue = '#6A5ACD';\n    exports.darkslateblue = '#483D8B';\n    exports.mediumslateblue = '#7B68EE';\n    exports.greenyellow = '#ADFF2F';\n    exports.chartreuse = '#7FFF00';\n    exports.lawngreen = '#7CFC00';\n    exports.lime = '#00FF00';\n    exports.limegreen = '#32CD32';\n    exports.palegreen = '#98FB98';\n    exports.lightgreen = '#90EE90';\n    exports.mediumspringgreen = '#00FA9A';\n    exports.springgreen = '#00FF7F';\n    exports.mediumseagreen = '#3CB371';\n    exports.seagreen = '#2E8B57';\n    exports.forestgreen = '#228B22';\n    exports.green = '#008000';\n    exports.darkgreen = '#006400';\n    exports.yellowgreen = '#9ACD32';\n    exports.olivedrab = '#6B8E23';\n    exports.olive = '#808000';\n    exports.darkolivegreen = '#556B2F';\n    exports.mediumaquamarine = '#66CDAA';\n    exports.darkseagreen = '#8FBC8F';\n    exports.lightseagreen = '#20B2AA';\n    exports.darkcyan = '#008B8B';\n    exports.teal = '#008080';\n    exports.aqua = '#00FFFF';\n    exports.cyan = '#00FFFF';\n    exports.lightcyan = '#E0FFFF';\n    exports.paleturquoise = '#AFEEEE';\n    exports.aquamarine = '#7FFFD4';\n    exports.turquoise = '#40E0D0';\n    exports.mediumturquoise = '#48D1CC';\n    exports.darkturquoise = '#00CED1';\n    exports.cadetblue = '#5F9EA0';\n    exports.steelblue = '#4682B4';\n    exports.lightsteelblue = '#B0C4DE';\n    exports.powderblue = '#B0E0E6';\n    exports.lightblue = '#ADD8E6';\n    exports.skyblue = '#87CEEB';\n    exports.lightskyblue = '#87CEFA';\n    exports.deepskyblue = '#00BFFF';\n    exports.dodgerblue = '#1E90FF';\n    exports.cornflowerblue = '#6495ED';\n    exports.royalblue = '#4169E1';\n    exports.blue = '#0000FF';\n    exports.mediumblue = '#0000CD';\n    exports.darkblue = '#00008B';\n    exports.navy = '#000080';\n    exports.midnightblue = '#191970';\n    exports.cornsilk = '#FFF8DC';\n    exports.blanchedalmond = '#FFEBCD';\n    exports.bisque = '#FFE4C4';\n    exports.navajowhite = '#FFDEAD';\n    exports.wheat = '#F5DEB3';\n    exports.burlywood = '#DEB887';\n    exports.tan = '#D2B48C';\n    exports.rosybrown = '#BC8F8F';\n    exports.sandybrown = '#F4A460';\n    exports.goldenrod = '#DAA520';\n    exports.darkgoldenrod = '#B8860B';\n    exports.peru = '#CD853F';\n    exports.chocolate = '#D2691E';\n    exports.saddlebrown = '#8B4513';\n    exports.sienna = '#A0522D';\n    exports.brown = '#A52A2A';\n    exports.maroon = '#800000';\n    exports.white = '#FFFFFF';\n    exports.snow = '#FFFAFA';\n    exports.honeydew = '#F0FFF0';\n    exports.mintcream = '#F5FFFA';\n    exports.azure = '#F0FFFF';\n    exports.aliceblue = '#F0F8FF';\n    exports.ghostwhite = '#F8F8FF';\n    exports.whitesmoke = '#F5F5F5';\n    exports.seashell = '#FFF5EE';\n    exports.beige = '#F5F5DC';\n    exports.oldlace = '#FDF5E6';\n    exports.floralwhite = '#FFFAF0';\n    exports.ivory = '#FFFFF0';\n    exports.antiquewhite = '#FAEBD7';\n    exports.linen = '#FAF0E6';\n    exports.lavenderblush = '#FFF0F5';\n    exports.mistyrose = '#FFE4E1';\n    exports.gainsboro = '#DCDCDC';\n    exports.lightgray = '#D3D3D3';\n    exports.lightgrey = '#D3D3D3';\n    exports.silver = '#C0C0C0';\n    exports.darkgray = '#A9A9A9';\n    exports.darkgrey = '#A9A9A9';\n    exports.gray = '#808080';\n    exports.grey = '#808080';\n    exports.dimgray = '#696969';\n    exports.dimgrey = '#696969';\n    exports.lightslategray = '#778899';\n    exports.lightslategrey = '#778899';\n    exports.slategray = '#708090';\n    exports.slategrey = '#708090';\n    exports.darkslategray = '#2F4F4F';\n    exports.darkslategrey = '#2F4F4F';\n    exports.black = '#000000';    \n}","/*core/util/templating*/\nfunction _(require, module, exports) {\n    var _format_number;\n    var sprintf_js_1 = require(362    /* sprintf-js */);\n    var Numbro = require(332    /* numbro */);\n    var tz = require(363    /* timezone */);\n    var string_1 = require(37    /* ./string */);\n    var types_1 = require(42    /* ./types */);\n    _format_number = function (number) {\n        var format;\n        if (types_1.isNumber(number)) {\n            format = function () {\n                switch (false) {\n                case Math.floor(number) !== number:\n                    return '%d';\n                case !(Math.abs(number) > 0.1 && Math.abs(number) < 1000):\n                    return '%0.3f';\n                default:\n                    return '%0.3e';\n                }\n            }();\n            return sprintf_js_1.sprintf(format, number);\n        } else {\n            return '' + number    // get strings for categorical types\n;\n        }\n    };\n    exports.replace_placeholders = function (string, data_source, i, formatters, special_vars) {\n        if (special_vars === void 0) {\n            special_vars = {};\n        }\n        string = string.replace(/(^|[^\\$])\\$(\\w+)/g, function (match, prefix, name) {\n            return prefix + '@$' + name;\n        });\n        string = string.replace(/(^|[^@])@(?:(\\$?\\w+)|{([^{}]+)})(?:{([^{}]+)})?/g, function (match, prefix, name, long_name, format) {\n            var ref, replacement, value;\n            name = long_name != null ? long_name : name;\n            value = name[0] === '$' ? special_vars[name.substring(1)] : (ref = data_source.get_column(name)) != null ? ref[i] : void 0;\n            replacement = null;\n            if (value == null) {\n                replacement = '???';\n            } else {\n                // 'safe' format, just return the value as is\n                if (format === 'safe') {\n                    return '' + prefix + value;\n                } else if (format != null) {\n                    // see if the field has an entry in the formatters dict\n                    if (formatters != null && name in formatters) {\n                        if (formatters[name] === 'numeral') {\n                            replacement = Numbro.format(value, format);\n                        } else if (formatters[name] === 'datetime') {\n                            replacement = tz(value, format);\n                        } else if (formatters[name] === 'printf') {\n                            replacement = sprintf_js_1.sprintf(format, value);\n                        } else {\n                            throw new Error('Unknown tooltip field formatter type \\'' + formatters[name] + '\\'');\n                        }\n                    } else {\n                        // if not assume the format string is Numbro\n                        replacement = Numbro.format(value, format);\n                    }\n                } else {\n                    // no format supplied, just use a basic default numeric format\n                    replacement = _format_number(value);\n                }\n            }\n            return replacement = '' + prefix + string_1.escape(replacement);\n        });\n        return string;\n    };    \n}","/*core/util/text*/\nfunction _(require, module, exports) {\n    var dom_1 = require(5    /* ../dom */);\n    var cache = {};\n    function get_text_height(font) {\n        if (cache[font] != null)\n            return cache[font];\n        var text = dom_1.span({ style: { font: font } }, 'Hg');\n        var block = dom_1.div({\n            style: {\n                display: 'inline-block',\n                width: '1px',\n                height: '0px'\n            }\n        });\n        var elem = dom_1.div({}, text, block);\n        document.body.appendChild(elem);\n        try {\n            block.style.verticalAlign = 'baseline';\n            var ascent = dom_1.offset(block).top - dom_1.offset(text).top;\n            block.style.verticalAlign = 'bottom';\n            var height = dom_1.offset(block).top - dom_1.offset(text).top;\n            var result = {\n                height: height,\n                ascent: ascent,\n                descent: height - ascent\n            };\n            cache[font] = result;\n            return result;\n        } finally {\n            document.body.removeChild(elem);\n        }\n    }\n    exports.get_text_height = get_text_height;    \n}","/*core/util/throttle*/\nfunction _(require, module, exports) {\n    var _delay_animation, delay_animation;\n    _delay_animation = function (f) {\n        return f();\n    };\n    delay_animation = (typeof window !== 'undefined' && window !== null ? window.requestAnimationFrame : void 0) || (typeof window !== 'undefined' && window !== null ? window.mozRequestAnimationFrame : void 0) || (typeof window !== 'undefined' && window !== null ? window.webkitRequestAnimationFrame : void 0) || (typeof window !== 'undefined' && window !== null ? window.msRequestAnimationFrame : void 0) || _delay_animation;\n    // Returns a function, that, when invoked, will only be triggered at\n    // most once during a given window of time.\n    // In addition, if the browser supports requestAnimationFrame, the\n    // throttled function will be run no more frequently than request\n    // animation frame allows.\n    // @param func [function] the function to throttle\n    // @param wait [number] time in milliseconds to use for window\n    // @return [function] throttled function\n    exports.throttle = function (func, wait) {\n        var args, context, later, pending, previous, result, timeout;\n        _a = [\n            null,\n            null,\n            null,\n            null\n        ], context = _a[0], args = _a[1], timeout = _a[2], result = _a[3];\n        previous = 0;\n        pending = false;\n        later = function () {\n            previous = new Date();\n            timeout = null;\n            pending = false;\n            return result = func.apply(context, args);\n        };\n        return function () {\n            var now, remaining;\n            now = new Date();\n            remaining = wait - (now - previous);\n            context = this;\n            args = arguments;\n            if (remaining <= 0 && !pending) {\n                clearTimeout(timeout);\n                pending = true;\n                delay_animation(later);\n            } else if (!timeout && !pending) {\n                timeout = setTimeout(function () {\n                    return delay_animation(later);\n                }, remaining);\n            }\n            return result;\n        };\n        var _a;\n    };    \n}","/*core/util/types*/\nfunction _(require, module, exports) {\n    var toString = Object.prototype.toString;\n    function isBoolean(obj) {\n        return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n    }\n    exports.isBoolean = isBoolean;\n    function isNumber(obj) {\n        return toString.call(obj) === '[object Number]';\n    }\n    exports.isNumber = isNumber;\n    function isInteger(obj) {\n        return isNumber(obj) && isFinite(obj) && Math.floor(obj) === obj;\n    }\n    exports.isInteger = isInteger;\n    function isString(obj) {\n        return toString.call(obj) === '[object String]';\n    }\n    exports.isString = isString;\n    function isStrictNaN(obj) {\n        return isNumber(obj) && obj !== +obj;\n    }\n    exports.isStrictNaN = isStrictNaN;\n    function isFunction(obj) {\n        return toString.call(obj) === '[object Function]';\n    }\n    exports.isFunction = isFunction;\n    function isArray(obj) {\n        return Array.isArray(obj);\n    }\n    exports.isArray = isArray;\n    function isObject(obj) {\n        var tp = typeof obj;\n        return tp === 'function' || tp === 'object' && !!obj;\n    }\n    exports.isObject = isObject;    \n}","/*core/util/wheel*/\nfunction _(require, module, exports) {\n    function fontSize(element) {\n        var value = getComputedStyle(element).fontSize;\n        if (value != null)\n            return parseInt(value, 10);\n        return null;\n    }\n    function lineHeight(element) {\n        var parent = element.offsetParent || document.body;\n        return fontSize(parent) || fontSize(element) || 16;\n    }\n    function pageHeight(element) {\n        return element.clientHeight;    // XXX: should be content height?\n    }\n    function getDeltaY(event) {\n        var deltaY = -event.deltaY;\n        if (event.target instanceof HTMLElement) {\n            switch (event.deltaMode) {\n            case event.DOM_DELTA_LINE:\n                deltaY *= lineHeight(event.target);\n                break;\n            case event.DOM_DELTA_PAGE:\n                deltaY *= pageHeight(event.target);\n                break;\n            }\n        }\n        return deltaY;\n    }\n    exports.getDeltaY = getDeltaY;    \n}","/*core/util/zoom*/\nfunction _(require, module, exports) {\n    var math_1 = require(29    /* ./math */);\n    // Module for zoom-related functions\n    function scale_highlow(range, factor, center) {\n        var _a = [\n                range.start,\n                range.end\n            ], low = _a[0], high = _a[1];\n        var x = center != null ? center : (high + low) / 2;\n        var x0 = low - (low - x) * factor;\n        var x1 = high - (high - x) * factor;\n        return [\n            x0,\n            x1\n        ];\n    }\n    exports.scale_highlow = scale_highlow;\n    function get_info(scales, _a) {\n        var sxy0 = _a[0], sxy1 = _a[1];\n        var info = {};\n        for (var name_1 in scales) {\n            var scale = scales[name_1];\n            var _b = scale.r_invert(sxy0, sxy1), start = _b[0], end = _b[1];\n            info[name_1] = {\n                start: start,\n                end: end\n            };\n        }\n        return info;\n    }\n    exports.get_info = get_info;\n    function scale_range(frame, factor, h_axis, v_axis, center) {\n        /*\n     * Utility function for zoom tools to calculate/create the zoom_info object\n     * of the form required by ``PlotCanvasView.update_range``\n     *\n     * Parameters:\n     *   frame : CartesianFrame\n     *   factor : Number\n     *   h_axis : Boolean, optional\n     *     whether to zoom the horizontal axis (default = true)\n     *   v_axis : Boolean, optional\n     *     whether to zoom the horizontal axis (default = true)\n     *   center : object, optional\n     *     of form {'x': Number, 'y', Number}\n     *\n     * Returns:\n     *   object:\n     */\n        if (h_axis === void 0) {\n            h_axis = true;\n        }\n        if (v_axis === void 0) {\n            v_axis = true;\n        }\n        // clamp the  magnitude of factor, if it is > 1 bad things happen\n        factor = math_1.clamp(factor, -0.9, 0.9);\n        var hfactor = h_axis ? factor : 0;\n        var _a = scale_highlow(frame.bbox.h_range, hfactor, center != null ? center.x : undefined), sx0 = _a[0], sx1 = _a[1];\n        var xrs = get_info(frame.xscales, [\n            sx0,\n            sx1\n        ]);\n        var vfactor = v_axis ? factor : 0;\n        var _b = scale_highlow(frame.bbox.v_range, vfactor, center != null ? center.y : undefined), sy0 = _b[0], sy1 = _b[1];\n        var yrs = get_info(frame.yscales, [\n            sy0,\n            sy1\n        ]);\n        // OK this sucks we can't set factor independently in each direction. It is used\n        // for GMap plots, and GMap plots always preserve aspect, so effective the value\n        // of 'dimensions' is ignored.\n        return {\n            xrs: xrs,\n            yrs: yrs,\n            factor: factor\n        };\n    }\n    exports.scale_range = scale_range;    \n}","/*core/view*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var signaling_1 = require(20    /* ./signaling */);\n    var string_1 = require(37    /* ./util/string */);\n    var View = function (_super) {\n        tslib_1.__extends(View, _super);\n        function View(options) {\n            var _this = _super.call(this) || this;\n            _this.removed = new signaling_1.Signal(_this, 'removed');\n            if (options.model != null)\n                _this.model = options.model;\n            else\n                throw new Error('model of a view wasn\\'t configured');\n            _this._parent = options.parent;\n            _this.id = options.id || string_1.uniqueId();\n            _this.initialize(options);\n            if (options.connect_signals !== false)\n                _this.connect_signals();\n            return _this;\n        }\n        View.getters = function (specs) {\n            for (var name_1 in specs) {\n                var fn = specs[name_1];\n                Object.defineProperty(this.prototype, name_1, { get: fn });\n            }\n        };\n        View.prototype.initialize = function (_options) {\n        };\n        View.prototype.remove = function () {\n            this._parent = undefined;\n            this.disconnect_signals();\n            this.removed.emit(undefined);\n        };\n        View.prototype.toString = function () {\n            return this.model.type + 'View(' + this.id + ')';\n        };\n        Object.defineProperty(View.prototype, 'parent', {\n            get: function () {\n                if (this._parent !== undefined)\n                    return this._parent;\n                else\n                    throw new Error('parent of a view wasn\\'t configured');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(View.prototype, 'is_root', {\n            get: function () {\n                return this.parent === null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(View.prototype, 'root', {\n            get: function () {\n                return this.is_root ? this : this.parent.root;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        View.prototype.connect_signals = function () {\n        };\n        View.prototype.disconnect_signals = function () {\n            signaling_1.Signal.disconnectReceiver(this);\n        };\n        View.prototype.notify_finished = function () {\n            this.root.notify_finished();\n        };\n        return View;\n    }(signaling_1.Signalable());\n    exports.View = View;    \n}","/*core/visuals*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var ContextProperties, hasProp = {}.hasOwnProperty;\n    var mixins = require(16    /* ./property_mixins */);\n    var color_1 = require(26    /* ./util/color */);\n    ContextProperties = function () {\n        function ContextProperties(obj, prefix) {\n            if (prefix === void 0) {\n                prefix = '';\n            }\n            var attr, do_spec, j, len, ref;\n            this.obj = obj;\n            this.prefix = prefix;\n            this.cache = {};\n            do_spec = obj.properties[prefix + this.do_attr].spec;\n            this.doit = do_spec.value !== null;\n            ref = this.attrs;\n            for (j = 0, len = ref.length; j < len; j++) {\n                attr = ref[j];\n                this[attr] = obj.properties[prefix + attr];\n            }\n        }\n        ContextProperties.prototype.warm_cache = function (source) {\n            var attr, j, len, prop, ref, results;\n            ref = this.attrs;\n            results = [];\n            for (j = 0, len = ref.length; j < len; j++) {\n                attr = ref[j];\n                prop = this.obj.properties[this.prefix + attr];\n                if (prop.spec.value !== void 0) {\n                    results.push(this.cache[attr] = prop.spec.value);\n                } else {\n                    results.push(this.cache[attr + '_array'] = prop.array(source));\n                }\n            }\n            return results;\n        };\n        ContextProperties.prototype.cache_select = function (attr, i) {\n            var prop;\n            prop = this.obj.properties[this.prefix + attr];\n            if (prop.spec.value !== void 0) {\n                return this.cache[attr] = prop.spec.value;\n            } else {\n                return this.cache[attr] = this.cache[attr + '_array'][i];\n            }\n        };\n        ContextProperties.prototype.set_vectorize = function (ctx, i) {\n            if (this.all_indices != null) {\n                return this._set_vectorize(ctx, this.all_indices[i]);\n            } else {\n                return this._set_vectorize(ctx, i);    //all_indices is set by a Visuals instance associated with a CDSView\n            }\n        };\n        return ContextProperties;\n    }();\n    var Line = function (_super) {\n        tslib_1.__extends(Line, _super);\n        function Line() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Line.prototype.set_value = function (ctx) {\n            ctx.strokeStyle = this.line_color.value();\n            ctx.globalAlpha = this.line_alpha.value();\n            ctx.lineWidth = this.line_width.value();\n            ctx.lineJoin = this.line_join.value();\n            ctx.lineCap = this.line_cap.value();\n            ctx.setLineDash(this.line_dash.value());\n            return ctx.setLineDashOffset(this.line_dash_offset.value());\n        };\n        Line.prototype._set_vectorize = function (ctx, i) {\n            this.cache_select('line_color', i);\n            if (ctx.strokeStyle !== this.cache.line_color) {\n                ctx.strokeStyle = this.cache.line_color;\n            }\n            this.cache_select('line_alpha', i);\n            if (ctx.globalAlpha !== this.cache.line_alpha) {\n                ctx.globalAlpha = this.cache.line_alpha;\n            }\n            this.cache_select('line_width', i);\n            if (ctx.lineWidth !== this.cache.line_width) {\n                ctx.lineWidth = this.cache.line_width;\n            }\n            this.cache_select('line_join', i);\n            if (ctx.lineJoin !== this.cache.line_join) {\n                ctx.lineJoin = this.cache.line_join;\n            }\n            this.cache_select('line_cap', i);\n            if (ctx.lineCap !== this.cache.line_cap) {\n                ctx.lineCap = this.cache.line_cap;\n            }\n            this.cache_select('line_dash', i);\n            if (ctx.getLineDash() !== this.cache.line_dash) {\n                ctx.setLineDash(this.cache.line_dash);\n            }\n            this.cache_select('line_dash_offset', i);\n            if (ctx.getLineDashOffset() !== this.cache.line_dash_offset) {\n                return ctx.setLineDashOffset(this.cache.line_dash_offset);\n            }\n        };\n        Line.prototype.color_value = function () {\n            var color;\n            color = color_1.color2rgba(this.line_color.value(), this.line_alpha.value());\n            return 'rgba(' + color[0] * 255 + ',' + color[1] * 255 + ',' + color[2] * 255 + ',' + color[3] + ')';\n        };\n        return Line;\n    }(ContextProperties);\n    exports.Line = Line;\n    ;\n    Line.prototype.attrs = Object.keys(mixins.line());\n    Line.prototype.do_attr = 'line_color';\n    var Fill = function (_super) {\n        tslib_1.__extends(Fill, _super);\n        function Fill() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Fill.prototype.set_value = function (ctx) {\n            ctx.fillStyle = this.fill_color.value();\n            return ctx.globalAlpha = this.fill_alpha.value();\n        };\n        Fill.prototype._set_vectorize = function (ctx, i) {\n            this.cache_select('fill_color', i);\n            if (ctx.fillStyle !== this.cache.fill_color) {\n                ctx.fillStyle = this.cache.fill_color;\n            }\n            this.cache_select('fill_alpha', i);\n            if (ctx.globalAlpha !== this.cache.fill_alpha) {\n                return ctx.globalAlpha = this.cache.fill_alpha;\n            }\n        };\n        Fill.prototype.color_value = function () {\n            var color;\n            color = color_1.color2rgba(this.fill_color.value(), this.fill_alpha.value());\n            return 'rgba(' + color[0] * 255 + ',' + color[1] * 255 + ',' + color[2] * 255 + ',' + color[3] + ')';\n        };\n        return Fill;\n    }(ContextProperties);\n    exports.Fill = Fill;\n    ;\n    Fill.prototype.attrs = Object.keys(mixins.fill());\n    Fill.prototype.do_attr = 'fill_color';\n    var Text = function (_super) {\n        tslib_1.__extends(Text, _super);\n        function Text() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Text.prototype.cache_select = function (name, i) {\n            var val;\n            if (name === 'font') {\n                val = _super.prototype.cache_select.call(this, 'text_font_style', i) + ' ' + _super.prototype.cache_select.call(this, 'text_font_size', i) + ' ' + _super.prototype.cache_select.call(this, 'text_font', i);\n                return this.cache.font = val;\n            } else {\n                return _super.prototype.cache_select.call(this, name, i);\n            }\n        };\n        Text.prototype.font_value = function () {\n            var font, font_size, font_style;\n            font = this.text_font.value();\n            font_size = this.text_font_size.value();\n            font_style = this.text_font_style.value();\n            return font_style + ' ' + font_size + ' ' + font;\n        };\n        Text.prototype.color_value = function () {\n            var color;\n            color = color_1.color2rgba(this.text_color.value(), this.text_alpha.value());\n            return 'rgba(' + color[0] * 255 + ',' + color[1] * 255 + ',' + color[2] * 255 + ',' + color[3] + ')';\n        };\n        Text.prototype.set_value = function (ctx) {\n            ctx.font = this.font_value();\n            ctx.fillStyle = this.text_color.value();\n            ctx.globalAlpha = this.text_alpha.value();\n            ctx.textAlign = this.text_align.value();\n            return ctx.textBaseline = this.text_baseline.value();\n        };\n        Text.prototype._set_vectorize = function (ctx, i) {\n            this.cache_select('font', i);\n            if (ctx.font !== this.cache.font) {\n                ctx.font = this.cache.font;\n            }\n            this.cache_select('text_color', i);\n            if (ctx.fillStyle !== this.cache.text_color) {\n                ctx.fillStyle = this.cache.text_color;\n            }\n            this.cache_select('text_alpha', i);\n            if (ctx.globalAlpha !== this.cache.text_alpha) {\n                ctx.globalAlpha = this.cache.text_alpha;\n            }\n            this.cache_select('text_align', i);\n            if (ctx.textAlign !== this.cache.text_align) {\n                ctx.textAlign = this.cache.text_align;\n            }\n            this.cache_select('text_baseline', i);\n            if (ctx.textBaseline !== this.cache.text_baseline) {\n                return ctx.textBaseline = this.cache.text_baseline;\n            }\n        };\n        return Text;\n    }(ContextProperties);\n    exports.Text = Text;\n    ;\n    Text.prototype.attrs = Object.keys(mixins.text());\n    Text.prototype.do_attr = 'text_color';\n    exports.Visuals = function () {\n        function Visuals(model) {\n            var cls, j, len, name, prefix, ref, spec;\n            ref = model.mixins;\n            for (j = 0, len = ref.length; j < len; j++) {\n                spec = ref[j];\n                _a = spec.split(':'), name = _a[0], _b = _a[1], prefix = _b === void 0 ? '' : _b;\n                cls = function () {\n                    switch (name) {\n                    case 'line':\n                        return Line;\n                    case 'fill':\n                        return Fill;\n                    case 'text':\n                        return Text;\n                    }\n                }();\n                this[prefix + name] = new cls(model, prefix);\n            }\n            var _a, _b;\n        }\n        Visuals.prototype.warm_cache = function (source) {\n            var name, prop, ref, results;\n            ref = this;\n            results = [];\n            for (name in ref) {\n                if (!hasProp.call(ref, name))\n                    continue;\n                prop = ref[name];\n                if (prop instanceof ContextProperties) {\n                    results.push(prop.warm_cache(source));\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        Visuals.prototype.set_all_indices = function (all_indices) {\n            var name, prop, ref, results;\n            ref = this;\n            results = [];\n            for (name in ref) {\n                if (!hasProp.call(ref, name))\n                    continue;\n                prop = ref[name];\n                if (prop instanceof ContextProperties) {\n                    results.push(prop.all_indices = all_indices);\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        return Visuals;\n    }();    \n}","/*document*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var base_1 = require(0    /* ./base */);\n    var version_1 = require(248    /* ./version */);\n    var logging_1 = require(14    /* ./core/logging */);\n    var bokeh_events_1 = require(3    /* core/bokeh_events */);\n    var has_props_1 = require(8    /* ./core/has_props */);\n    var signaling_1 = require(20    /* ./core/signaling */);\n    var refs_1 = require(33    /* ./core/util/refs */);\n    var serialization_1 = require(35    /* ./core/util/serialization */);\n    var data_structures_1 = require(27    /* ./core/util/data_structures */);\n    var array_1 = require(22    /* ./core/util/array */);\n    var object_1 = require(30    /* ./core/util/object */);\n    var eq_1 = require(28    /* ./core/util/eq */);\n    var types_1 = require(42    /* ./core/util/types */);\n    var layout_dom_1 = require(139    /* ./models/layouts/layout_dom */);\n    var column_data_source_1 = require(173    /* ./models/sources/column_data_source */);\n    var model_1 = require(50    /* ./model */);\n    var EventManager = function () {\n        function EventManager(document) {\n            this.document = document;\n            /* Document */\n            // Dispatches events to the subscribed models\n            this.session = null;\n            this.subscribed_models = new data_structures_1.Set();\n        }\n        EventManager.prototype.send_event = function (event) {\n            // Send message to Python via session\n            if (this.session != null)\n                this.session.send_event(event);\n        };\n        EventManager.prototype.trigger = function (event) {\n            for (var _i = 0, _a = this.subscribed_models.values; _i < _a.length; _i++) {\n                var model_id = _a[_i];\n                if (event.model_id != null && event.model_id !== model_id)\n                    continue;\n                var model = this.document._all_models[model_id];\n                if (model != null)\n                    model._process_event(event);\n            }\n        };\n        return EventManager;\n    }();\n    exports.EventManager = EventManager;\n    var DocumentChangedEvent = function () {\n        function DocumentChangedEvent(document) {\n            this.document = document;\n        }\n        return DocumentChangedEvent;\n    }();\n    exports.DocumentChangedEvent = DocumentChangedEvent;\n    var ModelChangedEvent = function (_super) {\n        tslib_1.__extends(ModelChangedEvent, _super);\n        function ModelChangedEvent(document, model, attr, old, new_, setter_id) {\n            var _this = _super.call(this, document) || this;\n            _this.model = model;\n            _this.attr = attr;\n            _this.old = old;\n            _this.new_ = new_;\n            _this.setter_id = setter_id;\n            return _this;\n        }\n        ModelChangedEvent.prototype.json = function (references) {\n            if (this.attr === 'id') {\n                throw new Error('\\'id\\' field should never change, whatever code just set it is wrong');\n            }\n            var value = this.new_;\n            var value_json = has_props_1.HasProps._value_to_json(this.attr, value, this.model);\n            var value_refs = {};\n            has_props_1.HasProps._value_record_references(value, value_refs, true);\n            // true = recurse\n            if (this.model.id in value_refs && this.model !== value) {\n                // we know we don't want a whole new copy of the obj we're\n                // patching unless it's also the value itself\n                delete value_refs[this.model.id];\n            }\n            for (var id in value_refs) {\n                references[id] = value_refs[id];\n            }\n            return {\n                kind: 'ModelChanged',\n                model: this.model.ref(),\n                attr: this.attr,\n                new: value_json\n            };\n        };\n        return ModelChangedEvent;\n    }(DocumentChangedEvent);\n    exports.ModelChangedEvent = ModelChangedEvent;\n    var TitleChangedEvent = function (_super) {\n        tslib_1.__extends(TitleChangedEvent, _super);\n        function TitleChangedEvent(document, title, setter_id) {\n            var _this = _super.call(this, document) || this;\n            _this.title = title;\n            _this.setter_id = setter_id;\n            return _this;\n        }\n        TitleChangedEvent.prototype.json = function (_references) {\n            return {\n                kind: 'TitleChanged',\n                title: this.title\n            };\n        };\n        return TitleChangedEvent;\n    }(DocumentChangedEvent);\n    exports.TitleChangedEvent = TitleChangedEvent;\n    var RootAddedEvent = function (_super) {\n        tslib_1.__extends(RootAddedEvent, _super);\n        function RootAddedEvent(document, model, setter_id) {\n            var _this = _super.call(this, document) || this;\n            _this.model = model;\n            _this.setter_id = setter_id;\n            return _this;\n        }\n        RootAddedEvent.prototype.json = function (references) {\n            has_props_1.HasProps._value_record_references(this.model, references, true);\n            return {\n                kind: 'RootAdded',\n                model: this.model.ref()\n            };\n        };\n        return RootAddedEvent;\n    }(DocumentChangedEvent);\n    exports.RootAddedEvent = RootAddedEvent;\n    var RootRemovedEvent = function (_super) {\n        tslib_1.__extends(RootRemovedEvent, _super);\n        function RootRemovedEvent(document, model, setter_id) {\n            var _this = _super.call(this, document) || this;\n            _this.model = model;\n            _this.setter_id = setter_id;\n            return _this;\n        }\n        RootRemovedEvent.prototype.json = function (_references) {\n            return {\n                kind: 'RootRemoved',\n                model: this.model.ref()\n            };\n        };\n        return RootRemovedEvent;\n    }(DocumentChangedEvent);\n    exports.RootRemovedEvent = RootRemovedEvent;\n    exports.documents = [];\n    exports.DEFAULT_TITLE = 'Bokeh Application';\n    // This class should match the API of the Python Document class\n    // as much as possible.\n    var Document = function () {\n        function Document() {\n            exports.documents.push(this);\n            this._init_timestamp = Date.now();\n            this._title = exports.DEFAULT_TITLE;\n            this._roots = [];\n            this._all_models = {};\n            this._all_models_by_name = new data_structures_1.MultiDict();\n            this._all_models_freeze_count = 0;\n            this._callbacks = [];\n            this.event_manager = new EventManager(this);\n            this.idle = new signaling_1.Signal(this, 'idle');\n            this._idle_roots = new WeakMap();\n            // TODO: WeakSet would be better\n            this._interactive_timestamp = null;\n            this._interactive_plot = null;\n        }\n        Object.defineProperty(Document.prototype, 'layoutables', {\n            get: function () {\n                return this._roots.filter(function (root) {\n                    return root instanceof layout_dom_1.LayoutDOM;\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Document.prototype, 'is_idle', {\n            get: function () {\n                for (var _i = 0, _a = this.layoutables; _i < _a.length; _i++) {\n                    var root = _a[_i];\n                    if (!this._idle_roots.has(root))\n                        return false;\n                }\n                return true;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Document.prototype.notify_idle = function (model) {\n            this._idle_roots.set(model, true);\n            if (this.is_idle) {\n                logging_1.logger.info('document idle at ' + (Date.now() - this._init_timestamp) + ' ms');\n                this.idle.emit(undefined);\n            }\n        };\n        Document.prototype.clear = function () {\n            this._push_all_models_freeze();\n            try {\n                while (this._roots.length > 0) {\n                    this.remove_root(this._roots[0]);\n                }\n            } finally {\n                this._pop_all_models_freeze();\n            }\n        };\n        Document.prototype.interactive_start = function (plot) {\n            if (this._interactive_plot == null) {\n                this._interactive_plot = plot;\n                this._interactive_plot.trigger_event(new bokeh_events_1.LODStart({}));\n            }\n            this._interactive_timestamp = Date.now();\n        };\n        Document.prototype.interactive_stop = function (plot) {\n            if (this._interactive_plot != null && this._interactive_plot.id === plot.id) {\n                this._interactive_plot.trigger_event(new bokeh_events_1.LODEnd({}));\n            }\n            this._interactive_plot = null;\n            this._interactive_timestamp = null;\n        };\n        Document.prototype.interactive_duration = function () {\n            if (this._interactive_timestamp == null)\n                return -1;\n            else\n                return Date.now() - this._interactive_timestamp;\n        };\n        Document.prototype.destructively_move = function (dest_doc) {\n            if (dest_doc === this) {\n                throw new Error('Attempted to overwrite a document with itself');\n            }\n            dest_doc.clear();\n            // we have to remove ALL roots before adding any\n            // to the new doc or else models referenced from multiple\n            // roots could be in both docs at once, which isn't allowed.\n            var roots = array_1.copy(this._roots);\n            this.clear();\n            for (var _i = 0, roots_1 = roots; _i < roots_1.length; _i++) {\n                var root = roots_1[_i];\n                if (root.document != null)\n                    throw new Error('Somehow we didn\\'t detach ' + root);\n            }\n            if (Object.keys(this._all_models).length !== 0) {\n                throw new Error('this._all_models still had stuff in it: ' + this._all_models);\n            }\n            for (var _a = 0, roots_2 = roots; _a < roots_2.length; _a++) {\n                var root = roots_2[_a];\n                dest_doc.add_root(root);\n            }\n            dest_doc.set_title(this._title);\n        };\n        // TODO other fields of doc\n        Document.prototype._push_all_models_freeze = function () {\n            this._all_models_freeze_count += 1;\n        };\n        Document.prototype._pop_all_models_freeze = function () {\n            this._all_models_freeze_count -= 1;\n            if (this._all_models_freeze_count === 0) {\n                this._recompute_all_models();\n            }\n        };\n        /*protected*/\n        Document.prototype._invalidate_all_models = function () {\n            logging_1.logger.debug('invalidating document models');\n            // if freeze count is > 0, we'll recompute on unfreeze\n            if (this._all_models_freeze_count === 0) {\n                this._recompute_all_models();\n            }\n        };\n        Document.prototype._recompute_all_models = function () {\n            var new_all_models_set = new data_structures_1.Set();\n            for (var _i = 0, _a = this._roots; _i < _a.length; _i++) {\n                var r = _a[_i];\n                new_all_models_set = new_all_models_set.union(r.references());\n            }\n            var old_all_models_set = new data_structures_1.Set(object_1.values(this._all_models));\n            var to_detach = old_all_models_set.diff(new_all_models_set);\n            var to_attach = new_all_models_set.diff(old_all_models_set);\n            var recomputed = {};\n            for (var _b = 0, _c = new_all_models_set.values; _b < _c.length; _b++) {\n                var m = _c[_b];\n                recomputed[m.id] = m;\n            }\n            for (var _d = 0, _e = to_detach.values; _d < _e.length; _d++) {\n                var d = _e[_d];\n                d.detach_document();\n                if (d instanceof model_1.Model && d.name != null)\n                    this._all_models_by_name.remove_value(d.name, d);\n            }\n            for (var _f = 0, _g = to_attach.values; _f < _g.length; _f++) {\n                var a = _g[_f];\n                a.attach_document(this);\n                if (a instanceof model_1.Model && a.name != null)\n                    this._all_models_by_name.add_value(a.name, a);\n            }\n            this._all_models = recomputed;\n        };\n        Document.prototype.roots = function () {\n            return this._roots;\n        };\n        Document.prototype.add_root = function (model, setter_id) {\n            logging_1.logger.debug('Adding root: ' + model);\n            if (array_1.contains(this._roots, model))\n                return;\n            this._push_all_models_freeze();\n            try {\n                this._roots.push(model);\n            } finally {\n                this._pop_all_models_freeze();\n            }\n            this._trigger_on_change(new RootAddedEvent(this, model, setter_id));\n        };\n        Document.prototype.remove_root = function (model, setter_id) {\n            var i = this._roots.indexOf(model);\n            if (i < 0)\n                return;\n            this._push_all_models_freeze();\n            try {\n                this._roots.splice(i, 1);\n            } finally {\n                this._pop_all_models_freeze();\n            }\n            this._trigger_on_change(new RootRemovedEvent(this, model, setter_id));\n        };\n        Document.prototype.title = function () {\n            return this._title;\n        };\n        Document.prototype.set_title = function (title, setter_id) {\n            if (title !== this._title) {\n                this._title = title;\n                this._trigger_on_change(new TitleChangedEvent(this, title, setter_id));\n            }\n        };\n        Document.prototype.get_model_by_id = function (model_id) {\n            if (model_id in this._all_models) {\n                return this._all_models[model_id];\n            } else {\n                return null;\n            }\n        };\n        Document.prototype.get_model_by_name = function (name) {\n            return this._all_models_by_name.get_one(name, 'Multiple models are named \\'' + name + '\\'');\n        };\n        Document.prototype.on_change = function (callback) {\n            if (!array_1.contains(this._callbacks, callback))\n                this._callbacks.push(callback);\n        };\n        Document.prototype.remove_on_change = function (callback) {\n            var i = this._callbacks.indexOf(callback);\n            if (i >= 0)\n                this._callbacks.splice(i, 1);\n        };\n        Document.prototype._trigger_on_change = function (event) {\n            for (var _i = 0, _a = this._callbacks; _i < _a.length; _i++) {\n                var cb = _a[_i];\n                cb(event);\n            }\n        };\n        // called by the model\n        Document.prototype._notify_change = function (model, attr, old, new_, options) {\n            if (attr === 'name') {\n                this._all_models_by_name.remove_value(old, model);\n                if (new_ != null)\n                    this._all_models_by_name.add_value(new_, model);\n            }\n            var setter_id = options != null ? options.setter_id : void 0;\n            this._trigger_on_change(new ModelChangedEvent(this, model, attr, old, new_, setter_id));\n        };\n        Document._references_json = function (references, include_defaults) {\n            if (include_defaults === void 0) {\n                include_defaults = true;\n            }\n            var references_json = [];\n            for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n                var r = references_1[_i];\n                var ref = r.ref();\n                ref.attributes = r.attributes_as_json(include_defaults);\n                // server doesn't want id in here since it's already in ref above\n                delete ref.attributes.id;\n                references_json.push(ref);\n            }\n            return references_json;\n        };\n        Document._instantiate_object = function (obj_id, obj_type, obj_attrs) {\n            var full_attrs = object_1.extend({}, obj_attrs, { id: obj_id });\n            var model = base_1.Models(obj_type);\n            return new model(full_attrs, {\n                silent: true,\n                defer_initialization: true\n            });\n        };\n        // given a JSON representation of all models in a graph, return a\n        // dict of new model objects\n        Document._instantiate_references_json = function (references_json, existing_models) {\n            // Create all instances, but without setting their props\n            var references = {};\n            for (var _i = 0, references_json_1 = references_json; _i < references_json_1.length; _i++) {\n                var obj = references_json_1[_i];\n                var obj_id = obj.id;\n                var obj_type = obj.type;\n                var obj_attrs = obj.attributes || {};\n                var instance = void 0;\n                if (obj_id in existing_models)\n                    instance = existing_models[obj_id];\n                else {\n                    instance = Document._instantiate_object(obj_id, obj_type, obj_attrs);\n                    if (obj.subtype != null)\n                        instance.set_subtype(obj.subtype);\n                }\n                references[instance.id] = instance;\n            }\n            return references;\n        };\n        // if v looks like a ref, or a collection, resolve it, otherwise return it unchanged\n        // recurse into collections but not into HasProps\n        Document._resolve_refs = function (value, old_references, new_references) {\n            function resolve_ref(v) {\n                if (refs_1.is_ref(v)) {\n                    if (v.id in old_references)\n                        return old_references[v.id];\n                    else if (v.id in new_references)\n                        return new_references[v.id];\n                    else\n                        throw new Error('reference ' + JSON.stringify(v) + ' isn\\'t known (not in Document?)');\n                } else if (types_1.isArray(v))\n                    return resolve_array(v);\n                else if (types_1.isObject(v))\n                    return resolve_dict(v);\n                else\n                    return v;\n            }\n            function resolve_array(array) {\n                var results = [];\n                for (var _i = 0, array_2 = array; _i < array_2.length; _i++) {\n                    var v = array_2[_i];\n                    results.push(resolve_ref(v));\n                }\n                return results;\n            }\n            function resolve_dict(dict) {\n                var resolved = {};\n                for (var k in dict) {\n                    var v = dict[k];\n                    resolved[k] = resolve_ref(v);\n                }\n                return resolved;\n            }\n            return resolve_ref(value);\n        };\n        // given a JSON representation of all models in a graph and new\n        // model instances, set the properties on the models from the\n        // JSON\n        Document._initialize_references_json = function (references_json, old_references, new_references) {\n            var to_update = {};\n            for (var _i = 0, references_json_2 = references_json; _i < references_json_2.length; _i++) {\n                var obj = references_json_2[_i];\n                var obj_id = obj.id;\n                var obj_attrs = obj.attributes;\n                var was_new = !(obj_id in old_references);\n                var instance = !was_new ? old_references[obj_id] : new_references[obj_id];\n                // replace references with actual instances in obj_attrs\n                var resolved_attrs = Document._resolve_refs(obj_attrs, old_references, new_references);\n                to_update[instance.id] = [\n                    instance,\n                    resolved_attrs,\n                    was_new\n                ];\n            }\n            function foreach_depth_first(items, f) {\n                var already_started = {};\n                function foreach_value(v) {\n                    if (v instanceof has_props_1.HasProps) {\n                        // note that we ignore instances that aren't updated (not in to_update)\n                        if (!(v.id in already_started) && v.id in items) {\n                            already_started[v.id] = true;\n                            var _a = items[v.id], attrs = _a[1], was_new = _a[2];\n                            for (var a in attrs) {\n                                var e = attrs[a];\n                                foreach_value(e);\n                            }\n                            f(v, attrs, was_new);\n                        }\n                    } else if (types_1.isArray(v)) {\n                        for (var _i = 0, v_1 = v; _i < v_1.length; _i++) {\n                            var e = v_1[_i];\n                            foreach_value(e);\n                        }\n                    } else if (types_1.isObject(v)) {\n                        for (var k in v) {\n                            var e = v[k];\n                            foreach_value(e);\n                        }\n                    }\n                }\n                for (var k in items) {\n                    var _a = items[k], instance = _a[0];\n                    foreach_value(instance);\n                }\n            }\n            // this first pass removes all 'refs' replacing them with real instances\n            foreach_depth_first(to_update, function (instance, attrs, was_new) {\n                if (was_new)\n                    instance.setv(attrs, { silent: true });\n            });\n            // after removing all the refs, we can run the initialize code safely\n            foreach_depth_first(to_update, function (instance, attrs, was_new) {\n                if (was_new)\n                    instance.finalize(attrs, {});\n            });\n        };\n        Document._event_for_attribute_change = function (changed_obj, key, new_value, doc, value_refs) {\n            var changed_model = doc.get_model_by_id(changed_obj.id);\n            // XXX!\n            if (!changed_model.attribute_is_serializable(key))\n                return null;\n            else {\n                var event_1 = {\n                    kind: 'ModelChanged',\n                    model: {\n                        id: changed_obj.id,\n                        type: changed_obj.type\n                    },\n                    attr: key,\n                    new: new_value\n                };\n                has_props_1.HasProps._json_record_references(doc, new_value, value_refs, true);\n                // true = recurse\n                return event_1;\n            }\n        };\n        Document._events_to_sync_objects = function (from_obj, to_obj, to_doc, value_refs) {\n            var from_keys = Object.keys(from_obj.attributes);\n            //XXX!\n            var to_keys = Object.keys(to_obj.attributes);\n            //XXX!\n            var removed = array_1.difference(from_keys, to_keys);\n            var added = array_1.difference(to_keys, from_keys);\n            var shared = array_1.intersection(from_keys, to_keys);\n            var events = [];\n            for (var _i = 0, removed_1 = removed; _i < removed_1.length; _i++) {\n                var key = removed_1[_i];\n                // we don't really have a \"remove\" event - not sure this ever\n                // happens even. One way this could happen is if the server\n                // does include_defaults=True and we do\n                // include_defaults=false ... in that case it'd be best to\n                // just ignore this probably. Warn about it, could mean\n                // there's a bug if we don't have a key that the server sent.\n                logging_1.logger.warn('Server sent key ' + key + ' but we don\\'t seem to have it in our JSON');\n            }\n            for (var _a = 0, added_1 = added; _a < added_1.length; _a++) {\n                var key = added_1[_a];\n                var new_value = to_obj.attributes[key];\n                // XXX!\n                events.push(Document._event_for_attribute_change(from_obj, key, new_value, to_doc, value_refs));\n            }\n            for (var _b = 0, shared_1 = shared; _b < shared_1.length; _b++) {\n                var key = shared_1[_b];\n                var old_value = from_obj.attributes[key];\n                // XXX!\n                var new_value = to_obj.attributes[key];\n                // XXX!\n                if (old_value == null && new_value == null) {\n                } else if (old_value == null || new_value == null) {\n                    events.push(Document._event_for_attribute_change(from_obj, key, new_value, to_doc, value_refs));\n                } else {\n                    if (!eq_1.isEqual(old_value, new_value))\n                        events.push(Document._event_for_attribute_change(from_obj, key, new_value, to_doc, value_refs));\n                }\n            }\n            return events.filter(function (e) {\n                return e != null;\n            });\n        };\n        // we use this to detect changes during document deserialization\n        // (in model constructors and initializers)\n        Document._compute_patch_since_json = function (from_json, to_doc) {\n            var to_json = to_doc.to_json(false);\n            // include_defaults=false\n            function refs(json) {\n                var result = {};\n                for (var _i = 0, _a = json.roots.references; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    result[obj.id] = obj;\n                }\n                return result;\n            }\n            var from_references = refs(from_json);\n            var from_roots = {};\n            var from_root_ids = [];\n            for (var _i = 0, _a = from_json.roots.root_ids; _i < _a.length; _i++) {\n                var r = _a[_i];\n                from_roots[r] = from_references[r];\n                from_root_ids.push(r);\n            }\n            var to_references = refs(to_json);\n            var to_roots = {};\n            var to_root_ids = [];\n            for (var _b = 0, _c = to_json.roots.root_ids; _b < _c.length; _b++) {\n                var r = _c[_b];\n                to_roots[r] = to_references[r];\n                to_root_ids.push(r);\n            }\n            from_root_ids.sort();\n            to_root_ids.sort();\n            if (array_1.difference(from_root_ids, to_root_ids).length > 0 || array_1.difference(to_root_ids, from_root_ids).length > 0) {\n                // this would arise if someone does add_root/remove_root during\n                // document deserialization, hopefully they won't ever do so.\n                throw new Error('Not implemented: computing add/remove of document roots');\n            }\n            var value_refs = {};\n            var events = [];\n            for (var id in to_doc._all_models) {\n                if (id in from_references) {\n                    var update_model_events = Document._events_to_sync_objects(from_references[id], to_references[id], to_doc, value_refs);\n                    events = events.concat(update_model_events);\n                }\n            }\n            return {\n                references: Document._references_json(object_1.values(value_refs), false),\n                events: events\n            };\n        };\n        Document.prototype.to_json_string = function (include_defaults) {\n            if (include_defaults === void 0) {\n                include_defaults = true;\n            }\n            return JSON.stringify(this.to_json(include_defaults));\n        };\n        Document.prototype.to_json = function (include_defaults) {\n            if (include_defaults === void 0) {\n                include_defaults = true;\n            }\n            var root_ids = this._roots.map(function (r) {\n                return r.id;\n            });\n            var root_references = object_1.values(this._all_models);\n            return {\n                title: this._title,\n                roots: {\n                    root_ids: root_ids,\n                    references: Document._references_json(root_references, include_defaults)\n                }\n            };\n        };\n        Document.from_json_string = function (s) {\n            var json = JSON.parse(s);\n            return Document.from_json(json);\n        };\n        Document.from_json = function (json) {\n            logging_1.logger.debug('Creating Document from JSON');\n            var py_version = json.version;\n            // XXX!\n            var is_dev = py_version.indexOf('+') !== -1 || py_version.indexOf('-') !== -1;\n            var versions_string = 'Library versions: JS (' + version_1.version + ') / Python (' + py_version + ')';\n            if (!is_dev && version_1.version !== py_version) {\n                logging_1.logger.warn('JS/Python version mismatch');\n                logging_1.logger.warn(versions_string);\n            } else\n                logging_1.logger.debug(versions_string);\n            var roots_json = json.roots;\n            var root_ids = roots_json.root_ids;\n            var references_json = roots_json.references;\n            var references = Document._instantiate_references_json(references_json, {});\n            Document._initialize_references_json(references_json, {}, references);\n            var doc = new Document();\n            for (var _i = 0, root_ids_1 = root_ids; _i < root_ids_1.length; _i++) {\n                var r = root_ids_1[_i];\n                doc.add_root(references[r]);\n            }\n            // XXX: HasProps\n            doc.set_title(json.title);\n            // XXX!\n            return doc;\n        };\n        Document.prototype.replace_with_json = function (json) {\n            var replacement = Document.from_json(json);\n            replacement.destructively_move(this);\n        };\n        Document.prototype.create_json_patch_string = function (events) {\n            return JSON.stringify(this.create_json_patch(events));\n        };\n        Document.prototype.create_json_patch = function (events) {\n            var references = {};\n            var json_events = [];\n            for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n                var event_2 = events_1[_i];\n                if (event_2.document !== this) {\n                    logging_1.logger.warn('Cannot create a patch using events from a different document, event had ', event_2.document, ' we are ', this);\n                    throw new Error('Cannot create a patch using events from a different document');\n                }\n                json_events.push(event_2.json(references));\n            }\n            return {\n                events: json_events,\n                references: Document._references_json(object_1.values(references))\n            };\n        };\n        Document.prototype.apply_json_patch = function (patch, buffers, setter_id) {\n            var references_json = patch.references;\n            var events_json = patch.events;\n            var references = Document._instantiate_references_json(references_json, this._all_models);\n            // The model being changed isn't always in references so add it in\n            for (var _i = 0, events_json_1 = events_json; _i < events_json_1.length; _i++) {\n                var event_json = events_json_1[_i];\n                switch (event_json.kind) {\n                case 'RootAdded':\n                case 'RootRemoved':\n                case 'ModelChanged': {\n                        var model_id = event_json.model.id;\n                        if (model_id in this._all_models) {\n                            references[model_id] = this._all_models[model_id];\n                        } else {\n                            if (!(model_id in references)) {\n                                logging_1.logger.warn('Got an event for unknown model ', event_json.model);\n                                throw new Error('event model wasn\\'t known');\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n            // split references into old and new so we know whether to initialize or update\n            var old_references = {};\n            var new_references = {};\n            for (var id in references) {\n                var value = references[id];\n                if (id in this._all_models)\n                    old_references[id] = value;\n                else\n                    new_references[id] = value;\n            }\n            Document._initialize_references_json(references_json, old_references, new_references);\n            for (var _a = 0, events_json_2 = events_json; _a < events_json_2.length; _a++) {\n                var event_json = events_json_2[_a];\n                switch (event_json.kind) {\n                case 'ModelChanged': {\n                        var patched_id = event_json.model.id;\n                        if (!(patched_id in this._all_models)) {\n                            throw new Error('Cannot apply patch to ' + patched_id + ' which is not in the document');\n                        }\n                        var patched_obj = this._all_models[patched_id];\n                        var attr = event_json.attr;\n                        var model_type = event_json.model.type;\n                        // XXXX currently still need this first branch, some updates (initial?) go through here\n                        if (attr === 'data' && model_type === 'ColumnDataSource') {\n                            var _b = serialization_1.decode_column_data(event_json.new, buffers), data = _b[0], shapes = _b[1];\n                            patched_obj.setv({\n                                _shapes: shapes,\n                                data: data\n                            }, { setter_id: setter_id });\n                        } else {\n                            var value = Document._resolve_refs(event_json.new, old_references, new_references);\n                            patched_obj.setv([\n                                attr,\n                                value\n                            ], { setter_id: setter_id });\n                        }\n                        break;\n                    }\n                case 'ColumnDataChanged': {\n                        var column_source_id = event_json.column_source.id;\n                        if (!(column_source_id in this._all_models)) {\n                            throw new Error('Cannot stream to ' + column_source_id + ' which is not in the document');\n                        }\n                        var column_source = this._all_models[column_source_id];\n                        var _c = serialization_1.decode_column_data(event_json.new, buffers), data = _c[0], shapes = _c[1];\n                        if (event_json.cols != null) {\n                            for (var k in column_source.data) {\n                                if (!(k in data)) {\n                                    data[k] = column_source.data[k];\n                                }\n                            }\n                            for (var k in column_source._shapes) {\n                                if (!(k in shapes)) {\n                                    shapes[k] = column_source._shapes[k];\n                                }\n                            }\n                        }\n                        column_source.setv({\n                            _shapes: shapes,\n                            data: data\n                        }, {\n                            setter_id: setter_id,\n                            check_eq: false\n                        });\n                        break;\n                    }\n                case 'ColumnsStreamed': {\n                        var column_source_id = event_json.column_source.id;\n                        if (!(column_source_id in this._all_models)) {\n                            throw new Error('Cannot stream to ' + column_source_id + ' which is not in the document');\n                        }\n                        var column_source = this._all_models[column_source_id];\n                        if (!(column_source instanceof column_data_source_1.ColumnDataSource)) {\n                            throw new Error('Cannot stream to non-ColumnDataSource');\n                        }\n                        var data = event_json.data;\n                        var rollover = event_json.rollover;\n                        column_source.stream(data, rollover);\n                        break;\n                    }\n                case 'ColumnsPatched': {\n                        var column_source_id = event_json.column_source.id;\n                        if (!(column_source_id in this._all_models)) {\n                            throw new Error('Cannot patch ' + column_source_id + ' which is not in the document');\n                        }\n                        var column_source = this._all_models[column_source_id];\n                        if (!(column_source instanceof column_data_source_1.ColumnDataSource)) {\n                            throw new Error('Cannot patch non-ColumnDataSource');\n                        }\n                        var patches = event_json.patches;\n                        column_source.patch(patches);\n                        break;\n                    }\n                case 'RootAdded': {\n                        var root_id = event_json.model.id;\n                        var root_obj = references[root_id];\n                        this.add_root(root_obj, setter_id);\n                        // XXX: HasProps\n                        break;\n                    }\n                case 'RootRemoved': {\n                        var root_id = event_json.model.id;\n                        var root_obj = references[root_id];\n                        this.remove_root(root_obj, setter_id);\n                        // XXX: HasProps\n                        break;\n                    }\n                case 'TitleChanged': {\n                        this.set_title(event_json.title, setter_id);\n                        break;\n                    }\n                default:\n                    throw new Error('Unknown patch event ' + JSON.stringify(event_json));\n                }\n            }\n        };\n        return Document;\n    }();\n    exports.Document = Document;    \n}","/*embed*/\nfunction _(require, module, exports) {\n    var _create_view, _embed_items, _get_element, _get_session, _get_ws_url, _handle_notebook_comms, _init_comms, _sessions, _update_comms_callback, add_document_from_session, add_model_from_session, fill_render_item_from_script_tag;\n    var base = require(0    /* ./base */);\n    var connection_1 = require(1    /* ./client/connection */);\n    var logging_1 = require(14    /* ./core/logging */);\n    var document_1 = require(47    /* ./document */);\n    var dom_1 = require(5    /* ./core/dom */);\n    var callback_1 = require(24    /* ./core/util/callback */);\n    var string_1 = require(37    /* ./core/util/string */);\n    var object_1 = require(30    /* ./core/util/object */);\n    var types_1 = require(42    /* ./core/util/types */);\n    var receiver_1 = require(246    /* ./protocol/receiver */);\n    // Matches Bokeh CSS class selector. Setting all Bokeh parent element class names\n    // with this var prevents user configurations where css styling is unset.\n    exports.BOKEH_ROOT = 'bk-root';\n    _handle_notebook_comms = function (receiver, msg) {\n        if (msg.buffers.length > 0) {\n            receiver.consume(msg.buffers[0].buffer);\n        } else {\n            receiver.consume(msg.content.data);\n        }\n        msg = receiver.message;\n        if (msg != null) {\n            return this.apply_json_patch(msg.content, msg.buffers);\n        }\n    };\n    _update_comms_callback = function (target, doc, comm) {\n        var r;\n        if (target === comm.target_name) {\n            r = new receiver_1.Receiver();\n            return comm.on_msg(_handle_notebook_comms.bind(doc, r));\n        }\n    };\n    _init_comms = function (target, doc) {\n        var comm_manager, e, id, promise, ref, update_comms;\n        if (typeof Jupyter !== 'undefined' && Jupyter !== null && Jupyter.notebook.kernel != null) {\n            logging_1.logger.info('Registering Jupyter comms for target ' + target);\n            comm_manager = Jupyter.notebook.kernel.comm_manager;\n            update_comms = function (comm) {\n                return _update_comms_callback(target, doc, comm);\n            };\n            ref = comm_manager.comms;\n            for (id in ref) {\n                promise = ref[id];\n                promise.then(update_comms);\n            }\n            try {\n                return comm_manager.register_target(target, function (comm, msg) {\n                    var r;\n                    logging_1.logger.info('Registering Jupyter comms for target ' + target);\n                    r = new receiver_1.Receiver();\n                    return comm.on_msg(_handle_notebook_comms.bind(doc, r));\n                });\n            } catch (error1) {\n                e = error1;\n                return logging_1.logger.warn('Jupyter comms failed to register. push_notebook() will not function. (exception reported: ' + e + ')');\n            }\n        } else {\n            return console.warn('Jupyter notebooks comms not available. push_notebook() will not function');\n        }\n    };\n    _create_view = function (model) {\n        var view;\n        view = new model.default_view({\n            model: model,\n            parent: null\n        });\n        base.index[model.id] = view;\n        return view;\n    };\n    _get_element = function (item) {\n        var child, container, elem, element_id;\n        element_id = item['elementid'];\n        elem = document.getElementById(element_id);\n        if (elem == null) {\n            throw new Error('Error rendering Bokeh model: could not find tag with id: ' + element_id);\n        }\n        if (!document.body.contains(elem)) {\n            throw new Error('Error rendering Bokeh model: element with id \\'' + element_id + '\\' must be under <body>');\n        }\n        // if autoload script, replace script tag with div for embedding\n        if (elem.tagName === 'SCRIPT') {\n            fill_render_item_from_script_tag(elem, item);\n            container = dom_1.div({ class: exports.BOKEH_ROOT });\n            dom_1.replaceWith(elem, container);\n            child = dom_1.div();\n            container.appendChild(child);\n            elem = child;\n        }\n        return elem;\n    };\n    // Replace element with a view of model_id from document\n    exports.add_model_standalone = function (model_id, element, doc) {\n        var model, view;\n        model = doc.get_model_by_id(model_id);\n        if (model == null) {\n            throw new Error('Model ' + model_id + ' was not in document ' + doc);\n        }\n        view = _create_view(model);\n        return view.renderTo(element, true);\n    };\n    // Fill element with the roots from doc\n    exports.add_document_standalone = function (document, element, use_for_title) {\n        if (use_for_title === void 0) {\n            use_for_title = false;\n        }\n        var i, len, model, ref, render_model, unrender_model, views;\n        // this is a LOCAL index of views used only by this particular rendering\n        // call, so we can remove the views we create.\n        views = {};\n        render_model = function (model) {\n            var view;\n            view = _create_view(model);\n            view.renderTo(element);\n            return views[model.id] = view;\n        };\n        unrender_model = function (model) {\n            var view;\n            if (model.id in views) {\n                view = views[model.id];\n                element.removeChild(view.el);\n                delete views[model.id];\n                return delete base.index[model.id];\n            }\n        };\n        ref = document.roots();\n        for (i = 0, len = ref.length; i < len; i++) {\n            model = ref[i];\n            render_model(model);\n        }\n        if (use_for_title) {\n            window.document.title = document.title();\n        }\n        document.on_change(function (event) {\n            if (event instanceof document_1.RootAddedEvent) {\n                return render_model(event.model);\n            } else if (event instanceof document_1.RootRemovedEvent) {\n                return unrender_model(event.model);\n            } else if (use_for_title && event instanceof document_1.TitleChangedEvent) {\n                return window.document.title = event.title;\n            }\n        });\n        return views;\n    };\n    // map { websocket url to map { session id to promise of ClientSession } }\n    _sessions = {};\n    _get_session = function (websocket_url, session_id, args_string) {\n        var subsessions;\n        if (websocket_url == null) {\n            throw new Error('Missing websocket_url');\n        }\n        if (!(websocket_url in _sessions)) {\n            _sessions[websocket_url] = {};\n        }\n        subsessions = _sessions[websocket_url];\n        if (!(session_id in subsessions)) {\n            subsessions[session_id] = connection_1.pull_session(websocket_url, session_id, args_string);\n        }\n        return subsessions[session_id];\n    };\n    // Fill element with the roots from session_id\n    add_document_from_session = function (element, websocket_url, session_id, use_for_title) {\n        var args_string, promise;\n        args_string = window.location.search.substr(1);\n        promise = _get_session(websocket_url, session_id, args_string);\n        return promise.then(function (session) {\n            return exports.add_document_standalone(session.document, element, use_for_title);\n        }, function (error) {\n            logging_1.logger.error('Failed to load Bokeh session ' + session_id + ': ' + error);\n            throw error;\n        });\n    };\n    // Replace element with a view of model_id from the given session\n    add_model_from_session = function (element, websocket_url, model_id, session_id) {\n        var args_string, promise;\n        args_string = window.location.search.substr(1);\n        promise = _get_session(websocket_url, session_id, args_string);\n        return promise.then(function (session) {\n            var model, view;\n            model = session.document.get_model_by_id(model_id);\n            if (model == null) {\n                throw new Error('Did not find model ' + model_id + ' in session');\n            }\n            view = _create_view(model);\n            return view.renderTo(element, true);\n        }, function (error) {\n            logging_1.logger.error('Failed to load Bokeh session ' + session_id + ': ' + error);\n            throw error;\n        });\n    };\n    exports.inject_css = function (url) {\n        var element;\n        element = dom_1.link({\n            href: url,\n            rel: 'stylesheet',\n            type: 'text/css'\n        });\n        return document.body.appendChild(element);\n    };\n    exports.inject_raw_css = function (css) {\n        var element;\n        element = dom_1.style({}, css);\n        return document.body.appendChild(element);\n    };\n    // pull missing render item fields from data- attributes\n    fill_render_item_from_script_tag = function (script, item) {\n        var info;\n        info = script.dataset;\n        // length checks are because we put all the attributes on the tag\n        // but sometimes set them to empty string\n        if (info.bokehLogLevel != null && info.bokehLogLevel.length > 0) {\n            logging_1.set_log_level(info.bokehLogLevel);\n        }\n        if (info.bokehDocId != null && info.bokehDocId.length > 0) {\n            item['docid'] = info.bokehDocId;\n        }\n        if (info.bokehModelId != null && info.bokehModelId.length > 0) {\n            item['modelid'] = info.bokehModelId;\n        }\n        if (info.bokehSessionId != null && info.bokehSessionId.length > 0) {\n            item['sessionid'] = info.bokehSessionId;\n        }\n        return logging_1.logger.info('Will inject Bokeh script tag with params ' + JSON.stringify(item));\n    };\n    exports.embed_items_notebook = function (docs_json, render_items) {\n        var doc, elem, i, item, len, results;\n        if (object_1.size(docs_json) !== 1) {\n            throw new Error('embed_items_notebook expects exactly one document in docs_json');\n        }\n        doc = document_1.Document.from_json(object_1.values(docs_json)[0]);\n        results = [];\n        for (i = 0, len = render_items.length; i < len; i++) {\n            item = render_items[i];\n            if (item.notebook_comms_target != null) {\n                _init_comms(item.notebook_comms_target, doc);\n            }\n            elem = _get_element(item);\n            if (item.modelid != null) {\n                results.push(exports.add_model_standalone(item.modelid, elem, doc));\n            } else {\n                results.push(exports.add_document_standalone(doc, elem, false));\n            }\n        }\n        return results;\n    };\n    _get_ws_url = function (app_path, absolute_url) {\n        var loc, protocol;\n        protocol = 'ws:';\n        if (window.location.protocol === 'https:') {\n            protocol = 'wss:';\n        }\n        if (absolute_url != null) {\n            loc = document.createElement('a');\n            loc.href = absolute_url;\n        } else {\n            loc = window.location;\n        }\n        if (app_path != null) {\n            if (app_path === '/') {\n                app_path = '';\n            }\n        } else {\n            app_path = loc.pathname.replace(/\\/+$/, '');\n        }\n        return protocol + '//' + loc.host + app_path + '/ws';\n    };\n    // TODO (bev) this is currently clunky. Standalone embeds only provide\n    // the first two args, whereas server provide the app_app, and *may* prove and\n    // absolute_url as well if non-relative links are needed for resources. This function\n    // should probably be split in to two pieces to reflect the different usage patterns\n    exports.embed_items = function (docs_json, render_items, app_path, absolute_url) {\n        return callback_1.defer(function () {\n            return _embed_items(docs_json, render_items, app_path, absolute_url);\n        });\n    };\n    _embed_items = function (docs_json, render_items, app_path, absolute_url) {\n        var docid, docs, elem, i, item, len, promise, results, use_for_title, websocket_url;\n        if (types_1.isString(docs_json)) {\n            docs_json = JSON.parse(string_1.unescape(docs_json));\n        }\n        docs = {};\n        for (docid in docs_json) {\n            docs[docid] = document_1.Document.from_json(docs_json[docid]);\n        }\n        results = [];\n        for (i = 0, len = render_items.length; i < len; i++) {\n            item = render_items[i];\n            elem = _get_element(item);\n            use_for_title = item.use_for_title != null && item.use_for_title;\n            // handle server session cases\n            if (item.sessionid != null) {\n                websocket_url = _get_ws_url(app_path, absolute_url);\n                logging_1.logger.debug('embed: computed ws url: ' + websocket_url);\n                if (item.modelid != null) {\n                    promise = add_model_from_session(elem, websocket_url, item.modelid, item.sessionid);\n                } else {\n                    promise = add_document_from_session(elem, websocket_url, item.sessionid, use_for_title);\n                }\n                results.push(promise.then(function (value) {\n                    return console.log('Bokeh items were rendered successfully');\n                }, function (error) {\n                    return console.log('Error rendering Bokeh items ', error);\n                }));    // handle standalone document cases\n            } else if (item.docid != null) {\n                if (item.modelid != null) {\n                    results.push(exports.add_model_standalone(item.modelid, elem, docs[item.docid]));\n                } else {\n                    results.push(exports.add_document_standalone(docs[item.docid], elem, use_for_title));\n                }\n            } else {\n                throw new Error('Error rendering Bokeh items to element ' + item.elementid + ': no document ID or session ID specified');\n            }\n        }\n        return results;\n    };    \n}","/*main*/\nfunction _(require, module, exports) {\n    require(244    /* ./polyfill */);\n    var version_1 = require(248    /* ./version */);\n    exports.version = version_1.version;\n    var embed = require(48    /* ./embed */);\n    exports.embed = embed;\n    var logging_1 = require(14    /* ./core/logging */);\n    exports.logger = logging_1.logger;\n    exports.set_log_level = logging_1.set_log_level;\n    var settings_1 = require(19    /* ./core/settings */);\n    exports.settings = settings_1.settings;\n    var base_1 = require(0    /* ./base */);\n    exports.Models = base_1.Models;\n    exports.index = base_1.index;\n    var document_1 = require(47    /* ./document */);\n    exports.documents = document_1.documents;\n    var safely_1 = require(247    /* ./safely */);\n    exports.safely = safely_1.safely;    \n}","/*model*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var has_props_1 = require(8    /* ./core/has_props */);\n    var p = require(15    /* ./core/properties */);\n    var types_1 = require(42    /* ./core/util/types */);\n    var object_1 = require(30    /* ./core/util/object */);\n    var logging_1 = require(14    /* ./core/logging */);\n    var Model = function (_super) {\n        tslib_1.__extends(Model, _super);\n        function Model() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Model.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            for (var base_evt in this.js_property_callbacks) {\n                var callbacks = this.js_property_callbacks[base_evt];\n                var _a = base_evt.split(':'), evt = _a[0], _b = _a[1], attr = _b === void 0 ? null : _b;\n                var _loop_1 = function (cb) {\n                    var signal = attr != null ? this_1.properties[attr][evt] : this_1[evt];\n                    this_1.connect(signal, function () {\n                        return cb.execute(_this, {});\n                    });\n                };\n                var this_1 = this;\n                for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n                    var cb = callbacks_1[_i];\n                    _loop_1(cb);\n                }\n            }\n            this.connect(this.properties.js_event_callbacks.change, function () {\n                return _this._update_event_callbacks;\n            });\n            this.connect(this.properties.subscribed_events.change, function () {\n                return _this._update_event_callbacks;\n            });\n        };\n        /*protected*/\n        Model.prototype._process_event = function (event) {\n            if (event.is_applicable_to(this)) {\n                event = event._customize_event(this);\n                for (var _i = 0, _a = this.js_event_callbacks[event.event_name] || []; _i < _a.length; _i++) {\n                    var callback = _a[_i];\n                    callback.execute(event, {});\n                }\n                if (this.document != null) {\n                    if (this.subscribed_events.some(function (m) {\n                            return m == event.event_name;\n                        }))\n                        this.document.event_manager.send_event(event);\n                }\n            }\n        };\n        Model.prototype.trigger_event = function (event) {\n            if (this.document != null)\n                this.document.event_manager.trigger(event.set_model_id(this.id));\n        };\n        Model.prototype._update_event_callbacks = function () {\n            if (this.document == null) {\n                // File an issue: SidePanel in particular seems to have this issue\n                logging_1.logger.warn('WARNING: Document not defined for updating event callbacks');\n                return;\n            }\n            this.document.event_manager.subscribed_models.push(this.id);\n        };\n        Model.prototype._doc_attached = function () {\n            if (!object_1.isEmpty(this.js_event_callbacks) || !object_1.isEmpty(this.subscribed_events))\n                this._update_event_callbacks();\n        };\n        Model.prototype.select = function (selector) {\n            if (types_1.isString(selector))\n                return this.references().filter(function (ref) {\n                    return ref instanceof Model && ref.name === selector;\n                });\n            else if (selector.prototype instanceof has_props_1.HasProps)\n                return this.references().filter(function (ref) {\n                    return ref instanceof selector;\n                });\n            else\n                throw new Error('invalid selector');\n        };\n        Model.prototype.select_one = function (selector) {\n            var result = this.select(selector);\n            switch (result.length) {\n            case 0:\n                return null;\n            case 1:\n                return result[0];\n            default:\n                throw new Error('found more than one object matching given selector');\n            }\n        };\n        return Model;\n    }(has_props_1.HasProps);\n    exports.Model = Model;\n    Model.prototype.type = 'Model';\n    Model.define({\n        tags: [\n            p.Array,\n            []\n        ],\n        name: [p.String],\n        js_property_callbacks: [\n            p.Any,\n            {}\n        ],\n        js_event_callbacks: [\n            p.Any,\n            {}\n        ],\n        subscribed_events: [\n            p.Array,\n            []\n        ]\n    });    \n}","/*models/annotations/annotation*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var side_panel_1 = require(12    /* core/layout/side_panel */);\n    var p = require(15    /* core/properties */);\n    var renderer_1 = require(165    /* ../renderers/renderer */);\n    exports.AnnotationView = function (_super) {\n        tslib_1.__extends(AnnotationView, _super);\n        function AnnotationView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        AnnotationView.prototype._get_size = function () {\n            return new Error('not implemented');\n        };\n        AnnotationView.prototype.get_size = function () {\n            if (this.model.visible) {\n                return Math.round(this._get_size());\n            } else {\n                return 0;\n            }\n        };\n        return AnnotationView;\n    }(renderer_1.RendererView);\n    var Annotation = function (_super) {\n        tslib_1.__extends(Annotation, _super);\n        function Annotation() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Annotation.prototype.add_panel = function (side) {\n            var panel;\n            if (this.panel == null || side !== this.panel.side) {\n                panel = new side_panel_1.SidePanel({ side: side });\n                panel.attach_document(this.document);\n                return this.set_panel(panel);\n            }\n        };\n        Annotation.prototype.set_panel = function (panel) {\n            this.panel = panel;\n            // If the annotation is in a side panel, we need to set level to overlay, so it is visible.\n            return this.level = 'overlay';\n        };\n        return Annotation;\n    }(renderer_1.Renderer);\n    exports.Annotation = Annotation;\n    ;\n    Annotation.prototype.type = 'Annotation';\n    Annotation.prototype.default_view = exports.AnnotationView;\n    Annotation.define({ plot: [p.Instance] });\n    Annotation.override({ level: 'annotation' });    \n}","/*models/annotations/arrow*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var annotation_1 = require(51    /* ./annotation */);\n    var arrow_head_1 = require(53    /* ./arrow_head */);\n    var column_data_source_1 = require(173    /* ../sources/column_data_source */);\n    var p = require(15    /* core/properties */);\n    var math_1 = require(29    /* core/util/math */);\n    exports.ArrowView = function (_super) {\n        tslib_1.__extends(ArrowView, _super);\n        function ArrowView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ArrowView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            if (this.model.source == null) {\n                this.model.source = new column_data_source_1.ColumnDataSource();\n            }\n            return this.set_data(this.model.source);\n        };\n        ArrowView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.change, function () {\n                return _this.plot_view.request_render();\n            });\n            this.connect(this.model.source.streaming, function () {\n                return this.set_data(this.model.source);\n            });\n            this.connect(this.model.source.patching, function () {\n                return this.set_data(this.model.source);\n            });\n            return this.connect(this.model.source.change, function () {\n                return this.set_data(this.model.source);\n            });\n        };\n        ArrowView.prototype.set_data = function (source) {\n            _super.prototype.set_data.call(this, source);\n            this.visuals.warm_cache(source);\n            return this.plot_view.request_render();\n        };\n        ArrowView.prototype._map_data = function () {\n            var end, frame, start, sx_end, sx_start, sy_end, sy_start;\n            frame = this.plot_view.frame;\n            if (this.model.start_units === 'data') {\n                sx_start = frame.xscales[this.model.x_range_name].v_compute(this._x_start);\n                sy_start = frame.yscales[this.model.y_range_name].v_compute(this._y_start);\n            } else {\n                sx_start = frame.xview.v_compute(this._x_start);\n                sy_start = frame.yview.v_compute(this._y_start);\n            }\n            if (this.model.end_units === 'data') {\n                sx_end = frame.xscales[this.model.x_range_name].v_compute(this._x_end);\n                sy_end = frame.yscales[this.model.y_range_name].v_compute(this._y_end);\n            } else {\n                sx_end = frame.xview.v_compute(this._x_end);\n                sy_end = frame.yview.v_compute(this._y_end);\n            }\n            start = [\n                sx_start,\n                sy_start\n            ];\n            end = [\n                sx_end,\n                sy_end\n            ];\n            return [\n                start,\n                end\n            ];\n        };\n        ArrowView.prototype.render = function () {\n            var ctx, height, width, x, y;\n            if (!this.model.visible) {\n                return;\n            }\n            ctx = this.plot_view.canvas_view.ctx;\n            ctx.save();\n            // Order in this function is important. First we draw all the arrow heads.\n            _a = this._map_data(), this.start = _a[0], this.end = _a[1];\n            if (this.model.end != null) {\n                this._arrow_head(ctx, 'render', this.model.end, this.start, this.end);\n            }\n            if (this.model.start != null) {\n                this._arrow_head(ctx, 'render', this.model.start, this.end, this.start);\n            }\n            // Next we call .clip on all the arrow heads, inside an initial canvas sized\n            // rect, to create an \"inverted\" clip region for the arrow heads\n            ctx.beginPath();\n            _b = this.plot_model.canvas.bbox.rect, x = _b.x, y = _b.y, width = _b.width, height = _b.height;\n            ctx.rect(x, y, width, height);\n            if (this.model.end != null) {\n                this._arrow_head(ctx, 'clip', this.model.end, this.start, this.end);\n            }\n            if (this.model.start != null) {\n                this._arrow_head(ctx, 'clip', this.model.start, this.end, this.start);\n            }\n            ctx.closePath();\n            ctx.clip();\n            // Finally we draw the arrow body, with the clipping regions set up. This prevents\n            // \"fat\" arrows from overlapping the arrow head in a bad way.\n            this._arrow_body(ctx);\n            return ctx.restore();\n            var _a, _b;\n        };\n        ArrowView.prototype._arrow_body = function (ctx) {\n            var i, j, ref, results;\n            if (!this.visuals.line.doit) {\n                return;\n            }\n            results = [];\n            for (i = j = 0, ref = this._x_start.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                this.visuals.line.set_vectorize(ctx, i);\n                ctx.beginPath();\n                ctx.moveTo(this.start[0][i], this.start[1][i]);\n                ctx.lineTo(this.end[0][i], this.end[1][i]);\n                results.push(ctx.stroke());\n            }\n            return results;\n        };\n        ArrowView.prototype._arrow_head = function (ctx, action, head, start, end) {\n            var angle, i, j, ref, results;\n            results = [];\n            for (i = j = 0, ref = this._x_start.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                // arrow head runs orthogonal to arrow body\n                angle = Math.PI / 2 + math_1.atan2([\n                    start[0][i],\n                    start[1][i]\n                ], [\n                    end[0][i],\n                    end[1][i]\n                ]);\n                ctx.save();\n                ctx.translate(end[0][i], end[1][i]);\n                ctx.rotate(angle);\n                if (action === 'render') {\n                    head.render(ctx);\n                } else if (action === 'clip') {\n                    head.clip(ctx);\n                }\n                results.push(ctx.restore());\n            }\n            return results;\n        };\n        return ArrowView;\n    }(annotation_1.AnnotationView);\n    var Arrow = function (_super) {\n        tslib_1.__extends(Arrow, _super);\n        function Arrow() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Arrow;\n    }(annotation_1.Annotation);\n    exports.Arrow = Arrow;\n    ;\n    Arrow.prototype.default_view = exports.ArrowView;\n    Arrow.prototype.type = 'Arrow';\n    Arrow.mixins(['line']);\n    Arrow.define({\n        x_start: [p.NumberSpec],\n        y_start: [p.NumberSpec],\n        start_units: [\n            p.String,\n            'data'\n        ],\n        start: [\n            p.Instance,\n            null\n        ],\n        x_end: [p.NumberSpec],\n        y_end: [p.NumberSpec],\n        end_units: [\n            p.String,\n            'data'\n        ],\n        end: [\n            p.Instance,\n            function () {\n                return new arrow_head_1.OpenHead({});\n            }\n        ],\n        source: [p.Instance],\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ]\n    });    \n}","/*models/annotations/arrow_head*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var annotation_1 = require(51    /* ./annotation */);\n    var visuals_1 = require(46    /* core/visuals */);\n    var p = require(15    /* core/properties */);\n    var ArrowHead = function (_super) {\n        tslib_1.__extends(ArrowHead, _super);\n        function ArrowHead() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ArrowHead.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this.visuals = new visuals_1.Visuals(this);\n        };\n        ArrowHead.prototype.render = function (ctx, i) {\n            return null;\n        };\n        ArrowHead.prototype.clip = function (ctx, i) {\n            // This method should not begin or close a path\n            return null;\n        };\n        return ArrowHead;\n    }(annotation_1.Annotation);\n    exports.ArrowHead = ArrowHead;\n    ;\n    ArrowHead.prototype.type = 'ArrowHead';\n    var OpenHead = function (_super) {\n        tslib_1.__extends(OpenHead, _super);\n        function OpenHead() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        OpenHead.prototype.clip = function (ctx, i) {\n            // This method should not begin or close a path\n            this.visuals.line.set_vectorize(ctx, i);\n            ctx.moveTo(0.5 * this.size, this.size);\n            ctx.lineTo(0.5 * this.size, -2);\n            ctx.lineTo(-0.5 * this.size, -2);\n            ctx.lineTo(-0.5 * this.size, this.size);\n            ctx.lineTo(0, 0);\n            return ctx.lineTo(0.5 * this.size, this.size);\n        };\n        OpenHead.prototype.render = function (ctx, i) {\n            if (this.visuals.line.doit) {\n                this.visuals.line.set_vectorize(ctx, i);\n                ctx.beginPath();\n                ctx.moveTo(0.5 * this.size, this.size);\n                ctx.lineTo(0, 0);\n                ctx.lineTo(-0.5 * this.size, this.size);\n                return ctx.stroke();\n            }\n        };\n        return OpenHead;\n    }(ArrowHead);\n    exports.OpenHead = OpenHead;\n    ;\n    OpenHead.prototype.type = 'OpenHead';\n    OpenHead.mixins(['line']);\n    OpenHead.define({\n        size: [\n            p.Number,\n            25\n        ]\n    });\n    var NormalHead = function (_super) {\n        tslib_1.__extends(NormalHead, _super);\n        function NormalHead() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        NormalHead.prototype.clip = function (ctx, i) {\n            // This method should not begin or close a path\n            this.visuals.line.set_vectorize(ctx, i);\n            ctx.moveTo(0.5 * this.size, this.size);\n            ctx.lineTo(0.5 * this.size, -2);\n            ctx.lineTo(-0.5 * this.size, -2);\n            ctx.lineTo(-0.5 * this.size, this.size);\n            return ctx.lineTo(0.5 * this.size, this.size);\n        };\n        NormalHead.prototype.render = function (ctx, i) {\n            if (this.visuals.fill.doit) {\n                this.visuals.fill.set_vectorize(ctx, i);\n                this._normal(ctx, i);\n                ctx.fill();\n            }\n            if (this.visuals.line.doit) {\n                this.visuals.line.set_vectorize(ctx, i);\n                this._normal(ctx, i);\n                return ctx.stroke();\n            }\n        };\n        NormalHead.prototype._normal = function (ctx, i) {\n            ctx.beginPath();\n            ctx.moveTo(0.5 * this.size, this.size);\n            ctx.lineTo(0, 0);\n            ctx.lineTo(-0.5 * this.size, this.size);\n            return ctx.closePath();\n        };\n        return NormalHead;\n    }(ArrowHead);\n    exports.NormalHead = NormalHead;\n    ;\n    NormalHead.prototype.type = 'NormalHead';\n    NormalHead.mixins([\n        'line',\n        'fill'\n    ]);\n    NormalHead.define({\n        size: [\n            p.Number,\n            25\n        ]\n    });\n    NormalHead.override({ fill_color: 'black' });\n    var VeeHead = function (_super) {\n        tslib_1.__extends(VeeHead, _super);\n        function VeeHead() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        VeeHead.prototype.clip = function (ctx, i) {\n            // This method should not begin or close a path\n            this.visuals.line.set_vectorize(ctx, i);\n            ctx.moveTo(0.5 * this.size, this.size);\n            ctx.lineTo(0.5 * this.size, -2);\n            ctx.lineTo(-0.5 * this.size, -2);\n            ctx.lineTo(-0.5 * this.size, this.size);\n            ctx.lineTo(0, 0.5 * this.size);\n            return ctx.lineTo(0.5 * this.size, this.size);\n        };\n        VeeHead.prototype.render = function (ctx, i) {\n            if (this.visuals.fill.doit) {\n                this.visuals.fill.set_vectorize(ctx, i);\n                this._vee(ctx, i);\n                ctx.fill();\n            }\n            if (this.visuals.line.doit) {\n                this.visuals.line.set_vectorize(ctx, i);\n                this._vee(ctx, i);\n                return ctx.stroke();\n            }\n        };\n        VeeHead.prototype._vee = function (ctx, i) {\n            ctx.beginPath();\n            ctx.moveTo(0.5 * this.size, this.size);\n            ctx.lineTo(0, 0);\n            ctx.lineTo(-0.5 * this.size, this.size);\n            ctx.lineTo(0, 0.5 * this.size);\n            return ctx.closePath();\n        };\n        return VeeHead;\n    }(ArrowHead);\n    exports.VeeHead = VeeHead;\n    ;\n    VeeHead.prototype.type = 'VeeHead';\n    VeeHead.mixins([\n        'line',\n        'fill'\n    ]);\n    VeeHead.define({\n        size: [\n            p.Number,\n            25\n        ]\n    });\n    VeeHead.override({ fill_color: 'black' });\n    var TeeHead = function (_super) {\n        tslib_1.__extends(TeeHead, _super);\n        function TeeHead() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TeeHead.prototype.render = function (ctx, i) {\n            if (this.visuals.line.doit) {\n                this.visuals.line.set_vectorize(ctx, i);\n                ctx.beginPath();\n                ctx.moveTo(0.5 * this.size, 0);\n                ctx.lineTo(-0.5 * this.size, 0);\n                return ctx.stroke();\n            }\n        };\n        return TeeHead;\n    }(ArrowHead);\n    exports.TeeHead = TeeHead;\n    ;\n    TeeHead.prototype.type = 'TeeHead';\n    TeeHead.mixins(['line']);\n    TeeHead.define({\n        size: [\n            p.Number,\n            25\n        ]\n    });    \n}","/*models/annotations/band*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var annotation_1 = require(51    /* ./annotation */);\n    var column_data_source_1 = require(173    /* ../sources/column_data_source */);\n    var p = require(15    /* core/properties */);\n    exports.BandView = function (_super) {\n        tslib_1.__extends(BandView, _super);\n        function BandView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BandView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this.set_data(this.model.source);\n        };\n        BandView.prototype.connect_signals = function () {\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.source.streaming, function () {\n                return this.set_data(this.model.source);\n            });\n            this.connect(this.model.source.patching, function () {\n                return this.set_data(this.model.source);\n            });\n            return this.connect(this.model.source.change, function () {\n                return this.set_data(this.model.source);\n            });\n        };\n        BandView.prototype.set_data = function (source) {\n            _super.prototype.set_data.call(this, source);\n            this.visuals.warm_cache(source);\n            return this.plot_view.request_render();\n        };\n        BandView.prototype._map_data = function () {\n            var _base_sx, _lower, _lower_sx, _upper, _upper_sx, base_scale, base_view, dim, frame, i, j, limit_scale, limit_view, xscale, yscale;\n            frame = this.plot_view.frame;\n            dim = this.model.dimension;\n            xscale = frame.xscales[this.model.x_range_name];\n            yscale = frame.yscales[this.model.y_range_name];\n            limit_scale = dim === 'height' ? yscale : xscale;\n            base_scale = dim === 'height' ? xscale : yscale;\n            limit_view = dim === 'height' ? frame.yview : frame.xview;\n            base_view = dim === 'height' ? frame.xview : frame.yview;\n            if (this.model.lower.units === 'data') {\n                _lower_sx = limit_scale.v_compute(this._lower);\n            } else {\n                _lower_sx = limit_view.v_compute(this._lower);\n            }\n            if (this.model.upper.units === 'data') {\n                _upper_sx = limit_scale.v_compute(this._upper);\n            } else {\n                _upper_sx = limit_view.v_compute(this._upper);\n            }\n            if (this.model.base.units === 'data') {\n                _base_sx = base_scale.v_compute(this._base);\n            } else {\n                _base_sx = base_view.v_compute(this._base);\n            }\n            _a = dim === 'height' ? [\n                1,\n                0\n            ] : [\n                0,\n                1\n            ], i = _a[0], j = _a[1];\n            _lower = [\n                _lower_sx,\n                _base_sx\n            ];\n            _upper = [\n                _upper_sx,\n                _base_sx\n            ];\n            this._lower_sx = _lower[i];\n            this._lower_sy = _lower[j];\n            this._upper_sx = _upper[i];\n            return this._upper_sy = _upper[j];\n            var _a;\n        };\n        BandView.prototype.render = function () {\n            var ctx, i, k, l, m, n, ref, ref1, ref2, ref3;\n            if (!this.model.visible) {\n                return;\n            }\n            this._map_data();\n            ctx = this.plot_view.canvas_view.ctx;\n            // Draw the band body\n            ctx.beginPath();\n            ctx.moveTo(this._lower_sx[0], this._lower_sy[0]);\n            for (i = k = 0, ref = this._lower_sx.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                ctx.lineTo(this._lower_sx[i], this._lower_sy[i]);\n            }\n            // iterate backwards so that the upper end is below the lower start\n            for (i = l = ref1 = this._upper_sx.length - 1; ref1 <= 0 ? l <= 0 : l >= 0; i = ref1 <= 0 ? ++l : --l) {\n                ctx.lineTo(this._upper_sx[i], this._upper_sy[i]);\n            }\n            ctx.closePath();\n            if (this.visuals.fill.doit) {\n                this.visuals.fill.set_value(ctx);\n                ctx.fill();\n            }\n            // Draw the lower band edge\n            ctx.beginPath();\n            ctx.moveTo(this._lower_sx[0], this._lower_sy[0]);\n            for (i = m = 0, ref2 = this._lower_sx.length; 0 <= ref2 ? m < ref2 : m > ref2; i = 0 <= ref2 ? ++m : --m) {\n                ctx.lineTo(this._lower_sx[i], this._lower_sy[i]);\n            }\n            if (this.visuals.line.doit) {\n                this.visuals.line.set_value(ctx);\n                ctx.stroke();\n            }\n            // Draw the upper band edge\n            ctx.beginPath();\n            ctx.moveTo(this._upper_sx[0], this._upper_sy[0]);\n            for (i = n = 0, ref3 = this._upper_sx.length; 0 <= ref3 ? n < ref3 : n > ref3; i = 0 <= ref3 ? ++n : --n) {\n                ctx.lineTo(this._upper_sx[i], this._upper_sy[i]);\n            }\n            if (this.visuals.line.doit) {\n                this.visuals.line.set_value(ctx);\n                return ctx.stroke();\n            }\n        };\n        return BandView;\n    }(annotation_1.AnnotationView);\n    var Band = function (_super) {\n        tslib_1.__extends(Band, _super);\n        function Band() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Band;\n    }(annotation_1.Annotation);\n    exports.Band = Band;\n    ;\n    Band.prototype.default_view = exports.BandView;\n    Band.prototype.type = 'Band';\n    Band.mixins([\n        'line',\n        'fill'\n    ]);\n    Band.define({\n        lower: [p.DistanceSpec],\n        upper: [p.DistanceSpec],\n        base: [p.DistanceSpec],\n        dimension: [\n            p.Dimension,\n            'height'\n        ],\n        source: [\n            p.Instance,\n            function () {\n                return new column_data_source_1.ColumnDataSource();\n            }\n        ],\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ]\n    });\n    Band.override({\n        fill_color: '#fff9ba',\n        fill_alpha: 0.4,\n        line_color: '#cccccc',\n        line_alpha: 0.3\n    });    \n}","/*models/annotations/box_annotation*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var annotation_1 = require(51    /* ./annotation */);\n    var signaling_1 = require(20    /* core/signaling */);\n    var dom_1 = require(5    /* core/dom */);\n    var p = require(15    /* core/properties */);\n    var types_1 = require(42    /* core/util/types */);\n    exports.BoxAnnotationView = function (_super) {\n        tslib_1.__extends(BoxAnnotationView, _super);\n        function BoxAnnotationView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoxAnnotationView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this.plot_view.canvas_overlays.appendChild(this.el);\n            this.el.classList.add('bk-shading');\n            return dom_1.hide(this.el);\n        };\n        BoxAnnotationView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            // need to respond to either normal BB change events or silent\n            // \"data only updates\" that tools might want to use\n            if (this.model.render_mode === 'css') {\n                // dispatch CSS update immediately\n                this.connect(this.model.change, function () {\n                    return this.render();\n                });\n                return this.connect(this.model.data_update, function () {\n                    return this.render();\n                });\n            } else {\n                this.connect(this.model.change, function () {\n                    return _this.plot_view.request_render();\n                });\n                return this.connect(this.model.data_update, function () {\n                    return _this.plot_view.request_render();\n                });\n            }\n        };\n        BoxAnnotationView.prototype.render = function () {\n            var _this = this;\n            var _calc_dim, draw, frame, sbottom, sleft, sright, stop, xscale, yscale;\n            if (!this.model.visible && this.model.render_mode === 'css') {\n                dom_1.hide(this.el);\n            }\n            if (!this.model.visible) {\n                return;\n            }\n            // don't render if *all* position are null\n            if (this.model.left == null && this.model.right == null && this.model.top == null && this.model.bottom == null) {\n                dom_1.hide(this.el);\n                return null;\n            }\n            frame = this.plot_model.frame;\n            xscale = frame.xscales[this.model.x_range_name];\n            yscale = frame.yscales[this.model.y_range_name];\n            _calc_dim = function (dim, dim_units, scale, view, frame_extrema) {\n                var sdim;\n                if (dim != null) {\n                    if (_this.model.screen) {\n                        sdim = dim;\n                    } else {\n                        if (dim_units === 'data') {\n                            sdim = scale.compute(dim);\n                        } else {\n                            sdim = view.compute(dim);\n                        }\n                    }\n                } else {\n                    sdim = frame_extrema;\n                }\n                return sdim;\n            };\n            sleft = _calc_dim(this.model.left, this.model.left_units, xscale, frame.xview, frame._left.value);\n            sright = _calc_dim(this.model.right, this.model.right_units, xscale, frame.xview, frame._right.value);\n            stop = _calc_dim(this.model.top, this.model.top_units, yscale, frame.yview, frame._top.value);\n            sbottom = _calc_dim(this.model.bottom, this.model.bottom_units, yscale, frame.yview, frame._bottom.value);\n            draw = this.model.render_mode === 'css' ? this._css_box.bind(this) : this._canvas_box.bind(this);\n            return draw(sleft, sright, sbottom, stop);\n        };\n        BoxAnnotationView.prototype._css_box = function (sleft, sright, sbottom, stop) {\n            var ld, sh, sw;\n            sw = Math.abs(sright - sleft);\n            sh = Math.abs(sbottom - stop);\n            this.el.style.left = sleft + 'px';\n            this.el.style.width = sw + 'px';\n            this.el.style.top = stop + 'px';\n            this.el.style.height = sh + 'px';\n            this.el.style.borderWidth = this.model.line_width.value + 'px';\n            this.el.style.borderColor = this.model.line_color.value;\n            this.el.style.backgroundColor = this.model.fill_color.value;\n            this.el.style.opacity = this.model.fill_alpha.value;\n            // try our best to honor line dashing in some way, if we can\n            ld = this.model.line_dash;\n            if (types_1.isArray(ld)) {\n                ld = ld.length < 2 ? 'solid' : 'dashed';\n            }\n            if (types_1.isString(ld)) {\n                this.el.style.borderStyle = ld;\n            }\n            return dom_1.show(this.el);\n        };\n        BoxAnnotationView.prototype._canvas_box = function (sleft, sright, sbottom, stop) {\n            var ctx;\n            ctx = this.plot_view.canvas_view.ctx;\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(sleft, stop, sright - sleft, sbottom - stop);\n            this.visuals.fill.set_value(ctx);\n            ctx.fill();\n            this.visuals.line.set_value(ctx);\n            ctx.stroke();\n            return ctx.restore();\n        };\n        return BoxAnnotationView;\n    }(annotation_1.AnnotationView);\n    var BoxAnnotation = function (_super) {\n        tslib_1.__extends(BoxAnnotation, _super);\n        function BoxAnnotation() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoxAnnotation.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            return this.data_update = new signaling_1.Signal(this, 'data_update');\n        };\n        BoxAnnotation.prototype.update = function (_a) {\n            var left = _a.left, right = _a.right, top = _a.top, bottom = _a.bottom;\n            this.setv({\n                left: left,\n                right: right,\n                top: top,\n                bottom: bottom,\n                screen: true\n            }, { silent: true });\n            return this.data_update.emit();\n        };\n        return BoxAnnotation;\n    }(annotation_1.Annotation);\n    exports.BoxAnnotation = BoxAnnotation;\n    ;\n    BoxAnnotation.prototype.default_view = exports.BoxAnnotationView;\n    BoxAnnotation.prototype.type = 'BoxAnnotation';\n    BoxAnnotation.mixins([\n        'line',\n        'fill'\n    ]);\n    BoxAnnotation.define({\n        render_mode: [\n            p.RenderMode,\n            'canvas'\n        ],\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ],\n        top: [\n            p.Number,\n            null\n        ],\n        top_units: [\n            p.SpatialUnits,\n            'data'\n        ],\n        bottom: [\n            p.Number,\n            null\n        ],\n        bottom_units: [\n            p.SpatialUnits,\n            'data'\n        ],\n        left: [\n            p.Number,\n            null\n        ],\n        left_units: [\n            p.SpatialUnits,\n            'data'\n        ],\n        right: [\n            p.Number,\n            null\n        ],\n        right_units: [\n            p.SpatialUnits,\n            'data'\n        ]\n    });\n    BoxAnnotation.internal({\n        screen: [\n            p.Boolean,\n            false\n        ]\n    });\n    BoxAnnotation.override({\n        fill_color: '#fff9ba',\n        fill_alpha: 0.4,\n        line_color: '#cccccc',\n        line_alpha: 0.3\n    });    \n}","/*models/annotations/color_bar*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var LONG_DIM_MAX_SCALAR, LONG_DIM_MIN_SCALAR, SHORT_DIM;\n    var annotation_1 = require(51    /* ./annotation */);\n    var basic_ticker_1 = require(180    /* ../tickers/basic_ticker */);\n    var basic_tick_formatter_1 = require(91    /* ../formatters/basic_tick_formatter */);\n    var linear_color_mapper_1 = require(146    /* ../mappers/linear_color_mapper */);\n    var linear_scale_1 = require(168    /* ../scales/linear_scale */);\n    var log_scale_1 = require(169    /* ../scales/log_scale */);\n    var range1d_1 = require(160    /* ../ranges/range1d */);\n    var p = require(15    /* core/properties */);\n    var text_util = require(40    /* core/util/text */);\n    var array_1 = require(22    /* core/util/array */);\n    var object_1 = require(30    /* core/util/object */);\n    var types_1 = require(42    /* core/util/types */);\n    SHORT_DIM = 25;\n    LONG_DIM_MIN_SCALAR = 0.3;\n    LONG_DIM_MAX_SCALAR = 0.8;\n    exports.ColorBarView = function (_super) {\n        tslib_1.__extends(ColorBarView, _super);\n        function ColorBarView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ColorBarView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this._set_canvas_image();\n        };\n        ColorBarView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.properties.visible.change, function () {\n                return _this.plot_view.request_render();\n            });\n            this.connect(this.model.ticker.change, function () {\n                return _this.plot_view.request_render();\n            });\n            this.connect(this.model.formatter.change, function () {\n                return _this.plot_view.request_render();\n            });\n            if (this.model.color_mapper != null) {\n                return this.connect(this.model.color_mapper.change, function () {\n                    this._set_canvas_image();\n                    return this.plot_view.request_render();\n                });\n            }\n        };\n        ColorBarView.prototype._get_size = function () {\n            var bbox, side;\n            if (this.model.color_mapper == null) {\n                return 0;\n            }\n            bbox = this.compute_legend_dimensions();\n            side = this.model.panel.side;\n            if (side === 'above' || side === 'below') {\n                return bbox.height;\n            }\n            if (side === 'left' || side === 'right') {\n                return bbox.width;\n            }\n        };\n        ColorBarView.prototype._set_canvas_image = function () {\n            var buf, buf8, canvas, cmap, h, image_ctx, image_data, k, palette, ref, results, w;\n            if (this.model.color_mapper == null) {\n                return;\n            }\n            palette = this.model.color_mapper.palette;\n            if (this.model.orientation === 'vertical') {\n                palette = palette.slice(0).reverse();\n            }\n            switch (this.model.orientation) {\n            case 'vertical':\n                _a = [\n                    1,\n                    palette.length\n                ], w = _a[0], h = _a[1];\n                break;\n            case 'horizontal':\n                _b = [\n                    palette.length,\n                    1\n                ], w = _b[0], h = _b[1];\n            }\n            canvas = document.createElement('canvas');\n            _c = [\n                w,\n                h\n            ], canvas.width = _c[0], canvas.height = _c[1];\n            image_ctx = canvas.getContext('2d');\n            image_data = image_ctx.getImageData(0, 0, w, h);\n            // We always want to draw the entire palette linearly, so we create a new\n            // LinearColorMapper instance and map a monotonic range of values with\n            // length = palette.length to get each palette color in order.\n            cmap = new linear_color_mapper_1.LinearColorMapper({ palette: palette });\n            buf = cmap.v_map_screen(function () {\n                results = [];\n                for (var k = 0, ref = palette.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--) {\n                    results.push(k);\n                }\n                return results;\n            }.apply(this));\n            buf8 = new Uint8Array(buf);\n            image_data.data.set(buf8);\n            image_ctx.putImageData(image_data, 0, 0);\n            return this.image = canvas;\n            var _a, _b, _c;\n        };\n        ColorBarView.prototype.compute_legend_dimensions = function () {\n            var image_dimensions, image_height, image_width, label_extent, legend_height, legend_width, padding, tick_extent, title_extent;\n            image_dimensions = this.model._computed_image_dimensions();\n            _a = [\n                image_dimensions.height,\n                image_dimensions.width\n            ], image_height = _a[0], image_width = _a[1];\n            label_extent = this._get_label_extent();\n            title_extent = this.model._title_extent();\n            tick_extent = this.model._tick_extent();\n            padding = this.model.padding;\n            switch (this.model.orientation) {\n            case 'vertical':\n                legend_height = image_height + title_extent + padding * 2;\n                legend_width = image_width + tick_extent + label_extent + padding * 2;\n                break;\n            case 'horizontal':\n                legend_height = image_height + title_extent + tick_extent + label_extent + padding * 2;\n                legend_width = image_width + padding * 2;\n            }\n            return {\n                height: legend_height,\n                width: legend_width\n            };\n            var _a;\n        };\n        ColorBarView.prototype.compute_legend_location = function () {\n            var hr, legend_dimensions, legend_height, legend_margin, legend_width, location, panel, ref, sx, sy, vr, vx, vy;\n            legend_dimensions = this.compute_legend_dimensions();\n            _a = [\n                legend_dimensions.height,\n                legend_dimensions.width\n            ], legend_height = _a[0], legend_width = _a[1];\n            legend_margin = this.model.margin;\n            panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;\n            _b = panel.bbox.ranges, hr = _b[0], vr = _b[1];\n            location = this.model.location;\n            if (types_1.isString(location)) {\n                switch (location) {\n                case 'top_left':\n                    sx = hr.start + legend_margin;\n                    sy = vr.start + legend_margin;\n                    break;\n                case 'top_center':\n                    sx = (hr.end + hr.start) / 2 - legend_width / 2;\n                    sy = vr.start + legend_margin;\n                    break;\n                case 'top_right':\n                    sx = hr.end - legend_margin - legend_width;\n                    sy = vr.start + legend_margin;\n                    break;\n                case 'bottom_right':\n                    sx = hr.end - legend_margin - legend_width;\n                    sy = vr.end - legend_margin - legend_height;\n                    break;\n                case 'bottom_center':\n                    sx = (hr.end + hr.start) / 2 - legend_width / 2;\n                    sy = vr.end - legend_margin - legend_height;\n                    break;\n                case 'bottom_left':\n                    sx = hr.start + legend_margin;\n                    sy = vr.end - legend_margin - legend_height;\n                    break;\n                case 'center_left':\n                    sx = hr.start + legend_margin;\n                    sy = (vr.end + vr.start) / 2 - legend_height / 2;\n                    break;\n                case 'center':\n                    sx = (hr.end + hr.start) / 2 - legend_width / 2;\n                    sy = (vr.end + vr.start) / 2 - legend_height / 2;\n                    break;\n                case 'center_right':\n                    sx = hr.end - legend_margin - legend_width;\n                    sy = (vr.end + vr.start) / 2 - legend_height / 2;\n                }\n            } else if (types_1.isArray(location) && location.length === 2) {\n                vx = location[0], vy = location[1];\n                sx = panel.xview.compute(vx);\n                sy = panel.yview.compute(vy) - legend_height;\n            }\n            return {\n                sx: sx,\n                sy: sy\n            };\n            var _a, _b;\n        };\n        ColorBarView.prototype.render = function () {\n            var ctx, image_offset, sx, sy, tick_info;\n            if (!this.model.visible || this.model.color_mapper == null) {\n                return;\n            }\n            ctx = this.plot_view.canvas_view.ctx;\n            ctx.save();\n            _a = this.compute_legend_location(), sx = _a.sx, sy = _a.sy;\n            ctx.translate(sx, sy);\n            this._draw_bbox(ctx);\n            image_offset = this._get_image_offset();\n            ctx.translate(image_offset.x, image_offset.y);\n            this._draw_image(ctx);\n            if (this.model.color_mapper.low != null && this.model.color_mapper.high != null) {\n                tick_info = this.model.tick_info();\n                this._draw_major_ticks(ctx, tick_info);\n                this._draw_minor_ticks(ctx, tick_info);\n                this._draw_major_labels(ctx, tick_info);\n            }\n            if (this.model.title) {\n                this._draw_title(ctx);\n            }\n            return ctx.restore();\n            var _a;\n        };\n        ColorBarView.prototype._draw_bbox = function (ctx) {\n            var bbox;\n            bbox = this.compute_legend_dimensions();\n            ctx.save();\n            if (this.visuals.background_fill.doit) {\n                this.visuals.background_fill.set_value(ctx);\n                ctx.fillRect(0, 0, bbox.width, bbox.height);\n            }\n            if (this.visuals.border_line.doit) {\n                this.visuals.border_line.set_value(ctx);\n                ctx.strokeRect(0, 0, bbox.width, bbox.height);\n            }\n            return ctx.restore();\n        };\n        ColorBarView.prototype._draw_image = function (ctx) {\n            var image;\n            image = this.model._computed_image_dimensions();\n            ctx.save();\n            ctx.setImageSmoothingEnabled(false);\n            ctx.globalAlpha = this.model.scale_alpha;\n            ctx.drawImage(this.image, 0, 0, image.width, image.height);\n            if (this.visuals.bar_line.doit) {\n                this.visuals.bar_line.set_value(ctx);\n                ctx.strokeRect(0, 0, image.width, image.height);\n            }\n            return ctx.restore();\n        };\n        ColorBarView.prototype._draw_major_ticks = function (ctx, tick_info) {\n            var i, image, k, nx, ny, ref, sx, sy, tin, tout, x_offset, y_offset;\n            if (!this.visuals.major_tick_line.doit) {\n                return;\n            }\n            _a = this.model._normals(), nx = _a[0], ny = _a[1];\n            image = this.model._computed_image_dimensions();\n            _b = [\n                image.width * nx,\n                image.height * ny\n            ], x_offset = _b[0], y_offset = _b[1];\n            _c = tick_info.coords.major, sx = _c[0], sy = _c[1];\n            tin = this.model.major_tick_in;\n            tout = this.model.major_tick_out;\n            ctx.save();\n            ctx.translate(x_offset, y_offset);\n            this.visuals.major_tick_line.set_value(ctx);\n            for (i = k = 0, ref = sx.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                ctx.beginPath();\n                ctx.moveTo(Math.round(sx[i] + nx * tout), Math.round(sy[i] + ny * tout));\n                ctx.lineTo(Math.round(sx[i] - nx * tin), Math.round(sy[i] - ny * tin));\n                ctx.stroke();\n            }\n            return ctx.restore();\n            var _a, _b, _c;\n        };\n        ColorBarView.prototype._draw_minor_ticks = function (ctx, tick_info) {\n            var i, image, k, nx, ny, ref, sx, sy, tin, tout, x_offset, y_offset;\n            if (!this.visuals.minor_tick_line.doit) {\n                return;\n            }\n            _a = this.model._normals(), nx = _a[0], ny = _a[1];\n            image = this.model._computed_image_dimensions();\n            _b = [\n                image.width * nx,\n                image.height * ny\n            ], x_offset = _b[0], y_offset = _b[1];\n            _c = tick_info.coords.minor, sx = _c[0], sy = _c[1];\n            tin = this.model.minor_tick_in;\n            tout = this.model.minor_tick_out;\n            ctx.save();\n            ctx.translate(x_offset, y_offset);\n            this.visuals.minor_tick_line.set_value(ctx);\n            for (i = k = 0, ref = sx.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                ctx.beginPath();\n                ctx.moveTo(Math.round(sx[i] + nx * tout), Math.round(sy[i] + ny * tout));\n                ctx.lineTo(Math.round(sx[i] - nx * tin), Math.round(sy[i] - ny * tin));\n                ctx.stroke();\n            }\n            return ctx.restore();\n            var _a, _b, _c;\n        };\n        ColorBarView.prototype._draw_major_labels = function (ctx, tick_info) {\n            var formatted_labels, i, image, k, nx, ny, ref, standoff, sx, sy, x_offset, x_standoff, y_offset, y_standoff;\n            if (!this.visuals.major_label_text.doit) {\n                return;\n            }\n            _a = this.model._normals(), nx = _a[0], ny = _a[1];\n            image = this.model._computed_image_dimensions();\n            _b = [\n                image.width * nx,\n                image.height * ny\n            ], x_offset = _b[0], y_offset = _b[1];\n            standoff = this.model.label_standoff + this.model._tick_extent();\n            _c = [\n                standoff * nx,\n                standoff * ny\n            ], x_standoff = _c[0], y_standoff = _c[1];\n            _d = tick_info.coords.major, sx = _d[0], sy = _d[1];\n            formatted_labels = tick_info.labels.major;\n            this.visuals.major_label_text.set_value(ctx);\n            ctx.save();\n            ctx.translate(x_offset + x_standoff, y_offset + y_standoff);\n            for (i = k = 0, ref = sx.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                ctx.fillText(formatted_labels[i], Math.round(sx[i] + nx * this.model.label_standoff), Math.round(sy[i] + ny * this.model.label_standoff));\n            }\n            return ctx.restore();\n            var _a, _b, _c, _d;\n        };\n        ColorBarView.prototype._draw_title = function (ctx) {\n            if (!this.visuals.title_text.doit) {\n                return;\n            }\n            ctx.save();\n            this.visuals.title_text.set_value(ctx);\n            ctx.fillText(this.model.title, 0, -this.model.title_standoff);\n            return ctx.restore();\n        };\n        ColorBarView.prototype._get_label_extent = function () {\n            var ctx, label, label_extent, major_labels;\n            major_labels = this.model.tick_info().labels.major;\n            if (this.model.color_mapper.low != null && this.model.color_mapper.high != null && !object_1.isEmpty(major_labels)) {\n                ctx = this.plot_view.canvas_view.ctx;\n                ctx.save();\n                this.visuals.major_label_text.set_value(ctx);\n                switch (this.model.orientation) {\n                case 'vertical':\n                    label_extent = array_1.max(function () {\n                        var k, len, results;\n                        results = [];\n                        for (k = 0, len = major_labels.length; k < len; k++) {\n                            label = major_labels[k];\n                            results.push(ctx.measureText(label.toString()).width);\n                        }\n                        return results;\n                    }());\n                    break;\n                case 'horizontal':\n                    label_extent = text_util.get_text_height(this.visuals.major_label_text.font_value()).height;\n                }\n                label_extent += this.model.label_standoff;\n                ctx.restore();\n            } else {\n                label_extent = 0;\n            }\n            return label_extent;\n        };\n        ColorBarView.prototype._get_image_offset = function () {\n            var x, y;\n            // Returns image offset relative to legend bounding box\n            x = this.model.padding;\n            y = this.model.padding + this.model._title_extent();\n            return {\n                x: x,\n                y: y\n            };\n        };\n        return ColorBarView;\n    }(annotation_1.AnnotationView);\n    var ColorBar = function (_super) {\n        tslib_1.__extends(ColorBar, _super);\n        function ColorBar() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ColorBar.prototype.initialize = function (attrs, options) {\n            return _super.prototype.initialize.call(this, attrs, options);\n        };\n        ColorBar.prototype._normals = function () {\n            var i, j;\n            if (this.orientation === 'vertical') {\n                _a = [\n                    1,\n                    0\n                ], i = _a[0], j = _a[1];\n            } else {\n                _b = [\n                    0,\n                    1\n                ], i = _b[0], j = _b[1];\n            }\n            return [\n                i,\n                j\n            ];\n            var _a, _b;\n        };\n        ColorBar.prototype._title_extent = function () {\n            var font_value, title_extent;\n            font_value = this.title_text_font + ' ' + this.title_text_font_size + ' ' + this.title_text_font_style;\n            title_extent = this.title ? text_util.get_text_height(font_value).height + this.title_standoff : 0;\n            return title_extent;\n        };\n        ColorBar.prototype._tick_extent = function () {\n            var tick_extent;\n            if (this.color_mapper.low != null && this.color_mapper.high != null) {\n                tick_extent = array_1.max([\n                    this.major_tick_out,\n                    this.minor_tick_out\n                ]);\n            } else {\n                tick_extent = 0;\n            }\n            return tick_extent;\n        };\n        ColorBar.prototype._computed_image_dimensions = function () {\n            /*\n        Heuristics to determine ColorBar image dimensions if set to \"auto\"\n  \n        Note: Returns the height/width values for the ColorBar's scale image, not\n        the dimensions of the entire ColorBar.\n  \n        If the short dimension (the width of a vertical bar or height of a\n        horizontal bar) is set to \"auto\", the resulting dimension will be set to\n        25 px.\n  \n        For a ColorBar in a side panel with the long dimension (the height of a\n        vertical bar or width of a horizontal bar) set to \"auto\", the\n        resulting dimension will be as long as the adjacent frame edge, so that the\n        bar \"fits\" to the plot.\n  \n        For a ColorBar in the plot frame with the long dimension set to \"auto\", the\n        resulting dimension will be the greater of:\n          * The length of the color palette * 25px\n          * The parallel frame dimension * 0.30\n            (i.e the frame height for a vertical ColorBar)\n        But not greater than:\n          * The parallel frame dimension * 0.80\n         */\n            var frame_height, frame_width, height, title_extent, width;\n            frame_height = this.plot.plot_canvas.frame._height.value;\n            frame_width = this.plot.plot_canvas.frame._width.value;\n            title_extent = this._title_extent();\n            switch (this.orientation) {\n            case 'vertical':\n                if (this.height === 'auto') {\n                    if (this.panel != null) {\n                        height = frame_height - 2 * this.padding - title_extent;\n                    } else {\n                        height = array_1.max([\n                            this.color_mapper.palette.length * SHORT_DIM,\n                            frame_height * LONG_DIM_MIN_SCALAR\n                        ]);\n                        height = array_1.min([\n                            height,\n                            frame_height * LONG_DIM_MAX_SCALAR - 2 * this.padding - title_extent\n                        ]);\n                    }\n                } else {\n                    height = this.height;\n                }\n                width = this.width === 'auto' ? SHORT_DIM : this.width;\n                break;\n            case 'horizontal':\n                height = this.height === 'auto' ? SHORT_DIM : this.height;\n                if (this.width === 'auto') {\n                    if (this.panel != null) {\n                        width = frame_width - 2 * this.padding;\n                    } else {\n                        width = array_1.max([\n                            this.color_mapper.palette.length * SHORT_DIM,\n                            frame_width * LONG_DIM_MIN_SCALAR\n                        ]);\n                        width = array_1.min([\n                            width,\n                            frame_width * LONG_DIM_MAX_SCALAR - 2 * this.padding\n                        ]);\n                    }\n                } else {\n                    width = this.width;\n                }\n            }\n            return {\n                'height': height,\n                'width': width\n            };\n        };\n        ColorBar.prototype._tick_coordinate_scale = function (scale_length) {\n            /*\n        Creates and returns a scale instance that maps the `color_mapper` range\n        (low to high) to a screen space range equal to the length of the ColorBar's\n        scale image. The scale is used to calculate the tick coordinates in screen\n        coordinates for plotting purposes.\n  \n        Note: the type of color_mapper has to match the type of scale (i.e.\n        a LinearColorMapper will require a corresponding LinearScale instance).\n        */\n            var ranges, scale;\n            ranges = {\n                'source_range': new range1d_1.Range1d({\n                    start: this.color_mapper.low,\n                    end: this.color_mapper.high\n                }),\n                'target_range': new range1d_1.Range1d({\n                    start: 0,\n                    end: scale_length\n                })\n            };\n            switch (this.color_mapper.type) {\n            case 'LinearColorMapper':\n                scale = new linear_scale_1.LinearScale(ranges);\n                break;\n            case 'LogColorMapper':\n                scale = new log_scale_1.LogScale(ranges);\n            }\n            return scale;\n        };\n        ColorBar.prototype._format_major_labels = function (initial_labels, major_ticks) {\n            var formatted_labels, i, k, labels, ref;\n            labels = initial_labels;\n            // note: passing null as cross_loc probably means MercatorTickFormatters, etc\n            // will not function properly in conjunction with colorbars\n            formatted_labels = this.formatter.doFormat(labels, null);\n            for (i = k = 0, ref = major_ticks.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                if (major_ticks[i] in this.major_label_overrides) {\n                    formatted_labels[i] = this.major_label_overrides[major_ticks[i]];\n                }\n            }\n            return formatted_labels;\n        };\n        ColorBar.prototype.tick_info = function () {\n            var coord, coords, end, i, ii, image_dimensions, j, k, l, labels, major_coords, majors, minor_coords, minors, ref, ref1, scale, scale_length, start, ticks;\n            image_dimensions = this._computed_image_dimensions();\n            switch (this.orientation) {\n            case 'vertical':\n                scale_length = image_dimensions.height;\n                break;\n            case 'horizontal':\n                scale_length = image_dimensions.width;\n            }\n            scale = this._tick_coordinate_scale(scale_length);\n            _a = this._normals(), i = _a[0], j = _a[1];\n            _b = [\n                this.color_mapper.low,\n                this.color_mapper.high\n            ], start = _b[0], end = _b[1];\n            // note: passing null as cross_loc probably means MercatorTickers, etc\n            // will not function properly in conjunction with colorbars\n            ticks = this.ticker.get_ticks(start, end, null, null, this.ticker.desired_num_ticks);\n            coords = {\n                major: [\n                    [],\n                    []\n                ],\n                minor: [\n                    [],\n                    []\n                ]\n            };\n            majors = ticks.major;\n            minors = ticks.minor;\n            major_coords = coords.major;\n            minor_coords = coords.minor;\n            for (ii = k = 0, ref = majors.length; 0 <= ref ? k < ref : k > ref; ii = 0 <= ref ? ++k : --k) {\n                if (majors[ii] < start || majors[ii] > end) {\n                    continue;\n                }\n                major_coords[i].push(majors[ii]);\n                major_coords[j].push(0);\n            }\n            for (ii = l = 0, ref1 = minors.length; 0 <= ref1 ? l < ref1 : l > ref1; ii = 0 <= ref1 ? ++l : --l) {\n                if (minors[ii] < start || minors[ii] > end) {\n                    continue;\n                }\n                minor_coords[i].push(minors[ii]);\n                minor_coords[j].push(0);\n            }\n            labels = {\n                major: this._format_major_labels(major_coords[i].slice(0), majors)    // make deep copy\n            };\n            major_coords[i] = scale.v_compute(major_coords[i]);\n            minor_coords[i] = scale.v_compute(minor_coords[i]);\n            // Because we want the scale to be reversed\n            if (this.orientation === 'vertical') {\n                major_coords[i] = new Float64Array(function () {\n                    var len, m, ref2, results;\n                    ref2 = major_coords[i];\n                    results = [];\n                    for (m = 0, len = ref2.length; m < len; m++) {\n                        coord = ref2[m];\n                        results.push(scale_length - coord);\n                    }\n                    return results;\n                }());\n                minor_coords[i] = new Float64Array(function () {\n                    var len, m, ref2, results;\n                    ref2 = minor_coords[i];\n                    results = [];\n                    for (m = 0, len = ref2.length; m < len; m++) {\n                        coord = ref2[m];\n                        results.push(scale_length - coord);\n                    }\n                    return results;\n                }());\n            }\n            return {\n                'ticks': ticks,\n                'coords': coords,\n                'labels': labels\n            };\n            var _a, _b;\n        };\n        return ColorBar;\n    }(annotation_1.Annotation);\n    exports.ColorBar = ColorBar;\n    ;\n    ColorBar.prototype.default_view = exports.ColorBarView;\n    ColorBar.prototype.type = 'ColorBar';\n    ColorBar.mixins([\n        'text:major_label_',\n        'text:title_',\n        'line:major_tick_',\n        'line:minor_tick_',\n        'line:border_',\n        'line:bar_',\n        'fill:background_'\n    ]);\n    ColorBar.define({\n        location: [\n            p.Any,\n            'top_right'\n        ],\n        orientation: [\n            p.Orientation,\n            'vertical'\n        ],\n        title: [p.String],\n        title_standoff: [\n            p.Number,\n            2\n        ],\n        height: [\n            p.Any,\n            'auto'\n        ],\n        width: [\n            p.Any,\n            'auto'\n        ],\n        scale_alpha: [\n            p.Number,\n            1\n        ],\n        ticker: [\n            p.Instance,\n            function () {\n                return new basic_ticker_1.BasicTicker();\n            }\n        ],\n        formatter: [\n            p.Instance,\n            function () {\n                return new basic_tick_formatter_1.BasicTickFormatter();\n            }\n        ],\n        major_label_overrides: [\n            p.Any,\n            {}\n        ],\n        color_mapper: [p.Instance],\n        label_standoff: [\n            p.Number,\n            5\n        ],\n        margin: [\n            p.Number,\n            30\n        ],\n        padding: [\n            p.Number,\n            10\n        ],\n        major_tick_in: [\n            p.Number,\n            5\n        ],\n        major_tick_out: [\n            p.Number,\n            0\n        ],\n        minor_tick_in: [\n            p.Number,\n            0\n        ],\n        minor_tick_out: [\n            p.Number,\n            0\n        ]\n    });\n    ColorBar.override({\n        background_fill_color: '#ffffff',\n        background_fill_alpha: 0.95,\n        bar_line_color: null,\n        border_line_color: null,\n        major_label_text_align: 'center',\n        major_label_text_baseline: 'middle',\n        major_label_text_font_size: '8pt',\n        major_tick_line_color: '#ffffff',\n        minor_tick_line_color: null,\n        title_text_font_size: '10pt',\n        title_text_font_style: 'italic'\n    });    \n}","/*models/annotations/index*/\nfunction _(require, module, exports) {\n    var annotation_1 = require(51    /* ./annotation */);\n    exports.Annotation = annotation_1.Annotation;\n    var arrow_1 = require(52    /* ./arrow */);\n    exports.Arrow = arrow_1.Arrow;\n    var arrow_head_1 = require(53    /* ./arrow_head */);\n    exports.ArrowHead = arrow_head_1.ArrowHead;\n    var arrow_head_2 = require(53    /* ./arrow_head */);\n    exports.OpenHead = arrow_head_2.OpenHead;\n    var arrow_head_3 = require(53    /* ./arrow_head */);\n    exports.NormalHead = arrow_head_3.NormalHead;\n    var arrow_head_4 = require(53    /* ./arrow_head */);\n    exports.TeeHead = arrow_head_4.TeeHead;\n    var arrow_head_5 = require(53    /* ./arrow_head */);\n    exports.VeeHead = arrow_head_5.VeeHead;\n    var band_1 = require(54    /* ./band */);\n    exports.Band = band_1.Band;\n    var box_annotation_1 = require(55    /* ./box_annotation */);\n    exports.BoxAnnotation = box_annotation_1.BoxAnnotation;\n    var color_bar_1 = require(56    /* ./color_bar */);\n    exports.ColorBar = color_bar_1.ColorBar;\n    var label_1 = require(58    /* ./label */);\n    exports.Label = label_1.Label;\n    var label_set_1 = require(59    /* ./label_set */);\n    exports.LabelSet = label_set_1.LabelSet;\n    var legend_1 = require(60    /* ./legend */);\n    exports.Legend = legend_1.Legend;\n    var legend_item_1 = require(61    /* ./legend_item */);\n    exports.LegendItem = legend_item_1.LegendItem;\n    var poly_annotation_1 = require(62    /* ./poly_annotation */);\n    exports.PolyAnnotation = poly_annotation_1.PolyAnnotation;\n    var span_1 = require(63    /* ./span */);\n    exports.Span = span_1.Span;\n    var text_annotation_1 = require(64    /* ./text_annotation */);\n    exports.TextAnnotation = text_annotation_1.TextAnnotation;\n    var title_1 = require(65    /* ./title */);\n    exports.Title = title_1.Title;\n    var toolbar_panel_1 = require(66    /* ./toolbar_panel */);\n    exports.ToolbarPanel = toolbar_panel_1.ToolbarPanel;\n    var tooltip_1 = require(67    /* ./tooltip */);\n    exports.Tooltip = tooltip_1.Tooltip;\n    var whisker_1 = require(68    /* ./whisker */);\n    exports.Whisker = whisker_1.Whisker;    \n}","/*models/annotations/label*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var text_annotation_1 = require(64    /* ./text_annotation */);\n    var dom_1 = require(5    /* core/dom */);\n    var p = require(15    /* core/properties */);\n    exports.LabelView = function (_super) {\n        tslib_1.__extends(LabelView, _super);\n        function LabelView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LabelView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this.visuals.warm_cache(null);\n        };\n        LabelView.prototype._get_size = function () {\n            var ctx, height, width;\n            ctx = this.plot_view.canvas_view.ctx;\n            this.visuals.text.set_value(ctx);\n            if (this.model.panel.is_horizontal) {\n                height = ctx.measureText(this.model.text).ascent;\n                return height;\n            } else {\n                width = ctx.measureText(this.model.text).width;\n                return width;\n            }\n        };\n        LabelView.prototype.render = function () {\n            var angle, draw, panel, ref, sx, sy, xscale, yscale;\n            if (!this.model.visible && this.model.render_mode === 'css') {\n                dom_1.hide(this.el);\n            }\n            if (!this.model.visible) {\n                return;\n            }\n            // Here because AngleSpec does units tranform and label doesn't support specs\n            switch (this.model.angle_units) {\n            case 'rad':\n                angle = -1 * this.model.angle;\n                break;\n            case 'deg':\n                angle = -1 * this.model.angle * Math.PI / 180;\n            }\n            panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;\n            xscale = this.plot_view.frame.xscales[this.model.x_range_name];\n            yscale = this.plot_view.frame.yscales[this.model.y_range_name];\n            sx = this.model.x_units === 'data' ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);\n            sy = this.model.y_units === 'data' ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);\n            sx += this.model.x_offset;\n            sy -= this.model.y_offset;\n            draw = this.model.render_mode === 'canvas' ? this._canvas_text.bind(this) : this._css_text.bind(this);\n            return draw(this.plot_view.canvas_view.ctx, this.model.text, sx, sy, angle);\n        };\n        return LabelView;\n    }(text_annotation_1.TextAnnotationView);\n    var Label = function (_super) {\n        tslib_1.__extends(Label, _super);\n        function Label() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Label;\n    }(text_annotation_1.TextAnnotation);\n    exports.Label = Label;\n    ;\n    Label.prototype.default_view = exports.LabelView;\n    Label.prototype.type = 'Label';\n    Label.mixins([\n        'text',\n        'line:border_',\n        'fill:background_'\n    ]);\n    Label.define({\n        x: [p.Number],\n        x_units: [\n            p.SpatialUnits,\n            'data'\n        ],\n        y: [p.Number],\n        y_units: [\n            p.SpatialUnits,\n            'data'\n        ],\n        text: [p.String],\n        angle: [\n            p.Angle,\n            0\n        ],\n        angle_units: [\n            p.AngleUnits,\n            'rad'\n        ],\n        x_offset: [\n            p.Number,\n            0\n        ],\n        y_offset: [\n            p.Number,\n            0\n        ],\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ],\n        render_mode: [\n            p.RenderMode,\n            'canvas'\n        ]\n    });\n    Label.override({\n        background_fill_color: null,\n        border_line_color: null\n    });    \n}","/*models/annotations/label_set*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var text_annotation_1 = require(64    /* ./text_annotation */);\n    var column_data_source_1 = require(173    /* ../sources/column_data_source */);\n    var dom_1 = require(5    /* core/dom */);\n    var p = require(15    /* core/properties */);\n    var types_1 = require(42    /* core/util/types */);\n    exports.LabelSetView = function (_super) {\n        tslib_1.__extends(LabelSetView, _super);\n        function LabelSetView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LabelSetView.prototype.initialize = function (options) {\n            var i, j, ref, results;\n            _super.prototype.initialize.call(this, options);\n            this.set_data(this.model.source);\n            if (this.model.render_mode === 'css') {\n                results = [];\n                for (i = j = 0, ref = this._text.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    this.title_div = dom_1.div({\n                        class: 'bk-annotation-child',\n                        style: { display: 'none' }\n                    });\n                    results.push(this.el.appendChild(this.title_div));\n                }\n                return results;\n            }\n        };\n        LabelSetView.prototype.connect_signals = function () {\n            _super.prototype.connect_signals.call(this);\n            if (this.model.render_mode === 'css') {\n                // dispatch CSS update immediately\n                this.connect(this.model.change, function () {\n                    this.set_data(this.model.source);\n                    return this.render();\n                });\n                this.connect(this.model.source.streaming, function () {\n                    this.set_data(this.model.source);\n                    return this.render();\n                });\n                this.connect(this.model.source.patching, function () {\n                    this.set_data(this.model.source);\n                    return this.render();\n                });\n                return this.connect(this.model.source.change, function () {\n                    this.set_data(this.model.source);\n                    return this.render();\n                });\n            } else {\n                this.connect(this.model.change, function () {\n                    this.set_data(this.model.source);\n                    return this.plot_view.request_render();\n                });\n                this.connect(this.model.source.streaming, function () {\n                    this.set_data(this.model.source);\n                    return this.plot_view.request_render();\n                });\n                this.connect(this.model.source.patching, function () {\n                    this.set_data(this.model.source);\n                    return this.plot_view.request_render();\n                });\n                return this.connect(this.model.source.change, function () {\n                    this.set_data(this.model.source);\n                    return this.plot_view.request_render();\n                });\n            }\n        };\n        LabelSetView.prototype.set_data = function (source) {\n            _super.prototype.set_data.call(this, source);\n            return this.visuals.warm_cache(source);\n        };\n        LabelSetView.prototype._map_data = function () {\n            var panel, ref, sx, sy, xscale, yscale;\n            xscale = this.plot_view.frame.xscales[this.model.x_range_name];\n            yscale = this.plot_view.frame.yscales[this.model.y_range_name];\n            panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;\n            sx = this.model.x_units === 'data' ? xscale.v_compute(this._x) : panel.xview.v_compute(this._x);\n            sy = this.model.y_units === 'data' ? yscale.v_compute(this._y) : panel.yview.v_compute(this._y);\n            return [\n                sx,\n                sy\n            ];\n        };\n        LabelSetView.prototype.render = function () {\n            var ctx, draw, i, j, ref, results, sx, sy;\n            if (!this.model.visible && this.model.render_mode === 'css') {\n                dom_1.hide(this.el);\n            }\n            if (!this.model.visible) {\n                return;\n            }\n            draw = this.model.render_mode === 'canvas' ? this._v_canvas_text.bind(this) : this._v_css_text.bind(this);\n            ctx = this.plot_view.canvas_view.ctx;\n            _a = this._map_data(), sx = _a[0], sy = _a[1];\n            results = [];\n            for (i = j = 0, ref = this._text.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                results.push(draw(ctx, i, this._text[i], sx[i] + this._x_offset[i], sy[i] - this._y_offset[i], this._angle[i]));\n            }\n            return results;\n            var _a;\n        };\n        LabelSetView.prototype._get_size = function () {\n            var ctx, height, side, width;\n            ctx = this.plot_view.canvas_view.ctx;\n            this.visuals.text.set_value(ctx);\n            side = this.model.panel.side;\n            if (side === 'above' || side === 'below') {\n                height = ctx.measureText(this._text[0]).ascent;\n                return height;\n            }\n            if (side === 'left' || side === 'right') {\n                width = ctx.measureText(this._text[0]).width;\n                return width;\n            }\n        };\n        LabelSetView.prototype._v_canvas_text = function (ctx, i, text, sx, sy, angle) {\n            var bbox_dims;\n            this.visuals.text.set_vectorize(ctx, i);\n            bbox_dims = this._calculate_bounding_box_dimensions(ctx, text);\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(sx, sy);\n            ctx.rotate(angle);\n            ctx.rect(bbox_dims[0], bbox_dims[1], bbox_dims[2], bbox_dims[3]);\n            if (this.visuals.background_fill.doit) {\n                this.visuals.background_fill.set_vectorize(ctx, i);\n                ctx.fill();\n            }\n            if (this.visuals.border_line.doit) {\n                this.visuals.border_line.set_vectorize(ctx, i);\n                ctx.stroke();\n            }\n            if (this.visuals.text.doit) {\n                this.visuals.text.set_vectorize(ctx, i);\n                ctx.fillText(text, 0, 0);\n            }\n            return ctx.restore();\n        };\n        LabelSetView.prototype._v_css_text = function (ctx, i, text, sx, sy, angle) {\n            var bbox_dims, el, ld, line_dash;\n            el = this.el.childNodes[i];\n            el.textContent = text;\n            this.visuals.text.set_vectorize(ctx, i);\n            bbox_dims = this._calculate_bounding_box_dimensions(ctx, text);\n            // attempt to support vector-style (\"8 4 8\") line dashing for css mode\n            ld = this.visuals.border_line.line_dash.value();\n            if (types_1.isArray(ld)) {\n                line_dash = ld.length < 2 ? 'solid' : 'dashed';\n            }\n            if (types_1.isString(ld)) {\n                line_dash = ld;\n            }\n            this.visuals.border_line.set_vectorize(ctx, i);\n            this.visuals.background_fill.set_vectorize(ctx, i);\n            el.style.position = 'absolute';\n            el.style.left = sx + bbox_dims[0] + 'px';\n            el.style.top = sy + bbox_dims[1] + 'px';\n            el.style.color = '' + this.visuals.text.text_color.value();\n            el.style.opacity = '' + this.visuals.text.text_alpha.value();\n            el.style.font = '' + this.visuals.text.font_value();\n            el.style.lineHeight = 'normal';\n            // needed to prevent ipynb css override\n            if (angle) {\n                el.style.transform = 'rotate(' + angle + 'rad)';\n            }\n            if (this.visuals.background_fill.doit) {\n                el.style.backgroundColor = '' + this.visuals.background_fill.color_value();\n            }\n            if (this.visuals.border_line.doit) {\n                el.style.borderStyle = '' + line_dash;\n                el.style.borderWidth = this.visuals.border_line.line_width.value() + 'px';\n                el.style.borderColor = '' + this.visuals.border_line.color_value();\n            }\n            return dom_1.show(el);\n        };\n        return LabelSetView;\n    }(text_annotation_1.TextAnnotationView);\n    var LabelSet = function (_super) {\n        tslib_1.__extends(LabelSet, _super);\n        function LabelSet() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return LabelSet;\n    }(text_annotation_1.TextAnnotation);\n    exports.LabelSet = LabelSet;\n    ;\n    LabelSet.prototype.default_view = exports.LabelSetView;\n    LabelSet.prototype.type = 'Label';\n    LabelSet.mixins([\n        'text',\n        'line:border_',\n        'fill:background_'\n    ]);\n    LabelSet.define({\n        x: [p.NumberSpec],\n        y: [p.NumberSpec],\n        x_units: [\n            p.SpatialUnits,\n            'data'\n        ],\n        y_units: [\n            p.SpatialUnits,\n            'data'\n        ],\n        text: [\n            p.StringSpec,\n            { field: 'text' }\n        ],\n        angle: [\n            p.AngleSpec,\n            0\n        ],\n        x_offset: [\n            p.NumberSpec,\n            { value: 0 }\n        ],\n        y_offset: [\n            p.NumberSpec,\n            { value: 0 }\n        ],\n        source: [\n            p.Instance,\n            function () {\n                return new column_data_source_1.ColumnDataSource();\n            }\n        ],\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ],\n        render_mode: [\n            p.RenderMode,\n            'canvas'\n        ]\n    });\n    LabelSet.override({\n        background_fill_color: null,\n        border_line_color: null\n    });    \n}","/*models/annotations/legend*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var annotation_1 = require(51    /* ./annotation */);\n    var p = require(15    /* core/properties */);\n    var text_1 = require(40    /* core/util/text */);\n    var bbox_1 = require(23    /* core/util/bbox */);\n    var array_1 = require(22    /* core/util/array */);\n    var object_1 = require(30    /* core/util/object */);\n    var types_1 = require(42    /* core/util/types */);\n    var LegendView = function (_super) {\n        tslib_1.__extends(LegendView, _super);\n        function LegendView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LegendView.prototype.initialize = function (options) {\n            return _super.prototype.initialize.call(this, options);\n        };\n        LegendView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            return this.connect(this.model.properties.visible.change, function () {\n                return _this.plot_view.request_render();\n            });\n        };\n        LegendView.prototype.compute_legend_bbox = function () {\n            var ctx, glyph_height, glyph_width, hr, i, label_height, label_standoff, label_width, legend_height, legend_margin, legend_names, legend_padding, legend_spacing, legend_width, len, location, max_label_width, name, panel, ref, ref1, sx, sy, vr, vx, vy, width;\n            legend_names = this.model.get_legend_names();\n            glyph_height = this.model.glyph_height;\n            glyph_width = this.model.glyph_width;\n            label_height = this.model.label_height;\n            label_width = this.model.label_width;\n            this.max_label_height = array_1.max([\n                text_1.get_text_height(this.visuals.label_text.font_value()).height,\n                label_height,\n                glyph_height\n            ]);\n            // this is to measure text properties\n            ctx = this.plot_view.canvas_view.ctx;\n            ctx.save();\n            this.visuals.label_text.set_value(ctx);\n            this.text_widths = {};\n            for (i = 0, len = legend_names.length; i < len; i++) {\n                name = legend_names[i];\n                this.text_widths[name] = array_1.max([\n                    ctx.measureText(name).width,\n                    label_width\n                ]);\n            }\n            ctx.restore();\n            max_label_width = Math.max(array_1.max(object_1.values(this.text_widths)), 0);\n            legend_margin = this.model.margin;\n            legend_padding = this.legend_padding;\n            legend_spacing = this.model.spacing;\n            label_standoff = this.model.label_standoff;\n            if (this.model.orientation === 'vertical') {\n                legend_height = legend_names.length * this.max_label_height + Math.max(legend_names.length - 1, 0) * legend_spacing + 2 * legend_padding;\n                legend_width = max_label_width + glyph_width + label_standoff + 2 * legend_padding;\n            } else {\n                legend_width = 2 * legend_padding + Math.max(legend_names.length - 1, 0) * legend_spacing;\n                ref = this.text_widths;\n                for (name in ref) {\n                    width = ref[name];\n                    legend_width += array_1.max([\n                        width,\n                        label_width\n                    ]) + glyph_width + label_standoff;\n                }\n                legend_height = this.max_label_height + 2 * legend_padding;\n            }\n            panel = (ref1 = this.model.panel) != null ? ref1 : this.plot_view.frame;\n            _a = panel.bbox.ranges, hr = _a[0], vr = _a[1];\n            location = this.model.location;\n            if (types_1.isString(location)) {\n                switch (location) {\n                case 'top_left':\n                    sx = hr.start + legend_margin;\n                    sy = vr.start + legend_margin;\n                    break;\n                case 'top_center':\n                    sx = (hr.end + hr.start) / 2 - legend_width / 2;\n                    sy = vr.start + legend_margin;\n                    break;\n                case 'top_right':\n                    sx = hr.end - legend_margin - legend_width;\n                    sy = vr.start + legend_margin;\n                    break;\n                case 'bottom_right':\n                    sx = hr.end - legend_margin - legend_width;\n                    sy = vr.end - legend_margin - legend_height;\n                    break;\n                case 'bottom_center':\n                    sx = (hr.end + hr.start) / 2 - legend_width / 2;\n                    sy = vr.end - legend_margin - legend_height;\n                    break;\n                case 'bottom_left':\n                    sx = hr.start + legend_margin;\n                    sy = vr.end - legend_margin - legend_height;\n                    break;\n                case 'center_left':\n                    sx = hr.start + legend_margin;\n                    sy = (vr.end + vr.start) / 2 - legend_height / 2;\n                    break;\n                case 'center':\n                    sx = (hr.end + hr.start) / 2 - legend_width / 2;\n                    sy = (vr.end + vr.start) / 2 - legend_height / 2;\n                    break;\n                case 'center_right':\n                    sx = hr.end - legend_margin - legend_width;\n                    sy = (vr.end + vr.start) / 2 - legend_height / 2;\n                }\n            } else if (types_1.isArray(location) && location.length === 2) {\n                vx = location[0], vy = location[1];\n                sx = panel.xview.compute(vx);\n                sy = panel.yview.compute(vy) - legend_height;\n            }\n            return {\n                x: sx,\n                y: sy,\n                width: legend_width,\n                height: legend_height\n            };\n            var _a;\n        };\n        LegendView.prototype.bbox = function () {\n            var height, width, x, y;\n            _a = this.compute_legend_bbox(), x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n            return new bbox_1.BBox({\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            });\n            var _a;\n        };\n        LegendView.prototype.on_hit = function (sx, sy) {\n            var bbox, field, glyph_height, glyph_width, h, i, item, j, k, l, label, label_standoff, labels, legend_bbox, legend_padding, legend_spacing, len, len1, len2, len3, r, ref, ref1, ref2, vertical, w, x1, x2, xoffset, y1, y2, yoffset;\n            glyph_height = this.model.glyph_height;\n            glyph_width = this.model.glyph_width;\n            legend_padding = this.legend_padding;\n            legend_spacing = this.model.spacing;\n            label_standoff = this.model.label_standoff;\n            xoffset = yoffset = legend_padding;\n            legend_bbox = this.compute_legend_bbox();\n            vertical = this.model.orientation === 'vertical';\n            ref = this.model.items;\n            for (i = 0, len = ref.length; i < len; i++) {\n                item = ref[i];\n                labels = item.get_labels_list_from_label_prop();\n                field = item.get_field_from_label_prop();\n                for (j = 0, len1 = labels.length; j < len1; j++) {\n                    label = labels[j];\n                    x1 = legend_bbox.x + xoffset;\n                    y1 = legend_bbox.y + yoffset;\n                    x2 = x1 + glyph_width;\n                    y2 = y1 + glyph_height;\n                    if (vertical) {\n                        _a = [\n                            legend_bbox.width - 2 * legend_padding,\n                            this.max_label_height\n                        ], w = _a[0], h = _a[1];\n                    } else {\n                        _b = [\n                            this.text_widths[label] + glyph_width + label_standoff,\n                            this.max_label_height\n                        ], w = _b[0], h = _b[1];\n                    }\n                    bbox = new bbox_1.BBox({\n                        x: x1,\n                        y: y1,\n                        width: w,\n                        height: h\n                    });\n                    if (bbox.contains(sx, sy)) {\n                        switch (this.model.click_policy) {\n                        case 'hide':\n                            ref1 = item.renderers;\n                            for (k = 0, len2 = ref1.length; k < len2; k++) {\n                                r = ref1[k];\n                                r.visible = !r.visible;\n                            }\n                            break;\n                        case 'mute':\n                            ref2 = item.renderers;\n                            for (l = 0, len3 = ref2.length; l < len3; l++) {\n                                r = ref2[l];\n                                r.muted = !r.muted;\n                            }\n                        }\n                        return true;\n                    }\n                    if (vertical) {\n                        yoffset += this.max_label_height + legend_spacing;\n                    } else {\n                        xoffset += this.text_widths[label] + glyph_width + label_standoff + legend_spacing;\n                    }\n                }\n            }\n            return false;\n            var _a, _b;\n        };\n        LegendView.prototype.render = function () {\n            var bbox, ctx;\n            if (!this.model.visible) {\n                return;\n            }\n            if (this.model.items.length === 0) {\n                return;\n            }\n            ctx = this.plot_view.canvas_view.ctx;\n            bbox = this.compute_legend_bbox();\n            ctx.save();\n            this._draw_legend_box(ctx, bbox);\n            this._draw_legend_items(ctx, bbox);\n            return ctx.restore();\n        };\n        LegendView.prototype._draw_legend_box = function (ctx, bbox) {\n            ctx.beginPath();\n            ctx.rect(bbox.x, bbox.y, bbox.width, bbox.height);\n            this.visuals.background_fill.set_value(ctx);\n            ctx.fill();\n            if (this.visuals.border_line.doit) {\n                this.visuals.border_line.set_value(ctx);\n                return ctx.stroke();\n            }\n        };\n        LegendView.prototype._draw_legend_items = function (ctx, bbox) {\n            var active, field, glyph_height, glyph_width, h, i, item, j, k, label, label_standoff, labels, legend_padding, legend_spacing, len, len1, len2, r, ref, ref1, vertical, view, w, x1, x2, xoffset, y1, y2, yoffset;\n            glyph_height = this.model.glyph_height;\n            glyph_width = this.model.glyph_width;\n            legend_padding = this.legend_padding;\n            legend_spacing = this.model.spacing;\n            label_standoff = this.model.label_standoff;\n            xoffset = yoffset = legend_padding;\n            vertical = this.model.orientation === 'vertical';\n            ref = this.model.items;\n            for (i = 0, len = ref.length; i < len; i++) {\n                item = ref[i];\n                labels = item.get_labels_list_from_label_prop();\n                field = item.get_field_from_label_prop();\n                if (labels.length === 0) {\n                    continue;\n                }\n                active = function () {\n                    switch (this.model.click_policy) {\n                    case 'none':\n                        return true;\n                    case 'hide':\n                        return array_1.all(item.renderers, function (r) {\n                            return r.visible;\n                        });\n                    case 'mute':\n                        return array_1.all(item.renderers, function (r) {\n                            return !r.muted;\n                        });\n                    }\n                }.call(this);\n                for (j = 0, len1 = labels.length; j < len1; j++) {\n                    label = labels[j];\n                    x1 = bbox.x + xoffset;\n                    y1 = bbox.y + yoffset;\n                    x2 = x1 + glyph_width;\n                    y2 = y1 + glyph_height;\n                    if (vertical) {\n                        yoffset += this.max_label_height + legend_spacing;\n                    } else {\n                        xoffset += this.text_widths[label] + glyph_width + label_standoff + legend_spacing;\n                    }\n                    this.visuals.label_text.set_value(ctx);\n                    ctx.fillText(label, x2 + label_standoff, y1 + this.max_label_height / 2);\n                    ref1 = item.renderers;\n                    for (k = 0, len2 = ref1.length; k < len2; k++) {\n                        r = ref1[k];\n                        view = this.plot_view.renderer_views[r.id];\n                        view.draw_legend(ctx, x1, x2, y1, y2, field, label);\n                    }\n                    if (!active) {\n                        if (vertical) {\n                            _a = [\n                                bbox.width - 2 * legend_padding,\n                                this.max_label_height\n                            ], w = _a[0], h = _a[1];\n                        } else {\n                            _b = [\n                                this.text_widths[label] + glyph_width + label_standoff,\n                                this.max_label_height\n                            ], w = _b[0], h = _b[1];\n                        }\n                        ctx.beginPath();\n                        ctx.rect(x1, y1, w, h);\n                        this.visuals.inactive_fill.set_value(ctx);\n                        ctx.fill();\n                    }\n                }\n            }\n            return null;\n            var _a, _b;\n        };\n        LegendView.prototype._get_size = function () {\n            var bbox, side;\n            bbox = this.compute_legend_bbox();\n            side = this.model.panel.side;\n            if (side === 'above' || side === 'below') {\n                return bbox.height + 2 * this.model.margin;\n            }\n            if (side === 'left' || side === 'right') {\n                return bbox.width + 2 * this.model.margin;\n            }\n        };\n        return LegendView;\n    }(annotation_1.AnnotationView);\n    exports.LegendView = LegendView;\n    ;\n    LegendView.getters({\n        legend_padding: function () {\n            if (this.visuals.border_line.line_color.value() != null) {\n                return this.model.padding;\n            } else {\n                return 0;\n            }\n        }\n    });\n    var Legend = function (_super) {\n        tslib_1.__extends(Legend, _super);\n        function Legend() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Legend.prototype.cursor = function () {\n            if (this.click_policy === 'none') {\n                return null;\n            } else {\n                return 'pointer';\n            }\n        };\n        Legend.prototype.get_legend_names = function () {\n            var i, item, labels, legend_names, len, ref;\n            legend_names = [];\n            ref = this.items;\n            for (i = 0, len = ref.length; i < len; i++) {\n                item = ref[i];\n                labels = item.get_labels_list_from_label_prop();\n                legend_names = legend_names.concat(labels);\n            }\n            return legend_names;\n        };\n        return Legend;\n    }(annotation_1.Annotation);\n    exports.Legend = Legend;\n    ;\n    Legend.prototype.default_view = LegendView;\n    Legend.prototype.type = 'Legend';\n    Legend.mixins([\n        'text:label_',\n        'fill:inactive_',\n        'line:border_',\n        'fill:background_'\n    ]);\n    Legend.define({\n        orientation: [\n            p.Orientation,\n            'vertical'\n        ],\n        location: [\n            p.Any,\n            'top_right'    // TODO (bev)\n        ],\n        label_standoff: [\n            p.Number,\n            5\n        ],\n        glyph_height: [\n            p.Number,\n            20\n        ],\n        glyph_width: [\n            p.Number,\n            20\n        ],\n        label_height: [\n            p.Number,\n            20\n        ],\n        label_width: [\n            p.Number,\n            20\n        ],\n        margin: [\n            p.Number,\n            10\n        ],\n        padding: [\n            p.Number,\n            10\n        ],\n        spacing: [\n            p.Number,\n            3\n        ],\n        items: [\n            p.Array,\n            []\n        ],\n        click_policy: [\n            p.Any,\n            'none'\n        ]\n    });\n    Legend.override({\n        border_line_color: '#e5e5e5',\n        border_line_alpha: 0.5,\n        border_line_width: 1,\n        background_fill_color: '#ffffff',\n        background_fill_alpha: 0.95,\n        inactive_fill_color: 'white',\n        inactive_fill_alpha: 0.7,\n        label_text_font_size: '10pt',\n        label_text_baseline: 'middle'\n    });    \n}","/*models/annotations/legend_item*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var indexOf = [].indexOf, boundMethodCheck = function (instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n                throw new Error('Bound instance method accessed before binding');\n            }\n        };\n    var model_1 = require(50    /* ../../model */);\n    var p = require(15    /* core/properties */);\n    var logging_1 = require(14    /* core/logging */);\n    var array_1 = require(22    /* core/util/array */);\n    var column_data_source_1 = require(173    /* ../../models/sources/column_data_source */);\n    var LegendItem = function (_super) {\n        tslib_1.__extends(LegendItem, _super);\n        function LegendItem() {\n            var _this = _super.apply(this, arguments) || this;\n            _this.get_field_from_label_prop = _this.get_field_from_label_prop.bind(_this);\n            _this.get_labels_list_from_label_prop = _this.get_labels_list_from_label_prop.bind(_this);\n            return _this;\n        }\n        LegendItem.prototype._check_data_sources_on_renderers = function () {\n            var field, i, len, r, ref, source;\n            field = this.get_field_from_label_prop();\n            if (field != null) {\n                if (this.renderers.length < 1) {\n                    return false;\n                }\n                source = this.renderers[0].data_source;\n                if (source != null) {\n                    ref = this.renderers;\n                    for (i = 0, len = ref.length; i < len; i++) {\n                        r = ref[i];\n                        if (r.data_source !== source) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        };\n        LegendItem.prototype._check_field_label_on_data_source = function () {\n            var field, source;\n            field = this.get_field_from_label_prop();\n            if (field != null) {\n                if (this.renderers.length < 1) {\n                    return false;\n                }\n                source = this.renderers[0].data_source;\n                if (source != null && indexOf.call(source.columns(), field) < 0) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        LegendItem.prototype.initialize = function (attrs, options) {\n            var data_source_validation, field_validation;\n            _super.prototype.initialize.call(this, attrs, options);\n            // Validate data_sources match\n            data_source_validation = this._check_data_sources_on_renderers();\n            if (!data_source_validation) {\n                logging_1.logger.error('Non matching data sources on legend item renderers');\n            }\n            // Validate label in data_source\n            field_validation = this._check_field_label_on_data_source();\n            if (!field_validation) {\n                return logging_1.logger.error('Bad column name on label: ' + this.label);\n            }\n        };\n        LegendItem.prototype.get_field_from_label_prop = function () {\n            boundMethodCheck(this, LegendItem);\n            if (this.label != null && this.label.field != null) {\n                return this.label.field;\n            }\n        };\n        LegendItem.prototype.get_labels_list_from_label_prop = function () {\n            var data, field, source;\n            boundMethodCheck(this, LegendItem);\n            // Always return a list of the labels\n            if (this.label != null && this.label.value != null) {\n                return [this.label.value];\n            }\n            field = this.get_field_from_label_prop();\n            if (field != null) {\n                if (this.renderers[0] && this.renderers[0].data_source != null) {\n                    source = this.renderers[0].data_source;\n                } else {\n                    return ['No source found'];\n                }\n                if (source instanceof column_data_source_1.ColumnDataSource) {\n                    data = source.get_column(field);\n                    if (data != null) {\n                        return array_1.uniq(data);\n                    } else {\n                        return ['Invalid field'];\n                    }\n                }\n            }\n            return [];\n        };\n        return LegendItem;\n    }(model_1.Model);\n    exports.LegendItem = LegendItem;\n    ;\n    LegendItem.prototype.type = 'LegendItem';\n    LegendItem.define({\n        label: [\n            p.StringSpec,\n            null\n        ],\n        renderers: [\n            p.Array,\n            []\n        ]\n    });    \n}","/*models/annotations/poly_annotation*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var annotation_1 = require(51    /* ./annotation */);\n    var signaling_1 = require(20    /* core/signaling */);\n    var p = require(15    /* core/properties */);\n    exports.PolyAnnotationView = function (_super) {\n        tslib_1.__extends(PolyAnnotationView, _super);\n        function PolyAnnotationView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PolyAnnotationView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            // need to respond to either normal BB change events or silent\n            // \"data only updates\" that tools might want to use\n            this.connect(this.model.change, function () {\n                return _this.plot_view.request_render();\n            });\n            return this.connect(this.model.data_update, function () {\n                return _this.plot_view.request_render();\n            });\n        };\n        PolyAnnotationView.prototype.render = function (ctx) {\n            var frame, i, j, ref, sx, sy, xs, ys;\n            if (!this.model.visible) {\n                return;\n            }\n            xs = this.model.xs;\n            ys = this.model.ys;\n            if (xs.length !== ys.length) {\n                return null;\n            }\n            if (xs.length < 3 || ys.length < 3) {\n                return null;\n            }\n            frame = this.plot_view.frame;\n            ctx = this.plot_view.canvas_view.ctx;\n            for (i = j = 0, ref = xs.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                if (this.model.xs_units === 'screen') {\n                    sx = this.model.screen ? xs[i] : frame.xview.compute(xs[i]);\n                }\n                if (this.model.ys_units === 'screen') {\n                    sy = this.model.screen ? ys[i] : frame.yview.compute(ys[i]);\n                }\n                if (i === 0) {\n                    ctx.beginPath();\n                    ctx.moveTo(sx, sy);\n                } else {\n                    ctx.lineTo(sx, sy);\n                }\n            }\n            ctx.closePath();\n            if (this.visuals.line.doit) {\n                this.visuals.line.set_value(ctx);\n                ctx.stroke();\n            }\n            if (this.visuals.fill.doit) {\n                this.visuals.fill.set_value(ctx);\n                return ctx.fill();\n            }\n        };\n        return PolyAnnotationView;\n    }(annotation_1.AnnotationView);\n    var PolyAnnotation = function (_super) {\n        tslib_1.__extends(PolyAnnotation, _super);\n        function PolyAnnotation() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PolyAnnotation.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            return this.data_update = new signaling_1.Signal(this, 'data_update');\n        };\n        PolyAnnotation.prototype.update = function (_a) {\n            var xs = _a.xs, ys = _a.ys;\n            this.setv({\n                xs: xs,\n                ys: ys,\n                screen: true\n            }, { silent: true });\n            return this.data_update.emit();\n        };\n        return PolyAnnotation;\n    }(annotation_1.Annotation);\n    exports.PolyAnnotation = PolyAnnotation;\n    ;\n    PolyAnnotation.prototype.default_view = exports.PolyAnnotationView;\n    PolyAnnotation.prototype.type = 'PolyAnnotation';\n    PolyAnnotation.mixins([\n        'line',\n        'fill'\n    ]);\n    PolyAnnotation.define({\n        xs: [\n            p.Array,\n            []\n        ],\n        xs_units: [\n            p.SpatialUnits,\n            'data'\n        ],\n        ys: [\n            p.Array,\n            []\n        ],\n        ys_units: [\n            p.SpatialUnits,\n            'data'\n        ],\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ]\n    });\n    PolyAnnotation.internal({\n        screen: [\n            p.Boolean,\n            false\n        ]\n    });\n    PolyAnnotation.override({\n        fill_color: '#fff9ba',\n        fill_alpha: 0.4,\n        line_color: '#cccccc',\n        line_alpha: 0.3\n    });    \n}","/*models/annotations/span*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var annotation_1 = require(51    /* ./annotation */);\n    var dom_1 = require(5    /* core/dom */);\n    var p = require(15    /* core/properties */);\n    exports.SpanView = function (_super) {\n        tslib_1.__extends(SpanView, _super);\n        function SpanView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SpanView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this.plot_view.canvas_overlays.appendChild(this.el);\n            this.el.style.position = 'absolute';\n            return dom_1.hide(this.el);\n        };\n        SpanView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            if (this.model.for_hover) {\n                return this.connect(this.model.properties.computed_location.change, function () {\n                    return this._draw_span();\n                });\n            } else {\n                if (this.model.render_mode === 'canvas') {\n                    this.connect(this.model.change, function () {\n                        return _this.plot_view.request_render();\n                    });\n                    return this.connect(this.model.properties.location.change, function () {\n                        return _this.plot_view.request_render();\n                    });\n                } else {\n                    this.connect(this.model.change, function () {\n                        return this.render();\n                    });\n                    return this.connect(this.model.properties.location.change, function () {\n                        return this._draw_span();\n                    });\n                }\n            }\n        };\n        SpanView.prototype.render = function () {\n            if (!this.model.visible && this.model.render_mode === 'css') {\n                dom_1.hide(this.el);\n            }\n            if (!this.model.visible) {\n                return;\n            }\n            return this._draw_span();\n        };\n        SpanView.prototype._draw_span = function () {\n            var _this = this;\n            var _calc_dim, ctx, frame, height, loc, sleft, stop, width, xscale, yscale;\n            loc = this.model.for_hover ? this.model.computed_location : this.model.location;\n            if (loc == null) {\n                dom_1.hide(this.el);\n                return;\n            }\n            frame = this.plot_view.frame;\n            xscale = frame.xscales[this.model.x_range_name];\n            yscale = frame.yscales[this.model.y_range_name];\n            _calc_dim = function (scale, view) {\n                if (_this.model.for_hover) {\n                    return _this.model.computed_location;\n                } else {\n                    if (_this.model.location_units === 'data') {\n                        return scale.compute(loc);\n                    } else {\n                        return view.compute(loc);\n                    }\n                }\n            };\n            if (this.model.dimension === 'width') {\n                stop = _calc_dim(yscale, frame.yview);\n                sleft = frame._left.value;\n                width = frame._width.value;\n                height = this.model.properties.line_width.value();\n            } else {\n                stop = frame._top.value;\n                sleft = _calc_dim(xscale, frame.xview);\n                width = this.model.properties.line_width.value();\n                height = frame._height.value;\n            }\n            if (this.model.render_mode === 'css') {\n                this.el.style.top = stop + 'px';\n                this.el.style.left = sleft + 'px';\n                this.el.style.width = width + 'px';\n                this.el.style.height = height + 'px';\n                this.el.style.zIndex = 1000;\n                this.el.style.backgroundColor = this.model.properties.line_color.value();\n                this.el.style.opacity = this.model.properties.line_alpha.value();\n                return dom_1.show(this.el);\n            } else if (this.model.render_mode === 'canvas') {\n                ctx = this.plot_view.canvas_view.ctx;\n                ctx.save();\n                ctx.beginPath();\n                this.visuals.line.set_value(ctx);\n                ctx.moveTo(sleft, stop);\n                if (this.model.dimension === 'width') {\n                    ctx.lineTo(sleft + width, stop);\n                } else {\n                    ctx.lineTo(sleft, stop + height);\n                }\n                ctx.stroke();\n                return ctx.restore();\n            }\n        };\n        return SpanView;\n    }(annotation_1.AnnotationView);\n    var Span = function (_super) {\n        tslib_1.__extends(Span, _super);\n        function Span() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Span;\n    }(annotation_1.Annotation);\n    exports.Span = Span;\n    ;\n    Span.prototype.default_view = exports.SpanView;\n    Span.prototype.type = 'Span';\n    Span.mixins(['line']);\n    Span.define({\n        render_mode: [\n            p.RenderMode,\n            'canvas'\n        ],\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ],\n        location: [\n            p.Number,\n            null\n        ],\n        location_units: [\n            p.SpatialUnits,\n            'data'\n        ],\n        dimension: [\n            p.Dimension,\n            'width'\n        ]\n    });\n    Span.override({ line_color: 'black' });\n    Span.internal({\n        for_hover: [\n            p.Boolean,\n            false\n        ],\n        computed_location: [\n            p.Number,\n            null    // absolute screen coordinate\n        ]\n    });    \n}","/*models/annotations/text_annotation*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var annotation_1 = require(51    /* ./annotation */);\n    var dom_1 = require(5    /* core/dom */);\n    var types_1 = require(42    /* core/util/types */);\n    var text_1 = require(40    /* core/util/text */);\n    exports.TextAnnotationView = function (_super) {\n        tslib_1.__extends(TextAnnotationView, _super);\n        function TextAnnotationView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TextAnnotationView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            if (this.model.render_mode === 'css') {\n                this.el.classList.add('bk-annotation');\n                return this.plot_view.canvas_overlays.appendChild(this.el);\n            }\n        };\n        TextAnnotationView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            if (this.model.render_mode === 'css') {\n                // dispatch CSS update immediately\n                return this.connect(this.model.change, function () {\n                    return this.render();\n                });\n            } else {\n                return this.connect(this.model.change, function () {\n                    return _this.plot_view.request_render();\n                });\n            }\n        };\n        TextAnnotationView.prototype._calculate_text_dimensions = function (ctx, text) {\n            var height, width;\n            width = ctx.measureText(text).width;\n            height = text_1.get_text_height(this.visuals.text.font_value()).height;\n            return [\n                width,\n                height\n            ];\n        };\n        TextAnnotationView.prototype._calculate_bounding_box_dimensions = function (ctx, text) {\n            var height, width, x_offset, y_offset;\n            _a = this._calculate_text_dimensions(ctx, text), width = _a[0], height = _a[1];\n            switch (ctx.textAlign) {\n            case 'left':\n                x_offset = 0;\n                break;\n            case 'center':\n                x_offset = -width / 2;\n                break;\n            case 'right':\n                x_offset = -width;\n            }\n            // guestimated from https://www.w3.org/TR/2dcontext/#dom-context-2d-textbaseline\n            switch (ctx.textBaseline) {\n            case 'top':\n                y_offset = 0;\n                break;\n            case 'middle':\n                y_offset = -0.5 * height;\n                break;\n            case 'bottom':\n                y_offset = -1 * height;\n                break;\n            case 'alphabetic':\n                y_offset = -0.8 * height;\n                break;\n            case 'hanging':\n                y_offset = -0.17 * height;\n                break;\n            case 'ideographic':\n                y_offset = -0.83 * height;\n            }\n            return [\n                x_offset,\n                y_offset,\n                width,\n                height\n            ];\n            var _a;\n        };\n        TextAnnotationView.prototype._get_size = function () {\n            var ctx;\n            ctx = this.plot_view.canvas_view.ctx;\n            this.visuals.text.set_value(ctx);\n            return ctx.measureText(this.model.text).ascent;\n        };\n        TextAnnotationView.prototype.render = function () {\n            return null;\n        };\n        TextAnnotationView.prototype._canvas_text = function (ctx, text, sx, sy, angle) {\n            var bbox_dims;\n            this.visuals.text.set_value(ctx);\n            bbox_dims = this._calculate_bounding_box_dimensions(ctx, text);\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(sx, sy);\n            if (angle) {\n                ctx.rotate(angle);\n            }\n            ctx.rect(bbox_dims[0], bbox_dims[1], bbox_dims[2], bbox_dims[3]);\n            if (this.visuals.background_fill.doit) {\n                this.visuals.background_fill.set_value(ctx);\n                ctx.fill();\n            }\n            if (this.visuals.border_line.doit) {\n                this.visuals.border_line.set_value(ctx);\n                ctx.stroke();\n            }\n            if (this.visuals.text.doit) {\n                this.visuals.text.set_value(ctx);\n                ctx.fillText(text, 0, 0);\n            }\n            return ctx.restore();\n        };\n        TextAnnotationView.prototype._css_text = function (ctx, text, sx, sy, angle) {\n            var bbox_dims, ld, line_dash;\n            dom_1.hide(this.el);\n            this.visuals.text.set_value(ctx);\n            bbox_dims = this._calculate_bounding_box_dimensions(ctx, text);\n            // attempt to support vector string-style (\"8 4 8\") line dashing for css mode\n            ld = this.visuals.border_line.line_dash.value();\n            if (types_1.isArray(ld)) {\n                if (ld.length < 2) {\n                    line_dash = 'solid';\n                } else {\n                    line_dash = 'dashed';\n                }\n            }\n            if (types_1.isString(ld)) {\n                line_dash = ld;\n            }\n            this.visuals.border_line.set_value(ctx);\n            this.visuals.background_fill.set_value(ctx);\n            this.el.style.position = 'absolute';\n            this.el.style.left = sx + bbox_dims[0] + 'px';\n            this.el.style.top = sy + bbox_dims[1] + 'px';\n            this.el.style.color = '' + this.visuals.text.text_color.value();\n            this.el.style.opacity = '' + this.visuals.text.text_alpha.value();\n            this.el.style.font = '' + this.visuals.text.font_value();\n            this.el.style.lineHeight = 'normal';\n            // needed to prevent ipynb css override\n            if (angle) {\n                this.el.style.transform = 'rotate(' + angle + 'rad)';\n            }\n            if (this.visuals.background_fill.doit) {\n                this.el.style.backgroundColor = '' + this.visuals.background_fill.color_value();\n            }\n            if (this.visuals.border_line.doit) {\n                this.el.style.borderStyle = '' + line_dash;\n                this.el.style.borderWidth = this.visuals.border_line.line_width.value() + 'px';\n                this.el.style.borderColor = '' + this.visuals.border_line.color_value();\n            }\n            this.el.textContent = text;\n            return dom_1.show(this.el);\n        };\n        return TextAnnotationView;\n    }(annotation_1.AnnotationView);\n    var TextAnnotation = function (_super) {\n        tslib_1.__extends(TextAnnotation, _super);\n        function TextAnnotation() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return TextAnnotation;\n    }(annotation_1.Annotation);\n    exports.TextAnnotation = TextAnnotation;\n    ;\n    TextAnnotation.prototype.type = 'TextAnnotation';\n    TextAnnotation.prototype.default_view = exports.TextAnnotationView;    \n}","/*models/annotations/title*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var text_annotation_1 = require(64    /* ./text_annotation */);\n    var dom_1 = require(5    /* core/dom */);\n    var p = require(15    /* core/properties */);\n    var Visuals = require(46    /* core/visuals */);\n    exports.TitleView = function (_super) {\n        tslib_1.__extends(TitleView, _super);\n        function TitleView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TitleView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this.visuals.text = new Visuals.Text(this.model);\n        };\n        TitleView.prototype._get_location = function () {\n            var hmargin, panel, sx, sy, vmargin;\n            panel = this.model.panel;\n            hmargin = this.model.offset;\n            vmargin = 5;\n            switch (panel.side) {\n            case 'above':\n            case 'below':\n                switch (this.model.vertical_align) {\n                case 'top':\n                    sy = panel._top.value + vmargin;\n                    break;\n                case 'middle':\n                    sy = panel._vcenter.value;\n                    break;\n                case 'bottom':\n                    sy = panel._bottom.value - vmargin;\n                }\n                switch (this.model.align) {\n                case 'left':\n                    sx = panel._left.value + hmargin;\n                    break;\n                case 'center':\n                    sx = panel._hcenter.value;\n                    break;\n                case 'right':\n                    sx = panel._right.value - hmargin;\n                }\n                break;\n            case 'left':\n                switch (this.model.vertical_align) {\n                case 'top':\n                    sx = panel._left.value - vmargin;\n                    break;\n                case 'middle':\n                    sx = panel._hcenter.value;\n                    break;\n                case 'bottom':\n                    sx = panel._right.value + vmargin;\n                }\n                switch (this.model.align) {\n                case 'left':\n                    sy = panel._bottom.value - hmargin;\n                    break;\n                case 'center':\n                    sy = panel._vcenter.value;\n                    break;\n                case 'right':\n                    sy = panel._top.value + hmargin;\n                }\n                break;\n            case 'right':\n                switch (this.model.vertical_align) {\n                case 'top':\n                    sx = panel._right.value - vmargin;\n                    break;\n                case 'middle':\n                    sx = panel._hcenter.value;\n                    break;\n                case 'bottom':\n                    sx = panel._left.value + vmargin;\n                }\n                switch (this.model.align) {\n                case 'left':\n                    sy = panel._top.value + hmargin;\n                    break;\n                case 'center':\n                    sy = panel._vcenter.value;\n                    break;\n                case 'right':\n                    sy = panel._bottom.value - hmargin;\n                }\n            }\n            return [\n                sx,\n                sy\n            ];\n        };\n        TitleView.prototype.render = function () {\n            var angle, draw, sx, sy, text;\n            if (!this.model.visible) {\n                if (this.model.render_mode === 'css') {\n                    dom_1.hide(this.el);\n                }\n                return;\n            }\n            text = this.model.text;\n            if (text == null || text.length === 0) {\n                return;\n            }\n            this.model.text_baseline = this.model.vertical_align;\n            this.model.text_align = this.model.align;\n            _a = this._get_location(), sx = _a[0], sy = _a[1];\n            angle = this.model.panel.get_label_angle_heuristic('parallel');\n            draw = this.model.render_mode === 'canvas' ? this._canvas_text.bind(this) : this._css_text.bind(this);\n            return draw(this.plot_view.canvas_view.ctx, text, sx, sy, angle);\n            var _a;\n        };\n        TitleView.prototype._get_size = function () {\n            var ctx, text;\n            text = this.model.text;\n            if (text == null || text.length === 0) {\n                return 0;\n            } else {\n                ctx = this.plot_view.canvas_view.ctx;\n                this.visuals.text.set_value(ctx);\n                return ctx.measureText(text).ascent + 10;\n            }\n        };\n        return TitleView;\n    }(text_annotation_1.TextAnnotationView);\n    var Title = function (_super) {\n        tslib_1.__extends(Title, _super);\n        function Title() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Title;\n    }(text_annotation_1.TextAnnotation);\n    exports.Title = Title;\n    ;\n    Title.prototype.default_view = exports.TitleView;\n    Title.prototype.type = 'Title';\n    Title.mixins([\n        'line:border_',\n        'fill:background_'\n    ]);\n    Title.define({\n        text: [p.String],\n        text_font: [\n            p.Font,\n            'helvetica'\n        ],\n        text_font_size: [\n            p.FontSizeSpec,\n            '10pt'\n        ],\n        text_font_style: [\n            p.FontStyle,\n            'bold'\n        ],\n        text_color: [\n            p.ColorSpec,\n            '#444444'\n        ],\n        text_alpha: [\n            p.NumberSpec,\n            1\n        ],\n        vertical_align: [\n            p.VerticalAlign,\n            'bottom'\n        ],\n        align: [\n            p.TextAlign,\n            'left'\n        ],\n        offset: [\n            p.Number,\n            0\n        ],\n        render_mode: [\n            p.RenderMode,\n            'canvas'\n        ]\n    });\n    Title.override({\n        background_fill_color: null,\n        border_line_color: null\n    });\n    Title.internal({\n        text_align: [\n            p.TextAlign,\n            'left'\n        ],\n        text_baseline: [\n            p.TextBaseline,\n            'bottom'\n        ]\n    });    \n}","/*models/annotations/toolbar_panel*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var annotation_1 = require(51    /* ./annotation */);\n    var build_views_1 = require(4    /* core/build_views */);\n    var dom_1 = require(5    /* core/dom */);\n    var p = require(15    /* core/properties */);\n    exports.ToolbarPanelView = function (_super) {\n        tslib_1.__extends(ToolbarPanelView, _super);\n        function ToolbarPanelView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ToolbarPanelView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this.plot_view.canvas_events.appendChild(this.el);\n            this._toolbar_views = {};\n            return build_views_1.build_views(this._toolbar_views, [this.model.toolbar], { parent: this });\n        };\n        ToolbarPanelView.prototype.remove = function () {\n            build_views_1.remove_views(this._toolbar_views);\n            return _super.prototype.remove.call(this);\n        };\n        ToolbarPanelView.prototype.render = function () {\n            var panel, toolbar;\n            _super.prototype.render.call(this);\n            if (!this.model.visible) {\n                dom_1.hide(this.el);\n                return;\n            }\n            panel = this.model.panel;\n            this.el.style.position = 'absolute';\n            this.el.style.left = panel._left.value + 'px';\n            this.el.style.top = panel._top.value + 'px';\n            this.el.style.width = panel._width.value + 'px';\n            this.el.style.height = panel._height.value + 'px';\n            this.el.style.overflow = 'hidden';\n            toolbar = this._toolbar_views[this.model.toolbar.id];\n            toolbar.render();\n            dom_1.empty(this.el);\n            this.el.appendChild(toolbar.el);\n            return dom_1.show(this.el);\n        };\n        ToolbarPanelView.prototype._get_size = function () {\n            return 30;\n        };\n        return ToolbarPanelView;\n    }(annotation_1.AnnotationView);\n    var ToolbarPanel = function (_super) {\n        tslib_1.__extends(ToolbarPanel, _super);\n        function ToolbarPanel() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ToolbarPanel;\n    }(annotation_1.Annotation);\n    exports.ToolbarPanel = ToolbarPanel;\n    ;\n    ToolbarPanel.prototype.type = 'ToolbarPanel';\n    ToolbarPanel.prototype.default_view = exports.ToolbarPanelView;\n    ToolbarPanel.define({ toolbar: [p.Instance] });    \n}","/*models/annotations/tooltip*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var annotation_1 = require(51    /* ./annotation */);\n    var dom_1 = require(5    /* core/dom */);\n    var p = require(15    /* core/properties */);\n    var TooltipView = function (_super) {\n        tslib_1.__extends(TooltipView, _super);\n        function TooltipView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TooltipView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            // TODO (bev) really probably need multiple divs\n            this.plot_view.canvas_overlays.appendChild(this.el);\n            this.el.style.zIndex = 1010;\n            return dom_1.hide(this.el);\n        };\n        TooltipView.prototype.connect_signals = function () {\n            _super.prototype.connect_signals.call(this);\n            return this.connect(this.model.properties.data.change, function () {\n                return this._draw_tips();\n            });\n        };\n        TooltipView.prototype.render = function () {\n            if (!this.model.visible) {\n                return;\n            }\n            return this._draw_tips();\n        };\n        TooltipView.prototype._draw_tips = function () {\n            var arrow_size, attachment, content, data, frame, i, left, len, side, sx, sy, tip, top, val;\n            data = this.model.data;\n            dom_1.empty(this.el);\n            dom_1.hide(this.el);\n            if (this.model.custom) {\n                this.el.classList.add('bk-tooltip-custom');\n            } else {\n                this.el.classList.remove('bk-tooltip-custom');\n            }\n            if (data.length === 0) {\n                return;\n            }\n            frame = this.plot_view.frame;\n            for (i = 0, len = data.length; i < len; i++) {\n                val = data[i];\n                sx = val[0], sy = val[1], content = val[2];\n                if (this.model.inner_only && !frame.bbox.contains(sx, sy)) {\n                    continue;\n                }\n                tip = dom_1.div({}, content);\n                this.el.appendChild(tip);\n            }\n            attachment = this.model.attachment;\n            switch (attachment) {\n            case 'horizontal':\n                side = sx < frame._hcenter.value ? 'right' : 'left';\n                break;\n            case 'vertical':\n                side = sy < frame._vcenter.value ? 'below' : 'above';\n                break;\n            default:\n                side = attachment;\n            }\n            this.el.classList.remove('bk-right');\n            this.el.classList.remove('bk-left');\n            this.el.classList.remove('bk-above');\n            this.el.classList.remove('bk-below');\n            arrow_size = 10;\n            // XXX: keep in sync with less\n            dom_1.show(this.el);\n            // XXX: {offset,client}Width() gives 0 when display=\"none\"\n            switch (side) {\n            case 'right':\n                this.el.classList.add('bk-left');\n                left = sx + (this.el.offsetWidth - this.el.clientWidth) + arrow_size;\n                top = sy - this.el.offsetHeight / 2;\n                break;\n            case 'left':\n                this.el.classList.add('bk-right');\n                left = sx - this.el.offsetWidth - arrow_size;\n                top = sy - this.el.offsetHeight / 2;\n                break;\n            case 'above':\n                this.el.classList.add('bk-above');\n                top = sy + (this.el.offsetHeight - this.el.clientHeight) + arrow_size;\n                left = Math.round(sx - this.el.offsetWidth / 2);\n                break;\n            case 'below':\n                this.el.classList.add('bk-below');\n                top = sy - this.el.offsetHeight - arrow_size;\n                left = Math.round(sx - this.el.offsetWidth / 2);\n            }\n            if (this.model.show_arrow) {\n                this.el.classList.add('bk-tooltip-arrow');\n            }\n            // TODO (bev) this is not currently bulletproof. If there are\n            // two hits, not colocated and one is off the screen, that can\n            // be problematic\n            if (this.el.childNodes.length > 0) {\n                this.el.style.top = top + 'px';\n                return this.el.style.left = left + 'px';\n            } else {\n                return dom_1.hide(this.el);\n            }\n        };\n        return TooltipView;\n    }(annotation_1.AnnotationView);\n    exports.TooltipView = TooltipView;\n    ;\n    TooltipView.prototype.className = 'bk-tooltip';\n    var Tooltip = function (_super) {\n        tslib_1.__extends(Tooltip, _super);\n        function Tooltip() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Tooltip.prototype.clear = function () {\n            return this.data = [];\n        };\n        Tooltip.prototype.add = function (sx, sy, content) {\n            var data;\n            data = this.data;\n            data.push([\n                sx,\n                sy,\n                content\n            ]);\n            this.data = data;\n            // TODO (bev) not sure why this is now necessary\n            return this.properties.data.change.emit();\n        };\n        return Tooltip;\n    }(annotation_1.Annotation);\n    exports.Tooltip = Tooltip;\n    ;\n    Tooltip.prototype.default_view = TooltipView;\n    Tooltip.prototype.type = 'Tooltip';\n    Tooltip.define({\n        attachment: [\n            p.String,\n            'horizontal'    // TODO enum: \"horizontal\" | \"vertical\" | \"left\" | \"right\" | \"above\" | \"below\"\n        ],\n        inner_only: [\n            p.Bool,\n            true\n        ],\n        show_arrow: [\n            p.Bool,\n            true\n        ]\n    });\n    Tooltip.override({ level: 'overlay' });\n    Tooltip.internal({\n        data: [\n            p.Any,\n            []\n        ],\n        custom: [p.Any]\n    });    \n}","/*models/annotations/whisker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var annotation_1 = require(51    /* ./annotation */);\n    var column_data_source_1 = require(173    /* ../sources/column_data_source */);\n    var arrow_head_1 = require(53    /* ./arrow_head */);\n    var p = require(15    /* core/properties */);\n    exports.WhiskerView = function (_super) {\n        tslib_1.__extends(WhiskerView, _super);\n        function WhiskerView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        WhiskerView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this.set_data(this.model.source);\n        };\n        WhiskerView.prototype.connect_signals = function () {\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.source.streaming, function () {\n                return this.set_data(this.model.source);\n            });\n            this.connect(this.model.source.patching, function () {\n                return this.set_data(this.model.source);\n            });\n            return this.connect(this.model.source.change, function () {\n                return this.set_data(this.model.source);\n            });\n        };\n        WhiskerView.prototype.set_data = function (source) {\n            _super.prototype.set_data.call(this, source);\n            this.visuals.warm_cache(source);\n            return this.plot_view.request_render();\n        };\n        WhiskerView.prototype._map_data = function () {\n            var _base_sx, _lower, _lower_sx, _upper, _upper_sx, base_scale, base_view, dim, frame, i, j, limit_scale, limit_view, xscale, yscale;\n            frame = this.plot_model.frame;\n            dim = this.model.dimension;\n            xscale = frame.xscales[this.model.x_range_name];\n            yscale = frame.yscales[this.model.y_range_name];\n            limit_scale = dim === 'height' ? yscale : xscale;\n            base_scale = dim === 'height' ? xscale : yscale;\n            limit_view = dim === 'height' ? frame.yview : frame.xview;\n            base_view = dim === 'height' ? frame.xview : frame.yview;\n            if (this.model.lower.units === 'data') {\n                _lower_sx = limit_scale.v_compute(this._lower);\n            } else {\n                _lower_sx = limit_view.v_compute(this._lower);\n            }\n            if (this.model.upper.units === 'data') {\n                _upper_sx = limit_scale.v_compute(this._upper);\n            } else {\n                _upper_sx = limit_view.v_compute(this._upper);\n            }\n            if (this.model.base.units === 'data') {\n                _base_sx = base_scale.v_compute(this._base);\n            } else {\n                _base_sx = base_view.v_compute(this._base);\n            }\n            _a = dim === 'height' ? [\n                1,\n                0\n            ] : [\n                0,\n                1\n            ], i = _a[0], j = _a[1];\n            _lower = [\n                _lower_sx,\n                _base_sx\n            ];\n            _upper = [\n                _upper_sx,\n                _base_sx\n            ];\n            this._lower_sx = _lower[i];\n            this._lower_sy = _lower[j];\n            this._upper_sx = _upper[i];\n            return this._upper_sy = _upper[j];\n            var _a;\n        };\n        WhiskerView.prototype.render = function () {\n            var angle, ctx, i, k, l, m, ref, ref1, ref2, results;\n            if (!this.model.visible) {\n                return;\n            }\n            this._map_data();\n            ctx = this.plot_view.canvas_view.ctx;\n            if (this.visuals.line.doit) {\n                for (i = k = 0, ref = this._lower_sx.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                    this.visuals.line.set_vectorize(ctx, i);\n                    ctx.beginPath();\n                    ctx.moveTo(this._lower_sx[i], this._lower_sy[i]);\n                    ctx.lineTo(this._upper_sx[i], this._upper_sy[i]);\n                    ctx.stroke();\n                }\n            }\n            angle = this.model.dimension === 'height' ? 0 : Math.PI / 2;\n            if (this.model.lower_head != null) {\n                for (i = l = 0, ref1 = this._lower_sx.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n                    ctx.save();\n                    ctx.translate(this._lower_sx[i], this._lower_sy[i]);\n                    ctx.rotate(angle + Math.PI);\n                    this.model.lower_head.render(ctx, i);\n                    ctx.restore();\n                }\n            }\n            if (this.model.upper_head != null) {\n                results = [];\n                for (i = m = 0, ref2 = this._upper_sx.length; 0 <= ref2 ? m < ref2 : m > ref2; i = 0 <= ref2 ? ++m : --m) {\n                    ctx.save();\n                    ctx.translate(this._upper_sx[i], this._upper_sy[i]);\n                    ctx.rotate(angle);\n                    this.model.upper_head.render(ctx, i);\n                    results.push(ctx.restore());\n                }\n                return results;\n            }\n        };\n        return WhiskerView;\n    }(annotation_1.AnnotationView);\n    var Whisker = function (_super) {\n        tslib_1.__extends(Whisker, _super);\n        function Whisker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Whisker;\n    }(annotation_1.Annotation);\n    exports.Whisker = Whisker;\n    ;\n    Whisker.prototype.default_view = exports.WhiskerView;\n    Whisker.prototype.type = 'Whisker';\n    Whisker.mixins(['line']);\n    Whisker.define({\n        lower: [p.DistanceSpec],\n        lower_head: [\n            p.Instance,\n            function () {\n                return new arrow_head_1.TeeHead({\n                    level: 'underlay',\n                    size: 10\n                });\n            }\n        ],\n        upper: [p.DistanceSpec],\n        upper_head: [\n            p.Instance,\n            function () {\n                return new arrow_head_1.TeeHead({\n                    level: 'underlay',\n                    size: 10\n                });\n            }\n        ],\n        base: [p.DistanceSpec],\n        dimension: [\n            p.Dimension,\n            'height'\n        ],\n        source: [\n            p.Instance,\n            function () {\n                return new column_data_source_1.ColumnDataSource();\n            }\n        ],\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ]\n    });\n    Whisker.override({ level: 'underlay' });    \n}","/*models/axes/axis*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var side_panel_1 = require(12    /* core/layout/side_panel */);\n    var guide_renderer_1 = require(163    /* ../renderers/guide_renderer */);\n    var renderer_1 = require(165    /* ../renderers/renderer */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var types_1 = require(42    /* core/util/types */);\n    exports.AxisView = function (_super) {\n        tslib_1.__extends(AxisView, _super);\n        function AxisView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        AxisView.prototype.render = function () {\n            var ctx, extents, tick_coords;\n            if (this.model.visible === false) {\n                return;\n            }\n            extents = {\n                tick: this._tick_extent(),\n                tick_label: this._tick_label_extents(),\n                axis_label: this._axis_label_extent()\n            };\n            tick_coords = this.model.tick_coords;\n            ctx = this.plot_view.canvas_view.ctx;\n            ctx.save();\n            this._draw_rule(ctx, extents);\n            this._draw_major_ticks(ctx, extents, tick_coords);\n            this._draw_minor_ticks(ctx, extents, tick_coords);\n            this._draw_major_labels(ctx, extents, tick_coords);\n            this._draw_axis_label(ctx, extents, tick_coords);\n            if (this._render != null) {\n                this._render(ctx, extents, tick_coords);\n            }\n            return ctx.restore();\n        };\n        AxisView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            return this.connect(this.model.change, function () {\n                return _this.plot_view.request_render();\n            });\n        };\n        AxisView.prototype._get_size = function () {\n            return this._tick_extent() + this._tick_label_extent() + this._axis_label_extent();\n        };\n        AxisView.prototype.get_size = function () {\n            if (this.model.visible) {\n                return Math.round(this._get_size());\n            } else {\n                return 0;\n            }\n        };\n        // drawing sub functions -----------------------------------------------------\n        AxisView.prototype._draw_rule = function (ctx, extents, tick_coords) {\n            var i, k, nx, ny, ref, sx, sy, x, xoff, y, yoff;\n            if (!this.visuals.axis_line.doit) {\n                return;\n            }\n            _a = this.model.rule_coords, x = _a[0], y = _a[1];\n            _b = this.plot_view.map_to_screen(x, y, this.model.x_range_name, this.model.y_range_name), sx = _b[0], sy = _b[1];\n            _c = this.model.normals, nx = _c[0], ny = _c[1];\n            _d = this.model.offsets, xoff = _d[0], yoff = _d[1];\n            this.visuals.axis_line.set_value(ctx);\n            ctx.beginPath();\n            ctx.moveTo(Math.round(sx[0] + nx * xoff), Math.round(sy[0] + ny * yoff));\n            for (i = k = 1, ref = sx.length; 1 <= ref ? k < ref : k > ref; i = 1 <= ref ? ++k : --k) {\n                sx = Math.round(sx[i] + nx * xoff);\n                sy = Math.round(sy[i] + ny * yoff);\n                ctx.lineTo(sx, sy);\n            }\n            ctx.stroke();\n            var _a, _b, _c, _d;\n        };\n        AxisView.prototype._draw_major_ticks = function (ctx, extents, tick_coords) {\n            var tin, tout, visuals;\n            tin = this.model.major_tick_in;\n            tout = this.model.major_tick_out;\n            visuals = this.visuals.major_tick_line;\n            this._draw_ticks(ctx, tick_coords.major, tin, tout, visuals);\n        };\n        AxisView.prototype._draw_minor_ticks = function (ctx, extents, tick_coords) {\n            var tin, tout, visuals;\n            tin = this.model.minor_tick_in;\n            tout = this.model.minor_tick_out;\n            visuals = this.visuals.minor_tick_line;\n            this._draw_ticks(ctx, tick_coords.minor, tin, tout, visuals);\n        };\n        AxisView.prototype._draw_major_labels = function (ctx, extents, tick_coords) {\n            var coords, labels, orient, standoff, visuals;\n            coords = tick_coords.major;\n            labels = this.model.compute_labels(coords[this.model.dimension]);\n            orient = this.model.major_label_orientation;\n            standoff = extents.tick + this.model.major_label_standoff;\n            visuals = this.visuals.major_label_text;\n            this._draw_oriented_labels(ctx, labels, coords, orient, this.model.panel_side, standoff, visuals);\n        };\n        AxisView.prototype._draw_axis_label = function (ctx, extents, tick_coords) {\n            var coords, standoff, sx, sy, visuals;\n            if (this.model.axis_label == null || this.model.axis_label.length === 0) {\n                return;\n            }\n            switch (this.model.panel.side) {\n            case 'above':\n                sx = this.model.panel._hcenter.value;\n                sy = this.model.panel._bottom.value;\n                break;\n            case 'below':\n                sx = this.model.panel._hcenter.value;\n                sy = this.model.panel._top.value;\n                break;\n            case 'left':\n                sx = this.model.panel._right.value;\n                sy = this.model.panel._vcenter._value;\n                break;\n            case 'right':\n                sx = this.model.panel._left.value;\n                sy = this.model.panel._vcenter._value;\n            }\n            coords = [\n                [sx],\n                [sy]\n            ];\n            standoff = extents.tick + array_1.sum(extents.tick_label) + this.model.axis_label_standoff;\n            visuals = this.visuals.axis_label_text;\n            this._draw_oriented_labels(ctx, [this.model.axis_label], coords, 'parallel', this.model.panel_side, standoff, visuals, 'screen');\n        };\n        AxisView.prototype._draw_ticks = function (ctx, coords, tin, tout, visuals) {\n            var i, k, nx, nxin, nxout, ny, nyin, nyout, ref, sx0, sx1, sxs, sy0, sy1, sys, x, xoff, y, yoff;\n            if (!visuals.doit || coords.length === 0) {\n                return;\n            }\n            x = coords[0], y = coords[1];\n            _a = this.plot_view.map_to_screen(x, y, this.model.x_range_name, this.model.y_range_name), sxs = _a[0], sys = _a[1];\n            _b = this.model.normals, nx = _b[0], ny = _b[1];\n            _c = this.model.offsets, xoff = _c[0], yoff = _c[1];\n            _d = [\n                nx * (xoff - tin),\n                ny * (yoff - tin)\n            ], nxin = _d[0], nyin = _d[1];\n            _e = [\n                nx * (xoff + tout),\n                ny * (yoff + tout)\n            ], nxout = _e[0], nyout = _e[1];\n            visuals.set_value(ctx);\n            for (i = k = 0, ref = sxs.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                sx0 = Math.round(sxs[i] + nxout);\n                sy0 = Math.round(sys[i] + nyout);\n                sx1 = Math.round(sxs[i] + nxin);\n                sy1 = Math.round(sys[i] + nyin);\n                ctx.beginPath();\n                ctx.moveTo(sx0, sy0);\n                ctx.lineTo(sx1, sy1);\n                ctx.stroke();\n            }\n            var _a, _b, _c, _d, _e;\n        };\n        AxisView.prototype._draw_oriented_labels = function (ctx, labels, coords, orient, side, standoff, visuals, units) {\n            if (units === void 0) {\n                units = 'data';\n            }\n            var angle, dxs, dys, i, k, nx, nxd, ny, nyd, ref, sx, sxs, sy, sys, xoff, yoff;\n            if (!visuals.doit || labels.length === 0) {\n                return;\n            }\n            if (units === 'screen') {\n                sxs = coords[0], sys = coords[1];\n                _a = [\n                    0,\n                    0\n                ], xoff = _a[0], yoff = _a[1];\n            } else {\n                dxs = coords[0], dys = coords[1];\n                _b = this.plot_view.map_to_screen(dxs, dys, this.model.x_range_name, this.model.y_range_name), sxs = _b[0], sys = _b[1];\n                _c = this.model.offsets, xoff = _c[0], yoff = _c[1];\n            }\n            _d = this.model.normals, nx = _d[0], ny = _d[1];\n            nxd = nx * (xoff + standoff);\n            nyd = ny * (yoff + standoff);\n            visuals.set_value(ctx);\n            this.model.panel.apply_label_text_heuristics(ctx, orient);\n            if (types_1.isString(orient)) {\n                angle = this.model.panel.get_label_angle_heuristic(orient);\n            } else {\n                angle = -orient;\n            }\n            for (i = k = 0, ref = sxs.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                sx = Math.round(sxs[i] + nxd);\n                sy = Math.round(sys[i] + nyd);\n                ctx.translate(sx, sy);\n                ctx.rotate(angle);\n                ctx.fillText(labels[i], 0, 0);\n                ctx.rotate(-angle);\n                ctx.translate(-sx, -sy);\n            }\n            var _a, _b, _c, _d;\n        };\n        // extents sub functions -----------------------------------------------------\n        AxisView.prototype._axis_label_extent = function () {\n            var standoff, visuals;\n            if (this.model.axis_label == null || this.model.axis_label === '') {\n                return 0;\n            }\n            standoff = this.model.axis_label_standoff;\n            visuals = this.visuals.axis_label_text;\n            return this._oriented_labels_extent([this.model.axis_label], 'parallel', this.model.panel_side, standoff, visuals);\n        };\n        AxisView.prototype._tick_extent = function () {\n            return this.model.major_tick_out;\n        };\n        AxisView.prototype._tick_label_extent = function () {\n            return array_1.sum(this._tick_label_extents());\n        };\n        AxisView.prototype._tick_label_extents = function () {\n            var coords, labels, orient, standoff, visuals;\n            coords = this.model.tick_coords.major;\n            labels = this.model.compute_labels(coords[this.model.dimension]);\n            orient = this.model.major_label_orientation;\n            standoff = this.model.major_label_standoff;\n            visuals = this.visuals.major_label_text;\n            return [this._oriented_labels_extent(labels, orient, this.model.panel_side, standoff, visuals)];\n        };\n        AxisView.prototype._tick_label_extent = function () {\n            return array_1.sum(this._tick_label_extents());\n        };\n        AxisView.prototype._oriented_labels_extent = function (labels, orient, side, standoff, visuals) {\n            var angle, c, ctx, extent, h, hscale, i, k, ref, s, val, w;\n            if (labels.length === 0) {\n                return 0;\n            }\n            ctx = this.plot_view.canvas_view.ctx;\n            visuals.set_value(ctx);\n            if (types_1.isString(orient)) {\n                hscale = 1;\n                angle = this.model.panel.get_label_angle_heuristic(orient);\n            } else {\n                hscale = 2;\n                angle = -orient;\n            }\n            angle = Math.abs(angle);\n            c = Math.cos(angle);\n            s = Math.sin(angle);\n            extent = 0;\n            for (i = k = 0, ref = labels.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                w = ctx.measureText(labels[i]).width * 1.1;\n                h = ctx.measureText(labels[i]).ascent * 0.9;\n                if (side === 'above' || side === 'below') {\n                    val = w * s + h / hscale * c;\n                } else {\n                    val = w * c + h / hscale * s;\n                }\n                // update extent if current value is larger\n                if (val > extent) {\n                    extent = val;\n                }\n            }\n            // only apply the standoff if we already have non-zero extent\n            if (extent > 0) {\n                extent += standoff;\n            }\n            return extent;\n        };\n        return AxisView;\n    }(renderer_1.RendererView);\n    var Axis = function (_super) {\n        tslib_1.__extends(Axis, _super);\n        function Axis() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Axis.prototype.compute_labels = function (ticks) {\n            var i, k, labels, ref;\n            labels = this.formatter.doFormat(ticks, this);\n            for (i = k = 0, ref = ticks.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                if (ticks[i] in this.major_label_overrides) {\n                    labels[i] = this.major_label_overrides[ticks[i]];\n                }\n            }\n            return labels;\n        };\n        Axis.prototype.label_info = function (coords) {\n            var info, orient;\n            orient = this.major_label_orientation;\n            info = {\n                dim: this.dimension,\n                coords: coords,\n                side: this.panel_side,\n                orient: orient,\n                standoff: this.major_label_standoff\n            };\n            return info;\n        };\n        Axis.prototype.add_panel = function (side) {\n            this.panel = new side_panel_1.SidePanel({ side: side });\n            this.panel.attach_document(this.document);\n            return this.panel_side = side;\n        };\n        Axis.prototype._offsets = function () {\n            var frame, side, xoff, yoff;\n            side = this.panel_side;\n            _a = [\n                0,\n                0\n            ], xoff = _a[0], yoff = _a[1];\n            frame = this.plot.plot_canvas.frame;\n            switch (side) {\n            case 'below':\n                yoff = Math.abs(this.panel._top.value - frame._bottom.value);\n                break;\n            case 'above':\n                yoff = Math.abs(this.panel._bottom.value - frame._top.value);\n                break;\n            case 'right':\n                xoff = Math.abs(this.panel._left.value - frame._right.value);\n                break;\n            case 'left':\n                xoff = Math.abs(this.panel._right.value - frame._left.value);\n            }\n            return [\n                xoff,\n                yoff\n            ];\n            var _a;\n        };\n        Axis.prototype._ranges = function () {\n            var frame, i, j, ranges;\n            i = this.dimension;\n            j = (i + 1) % 2;\n            frame = this.plot.plot_canvas.frame;\n            ranges = [\n                frame.x_ranges[this.x_range_name],\n                frame.y_ranges[this.y_range_name]\n            ];\n            return [\n                ranges[i],\n                ranges[j]\n            ];\n        };\n        Axis.prototype._computed_bounds = function () {\n            var cross_range, end, range, range_bounds, ref, start, user_bounds;\n            _a = this.ranges, range = _a[0], cross_range = _a[1];\n            user_bounds = (ref = this.bounds) != null ? ref : 'auto';\n            range_bounds = [\n                range.min,\n                range.max\n            ];\n            if (user_bounds === 'auto') {\n                return range_bounds;\n            }\n            if (types_1.isArray(user_bounds)) {\n                if (Math.abs(user_bounds[0] - user_bounds[1]) > Math.abs(range_bounds[0] - range_bounds[1])) {\n                    start = Math.max(Math.min(user_bounds[0], user_bounds[1]), range_bounds[0]);\n                    end = Math.min(Math.max(user_bounds[0], user_bounds[1]), range_bounds[1]);\n                } else {\n                    start = Math.min(user_bounds[0], user_bounds[1]);\n                    end = Math.max(user_bounds[0], user_bounds[1]);\n                }\n                return [\n                    start,\n                    end\n                ];\n            }\n            logging_1.logger.error('user bounds \\'' + user_bounds + '\\' not understood');\n            return null;\n            var _a;\n        };\n        Axis.prototype._rule_coords = function () {\n            var coords, cross_range, end, i, j, range, start, xs, ys;\n            i = this.dimension;\n            j = (i + 1) % 2;\n            _a = this.ranges, range = _a[0], cross_range = _a[1];\n            _b = this.computed_bounds, start = _b[0], end = _b[1];\n            xs = new Array(2);\n            ys = new Array(2);\n            coords = [\n                xs,\n                ys\n            ];\n            coords[i][0] = Math.max(start, range.min);\n            coords[i][1] = Math.min(end, range.max);\n            if (coords[i][0] > coords[i][1]) {\n                coords[i][0] = coords[i][1] = 0 / 0;\n            }\n            coords[j][0] = this.loc;\n            coords[j][1] = this.loc;\n            return coords;\n            var _a, _b;\n        };\n        Axis.prototype._tick_coords = function () {\n            var coords, cross_range, end, i, ii, j, k, l, majors, minor_coords, minor_xs, minor_ys, minors, range, range_max, range_min, ref, ref1, start, ticks, xs, ys;\n            i = this.dimension;\n            j = (i + 1) % 2;\n            _a = this.ranges, range = _a[0], cross_range = _a[1];\n            _b = this.computed_bounds, start = _b[0], end = _b[1];\n            ticks = this.ticker.get_ticks(start, end, range, this.loc, {});\n            majors = ticks.major;\n            minors = ticks.minor;\n            xs = [];\n            ys = [];\n            coords = [\n                xs,\n                ys\n            ];\n            minor_xs = [];\n            minor_ys = [];\n            minor_coords = [\n                minor_xs,\n                minor_ys\n            ];\n            _c = [\n                range.min,\n                range.max\n            ], range_min = _c[0], range_max = _c[1];\n            for (ii = k = 0, ref = majors.length; 0 <= ref ? k < ref : k > ref; ii = 0 <= ref ? ++k : --k) {\n                if (majors[ii] < range_min || majors[ii] > range_max) {\n                    continue;\n                }\n                coords[i].push(majors[ii]);\n                coords[j].push(this.loc);\n            }\n            for (ii = l = 0, ref1 = minors.length; 0 <= ref1 ? l < ref1 : l > ref1; ii = 0 <= ref1 ? ++l : --l) {\n                if (minors[ii] < range_min || minors[ii] > range_max) {\n                    continue;\n                }\n                minor_coords[i].push(minors[ii]);\n                minor_coords[j].push(this.loc);\n            }\n            return {\n                'major': coords,\n                'minor': minor_coords\n            };\n            var _a, _b, _c;\n        };\n        Axis.prototype._get_loc = function () {\n            var cend, cross_range, cstart, range, side;\n            _a = this.ranges, range = _a[0], cross_range = _a[1];\n            cstart = cross_range.start;\n            cend = cross_range.end;\n            side = this.panel_side;\n            switch (side) {\n            case 'left':\n            case 'below':\n                return cross_range.start;\n            case 'right':\n            case 'above':\n                return cross_range.end;\n            }\n            var _a;\n        };\n        return Axis;\n    }(guide_renderer_1.GuideRenderer);\n    exports.Axis = Axis;\n    ;\n    Axis.prototype.default_view = exports.AxisView;\n    Axis.prototype.type = 'Axis';\n    Axis.mixins([\n        'line:axis_',\n        'line:major_tick_',\n        'line:minor_tick_',\n        'text:major_label_',\n        'text:axis_label_'\n    ]);\n    Axis.define({\n        bounds: [\n            p.Any,\n            'auto'    // TODO (bev)\n        ],\n        ticker: [\n            p.Instance,\n            null\n        ],\n        formatter: [\n            p.Instance,\n            null\n        ],\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ],\n        axis_label: [\n            p.String,\n            ''\n        ],\n        axis_label_standoff: [\n            p.Int,\n            5\n        ],\n        major_label_standoff: [\n            p.Int,\n            5\n        ],\n        major_label_orientation: [\n            p.Any,\n            'horizontal'    // TODO: p.Orientation | p.Number\n        ],\n        major_label_overrides: [\n            p.Any,\n            {}\n        ],\n        major_tick_in: [\n            p.Number,\n            2\n        ],\n        major_tick_out: [\n            p.Number,\n            6\n        ],\n        minor_tick_in: [\n            p.Number,\n            0\n        ],\n        minor_tick_out: [\n            p.Number,\n            4\n        ]\n    });\n    Axis.override({\n        axis_line_color: 'black',\n        major_tick_line_color: 'black',\n        minor_tick_line_color: 'black',\n        major_label_text_font_size: '8pt',\n        major_label_text_align: 'center',\n        major_label_text_baseline: 'alphabetic',\n        axis_label_text_font_size: '10pt',\n        axis_label_text_font_style: 'italic'\n    });\n    Axis.internal({ panel_side: [p.Any] });\n    Axis.getters({\n        computed_bounds: function () {\n            return this._computed_bounds();\n        },\n        rule_coords: function () {\n            return this._rule_coords();\n        },\n        tick_coords: function () {\n            return this._tick_coords();\n        },\n        ranges: function () {\n            return this._ranges();\n        },\n        normals: function () {\n            return this.panel._normals;\n        },\n        dimension: function () {\n            return this.panel._dim;\n        },\n        offsets: function () {\n            return this._offsets();\n        },\n        loc: function () {\n            return this._get_loc();\n        }\n    });    \n}","/*models/axes/categorical_axis*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var axis_1 = require(69    /* ./axis */);\n    var categorical_tick_formatter_1 = require(92    /* ../formatters/categorical_tick_formatter */);\n    var categorical_ticker_1 = require(181    /* ../tickers/categorical_ticker */);\n    exports.CategoricalAxisView = function (_super) {\n        tslib_1.__extends(CategoricalAxisView, _super);\n        function CategoricalAxisView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CategoricalAxisView.prototype._render = function (ctx, extents, tick_coords) {\n            return this._draw_group_separators(ctx, extents, tick_coords);\n        };\n        CategoricalAxisView.prototype._draw_group_separators = function (ctx, extents, tick_coords) {\n            var alt, coords, cross_range, dim, end, first, i, ind, j, k, l, last, loc, pt, range, ref, ref1, ref2, start, tex, ticks;\n            _a = this.model.ranges, range = _a[0], cross_range = _a[1];\n            _b = this.model.computed_bounds, start = _b[0], end = _b[1];\n            loc = this.model.loc;\n            ticks = this.model.ticker.get_ticks(start, end, range, loc, {});\n            _c = this.model.ranges, range = _c[0], cross_range = _c[1];\n            if (!range.tops || range.tops.length < 2 || !this.visuals.separator_line.doit) {\n                return;\n            }\n            dim = this.model.dimension;\n            alt = (dim + 1) % 2;\n            coords = [\n                [],\n                []\n            ];\n            ind = 0;\n            for (i = k = 0, ref = range.tops.length - 1; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                for (j = l = ref1 = ind, ref2 = range.factors.length; ref1 <= ref2 ? l < ref2 : l > ref2; j = ref1 <= ref2 ? ++l : --l) {\n                    if (range.factors[j][0] === range.tops[i + 1]) {\n                        _d = [\n                            range.factors[j - 1],\n                            range.factors[j]\n                        ], first = _d[0], last = _d[1];\n                        ind = j;\n                        break;\n                    }\n                }\n                pt = (range.synthetic(first) + range.synthetic(last)) / 2;\n                if (pt > start && pt < end) {\n                    coords[dim].push(pt);\n                    coords[alt].push(this.model.loc);\n                }\n            }\n            tex = this._tick_label_extent();\n            this._draw_ticks(ctx, coords, -3, tex - 6, this.visuals.separator_line);\n            var _a, _b, _c, _d;\n        };\n        CategoricalAxisView.prototype._draw_major_labels = function (ctx, extents, tick_coords) {\n            var alt, coords, dim, i, info, k, labels, loc, orient, ref, standoff, visuals;\n            info = this._get_factor_info();\n            loc = this.model.loc;\n            dim = this.model.dimension;\n            alt = (dim + 1) % 2;\n            standoff = extents.tick + this.model.major_label_standoff;\n            for (i = k = 0, ref = info.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                _a = info[i], labels = _a[0], coords = _a[1], orient = _a[2], visuals = _a[3];\n                this._draw_oriented_labels(ctx, labels, coords, orient, this.model.panel_side, standoff, visuals);\n                standoff += extents.tick_label[i];\n            }\n            var _a;\n        };\n        CategoricalAxisView.prototype._tick_label_extents = function () {\n            var dim_coords, extent, extents, info, k, labels, len, orient, visuals;\n            info = this._get_factor_info();\n            extents = [];\n            for (k = 0, len = info.length; k < len; k++) {\n                _a = info[k], labels = _a[0], dim_coords = _a[1], orient = _a[2], visuals = _a[3];\n                extent = this._oriented_labels_extent(labels, orient, this.model.panel_side, this.model.major_label_standoff, visuals);\n                extents.push(extent);\n            }\n            return extents;\n            var _a;\n        };\n        CategoricalAxisView.prototype._get_factor_info = function () {\n            var coords, cross_range, end, info, labels, loc, mid_labels, range, start, ticks, x;\n            _a = this.model.ranges, range = _a[0], cross_range = _a[1];\n            _b = this.model.computed_bounds, start = _b[0], end = _b[1];\n            loc = this.model.loc;\n            ticks = this.model.ticker.get_ticks(start, end, range, loc, {});\n            coords = this.model.tick_coords;\n            info = [];\n            if (range.levels === 1) {\n                labels = this.model.formatter.doFormat(ticks.major, this);\n                info.push([\n                    labels,\n                    coords.major,\n                    this.model.major_label_orientation,\n                    this.visuals.major_label_text\n                ]);\n            } else if (range.levels === 2) {\n                labels = this.model.formatter.doFormat(function () {\n                    var k, len, ref, results;\n                    ref = ticks.major;\n                    results = [];\n                    for (k = 0, len = ref.length; k < len; k++) {\n                        x = ref[k];\n                        results.push(x[1]);\n                    }\n                    return results;\n                }(), this);\n                info.push([\n                    labels,\n                    coords.major,\n                    this.model.major_label_orientation,\n                    this.visuals.major_label_text\n                ]);\n                info.push([\n                    ticks.tops,\n                    coords.tops,\n                    'parallel',\n                    this.visuals.group_text\n                ]);\n            } else if (range.levels === 3) {\n                labels = this.model.formatter.doFormat(function () {\n                    var k, len, ref, results;\n                    ref = ticks.major;\n                    results = [];\n                    for (k = 0, len = ref.length; k < len; k++) {\n                        x = ref[k];\n                        results.push(x[2]);\n                    }\n                    return results;\n                }(), this);\n                mid_labels = function () {\n                    var k, len, ref, results;\n                    ref = ticks.mids;\n                    results = [];\n                    for (k = 0, len = ref.length; k < len; k++) {\n                        x = ref[k];\n                        results.push(x[1]);\n                    }\n                    return results;\n                }();\n                info.push([\n                    labels,\n                    coords.major,\n                    this.model.major_label_orientation,\n                    this.visuals.major_label_text\n                ]);\n                info.push([\n                    mid_labels,\n                    coords.mids,\n                    'parallel',\n                    this.visuals.subgroup_text\n                ]);\n                info.push([\n                    ticks.tops,\n                    coords.tops,\n                    'parallel',\n                    this.visuals.group_text\n                ]);\n            }\n            return info;\n            var _a, _b;\n        };\n        return CategoricalAxisView;\n    }(axis_1.AxisView);\n    var CategoricalAxis = function (_super) {\n        tslib_1.__extends(CategoricalAxis, _super);\n        function CategoricalAxis() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CategoricalAxis.prototype._tick_coords = function () {\n            var coords, cross_range, end, i, j, range, start, ticks, x;\n            i = this.dimension;\n            j = (i + 1) % 2;\n            _a = this.ranges, range = _a[0], cross_range = _a[1];\n            _b = this.computed_bounds, start = _b[0], end = _b[1];\n            ticks = this.ticker.get_ticks(start, end, range, this.loc, {});\n            coords = {\n                major: [\n                    [],\n                    []\n                ],\n                mids: [\n                    [],\n                    []\n                ],\n                tops: [\n                    [],\n                    []\n                ],\n                minor: []\n            };\n            coords.major[i] = ticks.major;\n            coords.major[j] = function () {\n                var k, len, ref, results;\n                ref = ticks.major;\n                results = [];\n                for (k = 0, len = ref.length; k < len; k++) {\n                    x = ref[k];\n                    results.push(this.loc);\n                }\n                return results;\n            }.call(this);\n            if (range.levels === 3) {\n                coords.mids[i] = ticks.mids;\n                coords.mids[j] = function () {\n                    var k, len, ref, results;\n                    ref = ticks.mids;\n                    results = [];\n                    for (k = 0, len = ref.length; k < len; k++) {\n                        x = ref[k];\n                        results.push(this.loc);\n                    }\n                    return results;\n                }.call(this);\n            }\n            if (range.levels > 1) {\n                coords.tops[i] = ticks.tops;\n                coords.tops[j] = function () {\n                    var k, len, ref, results;\n                    ref = ticks.tops;\n                    results = [];\n                    for (k = 0, len = ref.length; k < len; k++) {\n                        x = ref[k];\n                        results.push(this.loc);\n                    }\n                    return results;\n                }.call(this);\n            }\n            return coords;\n            var _a, _b;\n        };\n        return CategoricalAxis;\n    }(axis_1.Axis);\n    exports.CategoricalAxis = CategoricalAxis;\n    ;\n    CategoricalAxis.prototype.default_view = exports.CategoricalAxisView;\n    CategoricalAxis.prototype.type = 'CategoricalAxis';\n    CategoricalAxis.mixins([\n        'line:separator_',\n        'text:group_',\n        'text:subgroup_'\n    ]);\n    CategoricalAxis.override({\n        ticker: function () {\n            return new categorical_ticker_1.CategoricalTicker();\n        },\n        formatter: function () {\n            return new categorical_tick_formatter_1.CategoricalTickFormatter();\n        },\n        separator_line_color: 'lightgrey',\n        separator_line_width: 2,\n        group_text_font_style: 'bold',\n        group_text_font_size: '8pt',\n        group_text_color: 'grey',\n        subgroup_text_font_style: 'bold',\n        subgroup_text_font_size: '8pt'\n    });    \n}","/*models/axes/continuous_axis*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var axis_1 = require(69    /* ./axis */);\n    var ContinuousAxis = function (_super) {\n        tslib_1.__extends(ContinuousAxis, _super);\n        function ContinuousAxis() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ContinuousAxis;\n    }(axis_1.Axis);\n    exports.ContinuousAxis = ContinuousAxis;\n    ;\n    ContinuousAxis.prototype.type = 'ContinuousAxis';    \n}","/*models/axes/datetime_axis*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var linear_axis_1 = require(74    /* ./linear_axis */);\n    var datetime_tick_formatter_1 = require(93    /* ../formatters/datetime_tick_formatter */);\n    var datetime_ticker_1 = require(184    /* ../tickers/datetime_ticker */);\n    exports.DatetimeAxisView = function (_super) {\n        tslib_1.__extends(DatetimeAxisView, _super);\n        function DatetimeAxisView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return DatetimeAxisView;\n    }(linear_axis_1.LinearAxisView);\n    var DatetimeAxis = function (_super) {\n        tslib_1.__extends(DatetimeAxis, _super);\n        function DatetimeAxis() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return DatetimeAxis;\n    }(linear_axis_1.LinearAxis);\n    exports.DatetimeAxis = DatetimeAxis;\n    ;\n    DatetimeAxis.prototype.default_view = exports.DatetimeAxisView;\n    DatetimeAxis.prototype.type = 'DatetimeAxis';\n    DatetimeAxis.override({\n        ticker: function () {\n            return new datetime_ticker_1.DatetimeTicker();\n        },\n        formatter: function () {\n            return new datetime_tick_formatter_1.DatetimeTickFormatter();\n        }\n    });    \n}","/*models/axes/index*/\nfunction _(require, module, exports) {\n    var axis_1 = require(69    /* ./axis */);\n    exports.Axis = axis_1.Axis;\n    var categorical_axis_1 = require(70    /* ./categorical_axis */);\n    exports.CategoricalAxis = categorical_axis_1.CategoricalAxis;\n    var continuous_axis_1 = require(71    /* ./continuous_axis */);\n    exports.ContinuousAxis = continuous_axis_1.ContinuousAxis;\n    var datetime_axis_1 = require(72    /* ./datetime_axis */);\n    exports.DatetimeAxis = datetime_axis_1.DatetimeAxis;\n    var linear_axis_1 = require(74    /* ./linear_axis */);\n    exports.LinearAxis = linear_axis_1.LinearAxis;\n    var log_axis_1 = require(75    /* ./log_axis */);\n    exports.LogAxis = log_axis_1.LogAxis;    \n}","/*models/axes/linear_axis*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var axis_1 = require(69    /* ./axis */);\n    var continuous_axis_1 = require(71    /* ./continuous_axis */);\n    var basic_tick_formatter_1 = require(91    /* ../formatters/basic_tick_formatter */);\n    var basic_ticker_1 = require(180    /* ../tickers/basic_ticker */);\n    exports.LinearAxisView = function (_super) {\n        tslib_1.__extends(LinearAxisView, _super);\n        function LinearAxisView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return LinearAxisView;\n    }(axis_1.AxisView);\n    var LinearAxis = function (_super) {\n        tslib_1.__extends(LinearAxis, _super);\n        function LinearAxis() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return LinearAxis;\n    }(continuous_axis_1.ContinuousAxis);\n    exports.LinearAxis = LinearAxis;\n    ;\n    LinearAxis.prototype.default_view = exports.LinearAxisView;\n    LinearAxis.prototype.type = 'LinearAxis';\n    LinearAxis.override({\n        ticker: function () {\n            return new basic_ticker_1.BasicTicker();\n        },\n        formatter: function () {\n            return new basic_tick_formatter_1.BasicTickFormatter();\n        }\n    });    \n}","/*models/axes/log_axis*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var axis_1 = require(69    /* ./axis */);\n    var continuous_axis_1 = require(71    /* ./continuous_axis */);\n    var log_tick_formatter_1 = require(96    /* ../formatters/log_tick_formatter */);\n    var log_ticker_1 = require(188    /* ../tickers/log_ticker */);\n    exports.LogAxisView = function (_super) {\n        tslib_1.__extends(LogAxisView, _super);\n        function LogAxisView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return LogAxisView;\n    }(axis_1.AxisView);\n    var LogAxis = function (_super) {\n        tslib_1.__extends(LogAxis, _super);\n        function LogAxis() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return LogAxis;\n    }(continuous_axis_1.ContinuousAxis);\n    exports.LogAxis = LogAxis;\n    ;\n    LogAxis.prototype.default_view = exports.LogAxisView;\n    LogAxis.prototype.type = 'LogAxis';\n    LogAxis.override({\n        ticker: function () {\n            return new log_ticker_1.LogTicker();\n        },\n        formatter: function () {\n            return new log_tick_formatter_1.LogTickFormatter();\n        }\n    });    \n}","/*models/callbacks/customjs*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var p = require(15    /* core/properties */);\n    var object_1 = require(30    /* core/util/object */);\n    var model_1 = require(50    /* ../../model */);\n    var CustomJS = function (_super) {\n        tslib_1.__extends(CustomJS, _super);\n        function CustomJS() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CustomJS.prototype.execute = function (cb_obj, cb_data) {\n            return this.func.apply(cb_obj, this.values.concat(cb_obj, cb_data, require, {}));\n        };\n        CustomJS.prototype._make_values = function () {\n            return object_1.values(this.args);\n        };\n        CustomJS.prototype._make_func = function () {\n            // this relies on Object.keys(args) and values(args) returning keys and values\n            // in the same order\n            return new (Function.bind.apply(Function, [void 0].concat(Object.keys(this.args), [\n                'cb_obj',\n                'cb_data',\n                'require',\n                'exports',\n                this.code\n            ])))();\n        };\n        return CustomJS;\n    }(model_1.Model);\n    exports.CustomJS = CustomJS;\n    ;\n    CustomJS.prototype.type = 'CustomJS';\n    CustomJS.define({\n        args: [\n            p.Any,\n            {}\n        ],\n        code: [\n            p.String,\n            ''\n        ]\n    });\n    CustomJS.getters({\n        values: function () {\n            return this._make_values();\n        },\n        func: function () {\n            return this._make_func();\n        }\n    });    \n}","/*models/callbacks/index*/\nfunction _(require, module, exports) {\n    var customjs_1 = require(76    /* ./customjs */);\n    exports.CustomJS = customjs_1.CustomJS;\n    var open_url_1 = require(78    /* ./open_url */);\n    exports.OpenURL = open_url_1.OpenURL;    \n}","/*models/callbacks/open_url*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    var p = require(15    /* core/properties */);\n    var selection_1 = require(34    /* core/util/selection */);\n    var templating_1 = require(39    /* core/util/templating */);\n    var OpenURL = function (_super) {\n        tslib_1.__extends(OpenURL, _super);\n        function OpenURL() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        OpenURL.prototype.execute = function (cb_obj, cb_data) {\n            var i, j, len, ref, url;\n            ref = selection_1.get_indices(cb_data.source);\n            for (j = 0, len = ref.length; j < len; j++) {\n                i = ref[j];\n                url = templating_1.replace_placeholders(this.url, cb_data.source, i);\n                window.open(url);\n            }\n            return null;\n        };\n        return OpenURL;\n    }(model_1.Model);\n    exports.OpenURL = OpenURL;\n    ;\n    OpenURL.prototype.type = 'OpenURL';\n    OpenURL.define({\n        url: [\n            p.String,\n            'http://'    // TODO (bev) better type\n        ]\n    });    \n}","/*models/canvas/canvas*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var layout_canvas_1 = require(11    /* core/layout/layout_canvas */);\n    var dom_view_1 = require(6    /* core/dom_view */);\n    var solver_1 = require(13    /* core/layout/solver */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var dom_1 = require(5    /* core/dom */);\n    var canvas_1 = require(25    /* core/util/canvas */);\n    var canvas2svg = require(249    /* canvas2svg */);\n    // fixes up a problem with some versions of IE11\n    // ref: http://stackoverflow.com/questions/22062313/imagedata-set-in-internetexplorer\n    if (window.CanvasPixelArray != null) {\n        CanvasPixelArray.prototype.set = function (arr) {\n            var i, j, ref, results;\n            results = [];\n            for (i = j = 0, ref = this.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                results.push(this[i] = arr[i]);\n            }\n            return results;\n        };\n    }\n    var CanvasView = function (_super) {\n        tslib_1.__extends(CanvasView, _super);\n        function CanvasView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CanvasView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this.map_el = this.model.map ? this.el.appendChild(dom_1.div({ class: 'bk-canvas-map' })) : null;\n            switch (this.model.output_backend) {\n            case 'canvas':\n            case 'webgl':\n                this.canvas_el = this.el.appendChild(dom_1.canvas({ class: 'bk-canvas' }));\n                this._ctx = this.canvas_el.getContext('2d');\n                break;\n            case 'svg':\n                this._ctx = new canvas2svg();\n                this.canvas_el = this.el.appendChild(this._ctx.getSvg());\n            }\n            this.overlays_el = this.el.appendChild(dom_1.div({ class: 'bk-canvas-overlays' }));\n            this.events_el = this.el.appendChild(dom_1.div({ class: 'bk-canvas-events' }));\n            this.ctx = this.get_ctx();\n            // work around canvas incompatibilities\n            canvas_1.fixup_ctx(this.ctx);\n            return logging_1.logger.debug('CanvasView initialized');\n        };\n        // Method exists so that context can be stubbed in unit tests\n        CanvasView.prototype.get_ctx = function () {\n            return this._ctx;\n        };\n        CanvasView.prototype.get_canvas_element = function () {\n            return this.canvas_el;\n        };\n        CanvasView.prototype.prepare_canvas = function () {\n            var height, pixel_ratio, width;\n            // Ensure canvas has the correct size, taking HIDPI into account\n            width = this.model._width.value;\n            height = this.model._height.value;\n            this.el.style.width = width + 'px';\n            this.el.style.height = height + 'px';\n            pixel_ratio = canvas_1.get_scale_ratio(this.ctx, this.model.use_hidpi, this.model.output_backend);\n            this.model.pixel_ratio = pixel_ratio;\n            this.canvas_el.style.width = width + 'px';\n            this.canvas_el.style.height = height + 'px';\n            this.canvas_el.setAttribute('width', width * pixel_ratio);\n            this.canvas_el.setAttribute('height', height * pixel_ratio);\n            return logging_1.logger.debug('Rendering CanvasView with width: ' + width + ', height: ' + height + ', pixel ratio: ' + pixel_ratio);\n        };\n        CanvasView.prototype.set_dims = function (_a) {\n            var width = _a[0], height = _a[1];\n            // XXX: for whatever reason we need to protect against those nonsense values,\n            //      that appear in the middle of updating layout. Otherwise we would get\n            //      all possible errors from the layout solver.\n            if (width === 0 || height === 0) {\n                return;\n            }\n            if (width !== this.model._width.value) {\n                if (this._width_constraint != null && this.solver.has_constraint(this._width_constraint)) {\n                    this.solver.remove_constraint(this._width_constraint);\n                }\n                this._width_constraint = solver_1.EQ(this.model._width, -width);\n                this.solver.add_constraint(this._width_constraint);\n            }\n            if (height !== this.model._height.value) {\n                if (this._height_constraint != null && this.solver.has_constraint(this._height_constraint)) {\n                    this.solver.remove_constraint(this._height_constraint);\n                }\n                this._height_constraint = solver_1.EQ(this.model._height, -height);\n                this.solver.add_constraint(this._height_constraint);\n            }\n            return this.solver.update_variables();\n        };\n        return CanvasView;\n    }(dom_view_1.DOMView);\n    exports.CanvasView = CanvasView;\n    ;\n    CanvasView.prototype.className = 'bk-canvas-wrapper';\n    var Canvas = function (_super) {\n        tslib_1.__extends(Canvas, _super);\n        function Canvas() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Canvas;\n    }(layout_canvas_1.LayoutCanvas);\n    exports.Canvas = Canvas;\n    ;\n    Canvas.prototype.type = 'Canvas';\n    Canvas.prototype.default_view = CanvasView;\n    Canvas.internal({\n        map: [\n            p.Boolean,\n            false\n        ],\n        use_hidpi: [\n            p.Boolean,\n            true\n        ],\n        pixel_ratio: [\n            p.Number,\n            1\n        ],\n        output_backend: [\n            p.OutputBackend,\n            'canvas'\n        ]\n    });\n    Canvas.getters({\n        panel: function () {\n            return this;\n        }\n    });    \n}","/*models/canvas/cartesian_frame*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var categorical_scale_1 = require(166    /* ../scales/categorical_scale */);\n    var linear_scale_1 = require(168    /* ../scales/linear_scale */);\n    var log_scale_1 = require(169    /* ../scales/log_scale */);\n    var range1d_1 = require(160    /* ../ranges/range1d */);\n    var data_range1d_1 = require(156    /* ../ranges/data_range1d */);\n    var factor_range_1 = require(157    /* ../ranges/factor_range */);\n    var layout_canvas_1 = require(11    /* core/layout/layout_canvas */);\n    var p = require(15    /* core/properties */);\n    var CartesianFrame = function (_super) {\n        tslib_1.__extends(CartesianFrame, _super);\n        function CartesianFrame() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CartesianFrame.prototype.initialize = function (attrs, options) {\n            var _this = this;\n            _super.prototype.initialize.call(this, attrs, options);\n            this._configure_scales();\n            return this.connect(this.change, function () {\n                return _this._configure_scales();\n            });\n        };\n        CartesianFrame.prototype.get_editables = function () {\n            return _super.prototype.get_editables.call(this).concat([\n                this._width,\n                this._height\n            ]);\n        };\n        CartesianFrame.prototype.map_to_screen = function (x, y, x_name, y_name) {\n            if (x_name === void 0) {\n                x_name = 'default';\n            }\n            if (y_name === void 0) {\n                y_name = 'default';\n            }\n            var sx, sy;\n            sx = this.xscales[x_name].v_compute(x);\n            sy = this.yscales[y_name].v_compute(y);\n            return [\n                sx,\n                sy\n            ];\n        };\n        CartesianFrame.prototype._get_ranges = function (range, extra_ranges) {\n            var extra_range, name, ranges;\n            ranges = {};\n            ranges['default'] = range;\n            if (extra_ranges != null) {\n                for (name in extra_ranges) {\n                    extra_range = extra_ranges[name];\n                    ranges[name] = extra_range;\n                }\n            }\n            return ranges;\n        };\n        CartesianFrame.prototype._get_scales = function (scale, ranges, frame_range) {\n            var name, range, s, scales;\n            scales = {};\n            for (name in ranges) {\n                range = ranges[name];\n                if (range instanceof data_range1d_1.DataRange1d || range instanceof range1d_1.Range1d) {\n                    if (!(scale instanceof log_scale_1.LogScale) && !(scale instanceof linear_scale_1.LinearScale)) {\n                        throw new Error('Range ' + range.type + ' is incompatible is Scale ' + scale.type);\n                    }\n                    // special case because CategoricalScale is a subclass of LinearScale, should be removed in future\n                    if (scale instanceof categorical_scale_1.CategoricalScale) {\n                        throw new Error('Range ' + range.type + ' is incompatible is Scale ' + scale.type);\n                    }\n                }\n                if (range instanceof factor_range_1.FactorRange) {\n                    if (!(scale instanceof categorical_scale_1.CategoricalScale)) {\n                        throw new Error('Range ' + range.type + ' is incompatible is Scale ' + scale.type);\n                    }\n                }\n                if (scale instanceof log_scale_1.LogScale && range instanceof data_range1d_1.DataRange1d) {\n                    range.scale_hint = 'log';\n                }\n                s = scale.clone();\n                s.setv({\n                    source_range: range,\n                    target_range: frame_range\n                });\n                scales[name] = s;\n            }\n            return scales;\n        };\n        CartesianFrame.prototype._configure_frame_ranges = function () {\n            // data to/from screen space transform (left-bottom <-> left-top origin)\n            this._h_target = new range1d_1.Range1d({\n                start: this._left.value,\n                end: this._right.value\n            });\n            return this._v_target = new range1d_1.Range1d({\n                start: this._bottom._value,\n                end: this._top.value\n            });\n        };\n        CartesianFrame.prototype._configure_scales = function () {\n            this._configure_frame_ranges();\n            this._x_ranges = this._get_ranges(this.x_range, this.extra_x_ranges);\n            this._y_ranges = this._get_ranges(this.y_range, this.extra_y_ranges);\n            this._xscales = this._get_scales(this.x_scale, this._x_ranges, this._h_target);\n            return this._yscales = this._get_scales(this.y_scale, this._y_ranges, this._v_target);\n        };\n        CartesianFrame.prototype._update_scales = function () {\n            var name, ref, ref1, scale;\n            this._configure_frame_ranges();\n            ref = this._xscales;\n            for (name in ref) {\n                scale = ref[name];\n                scale.target_range = this._h_target;\n            }\n            ref1 = this._yscales;\n            for (name in ref1) {\n                scale = ref1[name];\n                scale.target_range = this._v_target;\n            }\n            return null;\n        };\n        Object.defineProperty(CartesianFrame.prototype, 'x_ranges', {\n            get: function () {\n                return this._x_ranges;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CartesianFrame.prototype, 'y_ranges', {\n            get: function () {\n                return this._y_ranges;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CartesianFrame.prototype, 'xscales', {\n            get: function () {\n                return this._xscales;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CartesianFrame.prototype, 'yscales', {\n            get: function () {\n                return this._yscales;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return CartesianFrame;\n    }(layout_canvas_1.LayoutCanvas);\n    exports.CartesianFrame = CartesianFrame;\n    ;\n    CartesianFrame.prototype.type = 'CartesianFrame';\n    CartesianFrame.getters({\n        panel: function () {\n            return this;\n        }\n    });\n    CartesianFrame.internal({\n        extra_x_ranges: [\n            p.Any,\n            {}\n        ],\n        extra_y_ranges: [\n            p.Any,\n            {}\n        ],\n        x_range: [p.Instance],\n        y_range: [p.Instance],\n        x_scale: [p.Instance],\n        y_scale: [p.Instance]\n    });    \n}","/*models/canvas/index*/\nfunction _(require, module, exports) {\n    var canvas_1 = require(79    /* ./canvas */);\n    exports.Canvas = canvas_1.Canvas;\n    var cartesian_frame_1 = require(80    /* ./cartesian_frame */);\n    exports.CartesianFrame = cartesian_frame_1.CartesianFrame;    \n}","/*models/expressions/expression*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    exports.Expression = function (_super) {\n        tslib_1.__extends(Expression, _super);\n        function Expression() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Expression.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this._connected = {};\n            return this._result = {};\n        };\n        Expression.prototype._v_compute = function (source) {\n            if (this._connected[source.id] == null) {\n                this.connect(source.change, function () {\n                    return this._result[source.id] = null;\n                });\n                this._connected[source.id] = true;\n            }\n            if (this._result[source.id] != null) {\n                return this._result[source.id];\n            }\n            this._result[source.id] = this.v_compute(source);\n            return this._result[source.id];\n        };\n        return Expression;\n    }(model_1.Model);    \n}","/*models/expressions/index*/\nfunction _(require, module, exports) {\n    var expression_1 = require(82    /* ./expression */);\n    exports.Expression = expression_1.Expression;\n    var stack_1 = require(84    /* ./stack */);\n    exports.Stack = stack_1.Stack;    \n}","/*models/expressions/stack*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var expression_1 = require(82    /* ./expression */);\n    var p = require(15    /* core/properties */);\n    var Stack = function (_super) {\n        tslib_1.__extends(Stack, _super);\n        function Stack() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Stack.prototype.v_compute = function (source) {\n            var f, i, j, k, len, len1, ref, ref1, result, x;\n            result = new Float64Array(source.get_length());\n            ref = this.fields;\n            for (j = 0, len = ref.length; j < len; j++) {\n                f = ref[j];\n                ref1 = source.data[f];\n                for (i = k = 0, len1 = ref1.length; k < len1; i = ++k) {\n                    x = ref1[i];\n                    result[i] += x;\n                }\n            }\n            return result;\n        };\n        return Stack;\n    }(expression_1.Expression);\n    exports.Stack = Stack;\n    ;\n    Stack.define({\n        fields: [\n            p.Array,\n            []\n        ]\n    });    \n}","/*models/filters/boolean_filter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var filter_1 = require(87    /* ./filter */);\n    var p = require(15    /* core/properties */);\n    var logging_1 = require(14    /* core/logging */);\n    var array_1 = require(22    /* core/util/array */);\n    var types_1 = require(42    /* core/util/types */);\n    var BooleanFilter = function (_super) {\n        tslib_1.__extends(BooleanFilter, _super);\n        function BooleanFilter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BooleanFilter.prototype.compute_indices = function (source) {\n            var i, ref, ref1;\n            if (((ref = this.booleans) != null ? ref.length : void 0) > 0) {\n                if (array_1.all(this.booleans, types_1.isBoolean)) {\n                    if (this.booleans.length !== source.get_length()) {\n                        logging_1.logger.warn('BooleanFilter ' + this.id + ': length of booleans doesn\\'t match data source');\n                    }\n                    return function () {\n                        var j, len, ref1, results;\n                        ref1 = array_1.range(0, this.booleans.length);\n                        results = [];\n                        for (j = 0, len = ref1.length; j < len; j++) {\n                            i = ref1[j];\n                            if (this.booleans[i] === true) {\n                                results.push(i);\n                            }\n                        }\n                        return results;\n                    }.call(this);\n                } else {\n                    logging_1.logger.warn('BooleanFilter ' + this.id + ': booleans should be array of booleans, defaulting to no filtering');\n                    return null;\n                }\n            } else {\n                if (((ref1 = this.booleans) != null ? ref1.length : void 0) === 0) {\n                    logging_1.logger.warn('BooleanFilter ' + this.id + ': booleans is empty, defaulting to no filtering');\n                } else {\n                    logging_1.logger.warn('BooleanFilter ' + this.id + ': booleans was not set, defaulting to no filtering');\n                }\n                return null;\n            }\n        };\n        return BooleanFilter;\n    }(filter_1.Filter);\n    exports.BooleanFilter = BooleanFilter;\n    ;\n    BooleanFilter.prototype.type = 'BooleanFilter';\n    BooleanFilter.define({\n        booleans: [\n            p.Array,\n            null\n        ]\n    });    \n}","/*models/filters/customjs_filter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var filter_1 = require(87    /* ./filter */);\n    var p = require(15    /* core/properties */);\n    var object_1 = require(30    /* core/util/object */);\n    var CustomJSFilter = function (_super) {\n        tslib_1.__extends(CustomJSFilter, _super);\n        function CustomJSFilter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CustomJSFilter.prototype.compute_indices = function (source) {\n            this.filter = this.func.apply(this, this.values.concat([\n                source,\n                require,\n                {}\n            ]));\n            return _super.prototype.compute_indices.call(this);\n        };\n        CustomJSFilter.prototype._make_values = function () {\n            return object_1.values(this.args);\n        };\n        CustomJSFilter.prototype._make_func = function () {\n            // this relies on Object.keys(args) and values(args) returning keys and values\n            // in the same order\n            return new (Function.bind.apply(Function, [void 0].concat(Object.keys(this.args), [\n                'source',\n                'require',\n                'exports',\n                this.code\n            ])))();\n        };\n        return CustomJSFilter;\n    }(filter_1.Filter);\n    exports.CustomJSFilter = CustomJSFilter;\n    ;\n    CustomJSFilter.prototype.type = 'CustomJSFilter';\n    CustomJSFilter.define({\n        args: [\n            p.Any,\n            {}\n        ],\n        code: [\n            p.String,\n            ''\n        ]\n    });\n    CustomJSFilter.getters({\n        values: function () {\n            return this._make_values();\n        },\n        func: function () {\n            return this._make_func();\n        }\n    });    \n}","/*models/filters/filter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    var p = require(15    /* core/properties */);\n    var types_1 = require(42    /* core/util/types */);\n    var array_1 = require(22    /* core/util/array */);\n    var logging_1 = require(14    /* core/logging */);\n    var Filter = function (_super) {\n        tslib_1.__extends(Filter, _super);\n        function Filter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Filter.prototype.initialize = function (options) {\n            return _super.prototype.initialize.call(this, options);\n        };\n        Filter.prototype.compute_indices = function () {\n            var i, ref;\n            if (((ref = this.filter) != null ? ref.length : void 0) >= 0) {\n                if (array_1.all(this.filter, types_1.isBoolean)) {\n                    return function () {\n                        var j, len, ref1, results;\n                        ref1 = array_1.range(0, this.filter.length);\n                        results = [];\n                        for (j = 0, len = ref1.length; j < len; j++) {\n                            i = ref1[j];\n                            if (this.filter[i] === true) {\n                                results.push(i);\n                            }\n                        }\n                        return results;\n                    }.call(this);\n                } else if (array_1.all(this.filter, types_1.isInteger)) {\n                    return this.filter;\n                } else {\n                    logging_1.logger.warn('Filter ' + this.id + ': filter should either be array of only booleans or only integers, defaulting to no filtering');\n                    return null;\n                }\n            } else {\n                logging_1.logger.warn('Filter ' + this.id + ': filter was not set to be an array, defaulting to no filtering');\n                return null;\n            }\n        };\n        return Filter;\n    }(model_1.Model);\n    exports.Filter = Filter;\n    ;\n    Filter.prototype.type = 'Filter';\n    Filter.define({\n        filter: [\n            p.Array,\n            null\n        ]\n    });    \n}","/*models/filters/group_filter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var filter_1 = require(87    /* ./filter */);\n    var p = require(15    /* core/properties */);\n    var logging_1 = require(14    /* core/logging */);\n    var GroupFilter = function (_super) {\n        tslib_1.__extends(GroupFilter, _super);\n        function GroupFilter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        GroupFilter.prototype.compute_indices = function (source) {\n            var column, i;\n            column = source.get_column(this.column_name);\n            if (column == null) {\n                logging_1.logger.warn('group filter: groupby column not found in data source');\n                return null;\n            } else {\n                this.indices = function () {\n                    var j, ref, results;\n                    results = [];\n                    for (i = j = 0, ref = source.get_length(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                        if (column[i] === this.group) {\n                            results.push(i);\n                        }\n                    }\n                    return results;\n                }.call(this);\n                if (this.indices.length === 0) {\n                    logging_1.logger.warn('group filter: group \\'' + this.group + '\\' did not match any values in column \\'' + this.column_name + '\\'');\n                }\n                return this.indices;\n            }\n        };\n        return GroupFilter;\n    }(filter_1.Filter);\n    exports.GroupFilter = GroupFilter;\n    ;\n    GroupFilter.prototype.type = 'GroupFilter';\n    GroupFilter.define({\n        column_name: [p.String],\n        group: [p.String]\n    });    \n}","/*models/filters/index*/\nfunction _(require, module, exports) {\n    var boolean_filter_1 = require(85    /* ./boolean_filter */);\n    exports.BooleanFilter = boolean_filter_1.BooleanFilter;\n    var customjs_filter_1 = require(86    /* ./customjs_filter */);\n    exports.CustomJSFilter = customjs_filter_1.CustomJSFilter;\n    var filter_1 = require(87    /* ./filter */);\n    exports.Filter = filter_1.Filter;\n    var group_filter_1 = require(88    /* ./group_filter */);\n    exports.GroupFilter = group_filter_1.GroupFilter;\n    var index_filter_1 = require(90    /* ./index_filter */);\n    exports.IndexFilter = index_filter_1.IndexFilter;    \n}","/*models/filters/index_filter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var filter_1 = require(87    /* ./filter */);\n    var p = require(15    /* core/properties */);\n    var logging_1 = require(14    /* core/logging */);\n    var types_1 = require(42    /* core/util/types */);\n    var array_1 = require(22    /* core/util/array */);\n    var IndexFilter = function (_super) {\n        tslib_1.__extends(IndexFilter, _super);\n        function IndexFilter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        IndexFilter.prototype.compute_indices = function (source) {\n            var ref;\n            if (((ref = this.indices) != null ? ref.length : void 0) >= 0) {\n                if (array_1.all(this.indices, types_1.isInteger)) {\n                    return this.indices;\n                } else {\n                    logging_1.logger.warn('IndexFilter ' + this.id + ': indices should be array of integers, defaulting to no filtering');\n                    return null;\n                }\n            } else {\n                logging_1.logger.warn('IndexFilter ' + this.id + ': indices was not set, defaulting to no filtering');\n                return null;\n            }\n        };\n        return IndexFilter;\n    }(filter_1.Filter);\n    exports.IndexFilter = IndexFilter;\n    ;\n    IndexFilter.prototype.type = 'IndexFilter';\n    IndexFilter.define({\n        indices: [\n            p.Array,\n            null\n        ]\n    });    \n}","/*models/formatters/basic_tick_formatter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var tick_formatter_1 = require(100    /* ./tick_formatter */);\n    var p = require(15    /* core/properties */);\n    var types_1 = require(42    /* core/util/types */);\n    var BasicTickFormatter = function (_super) {\n        tslib_1.__extends(BasicTickFormatter, _super);\n        function BasicTickFormatter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BasicTickFormatter.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            return this.last_precision = 3;\n        };\n        BasicTickFormatter.prototype.doFormat = function (ticks, axis) {\n            var i, is_ok, j, k, l, labels, len, m, n, need_sci, o, precision, ref, ref1, ref2, ref3, ref4, tick, tick_abs, x, zero_eps;\n            if (ticks.length === 0) {\n                return [];\n            }\n            zero_eps = 0;\n            if (ticks.length >= 2) {\n                zero_eps = Math.abs(ticks[1] - ticks[0]) / 10000;\n            }\n            need_sci = false;\n            if (this.use_scientific) {\n                for (j = 0, len = ticks.length; j < len; j++) {\n                    tick = ticks[j];\n                    tick_abs = Math.abs(tick);\n                    if (tick_abs > zero_eps && (tick_abs >= this.scientific_limit_high || tick_abs <= this.scientific_limit_low)) {\n                        need_sci = true;\n                        break;\n                    }\n                }\n            }\n            precision = this.precision;\n            if (precision == null || types_1.isNumber(precision)) {\n                labels = new Array(ticks.length);\n                if (need_sci) {\n                    for (i = k = 0, ref = ticks.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                        labels[i] = ticks[i].toExponential(precision || void 0);\n                    }\n                } else {\n                    for (i = l = 0, ref1 = ticks.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n                        labels[i] = ticks[i].toFixed(precision || void 0).replace(/(\\.[0-9]*?)0+$/, '$1').replace(/\\.$/, '');\n                    }\n                }\n                return labels;\n            } else if (precision === 'auto') {\n                labels = new Array(ticks.length);\n                for (x = m = ref2 = this.last_precision; ref2 <= 15 ? m <= 15 : m >= 15; x = ref2 <= 15 ? ++m : --m) {\n                    is_ok = true;\n                    if (need_sci) {\n                        for (i = n = 0, ref3 = ticks.length; 0 <= ref3 ? n < ref3 : n > ref3; i = 0 <= ref3 ? ++n : --n) {\n                            labels[i] = ticks[i].toExponential(x);\n                            if (i > 0) {\n                                if (labels[i] === labels[i - 1]) {\n                                    is_ok = false;\n                                    break;\n                                }\n                            }\n                        }\n                        if (is_ok) {\n                            break;\n                        }\n                    } else {\n                        for (i = o = 0, ref4 = ticks.length; 0 <= ref4 ? o < ref4 : o > ref4; i = 0 <= ref4 ? ++o : --o) {\n                            labels[i] = ticks[i].toFixed(x).replace(/(\\.[0-9]*?)0+$/, '$1').replace(/\\.$/, '');\n                            if (i > 0) {\n                                if (labels[i] === labels[i - 1]) {\n                                    is_ok = false;\n                                    break;\n                                }\n                            }\n                        }\n                        if (is_ok) {\n                            break;\n                        }\n                    }\n                    if (is_ok) {\n                        this.last_precision = x;\n                        return labels;\n                    }\n                }\n            }\n            return labels;\n        };\n        return BasicTickFormatter;\n    }(tick_formatter_1.TickFormatter);\n    exports.BasicTickFormatter = BasicTickFormatter;\n    ;\n    BasicTickFormatter.prototype.type = 'BasicTickFormatter';\n    BasicTickFormatter.define({\n        precision: [\n            p.Any,\n            'auto'    // TODO (bev) better\n        ],\n        use_scientific: [\n            p.Bool,\n            true\n        ],\n        power_limit_high: [\n            p.Number,\n            5\n        ],\n        power_limit_low: [\n            p.Number,\n            -3\n        ]\n    });\n    BasicTickFormatter.getters({\n        scientific_limit_low: function () {\n            return Math.pow(10, this.power_limit_low);\n        },\n        scientific_limit_high: function () {\n            return Math.pow(10, this.power_limit_high);\n        }\n    });    \n}","/*models/formatters/categorical_tick_formatter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var tick_formatter_1 = require(100    /* ./tick_formatter */);\n    var CategoricalTickFormatter = function (_super) {\n        tslib_1.__extends(CategoricalTickFormatter, _super);\n        function CategoricalTickFormatter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CategoricalTickFormatter.prototype.doFormat = function (ticks, axis) {\n            return ticks;\n        };\n        return CategoricalTickFormatter;\n    }(tick_formatter_1.TickFormatter);\n    exports.CategoricalTickFormatter = CategoricalTickFormatter;\n    ;\n    CategoricalTickFormatter.prototype.type = 'CategoricalTickFormatter';    \n}","/*models/formatters/datetime_tick_formatter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var _array, _strftime, _us;\n    var sprintf_js_1 = require(362    /* sprintf-js */);\n    var tz = require(363    /* timezone */);\n    var tick_formatter_1 = require(100    /* ./tick_formatter */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var types_1 = require(42    /* core/util/types */);\n    _us = function (t) {\n        // From double-precision unix (millisecond) timestamp get\n        // microsecond since last second. Precision seems to run\n        // out around the hundreds of nanoseconds scale, so rounding\n        // to the nearest microsecond should round to a nice\n        // microsecond / millisecond tick.\n        return Math.round(t / 1000 % 1 * 1000000);\n    };\n    _array = function (t) {\n        return tz(t, '%Y %m %d %H %M %S').split(/\\s+/).map(function (e) {\n            return parseInt(e, 10);\n        });\n    };\n    _strftime = function (t, format) {\n        var microsecond_replacement_string;\n        if (types_1.isFunction(format)) {\n            return format(t);\n        } else {\n            // Python's datetime library augments the microsecond directive %f, which is not\n            // supported by the javascript library timezone: http://bigeasy.github.io/timezone/.\n            // Use a regular expression to replace %f directive with microseconds.\n            // TODO: what should we do for negative microsecond strings?\n            microsecond_replacement_string = sprintf_js_1.sprintf('$1%06d', _us(t));\n            format = format.replace(/((^|[^%])(%%)*)%f/, microsecond_replacement_string);\n            if (format.indexOf('%') === -1) {\n                // timezone seems to ignore any strings without any formatting directives,\n                // and just return the time argument back instead of the string argument.\n                // But we want the string argument, in case a user supplies a format string\n                // which doesn't contain a formatting directive or is only using %f.\n                return format;\n            }\n            return tz(t, format);\n        }\n    };\n    var DatetimeTickFormatter = function (_super) {\n        tslib_1.__extends(DatetimeTickFormatter, _super);\n        function DatetimeTickFormatter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DatetimeTickFormatter.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            // TODO (bev) trigger update on format change\n            return this._update_width_formats();\n        };\n        DatetimeTickFormatter.prototype._update_width_formats = function () {\n            var _widths, now;\n            now = tz(new Date());\n            _widths = function (fmt_strings) {\n                var fmt_string, sizes, sorted;\n                sizes = function () {\n                    var j, len, results;\n                    results = [];\n                    for (j = 0, len = fmt_strings.length; j < len; j++) {\n                        fmt_string = fmt_strings[j];\n                        results.push(_strftime(now, fmt_string).length);\n                    }\n                    return results;\n                }();\n                sorted = array_1.sortBy(array_1.zip(sizes, fmt_strings), function (_a) {\n                    var size = _a[0], fmt = _a[1];\n                    return size;\n                });\n                return array_1.unzip(sorted);\n            };\n            return this._width_formats = {\n                microseconds: _widths(this.microseconds),\n                milliseconds: _widths(this.milliseconds),\n                seconds: _widths(this.seconds),\n                minsec: _widths(this.minsec),\n                minutes: _widths(this.minutes),\n                hourmin: _widths(this.hourmin),\n                hours: _widths(this.hours),\n                days: _widths(this.days),\n                months: _widths(this.months),\n                years: _widths(this.years)\n            };\n        };\n        // FIXME There is some unfortunate flicker when panning/zooming near the\n        // span boundaries.\n        // FIXME Rounding is weird at the 20-us scale and below.\n        DatetimeTickFormatter.prototype._get_resolution_str = function (resolution_secs, span_secs) {\n            var adjusted_secs;\n            // Our resolution boundaries should not be round numbers, because we want\n            // them to fall between the possible tick intervals (which *are* round\n            // numbers, as we've worked hard to ensure).  Consequently, we adjust the\n            // resolution upwards a small amount (less than any possible step in\n            // scales) to make the effective boundaries slightly lower.\n            adjusted_secs = resolution_secs * 1.1;\n            switch (false) {\n            case !(adjusted_secs < 0.001):\n                return 'microseconds';\n            case !(adjusted_secs < 1):\n                return 'milliseconds';\n            case !(adjusted_secs < 60):\n                if (span_secs >= 60) {\n                    return 'minsec';\n                } else {\n                    return 'seconds';\n                }\n            case !(adjusted_secs < 3600):\n                if (span_secs >= 3600) {\n                    return 'hourmin';\n                } else {\n                    return 'minutes';\n                }\n            case !(adjusted_secs < 24 * 3600):\n                return 'hours';\n            case !(adjusted_secs < 31 * 24 * 3600):\n                return 'days';\n            case !(adjusted_secs < 365 * 24 * 3600):\n                return 'months';\n            default:\n                return 'years';\n            }\n        };\n        // TODO (bev) remove these unused \"default\" params and associated logic\n        DatetimeTickFormatter.prototype.doFormat = function (ticks, axis, num_labels, char_width, fill_ratio, ticker) {\n            if (num_labels === void 0) {\n                num_labels = null;\n            }\n            if (char_width === void 0) {\n                char_width = null;\n            }\n            if (fill_ratio === void 0) {\n                fill_ratio = 0.3;\n            }\n            if (ticker === void 0) {\n                ticker = null;\n            }\n            var error, fmt, format, formats, good_formats, hybrid_handled, i, j, k, l, labels, len, len1, next_format, next_ndx, r, ref, ref1, resol, resol_ndx, s, span, ss, t, time_tuple_ndx_for_resol, tm, widths;\n            // In order to pick the right set of labels, we need to determine\n            // the resolution of the ticks.  We can do this using a ticker if\n            // it's provided, or by computing the resolution from the actual\n            // ticks we've been given.\n            if (ticks.length === 0) {\n                return [];\n            }\n            span = Math.abs(ticks[ticks.length - 1] - ticks[0]) / 1000;\n            if (ticker) {\n                r = ticker.resolution;\n            } else {\n                r = span / (ticks.length - 1);\n            }\n            resol = this._get_resolution_str(r, span);\n            _a = this._width_formats[resol], widths = _a[0], formats = _a[1];\n            format = formats[0];\n            // FIXME I'm pretty sure this code won't work; luckily it doesn't seem to\n            // be used.\n            if (char_width) {\n                // If a width is provided, then we pick the most appropriate scale,\n                // otherwise just use the widest format\n                good_formats = [];\n                for (i = j = 0, ref = widths.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    if (widths[i] * ticks.length < fill_ratio * char_width) {\n                        good_formats.push(this._width_formats[i]);\n                    }\n                }\n                if (good_formats.length > 0) {\n                    format = good_formats[good_formats.length - 1];\n                }\n            }\n            // Apply the format to the tick values\n            labels = [];\n            resol_ndx = this.format_order.indexOf(resol);\n            // This dictionary maps the name of a time resolution (in @format_order)\n            // to its index in a time.localtime() timetuple.  The default is to map\n            // everything to index 0, which is year.  This is not ideal; it might cause\n            // a problem with the tick at midnight, january 1st, 0 a.d. being incorrectly\n            // promoted at certain tick resolutions.\n            time_tuple_ndx_for_resol = {};\n            ref1 = this.format_order;\n            for (k = 0, len = ref1.length; k < len; k++) {\n                fmt = ref1[k];\n                time_tuple_ndx_for_resol[fmt] = 0;\n            }\n            time_tuple_ndx_for_resol['seconds'] = 5;\n            time_tuple_ndx_for_resol['minsec'] = 4;\n            time_tuple_ndx_for_resol['minutes'] = 4;\n            time_tuple_ndx_for_resol['hourmin'] = 3;\n            time_tuple_ndx_for_resol['hours'] = 3;\n            // As we format each tick, check to see if we are at a boundary of the\n            // next higher unit of time.  If so, replace the current format with one\n            // from that resolution.  This is not the best heuristic in the world,\n            // but it works!  There is some trickiness here due to having to deal\n            // with hybrid formats in a reasonable manner.\n            for (l = 0, len1 = ticks.length; l < len1; l++) {\n                t = ticks[l];\n                try {\n                    tm = _array(t);\n                    s = _strftime(t, format);\n                } catch (error1) {\n                    error = error1;\n                    logging_1.logger.warn('unable to format tick for timestamp value ' + t);\n                    logging_1.logger.warn(' - ' + error);\n                    labels.push('ERR');\n                    continue;\n                }\n                hybrid_handled = false;\n                next_ndx = resol_ndx;\n                // The way to check that we are at the boundary of the next unit of\n                // time is by checking that we have 0 units of the resolution, i.e.\n                // we are at zero minutes, so display hours, or we are at zero seconds,\n                // so display minutes (and if that is zero as well, then display hours).\n                while (tm[time_tuple_ndx_for_resol[this.format_order[next_ndx]]] === 0) {\n                    next_ndx += 1;\n                    if (next_ndx === this.format_order.length) {\n                        break;\n                    }\n                    if ((resol === 'minsec' || resol === 'hourmin') && !hybrid_handled) {\n                        if (resol === 'minsec' && tm[4] === 0 && tm[5] !== 0 || resol === 'hourmin' && tm[3] === 0 && tm[4] !== 0) {\n                            next_format = this._width_formats[this.format_order[resol_ndx - 1]][1][0];\n                            s = _strftime(t, next_format);\n                            break;\n                        } else {\n                            hybrid_handled = true;\n                        }\n                    }\n                    next_format = this._width_formats[this.format_order[next_ndx]][1][0];\n                    s = _strftime(t, next_format);\n                }\n                // TODO: should expose this in api. %H, %d, etc use leading zeros and\n                // users might prefer to see them lined up correctly.\n                if (this.strip_leading_zeros) {\n                    ss = s.replace(/^0+/g, '');\n                    if (ss !== s && isNaN(parseInt(ss))) {\n                        // If the string can now be parsed as starting with an integer, then\n                        // leave all zeros stripped, otherwise start with a zero. Hence:\n                        // A label such as '000ms' should leave one zero.\n                        // A label such as '001ms' or '0-1ms' should not leave a leading zero.\n                        ss = '0' + ss;\n                    }\n                    labels.push(ss);\n                } else {\n                    labels.push(s);\n                }\n            }\n            return labels;\n            var _a;\n        };\n        return DatetimeTickFormatter;\n    }(tick_formatter_1.TickFormatter);\n    exports.DatetimeTickFormatter = DatetimeTickFormatter;\n    ;\n    DatetimeTickFormatter.prototype.type = 'DatetimeTickFormatter';\n    DatetimeTickFormatter.define({\n        microseconds: [\n            p.Array,\n            ['%fus']\n        ],\n        milliseconds: [\n            p.Array,\n            [\n                '%3Nms',\n                '%S.%3Ns'\n            ]\n        ],\n        seconds: [\n            p.Array,\n            ['%Ss']\n        ],\n        minsec: [\n            p.Array,\n            [':%M:%S']\n        ],\n        minutes: [\n            p.Array,\n            [\n                ':%M',\n                '%Mm'\n            ]\n        ],\n        hourmin: [\n            p.Array,\n            ['%H:%M']\n        ],\n        hours: [\n            p.Array,\n            [\n                '%Hh',\n                '%H:%M'\n            ]\n        ],\n        days: [\n            p.Array,\n            [\n                '%m/%d',\n                '%a%d'\n            ]\n        ],\n        months: [\n            p.Array,\n            [\n                '%m/%Y',\n                '%b%y'\n            ]\n        ],\n        years: [\n            p.Array,\n            ['%Y']\n        ]\n    });\n    // Labels of time units, from finest to coarsest.\n    DatetimeTickFormatter.prototype.format_order = [\n        'microseconds',\n        'milliseconds',\n        'seconds',\n        'minsec',\n        'minutes',\n        'hourmin',\n        'hours',\n        'days',\n        'months',\n        'years'\n    ];\n    // Whether or not to strip the leading zeros on tick labels.\n    DatetimeTickFormatter.prototype.strip_leading_zeros = true;    \n}","/*models/formatters/func_tick_formatter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var tick_formatter_1 = require(100    /* ./tick_formatter */);\n    var p = require(15    /* core/properties */);\n    var object_1 = require(30    /* core/util/object */);\n    var FuncTickFormatter = function (_super) {\n        tslib_1.__extends(FuncTickFormatter, _super);\n        function FuncTickFormatter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        FuncTickFormatter.prototype._make_func = function () {\n            return new (Function.bind.apply(Function, [\n                void 0,\n                'tick'\n            ].concat(Object.keys(this.args), [\n                'require',\n                this.code\n            ])))();\n        };\n        FuncTickFormatter.prototype.doFormat = function (ticks, axis) {\n            var func, tick;\n            func = this._make_func();\n            return function () {\n                var i, len, results;\n                results = [];\n                for (i = 0, len = ticks.length; i < len; i++) {\n                    tick = ticks[i];\n                    results.push(func.apply(void 0, [tick].concat(object_1.values(this.args), [require])));\n                }\n                return results;\n            }.call(this);\n        };\n        return FuncTickFormatter;\n    }(tick_formatter_1.TickFormatter);\n    exports.FuncTickFormatter = FuncTickFormatter;\n    ;\n    FuncTickFormatter.prototype.type = 'FuncTickFormatter';\n    FuncTickFormatter.define({\n        args: [\n            p.Any,\n            {}\n        ],\n        code: [\n            p.String,\n            ''\n        ]\n    });    \n}","/*models/formatters/index*/\nfunction _(require, module, exports) {\n    var basic_tick_formatter_1 = require(91    /* ./basic_tick_formatter */);\n    exports.BasicTickFormatter = basic_tick_formatter_1.BasicTickFormatter;\n    var categorical_tick_formatter_1 = require(92    /* ./categorical_tick_formatter */);\n    exports.CategoricalTickFormatter = categorical_tick_formatter_1.CategoricalTickFormatter;\n    var datetime_tick_formatter_1 = require(93    /* ./datetime_tick_formatter */);\n    exports.DatetimeTickFormatter = datetime_tick_formatter_1.DatetimeTickFormatter;\n    var func_tick_formatter_1 = require(94    /* ./func_tick_formatter */);\n    exports.FuncTickFormatter = func_tick_formatter_1.FuncTickFormatter;\n    var log_tick_formatter_1 = require(96    /* ./log_tick_formatter */);\n    exports.LogTickFormatter = log_tick_formatter_1.LogTickFormatter;\n    var mercator_tick_formatter_1 = require(97    /* ./mercator_tick_formatter */);\n    exports.MercatorTickFormatter = mercator_tick_formatter_1.MercatorTickFormatter;\n    var numeral_tick_formatter_1 = require(98    /* ./numeral_tick_formatter */);\n    exports.NumeralTickFormatter = numeral_tick_formatter_1.NumeralTickFormatter;\n    var printf_tick_formatter_1 = require(99    /* ./printf_tick_formatter */);\n    exports.PrintfTickFormatter = printf_tick_formatter_1.PrintfTickFormatter;\n    var tick_formatter_1 = require(100    /* ./tick_formatter */);\n    exports.TickFormatter = tick_formatter_1.TickFormatter;    \n}","/*models/formatters/log_tick_formatter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var basic_tick_formatter_1 = require(91    /* ./basic_tick_formatter */);\n    var tick_formatter_1 = require(100    /* ./tick_formatter */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var LogTickFormatter = function (_super) {\n        tslib_1.__extends(LogTickFormatter, _super);\n        function LogTickFormatter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LogTickFormatter.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this.basic_formatter = new basic_tick_formatter_1.BasicTickFormatter();\n            if (this.ticker == null) {\n                return logging_1.logger.warn('LogTickFormatter not configured with a ticker, using default base of 10 (labels will be incorrect if ticker base is not 10)');\n            }\n        };\n        LogTickFormatter.prototype.doFormat = function (ticks, axis) {\n            var base, i, j, labels, ref, small_interval;\n            if (ticks.length === 0) {\n                return [];\n            }\n            if (this.ticker != null) {\n                base = this.ticker.base;\n            } else {\n                base = 10;\n            }\n            small_interval = false;\n            labels = new Array(ticks.length);\n            for (i = j = 0, ref = ticks.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                labels[i] = base + '^' + Math.round(Math.log(ticks[i]) / Math.log(base));\n                if (i > 0 && labels[i] === labels[i - 1]) {\n                    small_interval = true;\n                    break;\n                }\n            }\n            if (small_interval) {\n                labels = this.basic_formatter.doFormat(ticks);\n            }\n            return labels;\n        };\n        return LogTickFormatter;\n    }(tick_formatter_1.TickFormatter);\n    exports.LogTickFormatter = LogTickFormatter;\n    ;\n    LogTickFormatter.prototype.type = 'LogTickFormatter';\n    LogTickFormatter.define({\n        ticker: [\n            p.Instance,\n            null\n        ]\n    });    \n}","/*models/formatters/mercator_tick_formatter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var basic_tick_formatter_1 = require(91    /* ./basic_tick_formatter */);\n    var p = require(15    /* core/properties */);\n    var proj4_1 = require(31    /* core/util/proj4 */);\n    var MercatorTickFormatter = function (_super) {\n        tslib_1.__extends(MercatorTickFormatter, _super);\n        function MercatorTickFormatter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MercatorTickFormatter.prototype.doFormat = function (ticks, axis) {\n            var i, j, k, lat, lon, proj_ticks, ref, ref1;\n            if (this.dimension == null) {\n                throw new Error('MercatorTickFormatter.dimension not configured');\n            }\n            if (ticks.length === 0) {\n                return [];\n            }\n            proj_ticks = new Array(ticks.length);\n            if (this.dimension === 'lon') {\n                for (i = j = 0, ref = ticks.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    _a = proj4_1.proj4(proj4_1.mercator).inverse([\n                        ticks[i],\n                        axis.loc\n                    ]), lon = _a[0], lat = _a[1];\n                    proj_ticks[i] = lon;\n                }\n            } else {\n                for (i = k = 0, ref1 = ticks.length; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {\n                    _b = proj4_1.proj4(proj4_1.mercator).inverse([\n                        axis.loc,\n                        ticks[i]\n                    ]), lon = _b[0], lat = _b[1];\n                    proj_ticks[i] = lat;\n                }\n            }\n            return _super.prototype.doFormat.call(this, proj_ticks, axis);\n            var _a, _b;\n        };\n        return MercatorTickFormatter;\n    }(basic_tick_formatter_1.BasicTickFormatter);\n    exports.MercatorTickFormatter = MercatorTickFormatter;\n    ;\n    MercatorTickFormatter.prototype.type = 'MercatorTickFormatter';\n    MercatorTickFormatter.define({ dimension: [p.LatLon] });    \n}","/*models/formatters/numeral_tick_formatter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var Numbro = require(332    /* numbro */);\n    var tick_formatter_1 = require(100    /* ./tick_formatter */);\n    var p = require(15    /* core/properties */);\n    var NumeralTickFormatter = function (_super) {\n        tslib_1.__extends(NumeralTickFormatter, _super);\n        function NumeralTickFormatter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        NumeralTickFormatter.prototype.doFormat = function (ticks, axis) {\n            var format, labels, language, rounding, tick;\n            format = this.format;\n            language = this.language;\n            rounding = function () {\n                switch (this.rounding) {\n                case 'round':\n                case 'nearest':\n                    return Math.round;\n                case 'floor':\n                case 'rounddown':\n                    return Math.floor;\n                case 'ceil':\n                case 'roundup':\n                    return Math.ceil;\n                }\n            }.call(this);\n            labels = function () {\n                var i, len, results;\n                results = [];\n                for (i = 0, len = ticks.length; i < len; i++) {\n                    tick = ticks[i];\n                    results.push(Numbro.format(tick, format, language, rounding));\n                }\n                return results;\n            }();\n            return labels;\n        };\n        return NumeralTickFormatter;\n    }(tick_formatter_1.TickFormatter);\n    exports.NumeralTickFormatter = NumeralTickFormatter;\n    ;\n    NumeralTickFormatter.prototype.type = 'NumeralTickFormatter';\n    NumeralTickFormatter.define({\n        // TODO (bev) all of these could be tightened up\n        format: [\n            p.String,\n            '0,0'\n        ],\n        language: [\n            p.String,\n            'en'\n        ],\n        rounding: [\n            p.String,\n            'round'\n        ]\n    });    \n}","/*models/formatters/printf_tick_formatter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var sprintf_js_1 = require(362    /* sprintf-js */);\n    var tick_formatter_1 = require(100    /* ./tick_formatter */);\n    var p = require(15    /* core/properties */);\n    var PrintfTickFormatter = function (_super) {\n        tslib_1.__extends(PrintfTickFormatter, _super);\n        function PrintfTickFormatter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PrintfTickFormatter.prototype.doFormat = function (ticks, axis) {\n            var format, labels, tick;\n            format = this.format;\n            labels = function () {\n                var i, len, results;\n                results = [];\n                for (i = 0, len = ticks.length; i < len; i++) {\n                    tick = ticks[i];\n                    results.push(sprintf_js_1.sprintf(format, tick));\n                }\n                return results;\n            }();\n            return labels;\n        };\n        return PrintfTickFormatter;\n    }(tick_formatter_1.TickFormatter);\n    exports.PrintfTickFormatter = PrintfTickFormatter;\n    ;\n    PrintfTickFormatter.prototype.type = 'PrintfTickFormatter';\n    PrintfTickFormatter.define({\n        format: [\n            p.String,\n            '%s'\n        ]\n    });    \n}","/*models/formatters/tick_formatter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    var TickFormatter = function (_super) {\n        tslib_1.__extends(TickFormatter, _super);\n        function TickFormatter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TickFormatter.prototype.doFormat = function (ticks, axis) {\n        };\n        return TickFormatter;\n    }(model_1.Model);\n    exports.TickFormatter = TickFormatter;\n    ;\n    TickFormatter.prototype.type = 'TickFormatter';    \n}","/*models/glyphs/annular_wedge*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var hittest = require(9    /* core/hittest */);\n    var p = require(15    /* core/properties */);\n    var math_1 = require(29    /* core/util/math */);\n    exports.AnnularWedgeView = function (_super) {\n        tslib_1.__extends(AnnularWedgeView, _super);\n        function AnnularWedgeView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        AnnularWedgeView.prototype._map_data = function () {\n            var i, j, ref, results;\n            if (this.model.properties.inner_radius.units === 'data') {\n                this.sinner_radius = this.sdist(this.renderer.xscale, this._x, this._inner_radius);\n            } else {\n                this.sinner_radius = this._inner_radius;\n            }\n            if (this.model.properties.outer_radius.units === 'data') {\n                this.souter_radius = this.sdist(this.renderer.xscale, this._x, this._outer_radius);\n            } else {\n                this.souter_radius = this._outer_radius;\n            }\n            this._angle = new Float32Array(this._start_angle.length);\n            results = [];\n            for (i = j = 0, ref = this._start_angle.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                results.push(this._angle[i] = this._end_angle[i] - this._start_angle[i]);\n            }\n            return results;\n        };\n        AnnularWedgeView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy, _start_angle = _a._start_angle, _angle = _a._angle, sinner_radius = _a.sinner_radius, souter_radius = _a.souter_radius;\n            var direction, i, j, len, results;\n            direction = this.model.properties.direction.value();\n            results = [];\n            for (j = 0, len = indices.length; j < len; j++) {\n                i = indices[j];\n                if (isNaN(sx[i] + sy[i] + sinner_radius[i] + souter_radius[i] + _start_angle[i] + _angle[i])) {\n                    continue;\n                }\n                ctx.translate(sx[i], sy[i]);\n                ctx.rotate(_start_angle[i]);\n                ctx.moveTo(souter_radius[i], 0);\n                ctx.beginPath();\n                ctx.arc(0, 0, souter_radius[i], 0, _angle[i], direction);\n                ctx.rotate(_angle[i]);\n                ctx.lineTo(sinner_radius[i], 0);\n                ctx.arc(0, 0, sinner_radius[i], 0, -_angle[i], !direction);\n                ctx.closePath();\n                ctx.rotate(-_angle[i] - _start_angle[i]);\n                ctx.translate(-sx[i], -sy[i]);\n                if (this.visuals.fill.doit) {\n                    this.visuals.fill.set_vectorize(ctx, i);\n                    ctx.fill();\n                }\n                if (this.visuals.line.doit) {\n                    this.visuals.line.set_vectorize(ctx, i);\n                    results.push(ctx.stroke());\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        AnnularWedgeView.prototype._hit_point = function (geometry) {\n            var angle, bbox, candidates, direction, dist, hits, i, ir2, j, k, len, len1, or2, ref, sx, sx0, sx1, sy, sy0, sy1, x, x0, x1, y, y0, y1;\n            sx = geometry.sx, sy = geometry.sy;\n            x = this.renderer.xscale.invert(sx);\n            y = this.renderer.yscale.invert(sy);\n            // check radius first\n            if (this.model.properties.outer_radius.units === 'data') {\n                x0 = x - this.max_outer_radius;\n                x1 = x + this.max_outer_radius;\n                y0 = y - this.max_outer_radius;\n                y1 = y + this.max_outer_radius;\n            } else {\n                sx0 = sx - this.max_outer_radius;\n                sx1 = sx + this.max_outer_radius;\n                _a = this.renderer.xscale.r_invert(sx0, sx1), x0 = _a[0], x1 = _a[1];\n                sy0 = sy - this.max_outer_radius;\n                sy1 = sy + this.max_outer_radius;\n                _b = this.renderer.yscale.r_invert(sy0, sy1), y0 = _b[0], y1 = _b[1];\n            }\n            candidates = [];\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            ref = this.index.indices(bbox);\n            for (j = 0, len = ref.length; j < len; j++) {\n                i = ref[j];\n                or2 = Math.pow(this.souter_radius[i], 2);\n                ir2 = Math.pow(this.sinner_radius[i], 2);\n                _c = this.renderer.xscale.r_compute(x, this._x[i]), sx0 = _c[0], sx1 = _c[1];\n                _d = this.renderer.yscale.r_compute(y, this._y[i]), sy0 = _d[0], sy1 = _d[1];\n                dist = Math.pow(sx0 - sx1, 2) + Math.pow(sy0 - sy1, 2);\n                if (dist <= or2 && dist >= ir2) {\n                    candidates.push([\n                        i,\n                        dist\n                    ]);\n                }\n            }\n            direction = this.model.properties.direction.value();\n            hits = [];\n            for (k = 0, len1 = candidates.length; k < len1; k++) {\n                _e = candidates[k], i = _e[0], dist = _e[1];\n                // NOTE: minus the angle because JS uses non-mathy convention for angles\n                angle = Math.atan2(sy - this.sy[i], sx - this.sx[i]);\n                if (math_1.angle_between(-angle, -this._start_angle[i], -this._end_angle[i], direction)) {\n                    hits.push([\n                        i,\n                        dist\n                    ]);\n                }\n            }\n            return hittest.create_1d_hit_test_result(hits);\n            var _a, _b, _c, _d, _e;\n        };\n        AnnularWedgeView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_area_legend(ctx, x0, x1, y0, y1, index);\n        };\n        AnnularWedgeView.prototype._scxy = function (i) {\n            var a, r;\n            r = (this.sinner_radius[i] + this.souter_radius[i]) / 2;\n            a = (this._start_angle[i] + this._end_angle[i]) / 2;\n            return {\n                x: this.sx[i] + r * Math.cos(a),\n                y: this.sy[i] + r * Math.sin(a)\n            };\n        };\n        AnnularWedgeView.prototype.scx = function (i) {\n            return this._scxy(i).x;\n        };\n        AnnularWedgeView.prototype.scy = function (i) {\n            return this._scxy(i).y;\n        };\n        return AnnularWedgeView;\n    }(xy_glyph_1.XYGlyphView);\n    var AnnularWedge = function (_super) {\n        tslib_1.__extends(AnnularWedge, _super);\n        function AnnularWedge() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return AnnularWedge;\n    }(xy_glyph_1.XYGlyph);\n    exports.AnnularWedge = AnnularWedge;\n    ;\n    AnnularWedge.prototype.default_view = exports.AnnularWedgeView;\n    AnnularWedge.prototype.type = 'AnnularWedge';\n    AnnularWedge.mixins([\n        'line',\n        'fill'\n    ]);\n    AnnularWedge.define({\n        direction: [\n            p.Direction,\n            'anticlock'\n        ],\n        inner_radius: [p.DistanceSpec],\n        outer_radius: [p.DistanceSpec],\n        start_angle: [p.AngleSpec],\n        end_angle: [p.AngleSpec]\n    });    \n}","/*models/glyphs/annulus*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var hittest = require(9    /* core/hittest */);\n    var p = require(15    /* core/properties */);\n    exports.AnnulusView = function (_super) {\n        tslib_1.__extends(AnnulusView, _super);\n        function AnnulusView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        AnnulusView.prototype._map_data = function () {\n            if (this.model.properties.inner_radius.units === 'data') {\n                this.sinner_radius = this.sdist(this.renderer.xscale, this._x, this._inner_radius);\n            } else {\n                this.sinner_radius = this._inner_radius;\n            }\n            if (this.model.properties.outer_radius.units === 'data') {\n                return this.souter_radius = this.sdist(this.renderer.xscale, this._x, this._outer_radius);\n            } else {\n                return this.souter_radius = this._outer_radius;\n            }\n        };\n        AnnulusView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy, sinner_radius = _a.sinner_radius, souter_radius = _a.souter_radius;\n            var clockwise, i, isie, j, k, len, len1, ref, results;\n            results = [];\n            for (j = 0, len = indices.length; j < len; j++) {\n                i = indices[j];\n                if (isNaN(sx[i] + sy[i] + sinner_radius[i] + souter_radius[i])) {\n                    continue;\n                }\n                // Because this visual has a whole in it, it proved \"challenging\"\n                // for some browsers to render if drawn in one go --- i.e. it did not\n                // work on IE. If we render in two parts (upper and lower part),\n                // it is unambiguous what part should be filled. The line is\n                // better drawn in one go though, otherwise the part where the pieces\n                // meet will not be fully closed due to aa.\n                // Detect Microsoft browser. Might need change for newer versions.\n                isie = navigator.userAgent.indexOf('MSIE') >= 0 || navigator.userAgent.indexOf('Trident') > 0 || navigator.userAgent.indexOf('Edge') > 0;\n                if (this.visuals.fill.doit) {\n                    this.visuals.fill.set_vectorize(ctx, i);\n                    ctx.beginPath();\n                    if (isie) {\n                        ref = [\n                            false,\n                            true\n                        ];\n                        // Draw two halves of the donut. Works on IE, but causes an aa line on Safari.\n                        for (k = 0, len1 = ref.length; k < len1; k++) {\n                            clockwise = ref[k];\n                            ctx.arc(sx[i], sy[i], sinner_radius[i], 0, Math.PI, clockwise);\n                            ctx.arc(sx[i], sy[i], souter_radius[i], Math.PI, 0, !clockwise);\n                        }\n                    } else {\n                        // Draw donut in one go. Does not work on iE.\n                        ctx.arc(sx[i], sy[i], sinner_radius[i], 0, 2 * Math.PI, true);\n                        ctx.arc(sx[i], sy[i], souter_radius[i], 2 * Math.PI, 0, false);\n                    }\n                    ctx.fill();\n                }\n                if (this.visuals.line.doit) {\n                    this.visuals.line.set_vectorize(ctx, i);\n                    ctx.beginPath();\n                    ctx.arc(sx[i], sy[i], sinner_radius[i], 0, 2 * Math.PI);\n                    ctx.moveTo(sx[i] + souter_radius[i], sy[i]);\n                    ctx.arc(sx[i], sy[i], souter_radius[i], 0, 2 * Math.PI);\n                    results.push(ctx.stroke());\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        AnnulusView.prototype._hit_point = function (geometry) {\n            var bbox, dist, hits, i, ir2, j, len, or2, ref, sx, sx0, sx1, sy, sy0, sy1, x, x0, x1, y, y0, y1;\n            sx = geometry.sx, sy = geometry.sy;\n            x = this.renderer.xscale.invert(sx);\n            x0 = x - this.max_radius;\n            x1 = x + this.max_radius;\n            y = this.renderer.yscale.invert(sy);\n            y0 = y - this.max_radius;\n            y1 = y + this.max_radius;\n            hits = [];\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            ref = this.index.indices(bbox);\n            for (j = 0, len = ref.length; j < len; j++) {\n                i = ref[j];\n                or2 = Math.pow(this.souter_radius[i], 2);\n                ir2 = Math.pow(this.sinner_radius[i], 2);\n                _a = this.renderer.xscale.r_compute(x, this._x[i]), sx0 = _a[0], sx1 = _a[1];\n                _b = this.renderer.yscale.r_compute(y, this._y[i]), sy0 = _b[0], sy1 = _b[1];\n                dist = Math.pow(sx0 - sx1, 2) + Math.pow(sy0 - sy1, 2);\n                if (dist <= or2 && dist >= ir2) {\n                    hits.push([\n                        i,\n                        dist\n                    ]);\n                }\n            }\n            return hittest.create_1d_hit_test_result(hits);\n            var _a, _b;\n        };\n        AnnulusView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            var data, indices, r, sinner_radius, souter_radius, sx, sy;\n            indices = [index];\n            sx = {};\n            sx[index] = (x0 + x1) / 2;\n            sy = {};\n            sy[index] = (y0 + y1) / 2;\n            r = Math.min(Math.abs(x1 - x0), Math.abs(y1 - y0)) * 0.5;\n            sinner_radius = {};\n            sinner_radius[index] = r * 0.4;\n            souter_radius = {};\n            souter_radius[index] = r * 0.8;\n            data = {\n                sx: sx,\n                sy: sy,\n                sinner_radius: sinner_radius,\n                souter_radius: souter_radius\n            };\n            return this._render(ctx, indices, data);\n        };\n        return AnnulusView;\n    }(xy_glyph_1.XYGlyphView);\n    var Annulus = function (_super) {\n        tslib_1.__extends(Annulus, _super);\n        function Annulus() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Annulus;\n    }(xy_glyph_1.XYGlyph);\n    exports.Annulus = Annulus;\n    ;\n    Annulus.prototype.default_view = exports.AnnulusView;\n    Annulus.prototype.type = 'Annulus';\n    Annulus.mixins([\n        'line',\n        'fill'\n    ]);\n    Annulus.define({\n        inner_radius: [p.DistanceSpec],\n        outer_radius: [p.DistanceSpec]\n    });    \n}","/*models/glyphs/arc*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var p = require(15    /* core/properties */);\n    exports.ArcView = function (_super) {\n        tslib_1.__extends(ArcView, _super);\n        function ArcView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ArcView.prototype._map_data = function () {\n            if (this.model.properties.radius.units === 'data') {\n                return this.sradius = this.sdist(this.renderer.xscale, this._x, this._radius);\n            } else {\n                return this.sradius = this._radius;\n            }\n        };\n        ArcView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy, sradius = _a.sradius, _start_angle = _a._start_angle, _end_angle = _a._end_angle;\n            var direction, i, j, len, results;\n            if (this.visuals.line.doit) {\n                direction = this.model.properties.direction.value();\n                results = [];\n                for (j = 0, len = indices.length; j < len; j++) {\n                    i = indices[j];\n                    if (isNaN(sx[i] + sy[i] + sradius[i] + _start_angle[i] + _end_angle[i])) {\n                        continue;\n                    }\n                    ctx.beginPath();\n                    ctx.arc(sx[i], sy[i], sradius[i], _start_angle[i], _end_angle[i], direction);\n                    this.visuals.line.set_vectorize(ctx, i);\n                    results.push(ctx.stroke());\n                }\n                return results;\n            }\n        };\n        ArcView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_line_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return ArcView;\n    }(xy_glyph_1.XYGlyphView);\n    var Arc = function (_super) {\n        tslib_1.__extends(Arc, _super);\n        function Arc() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Arc;\n    }(xy_glyph_1.XYGlyph);\n    exports.Arc = Arc;\n    ;\n    Arc.prototype.default_view = exports.ArcView;\n    Arc.prototype.type = 'Arc';\n    Arc.mixins(['line']);\n    Arc.define({\n        direction: [\n            p.Direction,\n            'anticlock'\n        ],\n        radius: [p.DistanceSpec],\n        start_angle: [p.AngleSpec],\n        end_angle: [p.AngleSpec]\n    });    \n}","/*models/glyphs/bezier*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var _cbb;\n    var spatial_1 = require(36    /* core/util/spatial */);\n    var glyph_1 = require(108    /* ./glyph */);\n    // algorithm adapted from http://stackoverflow.com/a/14429749/3406693\n    _cbb = function (x0, y0, x1, y1, x2, y2, x3, y3) {\n        var a, b, b2ac, bounds, c, i, j, jlen, k, mt, sqrtb2ac, t, t1, t2, tvalues, x, y;\n        tvalues = [];\n        bounds = [\n            [],\n            []\n        ];\n        for (i = k = 0; k <= 2; i = ++k) {\n            if (i === 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (Math.abs(a) < 1e-12) {\n                if (Math.abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = Math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n        j = tvalues.length;\n        jlen = j;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            x = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[0][j] = x;\n            y = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n            bounds[1][j] = y;\n        }\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        return [\n            Math.min.apply(null, bounds[0]),\n            Math.max.apply(null, bounds[1]),\n            Math.max.apply(null, bounds[0]),\n            Math.min.apply(null, bounds[1])\n        ];\n    };\n    exports.BezierView = function (_super) {\n        tslib_1.__extends(BezierView, _super);\n        function BezierView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BezierView.prototype._index_data = function () {\n            var i, k, points, ref, x0, x1, y0, y1;\n            points = [];\n            for (i = k = 0, ref = this._x0.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                if (isNaN(this._x0[i] + this._x1[i] + this._y0[i] + this._y1[i] + this._cx0[i] + this._cy0[i] + this._cx1[i] + this._cy1[i])) {\n                    continue;\n                }\n                _a = _cbb(this._x0[i], this._y0[i], this._x1[i], this._y1[i], this._cx0[i], this._cy0[i], this._cx1[i], this._cy1[i]), x0 = _a[0], y0 = _a[1], x1 = _a[2], y1 = _a[3];\n                points.push({\n                    minX: x0,\n                    minY: y0,\n                    maxX: x1,\n                    maxY: y1,\n                    i: i\n                });\n            }\n            return new spatial_1.RBush(points);\n            var _a;\n        };\n        BezierView.prototype._render = function (ctx, indices, _a) {\n            var sx0 = _a.sx0, sy0 = _a.sy0, sx1 = _a.sx1, sy1 = _a.sy1, scx = _a.scx, scx0 = _a.scx0, scy0 = _a.scy0, scx1 = _a.scx1, scy1 = _a.scy1;\n            var i, k, len, results;\n            if (this.visuals.line.doit) {\n                results = [];\n                for (k = 0, len = indices.length; k < len; k++) {\n                    i = indices[k];\n                    if (isNaN(sx0[i] + sy0[i] + sx1[i] + sy1[i] + scx0[i] + scy0[i] + scx1[i] + scy1[i])) {\n                        continue;\n                    }\n                    ctx.beginPath();\n                    ctx.moveTo(sx0[i], sy0[i]);\n                    ctx.bezierCurveTo(scx0[i], scy0[i], scx1[i], scy1[i], sx1[i], sy1[i]);\n                    this.visuals.line.set_vectorize(ctx, i);\n                    results.push(ctx.stroke());\n                }\n                return results;\n            }\n        };\n        BezierView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_line_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return BezierView;\n    }(glyph_1.GlyphView);\n    var Bezier = function (_super) {\n        tslib_1.__extends(Bezier, _super);\n        function Bezier() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Bezier;\n    }(glyph_1.Glyph);\n    exports.Bezier = Bezier;\n    ;\n    Bezier.prototype.default_view = exports.BezierView;\n    Bezier.prototype.type = 'Bezier';\n    Bezier.coords([\n        [\n            'x0',\n            'y0'\n        ],\n        [\n            'x1',\n            'y1'\n        ],\n        [\n            'cx0',\n            'cy0'\n        ],\n        [\n            'cx1',\n            'cy1'\n        ]\n    ]);\n    Bezier.mixins(['line']);    \n}","/*models/glyphs/box*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var spatial_1 = require(36    /* core/util/spatial */);\n    var glyph_1 = require(108    /* ./glyph */);\n    var hittest = require(9    /* core/hittest */);\n    // Not a publicly exposed Glyph, exists to factor code for bars and quads\n    exports.BoxView = function (_super) {\n        tslib_1.__extends(BoxView, _super);\n        function BoxView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoxView.prototype._index_box = function (len) {\n            var b, i, j, l, points, r, ref, t;\n            points = [];\n            for (i = j = 0, ref = len; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                _a = this._lrtb(i), l = _a[0], r = _a[1], t = _a[2], b = _a[3];\n                if (isNaN(l + r + t + b) || !isFinite(l + r + t + b)) {\n                    continue;\n                }\n                points.push({\n                    minX: l,\n                    minY: b,\n                    maxX: r,\n                    maxY: t,\n                    i: i\n                });\n            }\n            return new spatial_1.RBush(points);\n            var _a;\n        };\n        BoxView.prototype._render = function (ctx, indices, _a) {\n            var sleft = _a.sleft, sright = _a.sright, stop = _a.stop, sbottom = _a.sbottom;\n            var i, j, len1, results;\n            results = [];\n            for (j = 0, len1 = indices.length; j < len1; j++) {\n                i = indices[j];\n                if (isNaN(sleft[i] + stop[i] + sright[i] + sbottom[i])) {\n                    continue;\n                }\n                if (this.visuals.fill.doit) {\n                    this.visuals.fill.set_vectorize(ctx, i);\n                    ctx.fillRect(sleft[i], stop[i], sright[i] - sleft[i], sbottom[i] - stop[i]);\n                }\n                if (this.visuals.line.doit) {\n                    ctx.beginPath();\n                    ctx.rect(sleft[i], stop[i], sright[i] - sleft[i], sbottom[i] - stop[i]);\n                    this.visuals.line.set_vectorize(ctx, i);\n                    results.push(ctx.stroke());\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        BoxView.prototype._hit_rect = function (geometry) {\n            return this._hit_rect_against_index(geometry);\n        };\n        BoxView.prototype._hit_point = function (geometry) {\n            var hits, result, sx, sy, x, y;\n            sx = geometry.sx, sy = geometry.sy;\n            x = this.renderer.xscale.invert(sx);\n            y = this.renderer.yscale.invert(sy);\n            hits = this.index.indices({\n                minX: x,\n                minY: y,\n                maxX: x,\n                maxY: y\n            });\n            result = hittest.create_hit_test_result();\n            result['1d'].indices = hits;\n            return result;\n        };\n        BoxView.prototype._hit_span = function (geometry) {\n            var hits, hr, maxX, maxY, minX, minY, result, sx, sy, vr, x, y;\n            sx = geometry.sx, sy = geometry.sy;\n            if (geometry.direction === 'v') {\n                y = this.renderer.yscale.invert(sy);\n                hr = this.renderer.plot_view.frame.bbox.h_range;\n                _a = this.renderer.xscale.r_invert(hr.start, hr.end), minX = _a[0], maxX = _a[1];\n                hits = this.index.indices({\n                    minX: minX,\n                    minY: y,\n                    maxX: maxX,\n                    maxY: y\n                });\n            } else {\n                x = this.renderer.xscale.invert(sx);\n                vr = this.renderer.plot_view.frame.bbox.v_range;\n                _b = this.renderer.yscale.r_invert(vr.start, vr.end), minY = _b[0], maxY = _b[1];\n                hits = this.index.indices({\n                    minX: x,\n                    minY: minY,\n                    maxX: x,\n                    maxY: maxY\n                });\n            }\n            result = hittest.create_hit_test_result();\n            result['1d'].indices = hits;\n            return result;\n            var _a, _b;\n        };\n        BoxView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_area_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return BoxView;\n    }(glyph_1.GlyphView);\n    var Box = function (_super) {\n        tslib_1.__extends(Box, _super);\n        function Box() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Box;\n    }(glyph_1.Glyph);\n    exports.Box = Box;\n    ;\n    Box.mixins([\n        'line',\n        'fill'\n    ]);    \n}","/*models/glyphs/circle*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var hittest = require(9    /* core/hittest */);\n    var p = require(15    /* core/properties */);\n    exports.CircleView = function (_super) {\n        tslib_1.__extends(CircleView, _super);\n        function CircleView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CircleView.prototype._map_data = function () {\n            var rd, s;\n            // NOTE: Order is important here: size is always present (at least\n            // a default), but radius is only present if a user specifies it\n            if (this._radius != null) {\n                if (this.model.properties.radius.spec.units === 'data') {\n                    rd = this.model.properties.radius_dimension.spec.value;\n                    return this.sradius = this.sdist(this.renderer[rd + 'scale'], this['_' + rd], this._radius);\n                } else {\n                    this.sradius = this._radius;\n                    return this.max_size = 2 * this.max_radius;\n                }\n            } else {\n                return this.sradius = function () {\n                    var j, len, ref, results;\n                    ref = this._size;\n                    results = [];\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        s = ref[j];\n                        results.push(s / 2);\n                    }\n                    return results;\n                }.call(this);\n            }\n        };\n        CircleView.prototype._mask_data = function (all_indices) {\n            var bbox, hr, sx0, sx1, sy0, sy1, vr, x0, x1, y0, y1;\n            _a = this.renderer.plot_view.frame.bbox.ranges, hr = _a[0], vr = _a[1];\n            // check for radius first\n            if (this._radius != null && this.model.properties.radius.units === 'data') {\n                sx0 = hr.start;\n                sx1 = hr.end;\n                _b = this.renderer.xscale.r_invert(sx0, sx1), x0 = _b[0], x1 = _b[1];\n                x0 -= this.max_radius;\n                x1 += this.max_radius;\n                sy0 = vr.start;\n                sy1 = vr.end;\n                _c = this.renderer.yscale.r_invert(sy0, sy1), y0 = _c[0], y1 = _c[1];\n                y0 -= this.max_radius;\n                y1 += this.max_radius;\n            } else {\n                sx0 = hr.start - this.max_size;\n                sx1 = hr.end + this.max_size;\n                _d = this.renderer.xscale.r_invert(sx0, sx1), x0 = _d[0], x1 = _d[1];\n                sy0 = vr.start - this.max_size;\n                sy1 = vr.end + this.max_size;\n                _e = this.renderer.yscale.r_invert(sy0, sy1), y0 = _e[0], y1 = _e[1];\n            }\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            return this.index.indices(bbox);\n            var _a, _b, _c, _d, _e;\n        };\n        CircleView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy, sradius = _a.sradius;\n            var i, j, len, results;\n            results = [];\n            for (j = 0, len = indices.length; j < len; j++) {\n                i = indices[j];\n                if (isNaN(sx[i] + sy[i] + sradius[i])) {\n                    continue;\n                }\n                ctx.beginPath();\n                ctx.arc(sx[i], sy[i], sradius[i], 0, 2 * Math.PI, false);\n                if (this.visuals.fill.doit) {\n                    this.visuals.fill.set_vectorize(ctx, i);\n                    ctx.fill();\n                }\n                if (this.visuals.line.doit) {\n                    this.visuals.line.set_vectorize(ctx, i);\n                    results.push(ctx.stroke());\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        CircleView.prototype._hit_point = function (geometry) {\n            var bbox, candidates, dist, hits, i, j, k, len, len1, r2, sx, sx0, sx1, sy, sy0, sy1, x, x0, x1, y, y0, y1;\n            sx = geometry.sx, sy = geometry.sy;\n            x = this.renderer.xscale.invert(sx);\n            y = this.renderer.yscale.invert(sy);\n            // check radius first\n            if (this._radius != null && this.model.properties.radius.units === 'data') {\n                x0 = x - this.max_radius;\n                x1 = x + this.max_radius;\n                y0 = y - this.max_radius;\n                y1 = y + this.max_radius;\n            } else {\n                sx0 = sx - this.max_size;\n                sx1 = sx + this.max_size;\n                _a = this.renderer.xscale.r_invert(sx0, sx1), x0 = _a[0], x1 = _a[1];\n                _b = [\n                    Math.min(x0, x1),\n                    Math.max(x0, x1)\n                ], x0 = _b[0], x1 = _b[1];\n                sy0 = sy - this.max_size;\n                sy1 = sy + this.max_size;\n                _c = this.renderer.yscale.r_invert(sy0, sy1), y0 = _c[0], y1 = _c[1];\n                _d = [\n                    Math.min(y0, y1),\n                    Math.max(y0, y1)\n                ], y0 = _d[0], y1 = _d[1];\n            }\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            candidates = this.index.indices(bbox);\n            hits = [];\n            if (this._radius != null && this.model.properties.radius.units === 'data') {\n                for (j = 0, len = candidates.length; j < len; j++) {\n                    i = candidates[j];\n                    r2 = Math.pow(this.sradius[i], 2);\n                    _e = this.renderer.xscale.r_compute(x, this._x[i]), sx0 = _e[0], sx1 = _e[1];\n                    _f = this.renderer.yscale.r_compute(y, this._y[i]), sy0 = _f[0], sy1 = _f[1];\n                    dist = Math.pow(sx0 - sx1, 2) + Math.pow(sy0 - sy1, 2);\n                    if (dist <= r2) {\n                        hits.push([\n                            i,\n                            dist\n                        ]);\n                    }\n                }\n            } else {\n                for (k = 0, len1 = candidates.length; k < len1; k++) {\n                    i = candidates[k];\n                    r2 = Math.pow(this.sradius[i], 2);\n                    dist = Math.pow(this.sx[i] - sx, 2) + Math.pow(this.sy[i] - sy, 2);\n                    if (dist <= r2) {\n                        hits.push([\n                            i,\n                            dist\n                        ]);\n                    }\n                }\n            }\n            return hittest.create_1d_hit_test_result(hits);\n            var _a, _b, _c, _d, _e, _f;\n        };\n        CircleView.prototype._hit_span = function (geometry) {\n            var bbox, hits, maxX, maxY, minX, minY, ms, result, sx, sx0, sx1, sy, sy0, sy1, x0, x1, y0, y1;\n            sx = geometry.sx, sy = geometry.sy;\n            _a = this.bounds(), minX = _a.minX, minY = _a.minY, maxX = _a.maxX, maxY = _a.maxY;\n            result = hittest.create_hit_test_result();\n            if (geometry.direction === 'h') {\n                // use circle bounds instead of current pointer y coordinates\n                y0 = minY;\n                y1 = maxY;\n                if (this._radius != null && this.model.properties.radius.units === 'data') {\n                    sx0 = sx - this.max_radius;\n                    sx1 = sx + this.max_radius;\n                    _b = this.renderer.xscale.r_invert(sx0, sx1), x0 = _b[0], x1 = _b[1];\n                } else {\n                    ms = this.max_size / 2;\n                    sx0 = sx - ms;\n                    sx1 = sx + ms;\n                    _c = this.renderer.xscale.r_invert(sx0, sx1), x0 = _c[0], x1 = _c[1];\n                }\n            } else {\n                // use circle bounds instead of current pointer x coordinates\n                x0 = minX;\n                x1 = maxX;\n                if (this._radius != null && this.model.properties.radius.units === 'data') {\n                    sy0 = sy - this.max_radius;\n                    sy1 = sy + this.max_radius;\n                    _d = this.renderer.yscale.r_invert(sy0, sy1), y0 = _d[0], y1 = _d[1];\n                } else {\n                    ms = this.max_size / 2;\n                    sy0 = sy - ms;\n                    sy1 = sy + ms;\n                    _e = this.renderer.yscale.r_invert(sy0, sy1), y0 = _e[0], y1 = _e[1];\n                }\n            }\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            hits = this.index.indices(bbox);\n            result['1d'].indices = hits;\n            return result;\n            var _a, _b, _c, _d, _e;\n        };\n        CircleView.prototype._hit_rect = function (geometry) {\n            var bbox, result, sx0, sx1, sy0, sy1, x0, x1, y0, y1;\n            sx0 = geometry.sx0, sx1 = geometry.sx1, sy0 = geometry.sy0, sy1 = geometry.sy1;\n            _a = this.renderer.xscale.r_invert(sx0, sx1), x0 = _a[0], x1 = _a[1];\n            _b = this.renderer.yscale.r_invert(sy0, sy1), y0 = _b[0], y1 = _b[1];\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            result = hittest.create_hit_test_result();\n            result['1d'].indices = this.index.indices(bbox);\n            return result;\n            var _a, _b;\n        };\n        CircleView.prototype._hit_poly = function (geometry) {\n            var candidates, hits, i, idx, j, k, ref, ref1, result, results, sx, sy;\n            sx = geometry.sx, sy = geometry.sy;\n            // TODO (bev) use spatial index to pare candidate list\n            candidates = function () {\n                results = [];\n                for (var j = 0, ref = this.sx.length; 0 <= ref ? j < ref : j > ref; 0 <= ref ? j++ : j--) {\n                    results.push(j);\n                }\n                return results;\n            }.apply(this);\n            hits = [];\n            for (i = k = 0, ref1 = candidates.length; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {\n                idx = candidates[i];\n                if (hittest.point_in_poly(this.sx[i], this.sy[i], sx, sy)) {\n                    hits.push(idx);\n                }\n            }\n            result = hittest.create_hit_test_result();\n            result['1d'].indices = hits;\n            return result;\n        };\n        // circle does not inherit from marker (since it also accepts radius) so we\n        // must supply a draw_legend for it  here\n        CircleView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            var data, indices, sradius, sx, sy;\n            // using objects like this seems a little wonky, since the keys are coerced to\n            // stings, but it works\n            indices = [index];\n            sx = {};\n            sx[index] = (x0 + x1) / 2;\n            sy = {};\n            sy[index] = (y0 + y1) / 2;\n            sradius = {};\n            sradius[index] = Math.min(Math.abs(x1 - x0), Math.abs(y1 - y0)) * 0.2;\n            data = {\n                sx: sx,\n                sy: sy,\n                sradius: sradius\n            };\n            return this._render(ctx, indices, data);\n        };\n        return CircleView;\n    }(xy_glyph_1.XYGlyphView);\n    var Circle = function (_super) {\n        tslib_1.__extends(Circle, _super);\n        function Circle() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Circle.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            return this.properties.radius.optional = true;\n        };\n        return Circle;\n    }(xy_glyph_1.XYGlyph);\n    exports.Circle = Circle;\n    ;\n    Circle.prototype.default_view = exports.CircleView;\n    Circle.prototype.type = 'Circle';\n    Circle.mixins([\n        'line',\n        'fill'\n    ]);\n    Circle.define({\n        angle: [\n            p.AngleSpec,\n            0\n        ],\n        size: [\n            p.DistanceSpec,\n            {\n                units: 'screen',\n                value: 4\n            }\n        ],\n        radius: [\n            p.DistanceSpec,\n            null\n        ],\n        radius_dimension: [\n            p.String,\n            'x'\n        ]\n    });    \n}","/*models/glyphs/ellipse*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var p = require(15    /* core/properties */);\n    exports.EllipseView = function (_super) {\n        tslib_1.__extends(EllipseView, _super);\n        function EllipseView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        EllipseView.prototype._set_data = function () {\n            this.max_w2 = 0;\n            if (this.model.properties.width.units === 'data') {\n                this.max_w2 = this.max_width / 2;\n            }\n            this.max_h2 = 0;\n            if (this.model.properties.height.units === 'data') {\n                return this.max_h2 = this.max_height / 2;\n            }\n        };\n        EllipseView.prototype._map_data = function () {\n            if (this.model.properties.width.units === 'data') {\n                this.sw = this.sdist(this.renderer.xscale, this._x, this._width, 'center');\n            } else {\n                this.sw = this._width;\n            }\n            if (this.model.properties.height.units === 'data') {\n                return this.sh = this.sdist(this.renderer.yscale, this._y, this._height, 'center');\n            } else {\n                return this.sh = this._height;\n            }\n        };\n        EllipseView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy, sw = _a.sw, sh = _a.sh;\n            var i, j, len, results;\n            results = [];\n            for (j = 0, len = indices.length; j < len; j++) {\n                i = indices[j];\n                if (isNaN(sx[i] + sy[i] + sw[i] + sh[i] + this._angle[i])) {\n                    continue;\n                }\n                ctx.beginPath();\n                ctx.ellipse(sx[i], sy[i], sw[i] / 2, sh[i] / 2, this._angle[i], 0, 2 * Math.PI);\n                if (this.visuals.fill.doit) {\n                    this.visuals.fill.set_vectorize(ctx, i);\n                    ctx.fill();\n                }\n                if (this.visuals.line.doit) {\n                    this.visuals.line.set_vectorize(ctx, i);\n                    results.push(ctx.stroke());\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        EllipseView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            var d, data, indices, scale, sh, sw, sx, sy;\n            indices = [index];\n            sx = {};\n            sx[index] = (x0 + x1) / 2;\n            sy = {};\n            sy[index] = (y0 + y1) / 2;\n            scale = this.sw[index] / this.sh[index];\n            d = Math.min(Math.abs(x1 - x0), Math.abs(y1 - y0)) * 0.8;\n            sw = {};\n            sh = {};\n            if (scale > 1) {\n                sw[index] = d;\n                sh[index] = d / scale;\n            } else {\n                sw[index] = d * scale;\n                sh[index] = d;\n            }\n            data = {\n                sx: sx,\n                sy: sy,\n                sw: sw,\n                sh: sh\n            };\n            return this._render(ctx, indices, data);\n        };\n        EllipseView.prototype._bounds = function (bds) {\n            return this.max_wh2_bounds(bds);\n        };\n        return EllipseView;\n    }(xy_glyph_1.XYGlyphView);\n    var Ellipse = function (_super) {\n        tslib_1.__extends(Ellipse, _super);\n        function Ellipse() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Ellipse;\n    }(xy_glyph_1.XYGlyph);\n    exports.Ellipse = Ellipse;\n    ;\n    Ellipse.prototype.default_view = exports.EllipseView;\n    Ellipse.prototype.type = 'Ellipse';\n    Ellipse.mixins([\n        'line',\n        'fill'\n    ]);\n    Ellipse.define({\n        angle: [\n            p.AngleSpec,\n            0\n        ],\n        width: [p.DistanceSpec],\n        height: [p.DistanceSpec]\n    });    \n}","/*models/glyphs/glyph*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var hittest = require(9    /* core/hittest */);\n    var p = require(15    /* core/properties */);\n    var bbox = require(23    /* core/util/bbox */);\n    var proj = require(32    /* core/util/projections */);\n    var view_1 = require(45    /* core/view */);\n    var model_1 = require(50    /* ../../model */);\n    var visuals_1 = require(46    /* core/visuals */);\n    var logging_1 = require(14    /* core/logging */);\n    var object_1 = require(30    /* core/util/object */);\n    var types_1 = require(42    /* core/util/types */);\n    var line_1 = require(114    /* ./line */);\n    exports.GlyphView = function (_super) {\n        tslib_1.__extends(GlyphView, _super);\n        function GlyphView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        GlyphView.prototype.initialize = function (options) {\n            var Cls, ctx, e, glglyphs;\n            _super.prototype.initialize.call(this, options);\n            this._nohit_warned = {};\n            this.renderer = options.renderer;\n            this.visuals = new visuals_1.Visuals(this.model);\n            // Init gl (this should really be done anytime renderer is set,\n            // and not done if it isn't ever set, but for now it only\n            // matters in the unit tests because we build a view without a\n            // renderer there)\n            ctx = this.renderer.plot_view.canvas_view.ctx;\n            if (ctx.glcanvas != null) {\n                try {\n                    glglyphs = require(425    /* ./webgl/index */);\n                } catch (error) {\n                    e = error;\n                    if (e.code === 'MODULE_NOT_FOUND') {\n                        logging_1.logger.warn('WebGL was requested and is supported, but bokeh-gl(.min).js is not available, falling back to 2D rendering.');\n                        glglyphs = null;\n                    } else {\n                        throw e;\n                    }\n                }\n                if (glglyphs != null) {\n                    Cls = glglyphs[this.model.type + 'GLGlyph'];\n                    if (Cls != null) {\n                        return this.glglyph = new Cls(ctx.glcanvas.gl, this);\n                    }\n                }\n            }\n        };\n        GlyphView.prototype.set_visuals = function (source) {\n            this.visuals.warm_cache(source);\n            if (this.glglyph != null) {\n                return this.glglyph.set_visuals_changed();\n            }\n        };\n        GlyphView.prototype.render = function (ctx, indices, data) {\n            ctx.beginPath();\n            if (this.glglyph != null) {\n                if (this.glglyph.render(ctx, indices, data)) {\n                    return;\n                }\n            }\n            return this._render(ctx, indices, data);\n        };\n        GlyphView.prototype.has_finished = function () {\n            return true;\n        };\n        GlyphView.prototype.notify_finished = function () {\n            return this.renderer.notify_finished();\n        };\n        GlyphView.prototype.bounds = function () {\n            if (this.index == null) {\n                return bbox.empty();\n            } else {\n                return this._bounds(this.index.bbox);\n            }\n        };\n        GlyphView.prototype.log_bounds = function () {\n            var bb, j, l, len, len1, positive_x_bbs, positive_y_bbs, x, y;\n            if (this.index == null) {\n                return bbox.empty();\n            }\n            bb = bbox.empty();\n            positive_x_bbs = this.index.search(bbox.positive_x());\n            positive_y_bbs = this.index.search(bbox.positive_y());\n            for (j = 0, len = positive_x_bbs.length; j < len; j++) {\n                x = positive_x_bbs[j];\n                if (x.minX < bb.minX) {\n                    bb.minX = x.minX;\n                }\n                if (x.maxX > bb.maxX) {\n                    bb.maxX = x.maxX;\n                }\n            }\n            for (l = 0, len1 = positive_y_bbs.length; l < len1; l++) {\n                y = positive_y_bbs[l];\n                if (y.minY < bb.minY) {\n                    bb.minY = y.minY;\n                }\n                if (y.maxY > bb.maxY) {\n                    bb.maxY = y.maxY;\n                }\n            }\n            return this._bounds(bb);\n        };\n        // this is available for subclasses to use, if appropriate.\n        GlyphView.prototype.max_wh2_bounds = function (bds) {\n            return {\n                minX: bds.minX - this.max_w2,\n                maxX: bds.maxX + this.max_w2,\n                minY: bds.minY - this.max_h2,\n                maxY: bds.maxY + this.max_h2\n            };\n        };\n        GlyphView.prototype.get_anchor_point = function (anchor, i, _a) {\n            var sx = _a[0], sy = _a[1];\n            switch (anchor) {\n            case 'center':\n                return {\n                    x: this.scx(i, sx, sy),\n                    y: this.scy(i, sx, sy)\n                };\n            default:\n                return null;\n            }\n        };\n        // glyphs that need more sophisticated \"snap to data\" behaviour (like\n        // snapping to a patch centroid, e.g, should override these\n        GlyphView.prototype.scx = function (i) {\n            return this.sx[i];\n        };\n        GlyphView.prototype.scy = function (i) {\n            return this.sy[i];\n        };\n        GlyphView.prototype.sdist = function (scale, pts, spans, pts_location, dilate) {\n            if (pts_location === void 0) {\n                pts_location = 'edge';\n            }\n            if (dilate === void 0) {\n                dilate = false;\n            }\n            var d, halfspan, i, pt0, pt1, spt0, spt1;\n            if (scale.source_range.v_synthetic != null) {\n                pts = scale.source_range.v_synthetic(pts);\n            }\n            if (pts_location === 'center') {\n                halfspan = function () {\n                    var j, len, results;\n                    results = [];\n                    for (j = 0, len = spans.length; j < len; j++) {\n                        d = spans[j];\n                        results.push(d / 2);\n                    }\n                    return results;\n                }();\n                pt0 = function () {\n                    var j, ref, results;\n                    results = [];\n                    for (i = j = 0, ref = pts.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                        results.push(pts[i] - halfspan[i]);\n                    }\n                    return results;\n                }();\n                pt1 = function () {\n                    var j, ref, results;\n                    results = [];\n                    for (i = j = 0, ref = pts.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                        results.push(pts[i] + halfspan[i]);\n                    }\n                    return results;\n                }();\n            } else {\n                pt0 = pts;\n                pt1 = function () {\n                    var j, ref, results;\n                    results = [];\n                    for (i = j = 0, ref = pt0.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                        results.push(pt0[i] + spans[i]);\n                    }\n                    return results;\n                }();\n            }\n            spt0 = scale.v_compute(pt0);\n            spt1 = scale.v_compute(pt1);\n            if (dilate) {\n                return function () {\n                    var j, ref, results;\n                    results = [];\n                    for (i = j = 0, ref = spt0.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                        results.push(Math.ceil(Math.abs(spt1[i] - spt0[i])));\n                    }\n                    return results;\n                }();\n            } else {\n                return function () {\n                    var j, ref, results;\n                    results = [];\n                    for (i = j = 0, ref = spt0.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                        results.push(Math.abs(spt1[i] - spt0[i]));\n                    }\n                    return results;\n                }();\n            }\n        };\n        GlyphView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return null;\n        };\n        GlyphView.prototype._generic_line_legend = function (ctx, x0, x1, y0, y1, index) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(x0, (y0 + y1) / 2);\n            ctx.lineTo(x1, (y0 + y1) / 2);\n            if (this.visuals.line.doit) {\n                this.visuals.line.set_vectorize(ctx, index);\n                ctx.stroke();\n            }\n            return ctx.restore();\n        };\n        GlyphView.prototype._generic_area_legend = function (ctx, x0, x1, y0, y1, index) {\n            var dh, dw, h, indices, sx0, sx1, sy0, sy1, w;\n            indices = [index];\n            w = Math.abs(x1 - x0);\n            dw = w * 0.1;\n            h = Math.abs(y1 - y0);\n            dh = h * 0.1;\n            sx0 = x0 + dw;\n            sx1 = x1 - dw;\n            sy0 = y0 + dh;\n            sy1 = y1 - dh;\n            if (this.visuals.fill.doit) {\n                this.visuals.fill.set_vectorize(ctx, index);\n                ctx.fillRect(sx0, sy0, sx1 - sx0, sy1 - sy0);\n            }\n            if (this.visuals.line.doit) {\n                ctx.beginPath();\n                ctx.rect(sx0, sy0, sx1 - sx0, sy1 - sy0);\n                this.visuals.line.set_vectorize(ctx, index);\n                return ctx.stroke();\n            }\n        };\n        GlyphView.prototype.hit_test = function (geometry) {\n            var func, result;\n            result = null;\n            func = '_hit_' + geometry.type;\n            if (this[func] != null) {\n                result = this[func](geometry);\n            } else if (this._nohit_warned[geometry.type] == null) {\n                logging_1.logger.debug('\\'' + geometry.type + '\\' selection not available for ' + this.model.type);\n                this._nohit_warned[geometry.type] = true;\n            }\n            return result;\n        };\n        GlyphView.prototype._hit_rect_against_index = function (geometry) {\n            var bb, result, sx0, sx1, sy0, sy1, x0, x1, y0, y1;\n            sx0 = geometry.sx0, sx1 = geometry.sx1, sy0 = geometry.sy0, sy1 = geometry.sy1;\n            _a = this.renderer.xscale.r_invert(sx0, sx1), x0 = _a[0], x1 = _a[1];\n            _b = this.renderer.yscale.r_invert(sy0, sy1), y0 = _b[0], y1 = _b[1];\n            bb = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            result = hittest.create_hit_test_result();\n            result['1d'].indices = this.index.indices(bb);\n            return result;\n            var _a, _b;\n        };\n        GlyphView.prototype.set_data = function (source, indices, indices_to_update) {\n            var data, data_subset, i, j, k, len, ref, v, xname, xr, yname, yr;\n            data = this.model.materialize_dataspecs(source);\n            this.visuals.set_all_indices(indices);\n            if (indices && !(this instanceof line_1.LineView)) {\n                data_subset = {};\n                for (k in data) {\n                    v = data[k];\n                    if (k.charAt(0) === '_') {\n                        data_subset[k] = function () {\n                            var j, len, results;\n                            results = [];\n                            for (j = 0, len = indices.length; j < len; j++) {\n                                i = indices[j];\n                                results.push(v[i]);\n                            }\n                            return results;\n                        }();\n                    } else {\n                        data_subset[k] = v;\n                    }\n                }\n                data = data_subset;\n            }\n            object_1.extend(this, data);\n            if (this.renderer.plot_view.model.use_map) {\n                if (this._x != null) {\n                    _a = proj.project_xy(this._x, this._y), this._x = _a[0], this._y = _a[1];\n                }\n                if (this._xs != null) {\n                    _b = proj.project_xsys(this._xs, this._ys), this._xs = _b[0], this._ys = _b[1];\n                }\n            }\n            // if we have any coordinates that are categorical, convert them to\n            // synthetic coords here\n            if (this.renderer.plot_view.frame.x_ranges != null) {\n                xr = this.renderer.plot_view.frame.x_ranges[this.model.x_range_name];\n                yr = this.renderer.plot_view.frame.y_ranges[this.model.y_range_name];\n                ref = this.model._coords;\n                for (j = 0, len = ref.length; j < len; j++) {\n                    _c = ref[j], xname = _c[0], yname = _c[1];\n                    xname = '_' + xname;\n                    yname = '_' + yname;\n                    if (xr.v_synthetic != null) {\n                        this[xname] = xr.v_synthetic(this[xname]);\n                    }\n                    if (yr.v_synthetic != null) {\n                        this[yname] = yr.v_synthetic(this[yname]);\n                    }\n                }    // XXXX JUST TEMP FOR TESTS TO PASS\n            }\n            if (this.glglyph != null) {\n                this.glglyph.set_data_changed(this._x.length);\n            }\n            this._set_data(source, indices_to_update);\n            //TODO doesn't take subset indices into account\n            return this.index = this._index_data();\n            var _a, _b, _c;\n        };\n        GlyphView.prototype._set_data = function () {\n        };\n        GlyphView.prototype._index_data = function () {\n        };\n        GlyphView.prototype.mask_data = function (indices) {\n            // WebGL can do the clipping much more efficiently\n            if (this.glglyph != null) {\n                return indices;\n            } else {\n                return this._mask_data(indices);\n            }\n        };\n        GlyphView.prototype._mask_data = function (indices) {\n            return indices;\n        };\n        GlyphView.prototype._bounds = function (bounds) {\n            return bounds;\n        };\n        GlyphView.prototype.map_data = function () {\n            var i, j, l, len, ref, ref1, ref2, ref3, ref4, sx, sxname, sy, syname, xname, yname;\n            ref = this.model._coords;\n            // todo: if using gl, skip this (when is this called?)\n            // map all the coordinate fields\n            for (j = 0, len = ref.length; j < len; j++) {\n                _a = ref[j], xname = _a[0], yname = _a[1];\n                sxname = 's' + xname;\n                syname = 's' + yname;\n                xname = '_' + xname;\n                yname = '_' + yname;\n                if (types_1.isArray((ref1 = this[xname]) != null ? ref1[0] : void 0) || ((ref2 = this[xname]) != null ? (ref3 = ref2[0]) != null ? ref3.buffer : void 0 : void 0) instanceof ArrayBuffer) {\n                    _b = [\n                        [],\n                        []\n                    ], this[sxname] = _b[0], this[syname] = _b[1];\n                    for (i = l = 0, ref4 = this[xname].length; 0 <= ref4 ? l < ref4 : l > ref4; i = 0 <= ref4 ? ++l : --l) {\n                        _c = this.map_to_screen(this[xname][i], this[yname][i]), sx = _c[0], sy = _c[1];\n                        this[sxname].push(sx);\n                        this[syname].push(sy);\n                    }\n                } else {\n                    _d = this.map_to_screen(this[xname], this[yname]), this[sxname] = _d[0], this[syname] = _d[1];\n                }\n            }\n            return this._map_data();\n            var _a, _b, _c, _d;\n        };\n        // This is where specs not included in coords are computed, e.g. radius.\n        GlyphView.prototype._map_data = function () {\n        };\n        GlyphView.prototype.map_to_screen = function (x, y) {\n            return this.renderer.plot_view.map_to_screen(x, y, this.model.x_range_name, this.model.y_range_name);\n        };\n        return GlyphView;\n    }(view_1.View);\n    var Glyph = function (_super) {\n        tslib_1.__extends(Glyph, _super);\n        function Glyph() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Glyph.coords = function (coords) {\n            var _coords, j, len, result, x, y;\n            _coords = this.prototype._coords.concat(coords);\n            this.prototype._coords = _coords;\n            result = {};\n            for (j = 0, len = coords.length; j < len; j++) {\n                _a = coords[j], x = _a[0], y = _a[1];\n                result[x] = [p.NumberSpec];\n                result[y] = [p.NumberSpec];\n            }\n            return this.define(result);\n            var _a;\n        };\n        return Glyph;\n    }(model_1.Model);\n    exports.Glyph = Glyph;\n    ;\n    Glyph.prototype._coords = [];\n    Glyph.internal({\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ]\n    });    \n}","/*models/glyphs/hbar*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var box_1 = require(105    /* ./box */);\n    var p = require(15    /* core/properties */);\n    exports.HBarView = function (_super) {\n        tslib_1.__extends(HBarView, _super);\n        function HBarView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        HBarView.prototype.scx = function (i) {\n            return (this.sleft[i] + this.sright[i]) / 2;\n        };\n        HBarView.prototype._index_data = function () {\n            return this._index_box(this._y.length);\n        };\n        HBarView.prototype._lrtb = function (i) {\n            var b, l, r, t;\n            l = Math.min(this._left[i], this._right[i]);\n            r = Math.max(this._left[i], this._right[i]);\n            t = this._y[i] + 0.5 * this._height[i];\n            b = this._y[i] - 0.5 * this._height[i];\n            return [\n                l,\n                r,\n                t,\n                b\n            ];\n        };\n        HBarView.prototype._map_data = function () {\n            var i, j, ref;\n            this.sy = this.renderer.yscale.v_compute(this._y);\n            this.sright = this.renderer.xscale.v_compute(this._right);\n            this.sleft = this.renderer.xscale.v_compute(this._left);\n            this.stop = [];\n            this.sbottom = [];\n            this.sh = this.sdist(this.renderer.yscale, this._y, this._height, 'center');\n            for (i = j = 0, ref = this.sy.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                this.stop.push(this.sy[i] - this.sh[i] / 2);\n                this.sbottom.push(this.sy[i] + this.sh[i] / 2);\n            }\n            return null;\n        };\n        return HBarView;\n    }(box_1.BoxView);\n    var HBar = function (_super) {\n        tslib_1.__extends(HBar, _super);\n        function HBar() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return HBar;\n    }(box_1.Box);\n    exports.HBar = HBar;\n    ;\n    HBar.prototype.default_view = exports.HBarView;\n    HBar.prototype.type = 'HBar';\n    HBar.coords([[\n            'left',\n            'y'\n        ]]);\n    HBar.define({\n        height: [p.DistanceSpec],\n        right: [p.NumberSpec]\n    });\n    HBar.override({ left: 0 });    \n}","/*models/glyphs/image*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var Greys9;\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var linear_color_mapper_1 = require(146    /* ../mappers/linear_color_mapper */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    exports.ImageView = function (_super) {\n        tslib_1.__extends(ImageView, _super);\n        function ImageView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ImageView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this.connect(this.model.color_mapper.change, function () {\n                return this._update_image();\n            });\n        };\n        ImageView.prototype._update_image = function () {\n            // Only reset image_data if already initialized\n            if (this.image_data != null) {\n                this._set_data();\n                return this.renderer.plot_view.request_render();\n            }\n        };\n        ImageView.prototype._set_data = function () {\n            var buf, buf8, canvas, cmap, ctx, i, image_data, img, j, ref, results, shape;\n            if (this.image_data == null || this.image_data.length !== this._image.length) {\n                this.image_data = new Array(this._image.length);\n            }\n            if (this._width == null || this._width.length !== this._image.length) {\n                this._width = new Array(this._image.length);\n            }\n            if (this._height == null || this._height.length !== this._image.length) {\n                this._height = new Array(this._image.length);\n            }\n            results = [];\n            for (i = j = 0, ref = this._image.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                shape = [];\n                if (this._image_shape != null) {\n                    shape = this._image_shape[i];\n                }\n                if (shape.length > 0) {\n                    img = this._image[i];\n                    this._height[i] = shape[0];\n                    this._width[i] = shape[1];\n                } else {\n                    img = array_1.concat(this._image[i]);\n                    this._height[i] = this._image[i].length;\n                    this._width[i] = this._image[i][0].length;\n                }\n                if (this.image_data[i] != null && this.image_data[i].width === this._width[i] && this.image_data[i].height === this._height[i]) {\n                    canvas = this.image_data[i];\n                } else {\n                    canvas = document.createElement('canvas');\n                    canvas.width = this._width[i];\n                    canvas.height = this._height[i];\n                }\n                ctx = canvas.getContext('2d');\n                image_data = ctx.getImageData(0, 0, this._width[i], this._height[i]);\n                cmap = this.model.color_mapper;\n                buf = cmap.v_map_screen(img, true);\n                buf8 = new Uint8Array(buf);\n                image_data.data.set(buf8);\n                ctx.putImageData(image_data, 0, 0);\n                this.image_data[i] = canvas;\n                this.max_dw = 0;\n                if (this._dw.units === 'data') {\n                    this.max_dw = array_1.max(this._dw);\n                }\n                this.max_dh = 0;\n                if (this._dh.units === 'data') {\n                    results.push(this.max_dh = array_1.max(this._dh));\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        ImageView.prototype._map_data = function () {\n            switch (this.model.properties.dw.units) {\n            case 'data':\n                this.sw = this.sdist(this.renderer.xscale, this._x, this._dw, 'edge', this.model.dilate);\n                break;\n            case 'screen':\n                this.sw = this._dw;\n            }\n            switch (this.model.properties.dh.units) {\n            case 'data':\n                return this.sh = this.sdist(this.renderer.yscale, this._y, this._dh, 'edge', this.model.dilate);\n            case 'screen':\n                return this.sh = this._dh;\n            }\n        };\n        ImageView.prototype._render = function (ctx, indices, _a) {\n            var image_data = _a.image_data, sx = _a.sx, sy = _a.sy, sw = _a.sw, sh = _a.sh;\n            var i, j, len, old_smoothing, y_offset;\n            old_smoothing = ctx.getImageSmoothingEnabled();\n            ctx.setImageSmoothingEnabled(false);\n            for (j = 0, len = indices.length; j < len; j++) {\n                i = indices[j];\n                if (image_data[i] == null) {\n                    continue;\n                }\n                if (isNaN(sx[i] + sy[i] + sw[i] + sh[i])) {\n                    continue;\n                }\n                y_offset = sy[i];\n                ctx.translate(0, y_offset);\n                ctx.scale(1, -1);\n                ctx.translate(0, -y_offset);\n                ctx.drawImage(image_data[i], sx[i] | 0, sy[i] | 0, sw[i], sh[i]);\n                ctx.translate(0, y_offset);\n                ctx.scale(1, -1);\n                ctx.translate(0, -y_offset);\n            }\n            return ctx.setImageSmoothingEnabled(old_smoothing);\n        };\n        ImageView.prototype.bounds = function () {\n            var bbox;\n            bbox = this.index.bbox;\n            bbox.maxX += this.max_dw;\n            bbox.maxY += this.max_dh;\n            return bbox;\n        };\n        return ImageView;\n    }(xy_glyph_1.XYGlyphView);\n    // NOTE: this needs to be redefined here, because palettes are located in bokeh-api.js bundle\n    Greys9 = function () {\n        return [\n            0,\n            2434341,\n            5395026,\n            7566195,\n            9868950,\n            12434877,\n            14277081,\n            15790320,\n            16777215\n        ];\n    };\n    var Image = function (_super) {\n        tslib_1.__extends(Image, _super);\n        function Image() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Image;\n    }(xy_glyph_1.XYGlyph);\n    exports.Image = Image;\n    ;\n    Image.prototype.default_view = exports.ImageView;\n    Image.prototype.type = 'Image';\n    Image.define({\n        image: [p.NumberSpec],\n        dw: [p.DistanceSpec],\n        dh: [p.DistanceSpec],\n        dilate: [\n            p.Bool,\n            false\n        ],\n        color_mapper: [\n            p.Instance,\n            function () {\n                return new linear_color_mapper_1.LinearColorMapper({ palette: Greys9() });\n            }\n        ]\n    });    \n}","/*models/glyphs/image_rgba*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    exports.ImageRGBAView = function (_super) {\n        tslib_1.__extends(ImageRGBAView, _super);\n        function ImageRGBAView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ImageRGBAView.prototype._set_data = function (source, indices) {\n            var buf, buf8, canvas, color, ctx, flat, i, image_data, j, k, l, ref, ref1, results, shape;\n            if (this.image_data == null || this.image_data.length !== this._image.length) {\n                this.image_data = new Array(this._image.length);\n            }\n            if (this._width == null || this._width.length !== this._image.length) {\n                this._width = new Array(this._image.length);\n            }\n            if (this._height == null || this._height.length !== this._image.length) {\n                this._height = new Array(this._image.length);\n            }\n            results = [];\n            for (i = k = 0, ref = this._image.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                if (indices != null && indices.indexOf(i) < 0) {\n                    continue;\n                }\n                shape = [];\n                if (this._image_shape != null) {\n                    shape = this._image_shape[i];\n                }\n                if (shape.length > 0) {\n                    buf = this._image[i].buffer;\n                    this._height[i] = shape[0];\n                    this._width[i] = shape[1];\n                } else {\n                    flat = array_1.concat(this._image[i]);\n                    buf = new ArrayBuffer(flat.length * 4);\n                    color = new Uint32Array(buf);\n                    for (j = l = 0, ref1 = flat.length; 0 <= ref1 ? l < ref1 : l > ref1; j = 0 <= ref1 ? ++l : --l) {\n                        color[j] = flat[j];\n                    }\n                    this._height[i] = this._image[i].length;\n                    this._width[i] = this._image[i][0].length;\n                }\n                if (this.image_data[i] != null && this.image_data[i].width === this._width[i] && this.image_data[i].height === this._height[i]) {\n                    canvas = this.image_data[i];\n                } else {\n                    canvas = document.createElement('canvas');\n                    canvas.width = this._width[i];\n                    canvas.height = this._height[i];\n                }\n                ctx = canvas.getContext('2d');\n                image_data = ctx.getImageData(0, 0, this._width[i], this._height[i]);\n                buf8 = new Uint8Array(buf);\n                image_data.data.set(buf8);\n                ctx.putImageData(image_data, 0, 0);\n                this.image_data[i] = canvas;\n                this.max_dw = 0;\n                if (this._dw.units === 'data') {\n                    this.max_dw = array_1.max(this._dw);\n                }\n                this.max_dh = 0;\n                if (this._dh.units === 'data') {\n                    results.push(this.max_dh = array_1.max(this._dh));\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        ImageRGBAView.prototype._map_data = function () {\n            switch (this.model.properties.dw.units) {\n            case 'data':\n                this.sw = this.sdist(this.renderer.xscale, this._x, this._dw, 'edge', this.model.dilate);\n                break;\n            case 'screen':\n                this.sw = this._dw;\n            }\n            switch (this.model.properties.dh.units) {\n            case 'data':\n                return this.sh = this.sdist(this.renderer.yscale, this._y, this._dh, 'edge', this.model.dilate);\n            case 'screen':\n                return this.sh = this._dh;\n            }\n        };\n        ImageRGBAView.prototype._render = function (ctx, indices, _a) {\n            var image_data = _a.image_data, sx = _a.sx, sy = _a.sy, sw = _a.sw, sh = _a.sh;\n            var i, k, len, old_smoothing, y_offset;\n            old_smoothing = ctx.getImageSmoothingEnabled();\n            ctx.setImageSmoothingEnabled(false);\n            for (k = 0, len = indices.length; k < len; k++) {\n                i = indices[k];\n                if (isNaN(sx[i] + sy[i] + sw[i] + sh[i])) {\n                    continue;\n                }\n                y_offset = sy[i];\n                ctx.translate(0, y_offset);\n                ctx.scale(1, -1);\n                ctx.translate(0, -y_offset);\n                ctx.drawImage(image_data[i], sx[i] | 0, sy[i] | 0, sw[i], sh[i]);\n                ctx.translate(0, y_offset);\n                ctx.scale(1, -1);\n                ctx.translate(0, -y_offset);\n            }\n            return ctx.setImageSmoothingEnabled(old_smoothing);\n        };\n        ImageRGBAView.prototype.bounds = function () {\n            var bbox;\n            bbox = this.index.bbox;\n            bbox.maxX += this.max_dw;\n            bbox.maxY += this.max_dh;\n            return bbox;\n        };\n        return ImageRGBAView;\n    }(xy_glyph_1.XYGlyphView);\n    var ImageRGBA = function (_super) {\n        tslib_1.__extends(ImageRGBA, _super);\n        function ImageRGBA() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ImageRGBA;\n    }(xy_glyph_1.XYGlyph);\n    exports.ImageRGBA = ImageRGBA;\n    ;\n    ImageRGBA.prototype.default_view = exports.ImageRGBAView;\n    ImageRGBA.prototype.type = 'ImageRGBA';\n    ImageRGBA.define({\n        image: [p.NumberSpec],\n        dw: [p.DistanceSpec],\n        dh: [p.DistanceSpec],\n        dilate: [\n            p.Bool,\n            false\n        ]\n    });    \n}","/*models/glyphs/image_url*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var glyph_1 = require(108    /* ./glyph */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    exports.ImageURLView = function (_super) {\n        tslib_1.__extends(ImageURLView, _super);\n        function ImageURLView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ImageURLView.prototype.initialize = function (options) {\n            var _this = this;\n            _super.prototype.initialize.call(this, options);\n            return this.connect(this.model.properties.global_alpha.change, function () {\n                return _this.renderer.request_render();\n            });\n        };\n        ImageURLView.prototype._index_data = function () {\n        };\n        ImageURLView.prototype._set_data = function () {\n            var _this = this;\n            var i, img, j, ref, results, retry_attempts, retry_timeout;\n            if (this.image == null || this.image.length !== this._url.length) {\n                this.image = function () {\n                    var j, len, ref, results;\n                    ref = this._url;\n                    results = [];\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        img = ref[j];\n                        results.push(null);\n                    }\n                    return results;\n                }.call(this);\n            }\n            retry_attempts = this.model.retry_attempts;\n            retry_timeout = this.model.retry_timeout;\n            this.retries = function () {\n                var j, len, ref, results;\n                ref = this._url;\n                results = [];\n                for (j = 0, len = ref.length; j < len; j++) {\n                    img = ref[j];\n                    results.push(retry_attempts);\n                }\n                return results;\n            }.call(this);\n            results = [];\n            for (i = j = 0, ref = this._url.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                if (this._url[i] == null) {\n                    continue;\n                }\n                img = new Image();\n                img.onerror = function (i, img) {\n                    return function () {\n                        if (_this.retries[i] > 0) {\n                            logging_1.logger.trace('ImageURL failed to load ' + _this._url[i] + ' image, retrying in ' + retry_timeout + ' ms');\n                            setTimeout(function () {\n                                return img.src = _this._url[i];\n                            }, retry_timeout);\n                        } else {\n                            logging_1.logger.warn('ImageURL unable to load ' + _this._url[i] + ' image after ' + retry_attempts + ' retries');\n                        }\n                        return _this.retries[i] -= 1;\n                    };\n                }(i, img);\n                img.onload = function (img, i) {\n                    return function () {\n                        _this.image[i] = img;\n                        return _this.renderer.request_render();\n                    };\n                }(img, i);\n                results.push(img.src = this._url[i]);\n            }\n            return results;\n        };\n        ImageURLView.prototype.has_finished = function () {\n            return _super.prototype.has_finished.call(this) && this._images_rendered === true;\n        };\n        ImageURLView.prototype._map_data = function () {\n            var hs, ws, x;\n            // Better to check @model.w and @model.h for null since the set_data\n            // machinery will have converted @_w and @_w to lists of null\n            ws = function () {\n                var j, len, ref, results;\n                if (this.model.w != null) {\n                    return this._w;\n                } else {\n                    ref = this._x;\n                    results = [];\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        x = ref[j];\n                        results.push(0 / 0);\n                    }\n                    return results;\n                }\n            }.call(this);\n            hs = function () {\n                var j, len, ref, results;\n                if (this.model.h != null) {\n                    return this._h;\n                } else {\n                    ref = this._x;\n                    results = [];\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        x = ref[j];\n                        results.push(0 / 0);\n                    }\n                    return results;\n                }\n            }.call(this);\n            switch (this.model.properties.w.units) {\n            case 'data':\n                this.sw = this.sdist(this.renderer.xscale, this._x, ws, 'edge', this.model.dilate);\n                break;\n            case 'screen':\n                this.sw = ws;\n            }\n            switch (this.model.properties.h.units) {\n            case 'data':\n                return this.sh = this.sdist(this.renderer.yscale, this._y, hs, 'edge', this.model.dilate);\n            case 'screen':\n                return this.sh = hs;\n            }\n        };\n        ImageURLView.prototype._render = function (ctx, indices, _a) {\n            var _url = _a._url, image = _a.image, sx = _a.sx, sy = _a.sy, sw = _a.sw, sh = _a.sh, _angle = _a._angle;\n            var finished, frame, i, j, len;\n            // TODO (bev): take actual border width into account when clipping\n            frame = this.renderer.plot_view.frame;\n            ctx.rect(frame._left.value + 1, frame._top.value + 1, frame._width.value - 2, frame._height.value - 2);\n            ctx.clip();\n            finished = true;\n            for (j = 0, len = indices.length; j < len; j++) {\n                i = indices[j];\n                if (isNaN(sx[i] + sy[i] + _angle[i])) {\n                    continue;\n                }\n                if (this.retries[i] === -1) {\n                    continue;\n                }\n                if (image[i] == null) {\n                    finished = false;\n                    continue;\n                }\n                this._render_image(ctx, i, image[i], sx, sy, sw, sh, _angle);\n            }\n            if (finished && !this._images_rendered) {\n                this._images_rendered = true;\n                return this.notify_finished();\n            }\n        };\n        ImageURLView.prototype._final_sx_sy = function (anchor, sx, sy, sw, sh) {\n            switch (anchor) {\n            case 'top_left':\n                return [\n                    sx,\n                    sy\n                ];\n            case 'top_center':\n                return [\n                    sx - sw / 2,\n                    sy\n                ];\n            case 'top_right':\n                return [\n                    sx - sw,\n                    sy\n                ];\n            case 'center_right':\n                return [\n                    sx - sw,\n                    sy - sh / 2\n                ];\n            case 'bottom_right':\n                return [\n                    sx - sw,\n                    sy - sh\n                ];\n            case 'bottom_center':\n                return [\n                    sx - sw / 2,\n                    sy - sh\n                ];\n            case 'bottom_left':\n                return [\n                    sx,\n                    sy - sh\n                ];\n            case 'center_left':\n                return [\n                    sx,\n                    sy - sh / 2\n                ];\n            case 'center':\n                return [\n                    sx - sw / 2,\n                    sy - sh / 2\n                ];\n            }\n        };\n        ImageURLView.prototype._render_image = function (ctx, i, image, sx, sy, sw, sh, angle) {\n            var anchor;\n            if (isNaN(sw[i])) {\n                sw[i] = image.width;\n            }\n            if (isNaN(sh[i])) {\n                sh[i] = image.height;\n            }\n            anchor = this.model.anchor;\n            _a = this._final_sx_sy(anchor, sx[i], sy[i], sw[i], sh[i]), sx = _a[0], sy = _a[1];\n            ctx.save();\n            ctx.globalAlpha = this.model.global_alpha;\n            if (angle[i]) {\n                ctx.translate(sx, sy);\n                ctx.rotate(angle[i]);\n                ctx.drawImage(image, 0, 0, sw[i], sh[i]);\n                ctx.rotate(-angle[i]);\n                ctx.translate(-sx, -sy);\n            } else {\n                ctx.drawImage(image, sx, sy, sw[i], sh[i]);\n            }\n            return ctx.restore();\n            var _a;\n        };\n        return ImageURLView;\n    }(glyph_1.GlyphView);\n    var ImageURL = function (_super) {\n        tslib_1.__extends(ImageURL, _super);\n        function ImageURL() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ImageURL;\n    }(glyph_1.Glyph);\n    exports.ImageURL = ImageURL;\n    ;\n    ImageURL.prototype.default_view = exports.ImageURLView;\n    ImageURL.prototype.type = 'ImageURL';\n    ImageURL.coords([[\n            'x',\n            'y'\n        ]]);\n    ImageURL.mixins([]);\n    ImageURL.define({\n        url: [p.StringSpec],\n        anchor: [\n            p.Anchor,\n            'top_left'\n        ],\n        global_alpha: [\n            p.Number,\n            1\n        ],\n        angle: [\n            p.AngleSpec,\n            0\n        ],\n        w: [p.DistanceSpec],\n        h: [p.DistanceSpec],\n        dilate: [\n            p.Bool,\n            false\n        ],\n        retry_attempts: [\n            p.Number,\n            0\n        ],\n        retry_timeout: [\n            p.Number,\n            0\n        ]\n    });    \n}","/*models/glyphs/index*/\nfunction _(require, module, exports) {\n    var annular_wedge_1 = require(101    /* ./annular_wedge */);\n    exports.AnnularWedge = annular_wedge_1.AnnularWedge;\n    var annulus_1 = require(102    /* ./annulus */);\n    exports.Annulus = annulus_1.Annulus;\n    var arc_1 = require(103    /* ./arc */);\n    exports.Arc = arc_1.Arc;\n    var bezier_1 = require(104    /* ./bezier */);\n    exports.Bezier = bezier_1.Bezier;\n    var circle_1 = require(106    /* ./circle */);\n    exports.Circle = circle_1.Circle;\n    var ellipse_1 = require(107    /* ./ellipse */);\n    exports.Ellipse = ellipse_1.Ellipse;\n    var glyph_1 = require(108    /* ./glyph */);\n    exports.Glyph = glyph_1.Glyph;\n    var hbar_1 = require(109    /* ./hbar */);\n    exports.HBar = hbar_1.HBar;\n    var image_1 = require(110    /* ./image */);\n    exports.Image = image_1.Image;\n    var image_rgba_1 = require(111    /* ./image_rgba */);\n    exports.ImageRGBA = image_rgba_1.ImageRGBA;\n    var image_url_1 = require(112    /* ./image_url */);\n    exports.ImageURL = image_url_1.ImageURL;\n    var line_1 = require(114    /* ./line */);\n    exports.Line = line_1.Line;\n    var multi_line_1 = require(115    /* ./multi_line */);\n    exports.MultiLine = multi_line_1.MultiLine;\n    var oval_1 = require(116    /* ./oval */);\n    exports.Oval = oval_1.Oval;\n    var patch_1 = require(117    /* ./patch */);\n    exports.Patch = patch_1.Patch;\n    var patches_1 = require(118    /* ./patches */);\n    exports.Patches = patches_1.Patches;\n    var quad_1 = require(119    /* ./quad */);\n    exports.Quad = quad_1.Quad;\n    var quadratic_1 = require(120    /* ./quadratic */);\n    exports.Quadratic = quadratic_1.Quadratic;\n    var ray_1 = require(121    /* ./ray */);\n    exports.Ray = ray_1.Ray;\n    var rect_1 = require(122    /* ./rect */);\n    exports.Rect = rect_1.Rect;\n    var segment_1 = require(123    /* ./segment */);\n    exports.Segment = segment_1.Segment;\n    var step_1 = require(124    /* ./step */);\n    exports.Step = step_1.Step;\n    var text_1 = require(125    /* ./text */);\n    exports.Text = text_1.Text;\n    var vbar_1 = require(126    /* ./vbar */);\n    exports.VBar = vbar_1.VBar;\n    var wedge_1 = require(127    /* ./wedge */);\n    exports.Wedge = wedge_1.Wedge;\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    exports.XYGlyph = xy_glyph_1.XYGlyph;    \n}","/*models/glyphs/line*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var hittest = require(9    /* core/hittest */);\n    exports.LineView = function (_super) {\n        tslib_1.__extends(LineView, _super);\n        function LineView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LineView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy;\n            var drawing, i, j, last_index, len;\n            drawing = false;\n            this.visuals.line.set_value(ctx);\n            last_index = null;\n            for (j = 0, len = indices.length; j < len; j++) {\n                i = indices[j];\n                if (drawing) {\n                    if (!isFinite(sx[i] + sy[i])) {\n                        ctx.stroke();\n                        ctx.beginPath();\n                        drawing = false;\n                        last_index = i;\n                        continue;\n                    }\n                    if (last_index !== null && i - last_index > 1) {\n                        ctx.stroke();\n                        drawing = false;\n                    }\n                }\n                if (drawing) {\n                    ctx.lineTo(sx[i], sy[i]);\n                } else {\n                    ctx.beginPath();\n                    ctx.moveTo(sx[i], sy[i]);\n                    drawing = true;\n                }\n                last_index = i;\n            }\n            if (drawing) {\n                return ctx.stroke();\n            }\n        };\n        LineView.prototype._hit_point = function (geometry) {\n            /* Check if the point geometry hits this line glyph and return an object\n        that describes the hit result:\n          Args:\n            * geometry (object): object with the following keys\n              * sx (float): screen x coordinate of the point\n              * sy (float): screen y coordinate of the point\n              * type (str): type of geometry (in this case it's a point)\n          Output:\n            Object with the following keys:\n              * 0d (bool): whether the point hits the glyph or not\n              * 1d (array(int)): array with the indices hit by the point\n         */\n            var dist, i, j, p0, p1, point, ref, result, shortest, threshold;\n            result = hittest.create_hit_test_result();\n            point = {\n                x: geometry.sx,\n                y: geometry.sy\n            };\n            shortest = 9999;\n            threshold = Math.max(2, this.visuals.line.line_width.value() / 2);\n            for (i = j = 0, ref = this.sx.length - 1; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                _a = [\n                    {\n                        x: this.sx[i],\n                        y: this.sy[i]\n                    },\n                    {\n                        x: this.sx[i + 1],\n                        y: this.sy[i + 1]\n                    }\n                ], p0 = _a[0], p1 = _a[1];\n                dist = hittest.dist_to_segment(point, p0, p1);\n                if (dist < threshold && dist < shortest) {\n                    shortest = dist;\n                    result['0d'].glyph = this.model;\n                    result['0d'].get_view = function () {\n                        return this;\n                    }.bind(this);\n                    result['0d'].flag = true;\n                    // backward compat\n                    result['0d'].indices = [i];\n                }\n            }\n            return result;\n            var _a;\n        };\n        LineView.prototype._hit_span = function (geometry) {\n            var i, j, ref, result, sx, sy, val, values;\n            sx = geometry.sx, sy = geometry.sy;\n            result = hittest.create_hit_test_result();\n            if (geometry.direction === 'v') {\n                val = this.renderer.yscale.invert(sy);\n                values = this._y;\n            } else {\n                val = this.renderer.xscale.invert(sx);\n                values = this._x;\n            }\n            for (i = j = 0, ref = values.length - 1; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                if (values[i] <= val && val <= values[i + 1] || values[i + 1] <= val && val <= values[i]) {\n                    result['0d'].glyph = this.model;\n                    result['0d'].get_view = function () {\n                        return this;\n                    }.bind(this);\n                    result['0d'].flag = true;\n                    // backward compat\n                    result['0d'].indices.push(i);\n                }\n            }\n            return result;\n        };\n        LineView.prototype.get_interpolation_hit = function (i, geometry) {\n            var res, sx, sy, x0, x1, x2, x3, y0, y1, y2, y3;\n            sx = geometry.sx, sy = geometry.sy;\n            _a = [\n                this._x[i],\n                this._y[i],\n                this._x[i + 1],\n                this._y[i + 1]\n            ], x2 = _a[0], y2 = _a[1], x3 = _a[2], y3 = _a[3];\n            if (geometry.type === 'point') {\n                _b = this.renderer.yscale.r_invert(sy - 1, sy + 1), y0 = _b[0], y1 = _b[1];\n                _c = this.renderer.xscale.r_invert(sx - 1, sx + 1), x0 = _c[0], x1 = _c[1];\n            } else {\n                if (geometry.direction === 'v') {\n                    _d = this.renderer.yscale.r_invert(sy, sy), y0 = _d[0], y1 = _d[1];\n                    _e = [\n                        x2,\n                        x3\n                    ], x0 = _e[0], x1 = _e[1];\n                } else {\n                    _f = this.renderer.xscale.r_invert(sx, sx), x0 = _f[0], x1 = _f[1];\n                    _g = [\n                        y2,\n                        y3\n                    ], y0 = _g[0], y1 = _g[1];\n                }\n            }\n            res = hittest.check_2_segments_intersect(x0, y0, x1, y1, x2, y2, x3, y3);\n            return [\n                res.x,\n                res.y\n            ];\n            var _a, _b, _c, _d, _e, _f, _g;\n        };\n        LineView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_line_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return LineView;\n    }(xy_glyph_1.XYGlyphView);\n    var Line = function (_super) {\n        tslib_1.__extends(Line, _super);\n        function Line() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Line;\n    }(xy_glyph_1.XYGlyph);\n    exports.Line = Line;\n    ;\n    Line.prototype.default_view = exports.LineView;\n    Line.prototype.type = 'Line';\n    Line.mixins(['line']);    \n}","/*models/glyphs/multi_line*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var spatial_1 = require(36    /* core/util/spatial */);\n    var hittest = require(9    /* core/hittest */);\n    var array_1 = require(22    /* core/util/array */);\n    var types_1 = require(42    /* core/util/types */);\n    var glyph_1 = require(108    /* ./glyph */);\n    exports.MultiLineView = function (_super) {\n        tslib_1.__extends(MultiLineView, _super);\n        function MultiLineView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MultiLineView.prototype._index_data = function () {\n            var i, k, points, ref, x, xs, y, ys;\n            points = [];\n            for (i = k = 0, ref = this._xs.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                if (this._xs[i] === null || this._xs[i].length === 0) {\n                    continue;\n                }\n                xs = function () {\n                    var l, len, ref1, results;\n                    ref1 = this._xs[i];\n                    results = [];\n                    for (l = 0, len = ref1.length; l < len; l++) {\n                        x = ref1[l];\n                        if (!types_1.isStrictNaN(x)) {\n                            results.push(x);\n                        }\n                    }\n                    return results;\n                }.call(this);\n                ys = function () {\n                    var l, len, ref1, results;\n                    ref1 = this._ys[i];\n                    results = [];\n                    for (l = 0, len = ref1.length; l < len; l++) {\n                        y = ref1[l];\n                        if (!types_1.isStrictNaN(y)) {\n                            results.push(y);\n                        }\n                    }\n                    return results;\n                }.call(this);\n                points.push({\n                    minX: array_1.min(xs),\n                    minY: array_1.min(ys),\n                    maxX: array_1.max(xs),\n                    maxY: array_1.max(ys),\n                    i: i\n                });\n            }\n            return new spatial_1.RBush(points);\n        };\n        MultiLineView.prototype._render = function (ctx, indices, _a) {\n            var sxs = _a.sxs, sys = _a.sys;\n            var i, j, k, l, len, ref, results, sx, sy;\n            results = [];\n            for (k = 0, len = indices.length; k < len; k++) {\n                i = indices[k];\n                _b = [\n                    sxs[i],\n                    sys[i]\n                ], sx = _b[0], sy = _b[1];\n                this.visuals.line.set_vectorize(ctx, i);\n                for (j = l = 0, ref = sx.length; 0 <= ref ? l < ref : l > ref; j = 0 <= ref ? ++l : --l) {\n                    if (j === 0) {\n                        ctx.beginPath();\n                        ctx.moveTo(sx[j], sy[j]);\n                        continue;\n                    } else if (isNaN(sx[j]) || isNaN(sy[j])) {\n                        ctx.stroke();\n                        ctx.beginPath();\n                        continue;\n                    } else {\n                        ctx.lineTo(sx[j], sy[j]);\n                    }\n                }\n                results.push(ctx.stroke());\n            }\n            return results;\n            var _b;\n        };\n        MultiLineView.prototype._hit_point = function (geometry) {\n            var dist, hits, i, j, k, l, p0, p1, point, points, ref, ref1, result, shortest, threshold;\n            result = hittest.create_hit_test_result();\n            point = {\n                x: geometry.sx,\n                y: geometry.sy\n            };\n            shortest = 9999;\n            hits = {};\n            for (i = k = 0, ref = this.sxs.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                threshold = Math.max(2, this.visuals.line.cache_select('line_width', i) / 2);\n                points = null;\n                for (j = l = 0, ref1 = this.sxs[i].length - 1; 0 <= ref1 ? l < ref1 : l > ref1; j = 0 <= ref1 ? ++l : --l) {\n                    _a = [\n                        {\n                            x: this.sxs[i][j],\n                            y: this.sys[i][j]\n                        },\n                        {\n                            x: this.sxs[i][j + 1],\n                            y: this.sys[i][j + 1]\n                        }\n                    ], p0 = _a[0], p1 = _a[1];\n                    dist = hittest.dist_to_segment(point, p0, p1);\n                    if (dist < threshold && dist < shortest) {\n                        shortest = dist;\n                        points = [j];\n                    }\n                }\n                if (points) {\n                    hits[i] = points;\n                }\n            }\n            result['1d'].indices = function () {\n                var len, m, ref2, results;\n                ref2 = Object.keys(hits);\n                results = [];\n                for (m = 0, len = ref2.length; m < len; m++) {\n                    i = ref2[m];\n                    results.push(parseInt(i));\n                }\n                return results;\n            }();\n            result['2d'].indices = hits;\n            return result;\n            var _a;\n        };\n        MultiLineView.prototype._hit_span = function (geometry) {\n            var hits, i, j, k, l, points, ref, ref1, result, sx, sy, val, values;\n            sx = geometry.sx, sy = geometry.sy;\n            result = hittest.create_hit_test_result();\n            if (geometry.direction === 'v') {\n                val = this.renderer.yscale.invert(sy);\n                values = this._ys;\n            } else {\n                val = this.renderer.xscale.invert(sx);\n                values = this._xs;\n            }\n            hits = {};\n            for (i = k = 0, ref = values.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                points = [];\n                for (j = l = 0, ref1 = values[i].length - 1; 0 <= ref1 ? l < ref1 : l > ref1; j = 0 <= ref1 ? ++l : --l) {\n                    if (values[i][j] <= val && val <= values[i][j + 1]) {\n                        points.push(j);\n                    }\n                }\n                if (points.length > 0) {\n                    hits[i] = points;\n                }\n            }\n            result['1d'].indices = function () {\n                var len, m, ref2, results;\n                ref2 = Object.keys(hits);\n                results = [];\n                for (m = 0, len = ref2.length; m < len; m++) {\n                    i = ref2[m];\n                    results.push(parseInt(i));\n                }\n                return results;\n            }();\n            result['2d'].indices = hits;\n            return result;\n        };\n        MultiLineView.prototype.get_interpolation_hit = function (i, point_i, geometry) {\n            var res, sx, sy, x0, x1, x2, x3, y0, y1, y2, y3;\n            sx = geometry.sx, sy = geometry.sy;\n            _a = [\n                this._xs[i][point_i],\n                this._ys[i][point_i],\n                this._xs[i][point_i + 1],\n                this._ys[i][point_i + 1]\n            ], x2 = _a[0], y2 = _a[1], x3 = _a[2], y3 = _a[3];\n            if (geometry.type === 'point') {\n                _b = this.renderer.yscale.r_invert(sy - 1, sy + 1), y0 = _b[0], y1 = _b[1];\n                _c = this.renderer.xscale.r_invert(sx - 1, sx + 1), x0 = _c[0], x1 = _c[1];\n            } else {\n                if (geometry.direction === 'v') {\n                    _d = this.renderer.yscale.r_invert(sy, sy), y0 = _d[0], y1 = _d[1];\n                    _e = [\n                        x2,\n                        x3\n                    ], x0 = _e[0], x1 = _e[1];\n                } else {\n                    _f = this.renderer.xscale.r_invert(sx, sx), x0 = _f[0], x1 = _f[1];\n                    _g = [\n                        y2,\n                        y3\n                    ], y0 = _g[0], y1 = _g[1];\n                }\n            }\n            res = hittest.check_2_segments_intersect(x0, y0, x1, y1, x2, y2, x3, y3);\n            return [\n                res.x,\n                res.y\n            ];\n            var _a, _b, _c, _d, _e, _f, _g;\n        };\n        MultiLineView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_line_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return MultiLineView;\n    }(glyph_1.GlyphView);\n    var MultiLine = function (_super) {\n        tslib_1.__extends(MultiLine, _super);\n        function MultiLine() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return MultiLine;\n    }(glyph_1.Glyph);\n    exports.MultiLine = MultiLine;\n    ;\n    MultiLine.prototype.default_view = exports.MultiLineView;\n    MultiLine.prototype.type = 'MultiLine';\n    MultiLine.coords([[\n            'xs',\n            'ys'\n        ]]);\n    MultiLine.mixins(['line']);    \n}","/*models/glyphs/oval*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var p = require(15    /* core/properties */);\n    exports.OvalView = function (_super) {\n        tslib_1.__extends(OvalView, _super);\n        function OvalView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        OvalView.prototype._set_data = function () {\n            this.max_w2 = 0;\n            if (this.model.properties.width.units === 'data') {\n                this.max_w2 = this.max_width / 2;\n            }\n            this.max_h2 = 0;\n            if (this.model.properties.height.units === 'data') {\n                return this.max_h2 = this.max_height / 2;\n            }\n        };\n        OvalView.prototype._map_data = function () {\n            if (this.model.properties.width.units === 'data') {\n                this.sw = this.sdist(this.renderer.xscale, this._x, this._width, 'center');\n            } else {\n                this.sw = this._width;\n            }\n            if (this.model.properties.height.units === 'data') {\n                return this.sh = this.sdist(this.renderer.yscale, this._y, this._height, 'center');\n            } else {\n                return this.sh = this._height;\n            }\n        };\n        OvalView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy, sw = _a.sw, sh = _a.sh;\n            var i, j, len, results;\n            results = [];\n            for (j = 0, len = indices.length; j < len; j++) {\n                i = indices[j];\n                if (isNaN(sx[i] + sy[i] + sw[i] + sh[i] + this._angle[i])) {\n                    continue;\n                }\n                ctx.translate(sx[i], sy[i]);\n                ctx.rotate(this._angle[i]);\n                ctx.beginPath();\n                ctx.moveTo(0, -sh[i] / 2);\n                ctx.bezierCurveTo(sw[i] / 2, -sh[i] / 2, sw[i] / 2, sh[i] / 2, 0, sh[i] / 2);\n                ctx.bezierCurveTo(-sw[i] / 2, sh[i] / 2, -sw[i] / 2, -sh[i] / 2, 0, -sh[i] / 2);\n                ctx.closePath();\n                if (this.visuals.fill.doit) {\n                    this.visuals.fill.set_vectorize(ctx, i);\n                    ctx.fill();\n                }\n                if (this.visuals.line.doit) {\n                    this.visuals.line.set_vectorize(ctx, i);\n                    ctx.stroke();\n                }\n                ctx.rotate(-this._angle[i]);\n                results.push(ctx.translate(-sx[i], -sy[i]));\n            }\n            return results;\n        };\n        OvalView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            var d, data, indices, scale, sh, sw, sx, sy;\n            indices = [index];\n            sx = {};\n            sx[index] = (x0 + x1) / 2;\n            sy = {};\n            sy[index] = (y0 + y1) / 2;\n            scale = this.sw[index] / this.sh[index];\n            d = Math.min(Math.abs(x1 - x0), Math.abs(y1 - y0)) * 0.8;\n            sw = {};\n            sh = {};\n            if (scale > 1) {\n                sw[index] = d;\n                sh[index] = d / scale;\n            } else {\n                sw[index] = d * scale;\n                sh[index] = d;\n            }\n            data = {\n                sx: sx,\n                sy: sy,\n                sw: sw,\n                sh: sh\n            };\n            return this._render(ctx, indices, data);\n        };\n        OvalView.prototype._bounds = function (bds) {\n            return this.max_wh2_bounds(bds);\n        };\n        return OvalView;\n    }(xy_glyph_1.XYGlyphView);\n    var Oval = function (_super) {\n        tslib_1.__extends(Oval, _super);\n        function Oval() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Oval;\n    }(xy_glyph_1.XYGlyph);\n    exports.Oval = Oval;\n    ;\n    Oval.prototype.default_view = exports.OvalView;\n    Oval.prototype.type = 'Oval';\n    Oval.mixins([\n        'line',\n        'fill'\n    ]);\n    Oval.define({\n        angle: [\n            p.AngleSpec,\n            0\n        ],\n        width: [p.DistanceSpec],\n        height: [p.DistanceSpec]\n    });    \n}","/*models/glyphs/patch*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    exports.PatchView = function (_super) {\n        tslib_1.__extends(PatchView, _super);\n        function PatchView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PatchView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy;\n            var i, j, k, len, len1;\n            if (this.visuals.fill.doit) {\n                this.visuals.fill.set_value(ctx);\n                for (j = 0, len = indices.length; j < len; j++) {\n                    i = indices[j];\n                    if (i === 0) {\n                        ctx.beginPath();\n                        ctx.moveTo(sx[i], sy[i]);\n                        continue;\n                    } else if (isNaN(sx[i] + sy[i])) {\n                        ctx.closePath();\n                        ctx.fill();\n                        ctx.beginPath();\n                        continue;\n                    } else {\n                        ctx.lineTo(sx[i], sy[i]);\n                    }\n                }\n                ctx.closePath();\n                ctx.fill();\n            }\n            if (this.visuals.line.doit) {\n                this.visuals.line.set_value(ctx);\n                for (k = 0, len1 = indices.length; k < len1; k++) {\n                    i = indices[k];\n                    if (i === 0) {\n                        ctx.beginPath();\n                        ctx.moveTo(sx[i], sy[i]);\n                        continue;\n                    } else if (isNaN(sx[i] + sy[i])) {\n                        ctx.closePath();\n                        ctx.stroke();\n                        ctx.beginPath();\n                        continue;\n                    } else {\n                        ctx.lineTo(sx[i], sy[i]);\n                    }\n                }\n                ctx.closePath();\n                return ctx.stroke();\n            }\n        };\n        PatchView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_area_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return PatchView;\n    }(xy_glyph_1.XYGlyphView);\n    var Patch = function (_super) {\n        tslib_1.__extends(Patch, _super);\n        function Patch() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Patch;\n    }(xy_glyph_1.XYGlyph);\n    exports.Patch = Patch;\n    ;\n    Patch.prototype.default_view = exports.PatchView;\n    Patch.prototype.type = 'Patch';\n    Patch.mixins([\n        'line',\n        'fill'\n    ]);    \n}","/*models/glyphs/patches*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var spatial_1 = require(36    /* core/util/spatial */);\n    var glyph_1 = require(108    /* ./glyph */);\n    var array_1 = require(22    /* core/util/array */);\n    var types_1 = require(42    /* core/util/types */);\n    var hittest = require(9    /* core/hittest */);\n    exports.PatchesView = function (_super) {\n        tslib_1.__extends(PatchesView, _super);\n        function PatchesView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PatchesView.prototype._build_discontinuous_object = function (nanned_qs) {\n            var denanned, ds, i, k, nan_index, q, qs, qs_part, ref;\n            // _s is @xs, @ys, @sxs, @sys\n            // an object of n 1-d arrays in either data or screen units\n            // Each 1-d array gets broken to an array of arrays split\n            // on any NaNs\n            // So:\n            // { 0: [x11, x12],\n            //   1: [x21, x22, x23],\n            //   2: [x31, NaN, x32]\n            // }\n            // becomes\n            // { 0: [[x11, x12]],\n            //   1: [[x21, x22, x23]],\n            //   2: [[x31],[x32]]\n            // }\n            ds = {};\n            for (i = k = 0, ref = nanned_qs.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                ds[i] = [];\n                qs = array_1.copy(nanned_qs[i]);\n                while (qs.length > 0) {\n                    nan_index = array_1.findLastIndex(qs, function (q) {\n                        return types_1.isStrictNaN(q);\n                    });\n                    if (nan_index >= 0) {\n                        qs_part = qs.splice(nan_index);\n                    } else {\n                        qs_part = qs;\n                        qs = [];\n                    }\n                    denanned = function () {\n                        var l, len, results;\n                        results = [];\n                        for (l = 0, len = qs_part.length; l < len; l++) {\n                            q = qs_part[l];\n                            if (!types_1.isStrictNaN(q)) {\n                                results.push(q);\n                            }\n                        }\n                        return results;\n                    }();\n                    ds[i].push(denanned);\n                }\n            }\n            return ds;\n        };\n        PatchesView.prototype._index_data = function () {\n            var i, j, k, l, points, ref, ref1, xs, xss, ys, yss;\n            xss = this._build_discontinuous_object(this._xs);\n            yss = this._build_discontinuous_object(this._ys);\n            points = [];\n            for (i = k = 0, ref = this._xs.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                for (j = l = 0, ref1 = xss[i].length; 0 <= ref1 ? l < ref1 : l > ref1; j = 0 <= ref1 ? ++l : --l) {\n                    xs = xss[i][j];\n                    ys = yss[i][j];\n                    if (xs.length === 0) {\n                        continue;\n                    }\n                    points.push({\n                        minX: array_1.min(xs),\n                        minY: array_1.min(ys),\n                        maxX: array_1.max(xs),\n                        maxY: array_1.max(ys),\n                        i: i\n                    });\n                }\n            }\n            return new spatial_1.RBush(points);\n        };\n        PatchesView.prototype._mask_data = function (all_indices) {\n            var bbox, indices, x0, x1, xr, y0, y1, yr;\n            xr = this.renderer.plot_view.frame.x_ranges.default;\n            _a = [\n                xr.min,\n                xr.max\n            ], x0 = _a[0], x1 = _a[1];\n            yr = this.renderer.plot_view.frame.y_ranges.default;\n            _b = [\n                yr.min,\n                yr.max\n            ], y0 = _b[0], y1 = _b[1];\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            indices = this.index.indices(bbox);\n            // TODO (bev) this should be under test\n            return indices.sort(function (a, b) {\n                return a - b;\n            });\n            var _a, _b;\n        };\n        PatchesView.prototype._render = function (ctx, indices, _a) {\n            var sxs = _a.sxs, sys = _a.sys;\n            var i, j, k, l, len, m, ref, ref1, results, sx, sy;\n            // @sxss and @syss are used by _hit_point and sxc, syc\n            // This is the earliest we can build them, and only build them once\n            this.renderer.sxss = this._build_discontinuous_object(sxs);\n            this.renderer.syss = this._build_discontinuous_object(sys);\n            results = [];\n            for (k = 0, len = indices.length; k < len; k++) {\n                i = indices[k];\n                _b = [\n                    sxs[i],\n                    sys[i]\n                ], sx = _b[0], sy = _b[1];\n                if (this.visuals.fill.doit) {\n                    this.visuals.fill.set_vectorize(ctx, i);\n                    for (j = l = 0, ref = sx.length; 0 <= ref ? l < ref : l > ref; j = 0 <= ref ? ++l : --l) {\n                        if (j === 0) {\n                            ctx.beginPath();\n                            ctx.moveTo(sx[j], sy[j]);\n                            continue;\n                        } else if (isNaN(sx[j] + sy[j])) {\n                            ctx.closePath();\n                            ctx.fill();\n                            ctx.beginPath();\n                            continue;\n                        } else {\n                            ctx.lineTo(sx[j], sy[j]);\n                        }\n                    }\n                    ctx.closePath();\n                    ctx.fill();\n                }\n                if (this.visuals.line.doit) {\n                    this.visuals.line.set_vectorize(ctx, i);\n                    for (j = m = 0, ref1 = sx.length; 0 <= ref1 ? m < ref1 : m > ref1; j = 0 <= ref1 ? ++m : --m) {\n                        if (j === 0) {\n                            ctx.beginPath();\n                            ctx.moveTo(sx[j], sy[j]);\n                            continue;\n                        } else if (isNaN(sx[j] + sy[j])) {\n                            ctx.closePath();\n                            ctx.stroke();\n                            ctx.beginPath();\n                            continue;\n                        } else {\n                            ctx.lineTo(sx[j], sy[j]);\n                        }\n                    }\n                    ctx.closePath();\n                    results.push(ctx.stroke());\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n            var _b;\n        };\n        PatchesView.prototype._hit_point = function (geometry) {\n            var candidates, hits, i, idx, j, k, l, ref, ref1, result, sx, sxs, sy, sys, x, y;\n            sx = geometry.sx, sy = geometry.sy;\n            x = this.renderer.xscale.invert(sx);\n            y = this.renderer.yscale.invert(sy);\n            candidates = this.index.indices({\n                minX: x,\n                minY: y,\n                maxX: x,\n                maxY: y\n            });\n            hits = [];\n            for (i = k = 0, ref = candidates.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                idx = candidates[i];\n                sxs = this.renderer.sxss[idx];\n                sys = this.renderer.syss[idx];\n                for (j = l = 0, ref1 = sxs.length; 0 <= ref1 ? l < ref1 : l > ref1; j = 0 <= ref1 ? ++l : --l) {\n                    if (hittest.point_in_poly(sx, sy, sxs[j], sys[j])) {\n                        hits.push(idx);\n                    }\n                }\n            }\n            result = hittest.create_hit_test_result();\n            result['1d'].indices = hits;\n            return result;\n        };\n        PatchesView.prototype._get_snap_coord = function (array) {\n            var k, len, s, sum;\n            sum = 0;\n            for (k = 0, len = array.length; k < len; k++) {\n                s = array[k];\n                sum += s;\n            }\n            return sum / array.length;\n        };\n        PatchesView.prototype.scx = function (i, sx, sy) {\n            var j, k, ref, sxs, sys;\n            if (this.renderer.sxss[i].length === 1) {\n                // We don't have discontinuous objects so we're ok\n                return this._get_snap_coord(this.sxs[i]);\n            } else {\n                // We have discontinuous objects, so we need to find which\n                // one we're in, we can use point_in_poly again\n                sxs = this.renderer.sxss[i];\n                sys = this.renderer.syss[i];\n                for (j = k = 0, ref = sxs.length; 0 <= ref ? k < ref : k > ref; j = 0 <= ref ? ++k : --k) {\n                    if (hittest.point_in_poly(sx, sy, sxs[j], sys[j])) {\n                        return this._get_snap_coord(sxs[j]);\n                    }\n                }\n            }\n            return null;\n        };\n        PatchesView.prototype.scy = function (i, sx, sy) {\n            var j, k, ref, sxs, sys;\n            if (this.renderer.syss[i].length === 1) {\n                // We don't have discontinuous objects so we're ok\n                return this._get_snap_coord(this.sys[i]);\n            } else {\n                // We have discontinuous objects, so we need to find which\n                // one we're in, we can use point_in_poly again\n                sxs = this.renderer.sxss[i];\n                sys = this.renderer.syss[i];\n                for (j = k = 0, ref = sxs.length; 0 <= ref ? k < ref : k > ref; j = 0 <= ref ? ++k : --k) {\n                    if (hittest.point_in_poly(sx, sy, sxs[j], sys[j])) {\n                        return this._get_snap_coord(sys[j]);\n                    }\n                }\n            }\n        };\n        PatchesView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_area_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return PatchesView;\n    }(glyph_1.GlyphView);\n    var Patches = function (_super) {\n        tslib_1.__extends(Patches, _super);\n        function Patches() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Patches;\n    }(glyph_1.Glyph);\n    exports.Patches = Patches;\n    ;\n    Patches.prototype.default_view = exports.PatchesView;\n    Patches.prototype.type = 'Patches';\n    Patches.coords([[\n            'xs',\n            'ys'\n        ]]);\n    Patches.mixins([\n        'line',\n        'fill'\n    ]);    \n}","/*models/glyphs/quad*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var box_1 = require(105    /* ./box */);\n    exports.QuadView = function (_super) {\n        tslib_1.__extends(QuadView, _super);\n        function QuadView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        QuadView.prototype.get_anchor_point = function (anchor, i, spt) {\n            var bottom, left, right, top;\n            left = Math.min(this.sleft[i], this.sright[i]);\n            right = Math.max(this.sright[i], this.sleft[i]);\n            top = Math.min(this.stop[i], this.sbottom[i]);\n            bottom = Math.max(this.sbottom[i], this.stop[i]);\n            switch (anchor) {\n            case 'top_left':\n                return {\n                    x: left,\n                    y: top\n                };\n            case 'top_center':\n                return {\n                    x: (left + right) / 2,\n                    y: top\n                };\n            case 'top_right':\n                return {\n                    x: right,\n                    y: top\n                };\n            case 'center_right':\n                return {\n                    x: right,\n                    y: (top + bottom) / 2\n                };\n            case 'bottom_right':\n                return {\n                    x: right,\n                    y: bottom\n                };\n            case 'bottom_center':\n                return {\n                    x: (left + right) / 2,\n                    y: bottom\n                };\n            case 'bottom_left':\n                return {\n                    x: left,\n                    y: bottom\n                };\n            case 'center_left':\n                return {\n                    x: left,\n                    y: (top + bottom) / 2\n                };\n            case 'center':\n                return {\n                    x: (left + right) / 2,\n                    y: (top + bottom) / 2\n                };\n            }\n        };\n        QuadView.prototype.scx = function (i) {\n            return (this.sleft[i] + this.sright[i]) / 2;\n        };\n        QuadView.prototype.scy = function (i) {\n            return (this.stop[i] + this.sbottom[i]) / 2;\n        };\n        QuadView.prototype._index_data = function () {\n            return this._index_box(this._right.length);\n        };\n        QuadView.prototype._lrtb = function (i) {\n            var b, l, r, t;\n            l = this._left[i];\n            r = this._right[i];\n            t = this._top[i];\n            b = this._bottom[i];\n            return [\n                l,\n                r,\n                t,\n                b\n            ];\n        };\n        return QuadView;\n    }(box_1.BoxView);\n    var Quad = function (_super) {\n        tslib_1.__extends(Quad, _super);\n        function Quad() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Quad;\n    }(box_1.Box);\n    exports.Quad = Quad;\n    ;\n    Quad.prototype.default_view = exports.QuadView;\n    Quad.prototype.type = 'Quad';\n    Quad.coords([\n        [\n            'right',\n            'bottom'\n        ],\n        [\n            'left',\n            'top'\n        ]\n    ]);    \n}","/*models/glyphs/quadratic*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var _qbb;\n    var spatial_1 = require(36    /* core/util/spatial */);\n    var glyph_1 = require(108    /* ./glyph */);\n    // Formula from: http://pomax.nihongoresources.com/pages/bezier/\n    // if segment is quadratic bezier do:\n    //   for both directions do:\n    //     if control between start and end, compute linear bounding box\n    //     otherwise, compute\n    //       bound = u(1-t)^2 + 2v(1-t)t + wt^2\n    //         (with t = ((u-v) / (u-2v+w)), with {u = start, v = control, w = end})\n    //       if control precedes start, min = bound, otherwise max = bound\n    _qbb = function (u, v, w) {\n        var bd, t;\n        if (v === (u + w) / 2) {\n            return [\n                u,\n                w\n            ];\n        } else {\n            t = (u - v) / (u - 2 * v + w);\n            bd = u * Math.pow(1 - t, 2) + 2 * v * (1 - t) * t + w * Math.pow(t, 2);\n            return [\n                Math.min(u, w, bd),\n                Math.max(u, w, bd)\n            ];\n        }\n    };\n    exports.QuadraticView = function (_super) {\n        tslib_1.__extends(QuadraticView, _super);\n        function QuadraticView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        QuadraticView.prototype._index_data = function () {\n            var i, j, points, ref, x0, x1, y0, y1;\n            points = [];\n            for (i = j = 0, ref = this._x0.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                if (isNaN(this._x0[i] + this._x1[i] + this._y0[i] + this._y1[i] + this._cx[i] + this._cy[i])) {\n                    continue;\n                }\n                _a = _qbb(this._x0[i], this._cx[i], this._x1[i]), x0 = _a[0], x1 = _a[1];\n                _b = _qbb(this._y0[i], this._cy[i], this._y1[i]), y0 = _b[0], y1 = _b[1];\n                points.push({\n                    minX: x0,\n                    minY: y0,\n                    maxX: x1,\n                    maxY: y1,\n                    i: i\n                });\n            }\n            return new spatial_1.RBush(points);\n            var _a, _b;\n        };\n        QuadraticView.prototype._render = function (ctx, indices, _a) {\n            var sx0 = _a.sx0, sy0 = _a.sy0, sx1 = _a.sx1, sy1 = _a.sy1, scx = _a.scx, scy = _a.scy;\n            var i, j, len, results;\n            if (this.visuals.line.doit) {\n                results = [];\n                for (j = 0, len = indices.length; j < len; j++) {\n                    i = indices[j];\n                    if (isNaN(sx0[i] + sy0[i] + sx1[i] + sy1[i] + scx[i] + scy[i])) {\n                        continue;\n                    }\n                    ctx.beginPath();\n                    ctx.moveTo(sx0[i], sy0[i]);\n                    ctx.quadraticCurveTo(scx[i], scy[i], sx1[i], sy1[i]);\n                    this.visuals.line.set_vectorize(ctx, i);\n                    results.push(ctx.stroke());\n                }\n                return results;\n            }\n        };\n        QuadraticView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_line_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return QuadraticView;\n    }(glyph_1.GlyphView);\n    var Quadratic = function (_super) {\n        tslib_1.__extends(Quadratic, _super);\n        function Quadratic() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Quadratic;\n    }(glyph_1.Glyph);\n    exports.Quadratic = Quadratic;\n    ;\n    Quadratic.prototype.default_view = exports.QuadraticView;\n    Quadratic.prototype.type = 'Quadratic';\n    Quadratic.coords([\n        [\n            'x0',\n            'y0'\n        ],\n        [\n            'x1',\n            'y1'\n        ],\n        [\n            'cx',\n            'cy'\n        ]\n    ]);\n    Quadratic.mixins(['line']);    \n}","/*models/glyphs/ray*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var p = require(15    /* core/properties */);\n    exports.RayView = function (_super) {\n        tslib_1.__extends(RayView, _super);\n        function RayView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        RayView.prototype._map_data = function () {\n            if (this.model.properties.length.units === 'data') {\n                return this.slength = this.sdist(this.renderer.xscale, this._x, this._length);\n            } else {\n                return this.slength = this._length;\n            }\n        };\n        RayView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy, slength = _a.slength, _angle = _a._angle;\n            var height, i, inf_len, j, k, len, ref, results, width;\n            if (this.visuals.line.doit) {\n                width = this.renderer.plot_view.frame._width.value;\n                height = this.renderer.plot_view.frame._height.value;\n                inf_len = 2 * (width + height);\n                for (i = j = 0, ref = slength.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    if (slength[i] === 0) {\n                        slength[i] = inf_len;\n                    }\n                }\n                results = [];\n                for (k = 0, len = indices.length; k < len; k++) {\n                    i = indices[k];\n                    if (isNaN(sx[i] + sy[i] + _angle[i] + slength[i])) {\n                        continue;\n                    }\n                    ctx.translate(sx[i], sy[i]);\n                    ctx.rotate(_angle[i]);\n                    ctx.beginPath();\n                    ctx.moveTo(0, 0);\n                    ctx.lineTo(slength[i], 0);\n                    this.visuals.line.set_vectorize(ctx, i);\n                    ctx.stroke();\n                    ctx.rotate(-_angle[i]);\n                    results.push(ctx.translate(-sx[i], -sy[i]));\n                }\n                return results;\n            }\n        };\n        RayView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_line_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return RayView;\n    }(xy_glyph_1.XYGlyphView);\n    var Ray = function (_super) {\n        tslib_1.__extends(Ray, _super);\n        function Ray() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Ray;\n    }(xy_glyph_1.XYGlyph);\n    exports.Ray = Ray;\n    ;\n    Ray.prototype.default_view = exports.RayView;\n    Ray.prototype.type = 'Ray';\n    Ray.mixins(['line']);\n    Ray.define({\n        length: [p.DistanceSpec],\n        angle: [p.AngleSpec]\n    });    \n}","/*models/glyphs/rect*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var hittest = require(9    /* core/hittest */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    exports.RectView = function (_super) {\n        tslib_1.__extends(RectView, _super);\n        function RectView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        RectView.prototype._set_data = function () {\n            this.max_w2 = 0;\n            if (this.model.properties.width.units === 'data') {\n                this.max_w2 = this.max_width / 2;\n            }\n            this.max_h2 = 0;\n            if (this.model.properties.height.units === 'data') {\n                return this.max_h2 = this.max_height / 2;\n            }\n        };\n        RectView.prototype._map_data = function () {\n            var i;\n            if (this.model.properties.width.units === 'data') {\n                _a = this._map_dist_corner_for_data_side_length(this._x, this._width, this.renderer.xscale, 0), this.sw = _a[0], this.sx0 = _a[1];\n            } else {\n                this.sw = this._width;\n                this.sx0 = function () {\n                    var j, ref, results;\n                    results = [];\n                    for (i = j = 0, ref = this.sx.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                        results.push(this.sx[i] - this.sw[i] / 2);\n                    }\n                    return results;\n                }.call(this);\n            }\n            if (this.model.properties.height.units === 'data') {\n                _b = this._map_dist_corner_for_data_side_length(this._y, this._height, this.renderer.yscale, 1), this.sh = _b[0], this.sy1 = _b[1];\n            } else {\n                this.sh = this._height;\n                this.sy1 = function () {\n                    var j, ref, results;\n                    results = [];\n                    for (i = j = 0, ref = this.sy.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                        results.push(this.sy[i] - this.sh[i] / 2);\n                    }\n                    return results;\n                }.call(this);\n            }\n            return this.ssemi_diag = function () {\n                var j, ref, results;\n                results = [];\n                for (i = j = 0, ref = this.sw.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    results.push(Math.sqrt(this.sw[i] / 2 * this.sw[i] / 2 + this.sh[i] / 2 * this.sh[i] / 2));\n                }\n                return results;\n            }.call(this);\n            var _a, _b;\n        };\n        RectView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy, sx0 = _a.sx0, sy1 = _a.sy1, sw = _a.sw, sh = _a.sh, _angle = _a._angle;\n            var i, j, k, len, len1;\n            if (this.visuals.fill.doit) {\n                for (j = 0, len = indices.length; j < len; j++) {\n                    i = indices[j];\n                    if (isNaN(sx[i] + sy[i] + sx0[i] + sy1[i] + sw[i] + sh[i] + _angle[i])) {\n                        continue;\n                    }\n                    //no need to test the return value, we call fillRect for every glyph anyway\n                    this.visuals.fill.set_vectorize(ctx, i);\n                    if (_angle[i]) {\n                        ctx.translate(sx[i], sy[i]);\n                        ctx.rotate(_angle[i]);\n                        ctx.fillRect(-sw[i] / 2, -sh[i] / 2, sw[i], sh[i]);\n                        ctx.rotate(-_angle[i]);\n                        ctx.translate(-sx[i], -sy[i]);\n                    } else {\n                        ctx.fillRect(sx0[i], sy1[i], sw[i], sh[i]);\n                    }\n                }\n            }\n            if (this.visuals.line.doit) {\n                ctx.beginPath();\n                for (k = 0, len1 = indices.length; k < len1; k++) {\n                    i = indices[k];\n                    if (isNaN(sx[i] + sy[i] + sx0[i] + sy1[i] + sw[i] + sh[i] + _angle[i])) {\n                        continue;\n                    }\n                    // fillRect does not fill zero-height or -width rects, but rect(...)\n                    // does seem to stroke them (1px wide or tall). Explicitly ignore rects\n                    // with zero width or height to be consistent\n                    if (sw[i] === 0 || sh[i] === 0) {\n                        continue;\n                    }\n                    if (_angle[i]) {\n                        ctx.translate(sx[i], sy[i]);\n                        ctx.rotate(_angle[i]);\n                        ctx.rect(-sw[i] / 2, -sh[i] / 2, sw[i], sh[i]);\n                        ctx.rotate(-_angle[i]);\n                        ctx.translate(-sx[i], -sy[i]);\n                    } else {\n                        ctx.rect(sx0[i], sy1[i], sw[i], sh[i]);\n                    }\n                    this.visuals.line.set_vectorize(ctx, i);\n                    ctx.stroke();\n                    ctx.beginPath();\n                }\n                return ctx.stroke();\n            }\n        };\n        RectView.prototype._hit_rect = function (geometry) {\n            return this._hit_rect_against_index(geometry);\n        };\n        RectView.prototype._hit_point = function (geometry) {\n            var bbox, c, d, height_in, hits, i, j, len, max_x2_ddist, max_y2_ddist, px, py, ref, result, s, scenter_x, scenter_y, sx, sy, width_in, x, x0, x1, y, y0, y1;\n            sx = geometry.sx, sy = geometry.sy;\n            x = this.renderer.xscale.invert(sx);\n            y = this.renderer.yscale.invert(sy);\n            scenter_x = function () {\n                var j, ref, results;\n                results = [];\n                for (i = j = 0, ref = this.sx0.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    results.push(this.sx0[i] + this.sw[i] / 2);\n                }\n                return results;\n            }.call(this);\n            scenter_y = function () {\n                var j, ref, results;\n                results = [];\n                for (i = j = 0, ref = this.sy1.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    results.push(this.sy1[i] + this.sh[i] / 2);\n                }\n                return results;\n            }.call(this);\n            max_x2_ddist = array_1.max(this._ddist(0, scenter_x, this.ssemi_diag));\n            max_y2_ddist = array_1.max(this._ddist(1, scenter_y, this.ssemi_diag));\n            x0 = x - max_x2_ddist;\n            x1 = x + max_x2_ddist;\n            y0 = y - max_y2_ddist;\n            y1 = y + max_y2_ddist;\n            hits = [];\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            ref = this.index.indices(bbox);\n            for (j = 0, len = ref.length; j < len; j++) {\n                i = ref[j];\n                if (this._angle[i]) {\n                    d = Math.sqrt(Math.pow(sx - this.sx[i], 2) + Math.pow(sy - this.sy[i], 2));\n                    s = Math.sin(-this._angle[i]);\n                    c = Math.cos(-this._angle[i]);\n                    px = c * (sx - this.sx[i]) - s * (sy - this.sy[i]) + this.sx[i];\n                    py = s * (sx - this.sx[i]) + c * (sy - this.sy[i]) + this.sy[i];\n                    sx = px;\n                    sy = py;\n                    width_in = Math.abs(this.sx[i] - sx) <= this.sw[i] / 2;\n                    height_in = Math.abs(this.sy[i] - sy) <= this.sh[i] / 2;\n                } else {\n                    width_in = sx - this.sx0[i] <= this.sw[i] && sx - this.sx0[i] >= 0;\n                    height_in = sy - this.sy1[i] <= this.sh[i] && sy - this.sy1[i] >= 0;\n                }\n                if (height_in && width_in) {\n                    hits.push(i);\n                }\n            }\n            result = hittest.create_hit_test_result();\n            result['1d'].indices = hits;\n            return result;\n        };\n        RectView.prototype._map_dist_corner_for_data_side_length = function (coord, side_length, scale, dim) {\n            var frame, i, j, k, pt0, pt1, ref, ref1, spt0, spt1, spt_corner, sside_length, x;\n            frame = this.renderer.plot_view.frame;\n            if (scale.source_range.synthetic != null) {\n                coord = function () {\n                    var j, len, results;\n                    results = [];\n                    for (j = 0, len = coord.length; j < len; j++) {\n                        x = coord[j];\n                        results.push(scale.source_range.synthetic(x));\n                    }\n                    return results;\n                }();\n            }\n            pt0 = function () {\n                var j, ref, results;\n                results = [];\n                for (i = j = 0, ref = coord.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    results.push(Number(coord[i]) - side_length[i] / 2);\n                }\n                return results;\n            }();\n            pt1 = function () {\n                var j, ref, results;\n                results = [];\n                for (i = j = 0, ref = coord.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    results.push(Number(coord[i]) + side_length[i] / 2);\n                }\n                return results;\n            }();\n            spt0 = scale.v_compute(pt0);\n            spt1 = scale.v_compute(pt1);\n            sside_length = this.sdist(scale, pt0, side_length, 'edge', this.model.dilate);\n            if (dim === 0) {\n                spt_corner = spt0;\n                for (i = j = 0, ref = spt0.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    if (spt0[i] !== spt1[i]) {\n                        spt_corner = spt0[i] < spt1[i] ? spt0 : spt1;\n                        break;\n                    }\n                }\n                return [\n                    sside_length,\n                    spt_corner\n                ];\n            } else if (dim === 1) {\n                spt_corner = spt0;\n                for (i = k = 0, ref1 = spt0.length; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {\n                    if (spt0[i] !== spt1[i]) {\n                        spt_corner = spt0[i] < spt1[i] ? spt0 : spt1;\n                        break;\n                    }\n                }\n                return [\n                    sside_length,\n                    spt_corner\n                ];\n            }\n        };\n        RectView.prototype._ddist = function (dim, spts, spans) {\n            var i, pt0, pt1, scale, spt0, spt1;\n            if (dim === 0) {\n                scale = this.renderer.xscale;\n            } else {\n                scale = this.renderer.yscale;\n            }\n            spt0 = spts;\n            spt1 = function () {\n                var j, ref, results;\n                results = [];\n                for (i = j = 0, ref = spt0.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    results.push(spt0[i] + spans[i]);\n                }\n                return results;\n            }();\n            pt0 = scale.v_invert(spt0);\n            pt1 = scale.v_invert(spt1);\n            return function () {\n                var j, ref, results;\n                results = [];\n                for (i = j = 0, ref = pt0.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    results.push(Math.abs(pt1[i] - pt0[i]));\n                }\n                return results;\n            }();\n        };\n        RectView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_area_legend(ctx, x0, x1, y0, y1, index);\n        };\n        RectView.prototype._bounds = function (bds) {\n            return this.max_wh2_bounds(bds);\n        };\n        return RectView;\n    }(xy_glyph_1.XYGlyphView);\n    var Rect = function (_super) {\n        tslib_1.__extends(Rect, _super);\n        function Rect() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Rect;\n    }(xy_glyph_1.XYGlyph);\n    exports.Rect = Rect;\n    ;\n    Rect.prototype.default_view = exports.RectView;\n    Rect.prototype.type = 'Rect';\n    Rect.mixins([\n        'line',\n        'fill'\n    ]);\n    Rect.define({\n        angle: [\n            p.AngleSpec,\n            0\n        ],\n        width: [p.DistanceSpec],\n        height: [p.DistanceSpec],\n        dilate: [\n            p.Bool,\n            false\n        ]\n    });    \n}","/*models/glyphs/segment*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var hittest = require(9    /* core/hittest */);\n    var spatial_1 = require(36    /* core/util/spatial */);\n    var glyph_1 = require(108    /* ./glyph */);\n    exports.SegmentView = function (_super) {\n        tslib_1.__extends(SegmentView, _super);\n        function SegmentView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SegmentView.prototype._index_data = function () {\n            var i, j, points, ref;\n            points = [];\n            for (i = j = 0, ref = this._x0.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                if (!isNaN(this._x0[i] + this._x1[i] + this._y0[i] + this._y1[i])) {\n                    points.push({\n                        minX: Math.min(this._x0[i], this._x1[i]),\n                        minY: Math.min(this._y0[i], this._y1[i]),\n                        maxX: Math.max(this._x0[i], this._x1[i]),\n                        maxY: Math.max(this._y0[i], this._y1[i]),\n                        i: i\n                    });\n                }\n            }\n            return new spatial_1.RBush(points);\n        };\n        SegmentView.prototype._render = function (ctx, indices, _a) {\n            var sx0 = _a.sx0, sy0 = _a.sy0, sx1 = _a.sx1, sy1 = _a.sy1;\n            var i, j, len, results;\n            if (this.visuals.line.doit) {\n                results = [];\n                for (j = 0, len = indices.length; j < len; j++) {\n                    i = indices[j];\n                    if (isNaN(sx0[i] + sy0[i] + sx1[i] + sy1[i])) {\n                        continue;\n                    }\n                    ctx.beginPath();\n                    ctx.moveTo(sx0[i], sy0[i]);\n                    ctx.lineTo(sx1[i], sy1[i]);\n                    this.visuals.line.set_vectorize(ctx, i);\n                    results.push(ctx.stroke());\n                }\n                return results;\n            }\n        };\n        SegmentView.prototype._hit_point = function (geometry) {\n            var candidates, dist2, hits, i, j, len, lw_voffset, maxX, maxY, minX, minY, p0, p1, point, result, sx, sy, threshold2, x, y;\n            sx = geometry.sx, sy = geometry.sy;\n            x = this.renderer.xscale.invert(sx);\n            y = this.renderer.yscale.invert(sy);\n            point = {\n                x: sx,\n                y: sy\n            };\n            hits = [];\n            lw_voffset = 2;\n            // FIXME: Use maximum of segments line_width/2 instead of magic constant 2\n            _a = this.renderer.xscale.r_invert(sx - lw_voffset, sx + lw_voffset), minX = _a[0], maxX = _a[1];\n            _b = this.renderer.yscale.r_invert(sy - lw_voffset, sy + lw_voffset), minY = _b[0], maxY = _b[1];\n            candidates = this.index.indices({\n                minX: minX,\n                minY: minY,\n                maxX: maxX,\n                maxY: maxY\n            });\n            for (j = 0, len = candidates.length; j < len; j++) {\n                i = candidates[j];\n                threshold2 = Math.pow(Math.max(2, this.visuals.line.cache_select('line_width', i) / 2), 2);\n                _c = [\n                    {\n                        x: this.sx0[i],\n                        y: this.sy0[i]\n                    },\n                    {\n                        x: this.sx1[i],\n                        y: this.sy1[i]\n                    }\n                ], p0 = _c[0], p1 = _c[1];\n                dist2 = hittest.dist_to_segment_squared(point, p0, p1);\n                if (dist2 < threshold2) {\n                    hits.push(i);\n                }\n            }\n            result = hittest.create_hit_test_result();\n            result['1d'].indices = hits;\n            return result;\n            var _a, _b, _c;\n        };\n        SegmentView.prototype._hit_span = function (geometry) {\n            var candidates, hits, hr, i, j, len, maxX, maxY, minX, minY, result, sx, sy, v0, v1, val, vr;\n            _a = this.renderer.plot_view.frame.bbox.ranges, hr = _a[0], vr = _a[1];\n            sx = geometry.sx, sy = geometry.sy;\n            if (geometry.direction === 'v') {\n                val = this.renderer.yscale.invert(sy);\n                _b = [\n                    this._y0,\n                    this._y1\n                ], v0 = _b[0], v1 = _b[1];\n            } else {\n                val = this.renderer.xscale.invert(sx);\n                _c = [\n                    this._x0,\n                    this._x1\n                ], v0 = _c[0], v1 = _c[1];\n            }\n            hits = [];\n            _d = this.renderer.xscale.r_invert(hr.start, hr.end), minX = _d[0], maxX = _d[1];\n            _e = this.renderer.yscale.r_invert(vr.start, vr.end), minY = _e[0], maxY = _e[1];\n            candidates = this.index.indices({\n                minX: minX,\n                minY: minY,\n                maxX: maxX,\n                maxY: maxY\n            });\n            for (j = 0, len = candidates.length; j < len; j++) {\n                i = candidates[j];\n                if (v0[i] <= val && val <= v1[i] || v1[i] <= val && val <= v0[i]) {\n                    hits.push(i);\n                }\n            }\n            result = hittest.create_hit_test_result();\n            result['1d'].indices = hits;\n            return result;\n            var _a, _b, _c, _d, _e;\n        };\n        SegmentView.prototype.scx = function (i) {\n            return (this.sx0[i] + this.sx1[i]) / 2;\n        };\n        SegmentView.prototype.scy = function (i) {\n            return (this.sy0[i] + this.sy1[i]) / 2;\n        };\n        SegmentView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_line_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return SegmentView;\n    }(glyph_1.GlyphView);\n    var Segment = function (_super) {\n        tslib_1.__extends(Segment, _super);\n        function Segment() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Segment;\n    }(glyph_1.Glyph);\n    exports.Segment = Segment;\n    ;\n    Segment.prototype.default_view = exports.SegmentView;\n    Segment.prototype.type = 'Segment';\n    Segment.coords([\n        [\n            'x0',\n            'y0'\n        ],\n        [\n            'x1',\n            'y1'\n        ]\n    ]);\n    Segment.mixins(['line']);    \n}","/*models/glyphs/step*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var p = require(15    /* core/properties */);\n    exports.StepView = function (_super) {\n        tslib_1.__extends(StepView, _super);\n        function StepView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        StepView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy;\n            var L, i, j, ref, x1, x2, xm, y1, y2;\n            this.visuals.line.set_value(ctx);\n            L = indices.length;\n            if (L < 2) {\n                return;\n            }\n            ctx.beginPath();\n            ctx.moveTo(sx[0], sy[0]);\n            for (i = j = 1, ref = L; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {\n                switch (this.model.mode) {\n                case 'before':\n                    _b = [\n                        sx[i - 1],\n                        sy[i]\n                    ], x1 = _b[0], y1 = _b[1];\n                    _c = [\n                        sx[i],\n                        sy[i]\n                    ], x2 = _c[0], y2 = _c[1];\n                    break;\n                case 'after':\n                    _d = [\n                        sx[i],\n                        sy[i - 1]\n                    ], x1 = _d[0], y1 = _d[1];\n                    _e = [\n                        sx[i],\n                        sy[i]\n                    ], x2 = _e[0], y2 = _e[1];\n                    break;\n                case 'center':\n                    xm = (sx[i - 1] + sx[i]) / 2;\n                    _f = [\n                        xm,\n                        sy[i - 1]\n                    ], x1 = _f[0], y1 = _f[1];\n                    _g = [\n                        xm,\n                        sy[i]\n                    ], x2 = _g[0], y2 = _g[1];\n                }\n                ctx.lineTo(x1, y1);\n                ctx.lineTo(x2, y2);\n            }\n            ctx.lineTo(sx[L - 1], sy[L - 1]);\n            return ctx.stroke();\n            var _b, _c, _d, _e, _f, _g;\n        };\n        StepView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_line_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return StepView;\n    }(xy_glyph_1.XYGlyphView);\n    var Step = function (_super) {\n        tslib_1.__extends(Step, _super);\n        function Step() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Step;\n    }(xy_glyph_1.XYGlyph);\n    exports.Step = Step;\n    ;\n    Step.prototype.default_view = exports.StepView;\n    Step.prototype.type = 'Step';\n    Step.mixins(['line']);\n    Step.define({\n        mode: [\n            p.StepMode,\n            'before'\n        ]\n    });    \n}","/*models/glyphs/text*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var p = require(15    /* core/properties */);\n    var text_1 = require(40    /* core/util/text */);\n    exports.TextView = function (_super) {\n        tslib_1.__extends(TextView, _super);\n        function TextView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TextView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy, _x_offset = _a._x_offset, _y_offset = _a._y_offset, _angle = _a._angle, _text = _a._text;\n            var baseline, block_height, font, height, i, j, k, len, len1, line, line_height, lines, results, text, y;\n            results = [];\n            for (j = 0, len = indices.length; j < len; j++) {\n                i = indices[j];\n                if (isNaN(sx[i] + sy[i] + _x_offset[i] + _y_offset[i] + _angle[i]) || _text[i] == null) {\n                    continue;\n                }\n                if (this.visuals.text.doit) {\n                    text = '' + _text[i];\n                    ctx.save();\n                    ctx.translate(sx[i] + _x_offset[i], sy[i] + _y_offset[i]);\n                    ctx.rotate(_angle[i]);\n                    this.visuals.text.set_vectorize(ctx, i);\n                    if (text.indexOf('\\n') === -1) {\n                        ctx.fillText(text, 0, 0);\n                    } else {\n                        lines = text.split('\\n');\n                        font = this.visuals.text.cache_select('font', i);\n                        height = text_1.get_text_height(font).height;\n                        line_height = this.visuals.text.text_line_height.value() * height;\n                        block_height = line_height * lines.length;\n                        baseline = this.visuals.text.cache_select('text_baseline', i);\n                        switch (baseline) {\n                        case 'top':\n                            y = 0;\n                            break;\n                        case 'middle':\n                            y = -block_height / 2 + line_height / 2;\n                            break;\n                        case 'bottom':\n                            y = -block_height + line_height;\n                            break;\n                        default:\n                            y = 0;\n                            console.warn('\\'' + baseline + '\\' baseline not supported with multi line text');\n                        }\n                        for (k = 0, len1 = lines.length; k < len1; k++) {\n                            line = lines[k];\n                            ctx.fillText(line, 0, y);\n                            y += line_height;\n                        }\n                    }\n                    results.push(ctx.restore());\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        TextView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            ctx.save();\n            this.text_props.set_value(ctx);\n            // override some features so we fit inside the legend\n            ctx.font = this.text_props.font_value();\n            ctx.font = ctx.font.replace(/\\b[\\d\\.]+[\\w]+\\b/, '10pt');\n            ctx.textAlign = 'right';\n            ctx.textBaseline = 'middle';\n            ctx.fillText('text', x2, (y1 + y2) / 2);\n            return ctx.restore();\n        };\n        return TextView;\n    }(xy_glyph_1.XYGlyphView);\n    var Text = function (_super) {\n        tslib_1.__extends(Text, _super);\n        function Text() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Text;\n    }(xy_glyph_1.XYGlyph);\n    exports.Text = Text;\n    ;\n    Text.prototype.default_view = exports.TextView;\n    Text.prototype.type = 'Text';\n    Text.mixins(['text']);\n    Text.define({\n        text: [\n            p.StringSpec,\n            { field: 'text' }\n        ],\n        angle: [\n            p.AngleSpec,\n            0\n        ],\n        x_offset: [\n            p.NumberSpec,\n            0\n        ],\n        y_offset: [\n            p.NumberSpec,\n            0\n        ]\n    });    \n}","/*models/glyphs/vbar*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var box_1 = require(105    /* ./box */);\n    var p = require(15    /* core/properties */);\n    exports.VBarView = function (_super) {\n        tslib_1.__extends(VBarView, _super);\n        function VBarView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        VBarView.prototype.scy = function (i) {\n            return (this.stop[i] + this.sbottom[i]) / 2;\n        };\n        VBarView.prototype._index_data = function () {\n            return this._index_box(this._x.length);\n        };\n        VBarView.prototype._lrtb = function (i) {\n            var b, l, r, t;\n            l = this._x[i] - this._width[i] / 2;\n            r = this._x[i] + this._width[i] / 2;\n            t = Math.max(this._top[i], this._bottom[i]);\n            b = Math.min(this._top[i], this._bottom[i]);\n            return [\n                l,\n                r,\n                t,\n                b\n            ];\n        };\n        VBarView.prototype._map_data = function () {\n            var i, j, ref;\n            this.sx = this.renderer.xscale.v_compute(this._x);\n            this.stop = this.renderer.yscale.v_compute(this._top);\n            this.sbottom = this.renderer.yscale.v_compute(this._bottom);\n            this.sleft = [];\n            this.sright = [];\n            this.sw = this.sdist(this.renderer.xscale, this._x, this._width, 'center');\n            for (i = j = 0, ref = this.sx.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                this.sleft.push(this.sx[i] - this.sw[i] / 2);\n                this.sright.push(this.sx[i] + this.sw[i] / 2);\n            }\n            return null;\n        };\n        return VBarView;\n    }(box_1.BoxView);\n    var VBar = function (_super) {\n        tslib_1.__extends(VBar, _super);\n        function VBar() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return VBar;\n    }(box_1.Box);\n    exports.VBar = VBar;\n    ;\n    VBar.prototype.default_view = exports.VBarView;\n    VBar.prototype.type = 'VBar';\n    VBar.coords([[\n            'x',\n            'bottom'\n        ]]);\n    VBar.define({\n        width: [p.DistanceSpec],\n        top: [p.NumberSpec]\n    });\n    VBar.override({ bottom: 0 });    \n}","/*models/glyphs/wedge*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ./xy_glyph */);\n    var hittest = require(9    /* core/hittest */);\n    var p = require(15    /* core/properties */);\n    var math_1 = require(29    /* core/util/math */);\n    exports.WedgeView = function (_super) {\n        tslib_1.__extends(WedgeView, _super);\n        function WedgeView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        WedgeView.prototype._map_data = function () {\n            if (this.model.properties.radius.units === 'data') {\n                return this.sradius = this.sdist(this.renderer.xscale, this._x, this._radius);\n            } else {\n                return this.sradius = this._radius;\n            }\n        };\n        WedgeView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy, sradius = _a.sradius, _start_angle = _a._start_angle, _end_angle = _a._end_angle;\n            var direction, i, j, len, results;\n            direction = this.model.properties.direction.value();\n            results = [];\n            for (j = 0, len = indices.length; j < len; j++) {\n                i = indices[j];\n                if (isNaN(sx[i] + sy[i] + sradius[i] + _start_angle[i] + _end_angle[i])) {\n                    continue;\n                }\n                ctx.beginPath();\n                ctx.arc(sx[i], sy[i], sradius[i], _start_angle[i], _end_angle[i], direction);\n                ctx.lineTo(sx[i], sy[i]);\n                ctx.closePath();\n                if (this.visuals.fill.doit) {\n                    this.visuals.fill.set_vectorize(ctx, i);\n                    ctx.fill();\n                }\n                if (this.visuals.line.doit) {\n                    this.visuals.line.set_vectorize(ctx, i);\n                    results.push(ctx.stroke());\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        WedgeView.prototype._hit_point = function (geometry) {\n            var angle, bbox, candidates, direction, dist, hits, i, j, k, len, len1, r2, ref, sx, sx0, sx1, sy, sy0, sy1, x, x0, x1, y, y0, y1;\n            sx = geometry.sx, sy = geometry.sy;\n            x = this.renderer.xscale.invert(sx);\n            y = this.renderer.yscale.invert(sy);\n            // check radius first\n            if (this.model.properties.radius.units === 'data') {\n                x0 = x - this.max_radius;\n                x1 = x + this.max_radius;\n                y0 = y - this.max_radius;\n                y1 = y + this.max_radius;\n            } else {\n                sx0 = sx - this.max_radius;\n                sx1 = sx + this.max_radius;\n                _a = this.renderer.xscale.r_invert(sx0, sx1), x0 = _a[0], x1 = _a[1];\n                sy0 = sy - this.max_radius;\n                sy1 = sy + this.max_radius;\n                _b = this.renderer.yscale.r_invert(sy0, sy1), y0 = _b[0], y1 = _b[1];\n            }\n            candidates = [];\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            ref = this.index.indices(bbox);\n            for (j = 0, len = ref.length; j < len; j++) {\n                i = ref[j];\n                r2 = Math.pow(this.sradius[i], 2);\n                _c = this.renderer.xscale.r_compute(x, this._x[i]), sx0 = _c[0], sx1 = _c[1];\n                _d = this.renderer.yscale.r_compute(y, this._y[i]), sy0 = _d[0], sy1 = _d[1];\n                dist = Math.pow(sx0 - sx1, 2) + Math.pow(sy0 - sy1, 2);\n                if (dist <= r2) {\n                    candidates.push([\n                        i,\n                        dist\n                    ]);\n                }\n            }\n            direction = this.model.properties.direction.value();\n            hits = [];\n            for (k = 0, len1 = candidates.length; k < len1; k++) {\n                _e = candidates[k], i = _e[0], dist = _e[1];\n                // NOTE: minus the angle because JS uses non-mathy convention for angles\n                angle = Math.atan2(sy - this.sy[i], sx - this.sx[i]);\n                if (math_1.angle_between(-angle, -this._start_angle[i], -this._end_angle[i], direction)) {\n                    hits.push([\n                        i,\n                        dist\n                    ]);\n                }\n            }\n            return hittest.create_1d_hit_test_result(hits);\n            var _a, _b, _c, _d, _e;\n        };\n        WedgeView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            return this._generic_area_legend(ctx, x0, x1, y0, y1, index);\n        };\n        return WedgeView;\n    }(xy_glyph_1.XYGlyphView);\n    var Wedge = function (_super) {\n        tslib_1.__extends(Wedge, _super);\n        function Wedge() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Wedge;\n    }(xy_glyph_1.XYGlyph);\n    exports.Wedge = Wedge;\n    ;\n    Wedge.prototype.default_view = exports.WedgeView;\n    Wedge.prototype.type = 'Wedge';\n    Wedge.mixins([\n        'line',\n        'fill'\n    ]);\n    Wedge.define({\n        direction: [\n            p.Direction,\n            'anticlock'\n        ],\n        radius: [p.DistanceSpec],\n        start_angle: [p.AngleSpec],\n        end_angle: [p.AngleSpec]\n    });    \n}","/*models/glyphs/xy_glyph*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var spatial_1 = require(36    /* core/util/spatial */);\n    var glyph_1 = require(108    /* ./glyph */);\n    exports.XYGlyphView = function (_super) {\n        tslib_1.__extends(XYGlyphView, _super);\n        function XYGlyphView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        XYGlyphView.prototype._index_data = function () {\n            var i, j, points, ref, x, y;\n            points = [];\n            for (i = j = 0, ref = this._x.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                x = this._x[i];\n                y = this._y[i];\n                if (isNaN(x + y) || !isFinite(x + y)) {\n                    continue;\n                }\n                points.push({\n                    minX: x,\n                    minY: y,\n                    maxX: x,\n                    maxY: y,\n                    i: i\n                });\n            }\n            return new spatial_1.RBush(points);\n        };\n        return XYGlyphView;\n    }(glyph_1.GlyphView);\n    var XYGlyph = function (_super) {\n        tslib_1.__extends(XYGlyph, _super);\n        function XYGlyph() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return XYGlyph;\n    }(glyph_1.Glyph);\n    exports.XYGlyph = XYGlyph;\n    ;\n    XYGlyph.prototype.type = 'XYGlyph';\n    XYGlyph.prototype.default_view = exports.XYGlyphView;\n    XYGlyph.coords([[\n            'x',\n            'y'\n        ]]);    \n}","/*models/graphs/graph_hit_test_policy*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    var array_1 = require(22    /* core/util/array */);\n    var hittest_1 = require(9    /* core/hittest */);\n    exports.GraphHitTestPolicy = function (_super) {\n        tslib_1.__extends(GraphHitTestPolicy, _super);\n        function GraphHitTestPolicy() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        GraphHitTestPolicy.prototype.do_selection = function (geometry, graph_view, final, append) {\n            return false;\n        };\n        GraphHitTestPolicy.prototype.do_inspection = function (geometry, graph_view, final, append) {\n            return false;\n        };\n        return GraphHitTestPolicy;\n    }(model_1.Model);\n    var NodesOnly = function (_super) {\n        tslib_1.__extends(NodesOnly, _super);\n        function NodesOnly() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        NodesOnly.prototype._do = function (geometry, graph_view, final, append) {\n            var hit_test_result, node_view;\n            node_view = graph_view.node_view;\n            hit_test_result = node_view.glyph.hit_test(geometry);\n            // glyphs that don't have hit-testing implemented will return null\n            if (hit_test_result === null) {\n                return false;\n            }\n            this._node_selector.update(hit_test_result, final, append);\n            return !this._node_selector.indices.is_empty();\n        };\n        NodesOnly.prototype.do_selection = function (geometry, graph_view, final, append) {\n            var did_hit;\n            this._node_selector = graph_view.node_view.model.data_source.selection_manager.selector;\n            did_hit = this._do(geometry, graph_view, final, append);\n            graph_view.node_view.model.data_source.selected = this._node_selector.indices;\n            graph_view.node_view.model.data_source.select.emit();\n            return did_hit;\n        };\n        NodesOnly.prototype.do_inspection = function (geometry, graph_view, final, append) {\n            var did_hit;\n            this._node_selector = graph_view.model.get_selection_manager().get_or_create_inspector(graph_view.node_view.model);\n            did_hit = this._do(geometry, graph_view, final, append);\n            // silently set inspected attr to avoid triggering data_source.change event and rerender\n            graph_view.node_view.model.data_source.setv({ inspected: this._node_selector.indices }, { silent: true });\n            graph_view.node_view.model.data_source.inspect.emit([\n                graph_view.node_view,\n                { geometry: geometry }\n            ]);\n            return did_hit;\n        };\n        return NodesOnly;\n    }(exports.GraphHitTestPolicy);\n    exports.NodesOnly = NodesOnly;\n    ;\n    NodesOnly.prototype.type = 'NodesOnly';\n    var NodesAndLinkedEdges = function (_super) {\n        tslib_1.__extends(NodesAndLinkedEdges, _super);\n        function NodesAndLinkedEdges() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        NodesAndLinkedEdges.prototype._do = function (geometry, graph_view, final, append) {\n            var edge_indices, edge_source, edge_view, hit_test_result, i, j, k, len, linked_index, node_indices, node_view, ref;\n            _a = [\n                graph_view.node_view,\n                graph_view.edge_view\n            ], node_view = _a[0], edge_view = _a[1];\n            hit_test_result = node_view.glyph.hit_test(geometry);\n            // glyphs that don't have hit-testing implemented will return null\n            if (hit_test_result === null) {\n                return false;\n            }\n            this._node_selector.update(hit_test_result, final, append);\n            node_indices = function () {\n                var j, len, ref, results;\n                ref = hit_test_result['1d'].indices;\n                results = [];\n                for (j = 0, len = ref.length; j < len; j++) {\n                    i = ref[j];\n                    results.push(node_view.model.data_source.data.index[i]);\n                }\n                return results;\n            }();\n            edge_source = edge_view.model.data_source;\n            edge_indices = [];\n            for (i = j = 0, ref = edge_source.data.start.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                if (array_1.contains(node_indices, edge_source.data.start[i]) || array_1.contains(node_indices, edge_source.data.end[i])) {\n                    edge_indices.push(i);\n                }\n            }\n            linked_index = hittest_1.create_hit_test_result();\n            for (k = 0, len = edge_indices.length; k < len; k++) {\n                i = edge_indices[k];\n                linked_index['2d'].indices[i] = [0];    //currently only supports 2-element multilines, so this is all of it\n            }\n            this._edge_selector.update(linked_index, final, append);\n            return !this._node_selector.indices.is_empty();\n            var _a;\n        };\n        NodesAndLinkedEdges.prototype.do_selection = function (geometry, graph_view, final, append) {\n            var did_hit;\n            this._node_selector = graph_view.node_view.model.data_source.selection_manager.selector;\n            this._edge_selector = graph_view.edge_view.model.data_source.selection_manager.selector;\n            did_hit = this._do(geometry, graph_view, final, append);\n            graph_view.node_view.model.data_source.selected = this._node_selector.indices;\n            graph_view.edge_view.model.data_source.selected = this._edge_selector.indices;\n            graph_view.node_view.model.data_source.select.emit();\n            return did_hit;\n        };\n        NodesAndLinkedEdges.prototype.do_inspection = function (geometry, graph_view, final, append) {\n            var did_hit;\n            this._node_selector = graph_view.node_view.model.data_source.selection_manager.get_or_create_inspector(graph_view.node_view.model);\n            this._edge_selector = graph_view.edge_view.model.data_source.selection_manager.get_or_create_inspector(graph_view.edge_view.model);\n            did_hit = this._do(geometry, graph_view, final, append);\n            // silently set inspected attr to avoid triggering data_source.change event and rerender\n            graph_view.node_view.model.data_source.setv({ inspected: this._node_selector.indices }, { silent: true });\n            graph_view.edge_view.model.data_source.setv({ inspected: this._edge_selector.indices }, { silent: true });\n            graph_view.node_view.model.data_source.inspect.emit([\n                graph_view.node_view,\n                { geometry: geometry }\n            ]);\n            return did_hit;\n        };\n        return NodesAndLinkedEdges;\n    }(exports.GraphHitTestPolicy);\n    exports.NodesAndLinkedEdges = NodesAndLinkedEdges;\n    ;\n    NodesAndLinkedEdges.prototype.type = 'NodesAndLinkedEdges';\n    var EdgesAndLinkedNodes = function (_super) {\n        tslib_1.__extends(EdgesAndLinkedNodes, _super);\n        function EdgesAndLinkedNodes() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        EdgesAndLinkedNodes.prototype._do = function (geometry, graph_view, final, append) {\n            var edge_indices, edge_view, hit_test_result, i, j, len, node_hit_test_result, node_indices, node_view, nodes;\n            _a = [\n                graph_view.node_view,\n                graph_view.edge_view\n            ], node_view = _a[0], edge_view = _a[1];\n            hit_test_result = edge_view.glyph.hit_test(geometry);\n            // glyphs that don't have hit-testing implemented will return null\n            if (hit_test_result === null) {\n                return false;\n            }\n            this._edge_selector.update(hit_test_result, final, append);\n            edge_indices = function () {\n                var j, len, ref, results;\n                ref = Object.keys(hit_test_result['2d'].indices);\n                results = [];\n                for (j = 0, len = ref.length; j < len; j++) {\n                    i = ref[j];\n                    results.push(parseInt(i));\n                }\n                return results;\n            }();\n            nodes = [];\n            for (j = 0, len = edge_indices.length; j < len; j++) {\n                i = edge_indices[j];\n                nodes.push(edge_view.model.data_source.data.start[i]);\n                nodes.push(edge_view.model.data_source.data.end[i]);\n            }\n            node_indices = function () {\n                var k, len1, ref, results;\n                ref = array_1.uniq(nodes);\n                results = [];\n                for (k = 0, len1 = ref.length; k < len1; k++) {\n                    i = ref[k];\n                    results.push(node_view.model.data_source.data.index.indexOf(i));\n                }\n                return results;\n            }();\n            node_hit_test_result = hittest_1.create_hit_test_result();\n            node_hit_test_result['1d'].indices = node_indices;\n            this._node_selector.update(node_hit_test_result, final, append);\n            return !this._edge_selector.indices.is_empty();\n            var _a;\n        };\n        EdgesAndLinkedNodes.prototype.do_selection = function (geometry, graph_view, final, append) {\n            var did_hit;\n            this._edge_selector = graph_view.edge_view.model.data_source.selection_manager.selector;\n            this._node_selector = graph_view.node_view.model.data_source.selection_manager.selector;\n            did_hit = this._do(geometry, graph_view, final, append);\n            graph_view.edge_view.model.data_source.selected = this._edge_selector.indices;\n            graph_view.node_view.model.data_source.selected = this._node_selector.indices;\n            graph_view.edge_view.model.data_source.select.emit();\n            return did_hit;\n        };\n        EdgesAndLinkedNodes.prototype.do_inspection = function (geometry, graph_view, final, append) {\n            var did_hit;\n            this._edge_selector = graph_view.edge_view.model.data_source.selection_manager.get_or_create_inspector(graph_view.edge_view.model);\n            this._node_selector = graph_view.node_view.model.data_source.selection_manager.get_or_create_inspector(graph_view.node_view.model);\n            did_hit = this._do(geometry, graph_view, final, append);\n            // silently set inspected attr to avoid triggering data_source.change event and rerender\n            graph_view.edge_view.model.data_source.setv({ inspected: this._edge_selector.indices }, { silent: true });\n            graph_view.node_view.model.data_source.setv({ inspected: this._node_selector.indices }, { silent: true });\n            graph_view.edge_view.model.data_source.inspect.emit([\n                graph_view.edge_view,\n                { geometry: geometry }\n            ]);\n            return did_hit;\n        };\n        return EdgesAndLinkedNodes;\n    }(exports.GraphHitTestPolicy);\n    exports.EdgesAndLinkedNodes = EdgesAndLinkedNodes;\n    ;\n    EdgesAndLinkedNodes.prototype.type = 'EdgesAndLinkedNodes';    \n}","/*models/graphs/index*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    tslib_1.__exportStar(require(129    /* ./graph_hit_test_policy */), exports);\n    tslib_1.__exportStar(require(131    /* ./layout_provider */), exports);\n    tslib_1.__exportStar(require(132    /* ./static_layout_provider */), exports);    \n}","/*models/graphs/layout_provider*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    exports.LayoutProvider = function (_super) {\n        tslib_1.__extends(LayoutProvider, _super);\n        function LayoutProvider() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LayoutProvider.prototype.get_node_coordinates = function (graph_source) {\n            return [\n                [],\n                []\n            ];\n        };\n        // this is implemented by base classes\n        LayoutProvider.prototype.get_edge_coordinates = function (graph_source) {\n            return [\n                [],\n                []\n            ];\n        };\n        return LayoutProvider;\n    }(model_1.Model);    // this is implemented by base classes\n                         \n}","/*models/graphs/static_layout_provider*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var layout_provider_1 = require(131    /* ./layout_provider */);\n    var p = require(15    /* ../../core/properties */);\n    var StaticLayoutProvider = function (_super) {\n        tslib_1.__extends(StaticLayoutProvider, _super);\n        function StaticLayoutProvider() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        StaticLayoutProvider.prototype.get_node_coordinates = function (node_source) {\n            var i, j, len, ref, x, xs, y, ys;\n            _a = [\n                [],\n                []\n            ], xs = _a[0], ys = _a[1];\n            ref = node_source.data.index;\n            for (j = 0, len = ref.length; j < len; j++) {\n                i = ref[j];\n                x = this.graph_layout[i] != null ? this.graph_layout[i][0] : 0 / 0;\n                y = this.graph_layout[i] != null ? this.graph_layout[i][1] : 0 / 0;\n                xs.push(x);\n                ys.push(y);\n            }\n            return [\n                xs,\n                ys\n            ];\n            var _a;\n        };\n        StaticLayoutProvider.prototype.get_edge_coordinates = function (edge_source) {\n            var end, ends, has_paths, i, in_layout, j, ref, start, starts, xs, ys;\n            _a = [\n                [],\n                []\n            ], xs = _a[0], ys = _a[1];\n            starts = edge_source.data.start;\n            ends = edge_source.data.end;\n            has_paths = edge_source.data.xs != null && edge_source.data.ys != null;\n            for (i = j = 0, ref = starts.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                in_layout = this.graph_layout[starts[i]] != null && this.graph_layout[ends[i]] != null;\n                if (has_paths && in_layout) {\n                    xs.push(edge_source.data.xs[i]);\n                    ys.push(edge_source.data.ys[i]);\n                } else {\n                    if (in_layout) {\n                        _b = [\n                            this.graph_layout[starts[i]],\n                            this.graph_layout[ends[i]]\n                        ], start = _b[0], end = _b[1];\n                    } else {\n                        _c = [\n                            [\n                                0 / 0,\n                                0 / 0\n                            ],\n                            [\n                                0 / 0,\n                                0 / 0\n                            ]\n                        ], start = _c[0], end = _c[1];\n                    }\n                    xs.push([\n                        start[0],\n                        end[0]\n                    ]);\n                    ys.push([\n                        start[1],\n                        end[1]\n                    ]);\n                }\n            }\n            return [\n                xs,\n                ys\n            ];\n            var _a, _b, _c;\n        };\n        return StaticLayoutProvider;\n    }(layout_provider_1.LayoutProvider);\n    exports.StaticLayoutProvider = StaticLayoutProvider;\n    ;\n    StaticLayoutProvider.prototype.type = 'StaticLayoutProvider';\n    StaticLayoutProvider.define({\n        graph_layout: [\n            p.Any,\n            {}\n        ]\n    });    \n}","/*models/grids/grid*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var guide_renderer_1 = require(163    /* ../renderers/guide_renderer */);\n    var renderer_1 = require(165    /* ../renderers/renderer */);\n    var p = require(15    /* core/properties */);\n    var types_1 = require(42    /* core/util/types */);\n    exports.GridView = function (_super) {\n        tslib_1.__extends(GridView, _super);\n        function GridView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        GridView.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this._x_range_name = this.model.x_range_name;\n            return this._y_range_name = this.model.y_range_name;\n        };\n        GridView.prototype.render = function () {\n            var ctx;\n            if (this.model.visible === false) {\n                return;\n            }\n            ctx = this.plot_view.canvas_view.ctx;\n            ctx.save();\n            this._draw_regions(ctx);\n            this._draw_minor_grids(ctx);\n            this._draw_grids(ctx);\n            return ctx.restore();\n        };\n        GridView.prototype.connect_signals = function () {\n            _super.prototype.connect_signals.call(this);\n            return this.connect(this.model.change, function () {\n                return this.request_render();\n            });\n        };\n        GridView.prototype._draw_regions = function (ctx) {\n            var i, k, ref, sx0, sx1, sy0, sy1, xs, ys;\n            if (!this.visuals.band_fill.doit) {\n                return;\n            }\n            _a = this.model.grid_coords('major', false), xs = _a[0], ys = _a[1];\n            this.visuals.band_fill.set_value(ctx);\n            for (i = k = 0, ref = xs.length - 1; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                if (i % 2 === 1) {\n                    _b = this.plot_view.map_to_screen(xs[i], ys[i], this._x_range_name, this._y_range_name), sx0 = _b[0], sy0 = _b[1];\n                    _c = this.plot_view.map_to_screen(xs[i + 1], ys[i + 1], this._x_range_name, this._y_range_name), sx1 = _c[0], sy1 = _c[1];\n                    ctx.fillRect(sx0[0], sy0[0], sx1[1] - sx0[0], sy1[1] - sy0[0]);\n                    ctx.fill();\n                }\n            }\n            var _a, _b, _c;\n        };\n        GridView.prototype._draw_grids = function (ctx) {\n            var xs, ys;\n            if (!this.visuals.grid_line.doit) {\n                return;\n            }\n            _a = this.model.grid_coords('major'), xs = _a[0], ys = _a[1];\n            return this._draw_grid_helper(ctx, this.visuals.grid_line, xs, ys);\n            var _a;\n        };\n        GridView.prototype._draw_minor_grids = function (ctx) {\n            var xs, ys;\n            if (!this.visuals.minor_grid_line.doit) {\n                return;\n            }\n            _a = this.model.grid_coords('minor'), xs = _a[0], ys = _a[1];\n            return this._draw_grid_helper(ctx, this.visuals.minor_grid_line, xs, ys);\n            var _a;\n        };\n        GridView.prototype._draw_grid_helper = function (ctx, props, xs, ys) {\n            var i, k, l, ref, ref1, sx, sy;\n            props.set_value(ctx);\n            for (i = k = 0, ref = xs.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                _a = this.plot_view.map_to_screen(xs[i], ys[i], this._x_range_name, this._y_range_name), sx = _a[0], sy = _a[1];\n                ctx.beginPath();\n                ctx.moveTo(Math.round(sx[0]), Math.round(sy[0]));\n                for (i = l = 1, ref1 = sx.length; 1 <= ref1 ? l < ref1 : l > ref1; i = 1 <= ref1 ? ++l : --l) {\n                    ctx.lineTo(Math.round(sx[i]), Math.round(sy[i]));\n                }\n                ctx.stroke();\n            }\n            var _a;\n        };\n        return GridView;\n    }(renderer_1.RendererView);\n    var Grid = function (_super) {\n        tslib_1.__extends(Grid, _super);\n        function Grid() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Grid.prototype.ranges = function () {\n            var frame, i, j, ranges;\n            i = this.dimension;\n            j = (i + 1) % 2;\n            frame = this.plot.plot_canvas.frame;\n            ranges = [\n                frame.x_ranges[this.x_range_name],\n                frame.y_ranges[this.y_range_name]\n            ];\n            return [\n                ranges[i],\n                ranges[j]\n            ];\n        };\n        Grid.prototype.computed_bounds = function () {\n            var cross_range, end, range, range_bounds, start, user_bounds;\n            _a = this.ranges(), range = _a[0], cross_range = _a[1];\n            user_bounds = this.bounds;\n            range_bounds = [\n                range.min,\n                range.max\n            ];\n            if (types_1.isArray(user_bounds)) {\n                start = Math.min(user_bounds[0], user_bounds[1]);\n                end = Math.max(user_bounds[0], user_bounds[1]);\n                if (start < range_bounds[0]) {\n                    start = range_bounds[0];\n                } else if (start > range_bounds[1]) {\n                    start = null;\n                }\n                if (end > range_bounds[1]) {\n                    end = range_bounds[1];\n                } else if (end < range_bounds[0]) {\n                    end = null;\n                }\n            } else {\n                start = range_bounds[0], end = range_bounds[1];\n            }\n            return [\n                start,\n                end\n            ];\n            var _a;\n        };\n        Grid.prototype.grid_coords = function (location, exclude_ends) {\n            if (exclude_ends === void 0) {\n                exclude_ends = true;\n            }\n            var N, cmax, cmin, coords, cross_range, dim_i, dim_j, end, i, ii, j, k, l, loc, max, min, n, range, ref, ref1, start, ticks, tmp;\n            i = this.dimension;\n            j = (i + 1) % 2;\n            _a = this.ranges(), range = _a[0], cross_range = _a[1];\n            _b = this.computed_bounds(), start = _b[0], end = _b[1];\n            tmp = Math.min(start, end);\n            end = Math.max(start, end);\n            start = tmp;\n            // TODO: (bev) using cross_range.min for cross_loc is a bit of a cheat. Since we\n            // currently only support \"straight line\" grids, this should be OK for now. If\n            // we ever want to support \"curved\" grids, e.g. for some projections, we may\n            // have to communicate more than just a single cross location.\n            ticks = this.ticker.get_ticks(start, end, range, cross_range.min, {})[location];\n            min = range.min;\n            max = range.max;\n            cmin = cross_range.min;\n            cmax = cross_range.max;\n            coords = [\n                [],\n                []\n            ];\n            for (ii = k = 0, ref = ticks.length; 0 <= ref ? k < ref : k > ref; ii = 0 <= ref ? ++k : --k) {\n                if ((ticks[ii] === min || ticks[ii] === max) && exclude_ends) {\n                    continue;\n                }\n                dim_i = [];\n                dim_j = [];\n                N = 2;\n                for (n = l = 0, ref1 = N; 0 <= ref1 ? l < ref1 : l > ref1; n = 0 <= ref1 ? ++l : --l) {\n                    loc = cmin + (cmax - cmin) / (N - 1) * n;\n                    dim_i.push(ticks[ii]);\n                    dim_j.push(loc);\n                }\n                coords[i].push(dim_i);\n                coords[j].push(dim_j);\n            }\n            return coords;\n            var _a, _b;\n        };\n        return Grid;\n    }(guide_renderer_1.GuideRenderer);\n    exports.Grid = Grid;\n    ;\n    Grid.prototype.default_view = exports.GridView;\n    Grid.prototype.type = 'Grid';\n    Grid.mixins([\n        'line:grid_',\n        'line:minor_grid_',\n        'fill:band_'\n    ]);\n    Grid.define({\n        bounds: [\n            p.Any,\n            'auto'    // TODO (bev)\n        ],\n        dimension: [\n            p.Number,\n            0\n        ],\n        ticker: [p.Instance],\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ]\n    });\n    Grid.override({\n        level: 'underlay',\n        band_fill_color: null,\n        band_fill_alpha: 0,\n        grid_line_color: '#e5e5e5',\n        minor_grid_line_color: null\n    });    \n}","/*models/grids/index*/\nfunction _(require, module, exports) {\n    var grid_1 = require(133    /* ./grid */);\n    exports.Grid = grid_1.Grid;    \n}","/*models/index*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    tslib_1.__exportStar(require(57    /* ./annotations */), exports);\n    tslib_1.__exportStar(require(73    /* ./axes */), exports);\n    tslib_1.__exportStar(require(77    /* ./callbacks */), exports);\n    tslib_1.__exportStar(require(81    /* ./canvas */), exports);\n    tslib_1.__exportStar(require(83    /* ./expressions */), exports);\n    tslib_1.__exportStar(require(89    /* ./filters */), exports);\n    tslib_1.__exportStar(require(95    /* ./formatters */), exports);\n    tslib_1.__exportStar(require(113    /* ./glyphs */), exports);\n    tslib_1.__exportStar(require(130    /* ./graphs */), exports);\n    tslib_1.__exportStar(require(134    /* ./grids */), exports);\n    tslib_1.__exportStar(require(138    /* ./layouts */), exports);\n    tslib_1.__exportStar(require(145    /* ./mappers */), exports);\n    tslib_1.__exportStar(require(238    /* ./transforms */), exports);\n    tslib_1.__exportStar(require(148    /* ./markers */), exports);\n    tslib_1.__exportStar(require(152    /* ./plots */), exports);\n    tslib_1.__exportStar(require(158    /* ./ranges */), exports);\n    tslib_1.__exportStar(require(164    /* ./renderers */), exports);\n    tslib_1.__exportStar(require(167    /* ./scales */), exports);\n    tslib_1.__exportStar(require(177    /* ./sources */), exports);\n    tslib_1.__exportStar(require(187    /* ./tickers */), exports);\n    tslib_1.__exportStar(require(199    /* ./tiles */), exports);\n    tslib_1.__exportStar(require(226    /* ./tools */), exports);    \n}","/*models/layouts/box*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var indexOf = [].indexOf;\n    var solver_1 = require(13    /* core/layout/solver */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var object_1 = require(30    /* core/util/object */);\n    var layout_dom_1 = require(139    /* ./layout_dom */);\n    var BoxView = function (_super) {\n        tslib_1.__extends(BoxView, _super);\n        function BoxView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoxView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            return this.connect(this.model.properties.children.change, function () {\n                return _this.rebuild_child_views();\n            });\n        };\n        BoxView.prototype.get_height = function () {\n            var child_heights, children, height;\n            children = this.model.get_layoutable_children();\n            child_heights = children.map(function (child) {\n                return child._height.value;\n            });\n            if (this.model._horizontal) {\n                height = array_1.max(child_heights);\n            } else {\n                height = array_1.sum(child_heights);\n            }\n            return height;\n        };\n        BoxView.prototype.get_width = function () {\n            var child_widths, children, width;\n            children = this.model.get_layoutable_children();\n            child_widths = children.map(function (child) {\n                return child._width.value;\n            });\n            if (this.model._horizontal) {\n                width = array_1.sum(child_widths);\n            } else {\n                width = array_1.max(child_widths);\n            }\n            return width;\n        };\n        return BoxView;\n    }(layout_dom_1.LayoutDOMView);\n    exports.BoxView = BoxView;\n    ;\n    BoxView.prototype.className = 'bk-grid';\n    var Box = function (_super) {\n        tslib_1.__extends(Box, _super);\n        function Box(attrs, options) {\n            var _this = _super.call(this, attrs, options) || this;\n            // for children that want to be the same size\n            // as other children, make them all equal to these\n            _this._child_equal_size_width = new solver_1.Variable(_this.toString() + '.child_equal_size_width');\n            _this._child_equal_size_height = new solver_1.Variable(_this.toString() + '.child_equal_size_height');\n            // these are passed up to our parent after basing\n            // them on the child box_equal_size vars\n            _this._box_equal_size_top = new solver_1.Variable(_this.toString() + '.box_equal_size_top');\n            _this._box_equal_size_bottom = new solver_1.Variable(_this.toString() + '.box_equal_size_bottom');\n            _this._box_equal_size_left = new solver_1.Variable(_this.toString() + '.box_equal_size_left');\n            _this._box_equal_size_right = new solver_1.Variable(_this.toString() + '.box_equal_size_right');\n            // these are passed up to our parent after basing\n            // them on the child box_cell_align vars\n            _this._box_cell_align_top = new solver_1.Variable(_this.toString() + '.box_cell_align_top');\n            _this._box_cell_align_bottom = new solver_1.Variable(_this.toString() + '.box_cell_align_bottom');\n            _this._box_cell_align_left = new solver_1.Variable(_this.toString() + '.box_cell_align_left');\n            _this._box_cell_align_right = new solver_1.Variable(_this.toString() + '.box_cell_align_right');\n            return _this;\n        }\n        Box.prototype.get_layoutable_children = function () {\n            return this.children;\n        };\n        Box.prototype.get_constrained_variables = function () {\n            return object_1.extend({}, _super.prototype.get_constrained_variables.call(this), {\n                box_equal_size_top: this._box_equal_size_top,\n                box_equal_size_bottom: this._box_equal_size_bottom,\n                box_equal_size_left: this._box_equal_size_left,\n                box_equal_size_right: this._box_equal_size_right,\n                box_cell_align_top: this._box_cell_align_top,\n                box_cell_align_bottom: this._box_cell_align_bottom,\n                box_cell_align_left: this._box_cell_align_left,\n                box_cell_align_right: this._box_cell_align_right\n            });\n        };\n        Box.prototype.get_constraints = function () {\n            var add, child, children, constraints, i, j, k, last, len, next, rect, ref, vars;\n            constraints = _super.prototype.get_constraints.call(this);\n            add = function () {\n                var new_constraints = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    new_constraints[_i] = arguments[_i];\n                }\n                return constraints.push.apply(constraints, new_constraints);\n            };\n            children = this.get_layoutable_children();\n            if (children.length === 0) {\n                // No need to continue further if there are no children. Children sure do\n                // make life a lot more complicated.\n                return constraints;\n            }\n            for (j = 0, len = children.length; j < len; j++) {\n                child = children[j];\n                vars = child.get_constrained_variables();\n                // Make total widget sizes fill the orthogonal direction\n                // TODO(bird) Can't we make this shorter by using span which has already picked a\n                // dominant direction (we'd just also need to set a doc_span)\n                rect = this._child_rect(vars);\n                if (this._horizontal) {\n                    if (vars.height != null) {\n                        add(solver_1.EQ(rect.height, [\n                            -1,\n                            this._height\n                        ]));\n                    }\n                } else {\n                    if (vars.width != null) {\n                        add(solver_1.EQ(rect.width, [\n                            -1,\n                            this._width\n                        ]));\n                    }\n                }\n                // Add equal_size constraint\n                // - A child's \"interesting area\" (like the plot area) is the same size as the previous child\n                //   (a child can opt out of this by not returning the box_equal_size variables)\n                if (this._horizontal) {\n                    if (vars.box_equal_size_left != null && vars.box_equal_size_right != null && vars.width != null) {\n                        add(solver_1.EQ([\n                            -1,\n                            vars.box_equal_size_left\n                        ], [\n                            -1,\n                            vars.box_equal_size_right\n                        ], vars.width, this._child_equal_size_width));\n                    }\n                } else {\n                    if (vars.box_equal_size_top != null && vars.box_equal_size_bottom != null && vars.height != null) {\n                        add(solver_1.EQ([\n                            -1,\n                            vars.box_equal_size_top\n                        ], [\n                            -1,\n                            vars.box_equal_size_bottom\n                        ], vars.height, this._child_equal_size_height));\n                    }\n                }\n            }\n            // TODO(bird) - This is the second time we loop through children\n            last = this._info(children[0].get_constrained_variables());\n            add(solver_1.EQ(last.span.start, 0));\n            for (i = k = 1, ref = children.length; 1 <= ref ? k < ref : k > ref; i = 1 <= ref ? ++k : --k) {\n                next = this._info(children[i].get_constrained_variables());\n                // Each child's start equals the previous child's end (unless we have a fixed layout\n                // in which case size may not be available)\n                if (last.span.size) {\n                    add(solver_1.EQ(last.span.start, last.span.size, [\n                        -1,\n                        next.span.start\n                    ]));\n                }\n                // The whitespace at end of one child + start of next must equal the box spacing.\n                // This must be a weak constraint because it can conflict with aligning the\n                // alignable edges in each child. Alignment is generally more important visually than spacing.\n                add(solver_1.WEAK_EQ(last.whitespace.after, next.whitespace.before, 0 - this.spacing));\n                // If we can't satisfy the whitespace being equal to box spacing, we should fix\n                // it (align things) by increasing rather than decreasing the whitespace.\n                add(solver_1.GE(last.whitespace.after, next.whitespace.before, 0 - this.spacing));\n                last = next;\n            }\n            // Child's side has to stick to the end of the box\n            if (this._horizontal) {\n                if (vars.width != null) {\n                    add(solver_1.EQ(last.span.start, last.span.size, [\n                        -1,\n                        this._width\n                    ]));\n                }\n            } else {\n                if (vars.height != null) {\n                    add(solver_1.EQ(last.span.start, last.span.size, [\n                        -1,\n                        this._height\n                    ]));\n                }\n            }\n            // align outermost edges in both dimensions\n            // line up edges in same_arity boxes\n            // build our equal_size bounds from the child ones\n            // propagate cell alignment (between same_arity boxes) up the hierarchy\n            // build our whitespace from the child ones\n            constraints = constraints.concat(this._align_outer_edges_constraints(true), this._align_outer_edges_constraints(false), this._align_inner_cell_edges_constraints(), this._box_equal_size_bounds(true), this._box_equal_size_bounds(false), this._box_cell_align_bounds(true), this._box_cell_align_bounds(false), this._box_whitespace(true), this._box_whitespace(false));\n            // horizontal=true // horizontal=true // horizontal=true // horizontal=true\n            return constraints;\n        };\n        Box.prototype._child_rect = function (vars) {\n            return {\n                x: vars.origin_x,\n                y: vars.origin_y,\n                width: vars.width,\n                height: vars.height\n            };\n        };\n        Box.prototype._span = function (rect) {\n            // return [coordinate, size] pair in box_aligned direction\n            if (this._horizontal) {\n                return {\n                    start: rect.x,\n                    size: rect.width\n                };\n            } else {\n                return {\n                    start: rect.y,\n                    size: rect.height\n                };\n            }\n        };\n        Box.prototype._info = function (vars) {\n            var span, whitespace;\n            if (this._horizontal) {\n                whitespace = {\n                    before: vars.whitespace_left,\n                    after: vars.whitespace_right\n                };\n            } else {\n                whitespace = {\n                    before: vars.whitespace_top,\n                    after: vars.whitespace_bottom\n                };\n            }\n            span = this._span(this._child_rect(vars));\n            return {\n                span: span,\n                whitespace: whitespace\n            };\n        };\n        Box.prototype._flatten_cell_edge_variables = function (horizontal) {\n            var add_path, all_vars, arity, cell, cell_vars, child, children, direction, flattened, j, k, key, kind, len, len1, name, new_key, parsed, path, relevant_edges, variables;\n            // All alignment happens in terms of the\n            // box_cell_align_{left,right,top,bottom} variables. We add\n            // \"path\" information to variables so we know which ones align,\n            // where the \"path\" includes the box arity and box cell we went\n            // through.\n            // If we have a row of three plots, we should align the top and\n            // bottom variables between the three plots.\n            // The flattened dictionary in this case (for the top and left\n            // only) should be:\n            //   box_cell_align_top : [ 3 vars ]\n            //   box_cell_align_bottom : [ 3 vars ]\n            // We don't do left/right starting from a row, and left/right\n            // edges have nothing to align with here.\n            // Now say we have a row of three columns, each with three\n            // plots (3x3 = 9). We should align the top/bottom variables\n            // across the top three, middle three, and bottom three plots,\n            // as if those groupings were rows. We do this by flattening\n            // starting from the row first, which gets us a dictionary only\n            // of top/bottom variables.\n            //   box_cell_align_top col-3-0- : [ 3 plots from top of columns ]\n            //   box_cell_align_top col-3-1- : [ 3 plots from middle of columns ]\n            //   box_cell_align_top col-3-2- : [ 3 plots from bottom of columns ]\n            // \"col-3-1-\" = 3-cell column, cell index 1.\n            // In three later, separate calls to\n            // _align_inner_cell_edges_constraints() on each column, we'll\n            // get the left/right variables:\n            //   box_cell_align_left : [ 3 left-column plots ]\n            //   box_cell_align_left : [ 3 middle-column plots ]\n            //   box_cell_align_left : [ 3 right-column plots ]\n            // Now add another nesting - we have a row of three columns,\n            // each with three rows, each with three plots. This is\n            // arranged 3x9 = 27.\n            //   box_cell_align_top col-3-0- : [ 9 plots from top rows of columns ]\n            //   box_cell_align_top col-3-1- : [ 9 plots from middle rows of columns ]\n            //   box_cell_align_top col-3-2- : [ 9 plots from bottom rows of columns ]\n            // When we make the _align_inner_cell_edges_constraints() calls on each of the three\n            // columns, each column will return row-pathed values\n            //   box_cell_align_left row-3-0-: [  3 plots in left column of left column ]\n            //   box_cell_align_left row-3-1-: [  3 plots in middle column of left column ]\n            //   box_cell_align_left row-3-2-: [  3 plots in right column of left column ]\n            //   ... same for the middle and right columns\n            // Anyway in essence what we do is that we add only rows to the\n            // path to left/right variables, and only columns to the path\n            // to top/bottom variables.\n            // If we nest yet another level we would finally get paths with\n            // multiple rows or multiple columns in them.\n            if (horizontal) {\n                relevant_edges = Box._top_bottom_inner_cell_edge_variables;\n            } else {\n                relevant_edges = Box._left_right_inner_cell_edge_variables;\n            }\n            add_path = horizontal !== this._horizontal;\n            children = this.get_layoutable_children();\n            arity = children.length;\n            flattened = {};\n            cell = 0;\n            for (j = 0, len = children.length; j < len; j++) {\n                child = children[j];\n                if (child instanceof Box) {\n                    cell_vars = child._flatten_cell_edge_variables(horizontal);\n                } else {\n                    cell_vars = {};\n                }\n                all_vars = child.get_constrained_variables();\n                for (k = 0, len1 = relevant_edges.length; k < len1; k++) {\n                    name = relevant_edges[k];\n                    if (name in all_vars) {\n                        cell_vars[name] = [all_vars[name]];\n                    }\n                }\n                for (key in cell_vars) {\n                    variables = cell_vars[key];\n                    if (add_path) {\n                        parsed = key.split(' ');\n                        kind = parsed[0];\n                        if (parsed.length > 1) {\n                            path = parsed[1];\n                        } else {\n                            path = '';\n                        }\n                        if (this._horizontal) {\n                            direction = 'row';\n                        } else {\n                            direction = 'col';\n                        }\n                        // TODO should we \"ignore\" arity-1 boxes potentially by not adding a path suffix?\n                        new_key = kind + ' ' + direction + '-' + arity + '-' + cell + '-' + path;\n                    } else {\n                        new_key = key;\n                    }\n                    if (new_key in flattened) {\n                        flattened[new_key] = flattened[new_key].concat(variables);\n                    } else {\n                        flattened[new_key] = variables;\n                    }\n                }\n                cell = cell + 1;\n            }\n            return flattened;\n        };\n        // This should only be called on the toplevel box (twice,\n        // once with horizontal=true and once with horizontal=false)\n        Box.prototype._align_inner_cell_edges_constraints = function () {\n            var constraints, flattened, i, j, key, last, ref, variables;\n            constraints = [];\n            // XXX: checking for `@document?` is a temporary hack, because document isn't always\n            // attached properly. However, if document is not attached then we know it can't be\n            // a root, because otherwise add_root() would attach it. All this layout logic should\n            // be part of views instead of models and use is_root, etc.\n            if (this.document != null && indexOf.call(this.document.roots(), this) >= 0) {\n                flattened = this._flatten_cell_edge_variables(this._horizontal);\n                for (key in flattened) {\n                    variables = flattened[key];\n                    if (variables.length > 1) {\n                        //console.log(\"constraining \", key, \" \", variables)\n                        last = variables[0];\n                        for (i = j = 1, ref = variables.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {\n                            constraints.push(solver_1.EQ(variables[i], [\n                                -1,\n                                last\n                            ]));\n                        }\n                    }\n                }\n            }\n            return constraints;\n        };\n        // returns a two-item array where each item is a list of edge\n        // children from the start and end respectively\n        Box.prototype._find_edge_leaves = function (horizontal) {\n            var child, child_leaves, children, end, j, leaves, len, start;\n            children = this.get_layoutable_children();\n            // console.log(\"  finding edge leaves in #{children.length}-#{@type}, \" +\n            //  \"our orientation #{@_horizontal} finding #{horizontal} children \", children)\n            leaves = [\n                [],\n                []\n            ];\n            if (children.length > 0) {\n                if (this._horizontal === horizontal) {\n                    // note start and end may be the same\n                    start = children[0];\n                    end = children[children.length - 1];\n                    if (start instanceof Box) {\n                        leaves[0] = leaves[0].concat(start._find_edge_leaves(horizontal)[0]);\n                    } else {\n                        leaves[0].push(start);\n                    }\n                    if (end instanceof Box) {\n                        leaves[1] = leaves[1].concat(end._find_edge_leaves(horizontal)[1]);\n                    } else {\n                        leaves[1].push(end);\n                    }\n                } else {\n                    // if we are a column and someone wants the horizontal edges,\n                    // we return the horizontal edges from all of our children\n                    for (j = 0, len = children.length; j < len; j++) {\n                        child = children[j];\n                        if (child instanceof Box) {\n                            child_leaves = child._find_edge_leaves(horizontal);\n                            leaves[0] = leaves[0].concat(child_leaves[0]);\n                            leaves[1] = leaves[1].concat(child_leaves[1]);\n                        } else {\n                            leaves[0].push(child);\n                            leaves[1].push(child);\n                        }\n                    }\n                }\n            }\n            // console.log(\"  start leaves \", leaves[0].map((leaf) -> leaf.id)\n            // console.log(\"  end leaves \", leaves[1].map((leaf) -> leaf.id)\n            return leaves;\n        };\n        Box.prototype._align_outer_edges_constraints = function (horizontal) {\n            var add_all_equal, collect_vars, end_edges, end_leaves, end_variable, result, start_edges, start_leaves, start_variable;\n            // console.log(\"#{if horizontal then 'horizontal' else 'vertical'} outer edge constraints in #{@get_layoutable_children().length}-#{@type}\")\n            _a = this._find_edge_leaves(horizontal), start_leaves = _a[0], end_leaves = _a[1];\n            if (horizontal) {\n                start_variable = 'on_edge_align_left';\n                end_variable = 'on_edge_align_right';\n            } else {\n                start_variable = 'on_edge_align_top';\n                end_variable = 'on_edge_align_bottom';\n            }\n            collect_vars = function (leaves, name) {\n                var edges, j, leaf, len, vars;\n                //console.log(\"collecting #{name} in \", leaves)\n                edges = [];\n                for (j = 0, len = leaves.length; j < len; j++) {\n                    leaf = leaves[j];\n                    vars = leaf.get_constrained_variables();\n                    if (name in vars) {\n                        edges.push(vars[name]);\n                    }\n                }\n                //vars[name]['_debug'] = \"#{name} from #{leaf.id}\"\n                return edges;\n            };\n            start_edges = collect_vars(start_leaves, start_variable);\n            end_edges = collect_vars(end_leaves, end_variable);\n            result = [];\n            add_all_equal = function (edges) {\n                var edge, first, i, j, ref;\n                if (edges.length > 1) {\n                    first = edges[0];\n                    for (i = j = 1, ref = edges.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {\n                        edge = edges[i];\n                        //console.log(\"  constraining #{first._debug} == #{edge._debug}\")\n                        result.push(solver_1.EQ([\n                            -1,\n                            first\n                        ], edge));\n                    }\n                    return null;    // prevent coffeescript from making a tmp array\n                }\n            };\n            add_all_equal(start_edges);\n            add_all_equal(end_edges);\n            // console.log(\"computed constraints \", result)\n            return result;\n            var _a;\n        };\n        Box.prototype._box_insets_from_child_insets = function (horizontal, child_variable_prefix, our_variable_prefix, minimum) {\n            var add_constraints, end_leaves, end_variable, our_end, our_start, result, start_leaves, start_variable;\n            _a = this._find_edge_leaves(horizontal), start_leaves = _a[0], end_leaves = _a[1];\n            if (horizontal) {\n                start_variable = child_variable_prefix + '_left';\n                end_variable = child_variable_prefix + '_right';\n                our_start = this[our_variable_prefix + '_left'];\n                our_end = this[our_variable_prefix + '_right'];\n            } else {\n                start_variable = child_variable_prefix + '_top';\n                end_variable = child_variable_prefix + '_bottom';\n                our_start = this[our_variable_prefix + '_top'];\n                our_end = this[our_variable_prefix + '_bottom'];\n            }\n            result = [];\n            add_constraints = function (ours, leaves, name) {\n                var edges, j, leaf, len, vars;\n                edges = [];\n                for (j = 0, len = leaves.length; j < len; j++) {\n                    leaf = leaves[j];\n                    vars = leaf.get_constrained_variables();\n                    if (name in vars) {\n                        if (minimum) {\n                            result.push(solver_1.GE([\n                                -1,\n                                ours\n                            ], vars[name]));\n                        } else {\n                            result.push(solver_1.EQ([\n                                -1,\n                                ours\n                            ], vars[name]));\n                        }\n                    }\n                }\n                return null;    // prevent coffeescript from making a tmp array\n            };\n            add_constraints(our_start, start_leaves, start_variable);\n            add_constraints(our_end, end_leaves, end_variable);\n            return result;\n            var _a;\n        };\n        Box.prototype._box_equal_size_bounds = function (horizontal) {\n            // false = box bounds equal all outer child bounds exactly\n            return this._box_insets_from_child_insets(horizontal, 'box_equal_size', '_box_equal_size', false);\n        };\n        Box.prototype._box_cell_align_bounds = function (horizontal) {\n            // false = box bounds equal all outer child bounds exactly\n            return this._box_insets_from_child_insets(horizontal, 'box_cell_align', '_box_cell_align', false);\n        };\n        Box.prototype._box_whitespace = function (horizontal) {\n            // true = box whitespace must be the minimum of child\n            // whitespaces (i.e. distance from box edge to the outermost\n            // child pixels)\n            return this._box_insets_from_child_insets(horizontal, 'whitespace', '_whitespace', true);\n        };\n        return Box;\n    }(layout_dom_1.LayoutDOM);\n    exports.Box = Box;\n    ;\n    Box.prototype.default_view = BoxView;\n    Box.define({\n        children: [\n            p.Array,\n            []\n        ]\n    });\n    Box.internal({\n        spacing: [\n            p.Number,\n            6\n        ]\n    });\n    Box._left_right_inner_cell_edge_variables = [\n        'box_cell_align_left',\n        'box_cell_align_right'\n    ];\n    Box._top_bottom_inner_cell_edge_variables = [\n        'box_cell_align_top',\n        'box_cell_align_bottom'\n    ];    \n}","/*models/layouts/column*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var box_1 = require(136    /* ./box */);\n    var ColumnView = function (_super) {\n        tslib_1.__extends(ColumnView, _super);\n        function ColumnView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ColumnView;\n    }(box_1.BoxView);\n    exports.ColumnView = ColumnView;\n    ;\n    ColumnView.prototype.className = 'bk-grid-column';\n    var Column = function (_super) {\n        tslib_1.__extends(Column, _super);\n        function Column(attrs, options) {\n            var _this = _super.call(this, attrs, options) || this;\n            _this._horizontal = false;\n            return _this;\n        }\n        return Column;\n    }(box_1.Box);\n    exports.Column = Column;\n    ;\n    Column.prototype.type = 'Column';\n    Column.prototype.default_view = ColumnView;    \n}","/*models/layouts/index*/\nfunction _(require, module, exports) {\n    var box_1 = require(136    /* ./box */);\n    exports.Box = box_1.Box;\n    var column_1 = require(137    /* ./column */);\n    exports.Column = column_1.Column;\n    var layout_dom_1 = require(139    /* ./layout_dom */);\n    exports.LayoutDOM = layout_dom_1.LayoutDOM;\n    var row_1 = require(140    /* ./row */);\n    exports.Row = row_1.Row;\n    var spacer_1 = require(141    /* ./spacer */);\n    exports.Spacer = spacer_1.Spacer;\n    var widget_box_1 = require(142    /* ./widget_box */);\n    exports.WidgetBox = widget_box_1.WidgetBox;    \n}","/*models/layouts/layout_dom*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    var dom_1 = require(5    /* core/dom */);\n    var p = require(15    /* core/properties */);\n    var layout_canvas_1 = require(11    /* core/layout/layout_canvas */);\n    var solver_1 = require(13    /* core/layout/solver */);\n    var build_views_1 = require(4    /* core/build_views */);\n    var dom_view_1 = require(6    /* core/dom_view */);\n    var logging_1 = require(14    /* core/logging */);\n    exports.LayoutDOMView = function (_super) {\n        tslib_1.__extends(LayoutDOMView, _super);\n        function LayoutDOMView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LayoutDOMView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            // this is a root view\n            if (this.is_root) {\n                this._solver = new solver_1.Solver();\n            }\n            this.child_views = {};\n            return this.build_child_views();\n        };\n        LayoutDOMView.prototype.remove = function () {\n            var _, ref, view;\n            ref = this.child_views;\n            for (_ in ref) {\n                view = ref[_];\n                view.remove();\n            }\n            this.child_views = {};\n            // remove on_resize\n            return _super.prototype.remove.call(this);\n        };\n        LayoutDOMView.prototype.has_finished = function () {\n            var _, child, ref;\n            if (!_super.prototype.has_finished.call(this)) {\n                return false;\n            }\n            ref = this.child_views;\n            for (_ in ref) {\n                child = ref[_];\n                if (!child.has_finished()) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        LayoutDOMView.prototype.notify_finished = function () {\n            if (!this.is_root) {\n                return _super.prototype.notify_finished.call(this);\n            } else {\n                if (!this._idle_notified && this.has_finished()) {\n                    if (this.model.document != null) {\n                        this._idle_notified = true;\n                        return this.model.document.notify_idle(this.model);\n                    }\n                }\n            }\n        };\n        LayoutDOMView.prototype._calc_width_height = function () {\n            var height, measuring, width;\n            measuring = this.el;\n            while (true) {\n                measuring = measuring.parentNode;\n                if (measuring == null) {\n                    logging_1.logger.warn('detached element');\n                    width = height = null;\n                    break;\n                }\n                _a = measuring.getBoundingClientRect(), width = _a.width, height = _a.height;\n                if (height !== 0) {\n                    break;\n                }\n            }\n            return [\n                width,\n                height\n            ];\n            var _a;\n        };\n        LayoutDOMView.prototype._init_solver = function () {\n            var constraint, constraints, edit_variable, editables, i, j, len, len1, variables;\n            this._root_width = new solver_1.Variable(this.toString() + '.root_width');\n            this._root_height = new solver_1.Variable(this.toString() + '.root_height');\n            // XXX: this relies on the fact that missing `strength` argument results\n            // in strength being NaN, which behaves like `Strength.required`. However,\n            // this is banned by the API.\n            this._solver.add_edit_variable(this._root_width);\n            this._solver.add_edit_variable(this._root_height);\n            editables = this.model.get_all_editables();\n            for (i = 0, len = editables.length; i < len; i++) {\n                edit_variable = editables[i];\n                this._solver.add_edit_variable(edit_variable, solver_1.Strength.strong);\n            }\n            constraints = this.model.get_all_constraints();\n            for (j = 0, len1 = constraints.length; j < len1; j++) {\n                constraint = constraints[j];\n                this._solver.add_constraint(constraint);\n            }\n            variables = this.model.get_constrained_variables();\n            if (variables.width != null) {\n                this._solver.add_constraint(solver_1.EQ(variables.width, this._root_width));\n            }\n            if (variables.height != null) {\n                this._solver.add_constraint(solver_1.EQ(variables.height, this._root_height));\n            }\n            this._solver.update_variables();\n            return this._solver_inited = true;\n        };\n        LayoutDOMView.prototype._suggest_dims = function (width, height) {\n            var variables;\n            variables = this.model.get_constrained_variables();\n            if (variables.width != null || variables.height != null) {\n                if (width === null || height === null) {\n                    _a = this._calc_width_height(), width = _a[0], height = _a[1];\n                }\n                if (variables.width != null && width != null) {\n                    this._solver.suggest_value(this._root_width, width);\n                }\n                if (variables.height != null && height != null) {\n                    this._solver.suggest_value(this._root_height, height);\n                }\n                return this._solver.update_variables();\n            }\n            var _a;\n        };\n        LayoutDOMView.prototype.resize = function (width, height) {\n            if (width === void 0) {\n                width = null;\n            }\n            if (height === void 0) {\n                height = null;\n            }\n            if (!this.is_root) {\n                return this.root.resize(width, height);\n            } else {\n                return this._do_layout(false, width, height);\n            }\n        };\n        LayoutDOMView.prototype.partial_layout = function () {\n            if (!this.is_root) {\n                return this.root.partial_layout();\n            } else {\n                return this._do_layout(false);\n            }\n        };\n        LayoutDOMView.prototype.layout = function (full) {\n            if (full === void 0) {\n                full = true;\n            }\n            if (!this.is_root) {\n                return this.root.layout();\n            } else {\n                return this._do_layout(true);\n            }\n        };\n        LayoutDOMView.prototype._do_layout = function (full, width, height) {\n            if (width === void 0) {\n                width = null;\n            }\n            if (height === void 0) {\n                height = null;\n            }\n            if (!this._solver_inited || full) {\n                this._solver.clear();\n                this._init_solver();\n            }\n            this._suggest_dims(width, height);\n            // XXX: do layout twice, because there are interdependencies between views,\n            // which currently cannot be resolved with one pass. The third one triggers\n            // rendering and (expensive) painting.\n            this._layout();\n            // layout (1)\n            this._layout();\n            // layout (2)\n            this._layout(true);\n            // render & paint\n            return this.notify_finished();\n        };\n        LayoutDOMView.prototype._layout = function (final) {\n            if (final === void 0) {\n                final = false;\n            }\n            var child, child_view, i, len, ref;\n            ref = this.model.get_layoutable_children();\n            for (i = 0, len = ref.length; i < len; i++) {\n                child = ref[i];\n                child_view = this.child_views[child.id];\n                if (child_view._layout != null) {\n                    child_view._layout(final);\n                }\n            }\n            this.render();\n            if (final) {\n                return this._has_finished = true;\n            }\n        };\n        LayoutDOMView.prototype.rebuild_child_views = function () {\n            this.solver.clear();\n            this.build_child_views();\n            return this.layout();\n        };\n        LayoutDOMView.prototype.build_child_views = function () {\n            var child, child_view, children, i, len, results;\n            children = this.model.get_layoutable_children();\n            build_views_1.build_views(this.child_views, children, { parent: this });\n            dom_1.empty(this.el);\n            results = [];\n            for (i = 0, len = children.length; i < len; i++) {\n                child = children[i];\n                // Look-up the child_view in @child_views and then append We can't just\n                // read from @child_views because then we don't get guaranteed ordering.\n                // Which is a problem in non-box layouts.\n                child_view = this.child_views[child.id];\n                results.push(this.el.appendChild(child_view.el));\n            }\n            return results;\n        };\n        LayoutDOMView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            if (this.is_root) {\n                window.addEventListener('resize', function () {\n                    return _this.resize();\n                });\n            }\n            // XXX: @connect(@model.change, () => @layout())\n            return this.connect(this.model.properties.sizing_mode.change, function () {\n                return _this.layout();\n            });\n        };\n        LayoutDOMView.prototype._render_classes = function () {\n            var cls, i, len, ref, results;\n            this.el.className = '';\n            // removes all classes\n            if (this.className != null) {\n                this.el.classList.add(this.className);\n            }\n            this.el.classList.add('bk-layout-' + this.model.sizing_mode);\n            if (this.model.css_classes != null) {\n                ref = this.model.css_classes;\n                results = [];\n                for (i = 0, len = ref.length; i < len; i++) {\n                    cls = ref[i];\n                    results.push(this.el.classList.add(cls));\n                }\n                return results;\n            }\n        };\n        LayoutDOMView.prototype.render = function () {\n            var height, width;\n            this._render_classes();\n            switch (this.model.sizing_mode) {\n            case 'fixed':\n                // If the width or height is unset:\n                // - compute it from children\n                // - but then save for future use\n                // (for some reason widget boxes keep shrinking if you keep computing\n                // but this is more efficient and appropriate for fixed anyway).\n                if (this.model.width != null) {\n                    width = this.model.width;\n                } else {\n                    width = this.get_width();\n                    this.model.setv({ width: width }, { silent: true });\n                }\n                if (this.model.height != null) {\n                    height = this.model.height;\n                } else {\n                    height = this.get_height();\n                    this.model.setv({ height: height }, { silent: true });\n                }\n                this.solver.suggest_value(this.model._width, width);\n                this.solver.suggest_value(this.model._height, height);\n                break;\n            case 'scale_width':\n                height = this.get_height();\n                this.solver.suggest_value(this.model._height, height);\n                break;\n            case 'scale_height':\n                width = this.get_width();\n                this.solver.suggest_value(this.model._width, width);\n                break;\n            case 'scale_both':\n                _a = this.get_width_height(), width = _a[0], height = _a[1];\n                this.solver.suggest_value(this.model._width, width);\n                this.solver.suggest_value(this.model._height, height);\n            }\n            this.solver.update_variables();\n            return this.position();\n            var _a;\n        };\n        LayoutDOMView.prototype.position = function () {\n            switch (this.model.sizing_mode) {\n            case 'fixed':\n            case 'scale_width':\n            case 'scale_height':\n                this.el.style.position = 'relative';\n                this.el.style.left = '';\n                this.el.style.top = '';\n                break;\n            case 'scale_both':\n            case 'stretch_both':\n                this.el.style.position = 'absolute';\n                this.el.style.left = this.model._dom_left.value + 'px';\n                this.el.style.top = this.model._dom_top.value + 'px';\n            }\n            this.el.style.width = this.model._width.value + 'px';\n            return this.el.style.height = this.model._height.value + 'px';\n        };\n        LayoutDOMView.prototype.get_height = function () {\n            // Subclasses should implement this to explain\n            // what their height should be in sizing_mode mode.\n            throw new Error('not implemented');\n        };\n        LayoutDOMView.prototype.get_width = function () {\n            // Subclasses should implement this to explain\n            // what their width should be in sizing_mode mode.\n            throw new Error('not implemented');\n        };\n        LayoutDOMView.prototype.get_width_height = function () {\n            var ar, height, new_height_1, new_height_2, new_width_1, new_width_2, parent_height, parent_width, width;\n            parent_height = this.el.parentNode.clientHeight;\n            parent_width = this.el.parentNode.clientWidth;\n            ar = this.model.get_aspect_ratio();\n            new_width_1 = parent_width;\n            new_height_1 = parent_width / ar;\n            new_width_2 = parent_height * ar;\n            new_height_2 = parent_height;\n            if (new_width_1 < new_width_2) {\n                width = new_width_1;\n                height = new_height_1;\n            } else {\n                width = new_width_2;\n                height = new_height_2;\n            }\n            return [\n                width,\n                height\n            ];\n        };\n        return LayoutDOMView;\n    }(dom_view_1.DOMView);\n    var LayoutDOM = function (_super) {\n        tslib_1.__extends(LayoutDOM, _super);\n        function LayoutDOM() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LayoutDOM.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this._width = new solver_1.Variable(this.toString() + '.width');\n            this._height = new solver_1.Variable(this.toString() + '.height');\n            // These are the COORDINATES of the four plot sides\n            this._left = new solver_1.Variable(this.toString() + '.left');\n            this._right = new solver_1.Variable(this.toString() + '.right');\n            this._top = new solver_1.Variable(this.toString() + '.top');\n            this._bottom = new solver_1.Variable(this.toString() + '.bottom');\n            // This is the dom position\n            this._dom_top = new solver_1.Variable(this.toString() + '.dom_top');\n            this._dom_left = new solver_1.Variable(this.toString() + '.dom_left');\n            // This is the distance from the side of the right and bottom,\n            this._width_minus_right = new solver_1.Variable(this.toString() + '.width_minus_right');\n            this._height_minus_bottom = new solver_1.Variable(this.toString() + '.height_minus_bottom');\n            // Whitespace variables\n            this._whitespace_top = new solver_1.Variable(this.toString() + '.whitespace_top');\n            this._whitespace_bottom = new solver_1.Variable(this.toString() + '.whitespace_bottom');\n            this._whitespace_left = new solver_1.Variable(this.toString() + '.whitespace_left');\n            return this._whitespace_right = new solver_1.Variable(this.toString() + '.whitespace_right');\n        };\n        LayoutDOM.prototype.dump_layout = function () {\n            var layoutables, obj, pending;\n            layoutables = {};\n            pending = [this];\n            while (pending.length > 0) {\n                obj = pending.shift();\n                if (obj instanceof LayoutDOM) {\n                    pending.push.apply(pending, obj.get_layoutable_children());\n                }\n                layoutables[obj.toString()] = obj.layout_bbox;\n            }\n            return console.table(layoutables);\n        };\n        LayoutDOM.prototype.get_all_constraints = function () {\n            var child, constraints, i, len, ref;\n            constraints = this.get_constraints();\n            ref = this.get_layoutable_children();\n            for (i = 0, len = ref.length; i < len; i++) {\n                child = ref[i];\n                if (child instanceof layout_canvas_1.LayoutCanvas) {\n                    constraints = constraints.concat(child.get_constraints());\n                } else {\n                    constraints = constraints.concat(child.get_all_constraints());\n                }\n            }\n            return constraints;\n        };\n        LayoutDOM.prototype.get_all_editables = function () {\n            var child, editables, i, len, ref;\n            editables = this.get_editables();\n            ref = this.get_layoutable_children();\n            for (i = 0, len = ref.length; i < len; i++) {\n                child = ref[i];\n                if (child instanceof layout_canvas_1.LayoutCanvas) {\n                    editables = editables.concat(child.get_editables());\n                } else {\n                    editables = editables.concat(child.get_all_editables());\n                }\n            }\n            return editables;\n        };\n        LayoutDOM.prototype.get_constraints = function () {\n            return [\n                // Make sure things dont squeeze out of their bounding box\n                solver_1.GE(this._dom_left),\n                solver_1.GE(this._dom_top),\n                // Plot has to be inside the width/height\n                solver_1.GE(this._left),\n                solver_1.GE(this._width, [\n                    -1,\n                    this._right\n                ]),\n                solver_1.GE(this._top),\n                solver_1.GE(this._height, [\n                    -1,\n                    this._bottom\n                ]),\n                //# Declare computed constraints\n                solver_1.EQ(this._width_minus_right, [\n                    -1,\n                    this._width\n                ], this._right),\n                solver_1.EQ(this._height_minus_bottom, [\n                    -1,\n                    this._height\n                ], this._bottom)\n            ];\n        };\n        LayoutDOM.prototype.get_layoutable_children = function () {\n            return [];\n        };\n        LayoutDOM.prototype.get_editables = function () {\n            switch (this.sizing_mode) {\n            case 'fixed':\n                return [\n                    this._height,\n                    this._width\n                ];\n            case 'scale_width':\n                return [this._height];\n            case 'scale_height':\n                return [this._width];\n            case 'scale_both':\n                return [\n                    this._width,\n                    this._height\n                ];\n            default:\n                return [];\n            }\n        };\n        LayoutDOM.prototype.get_constrained_variables = function () {\n            var vars;\n            // THE FOLLOWING ARE OPTIONAL VARS THAT\n            // YOU COULD ADD INTO SUBCLASSES\n            //  # When this widget is on the edge of a box visually,\n            //  # align these variables down that edge. Right/bottom\n            //  # are an inset from the edge.\n            //  on_edge_align_top    : @_top\n            //  on_edge_align_bottom : @_height_minus_bottom\n            //  on_edge_align_left   : @_left\n            //  on_edge_align_right  : @_width_minus_right\n            //  # When this widget is in a box cell with the same \"arity\n            //  # path\" as a widget in another cell, align these variables\n            //  # between the two box cells. Right/bottom are an inset from\n            //  # the edge.\n            //  box_cell_align_top   : @_top\n            //  box_cell_align_bottom: @_height_minus_bottom\n            //  box_cell_align_left  : @_left\n            //  box_cell_align_right : @_width_minus_right\n            //  # When this widget is in a box, make these the same distance\n            //  # apart in every widget. Right/bottom are inset from the edge.\n            //  box_equal_size_top   : @_top\n            //  box_equal_size_bottom: @_height_minus_bottom\n            //  box_equal_size_left  : @_left\n            //  box_equal_size_right : @_width_minus_right\n            vars = {\n                origin_x: this._dom_left,\n                origin_y: this._dom_top,\n                whitespace_top: this._whitespace_top,\n                whitespace_bottom: this._whitespace_bottom,\n                whitespace_left: this._whitespace_left,\n                whitespace_right: this._whitespace_right\n            };\n            switch (this.sizing_mode) {\n            case 'stretch_both':\n                vars.width = this._width;\n                vars.height = this._height;\n                break;\n            case 'scale_width':\n                vars.width = this._width;\n                break;\n            case 'scale_height':\n                vars.height = this._height;\n            }\n            return vars;\n        };\n        LayoutDOM.prototype.get_aspect_ratio = function () {\n            return this.width / this.height;\n        };\n        return LayoutDOM;\n    }(model_1.Model);\n    exports.LayoutDOM = LayoutDOM;\n    ;\n    LayoutDOM.prototype.type = 'LayoutDOM';\n    LayoutDOM.getters({\n        layout_bbox: function () {\n            return {\n                top: this._top.value,\n                left: this._left.value,\n                width: this._width.value,\n                height: this._height.value,\n                right: this._right.value,\n                bottom: this._bottom.value,\n                dom_top: this._dom_top.value,\n                dom_left: this._dom_left.value\n            };\n        }\n    });\n    LayoutDOM.define({\n        height: [p.Number],\n        width: [p.Number],\n        disabled: [\n            p.Bool,\n            false\n        ],\n        sizing_mode: [\n            p.SizingMode,\n            'fixed'\n        ],\n        css_classes: [\n            p.Array,\n            []\n        ]\n    });    \n}","/*models/layouts/row*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var box_1 = require(136    /* ./box */);\n    var RowView = function (_super) {\n        tslib_1.__extends(RowView, _super);\n        function RowView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return RowView;\n    }(box_1.BoxView);\n    exports.RowView = RowView;\n    ;\n    RowView.prototype.className = 'bk-grid-row';\n    var Row = function (_super) {\n        tslib_1.__extends(Row, _super);\n        function Row(attrs, options) {\n            var _this = _super.call(this, attrs, options) || this;\n            _this._horizontal = true;\n            return _this;\n        }\n        return Row;\n    }(box_1.Box);\n    exports.Row = Row;\n    ;\n    Row.prototype.type = 'Row';\n    Row.prototype.default_view = RowView;    \n}","/*models/layouts/spacer*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var layout_dom_1 = require(139    /* ./layout_dom */);\n    var object_1 = require(30    /* core/util/object */);\n    var SpacerView = function (_super) {\n        tslib_1.__extends(SpacerView, _super);\n        function SpacerView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SpacerView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            if (this.sizing_mode === 'fixed') {\n                this.el.style.width = this.model.width + 'px';\n                return this.el.style.height = this.model.height + 'px';\n            }\n        };\n        SpacerView.prototype.get_height = function () {\n            // spacer must always have some height\n            return 1;\n        };\n        return SpacerView;\n    }(layout_dom_1.LayoutDOMView);\n    exports.SpacerView = SpacerView;\n    ;\n    SpacerView.prototype.className = 'bk-spacer-box';\n    var Spacer = function (_super) {\n        tslib_1.__extends(Spacer, _super);\n        function Spacer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Spacer.prototype.get_constrained_variables = function () {\n            return object_1.extend({}, _super.prototype.get_constrained_variables.call(this), {\n                on_edge_align_top: this._top,\n                on_edge_align_bottom: this._height_minus_bottom,\n                on_edge_align_left: this._left,\n                on_edge_align_right: this._width_minus_right,\n                box_cell_align_top: this._top,\n                box_cell_align_bottom: this._height_minus_bottom,\n                box_cell_align_left: this._left,\n                box_cell_align_right: this._width_minus_right,\n                box_equal_size_top: this._top,\n                box_equal_size_bottom: this._height_minus_bottom,\n                box_equal_size_left: this._left,\n                box_equal_size_right: this._width_minus_right\n            });\n        };\n        return Spacer;\n    }(layout_dom_1.LayoutDOM);\n    exports.Spacer = Spacer;\n    ;\n    Spacer.prototype.type = 'Spacer';\n    Spacer.prototype.default_view = SpacerView;    \n}","/*models/layouts/widget_box*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var hasProp = {}.hasOwnProperty;\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var object_1 = require(30    /* core/util/object */);\n    var layout_dom_1 = require(139    /* ../layouts/layout_dom */);\n    var WidgetBoxView = function (_super) {\n        tslib_1.__extends(WidgetBoxView, _super);\n        function WidgetBoxView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        WidgetBoxView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            return this.connect(this.model.properties.children.change, function () {\n                return _this.rebuild_child_views();\n            });\n        };\n        WidgetBoxView.prototype.render = function () {\n            var css_width, height, width;\n            this._render_classes();\n            // XXX: because no super()\n            if (this.model.sizing_mode === 'fixed' || this.model.sizing_mode === 'scale_height') {\n                width = this.get_width();\n                if (this.model._width.value !== width) {\n                    this.solver.suggest_value(this.model._width, width);\n                }\n            }\n            if (this.model.sizing_mode === 'fixed' || this.model.sizing_mode === 'scale_width') {\n                height = this.get_height();\n                if (this.model._height.value !== height) {\n                    this.solver.suggest_value(this.model._height, height);\n                }\n            }\n            this.solver.update_variables();\n            if (this.model.sizing_mode === 'stretch_both') {\n                this.el.style.position = 'absolute';\n                this.el.style.left = this.model._dom_left.value + 'px';\n                this.el.style.top = this.model._dom_top.value + 'px';\n                this.el.style.width = this.model._width.value + 'px';\n                return this.el.style.height = this.model._height.value + 'px';\n            } else {\n                // Note we DO NOT want to set a height (except in stretch_both). Widgets\n                // are happier sizing themselves. We've tried to tell the layout what\n                // the height is with the suggest_value. But that doesn't mean we need\n                // to put it in the dom.\n                if (this.model._width.value - 20 > 0) {\n                    css_width = this.model._width.value - 20 + 'px';\n                } else {\n                    css_width = '100%';\n                }\n                return this.el.style.width = css_width;\n            }\n        };\n        WidgetBoxView.prototype.get_height = function () {\n            var child_view, el, height, key, marginBottom, marginTop, ref, style;\n            height = 0;\n            ref = this.child_views;\n            for (key in ref) {\n                if (!hasProp.call(ref, key))\n                    continue;\n                child_view = ref[key];\n                el = child_view.el;\n                style = getComputedStyle(el);\n                marginTop = parseInt(style.marginTop) || 0;\n                marginBottom = parseInt(style.marginBottom) || 0;\n                height += el.offsetHeight + marginTop + marginBottom;\n            }\n            return height + 20;\n        };\n        WidgetBoxView.prototype.get_width = function () {\n            var child_view, child_width, key, ref, width;\n            if (this.model.width != null) {\n                return this.model.width;\n            } else {\n                width = this.el.scrollWidth + 20;\n                ref = this.child_views;\n                for (key in ref) {\n                    if (!hasProp.call(ref, key))\n                        continue;\n                    child_view = ref[key];\n                    // Take the max width of all the children as the constrainer.\n                    child_width = child_view.el.scrollWidth;\n                    if (child_width > width) {\n                        width = child_width;\n                    }\n                }\n                return width;\n            }\n        };\n        return WidgetBoxView;\n    }(layout_dom_1.LayoutDOMView);\n    exports.WidgetBoxView = WidgetBoxView;\n    ;\n    WidgetBoxView.prototype.className = 'bk-widget-box';\n    var WidgetBox = function (_super) {\n        tslib_1.__extends(WidgetBox, _super);\n        function WidgetBox() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        WidgetBox.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            if (this.sizing_mode === 'fixed' && this.width === null) {\n                // Set a default for fixed.\n                this.width = 300;\n                logging_1.logger.info('WidgetBox mode is fixed, but no width specified. Using default of 300.');\n            }\n            if (this.sizing_mode === 'scale_height') {\n                return logging_1.logger.warn('sizing_mode `scale_height` is not experimental for WidgetBox. Please report your results to the bokeh dev team so we can improve.');\n            }\n        };\n        WidgetBox.prototype.get_constrained_variables = function () {\n            var vars;\n            vars = object_1.extend({}, _super.prototype.get_constrained_variables.call(this), {\n                on_edge_align_top: this._top,\n                on_edge_align_bottom: this._height_minus_bottom,\n                on_edge_align_left: this._left,\n                on_edge_align_right: this._width_minus_right,\n                box_cell_align_top: this._top,\n                box_cell_align_bottom: this._height_minus_bottom,\n                box_cell_align_left: this._left,\n                box_cell_align_right: this._width_minus_right,\n                box_equal_size_top: this._top,\n                box_equal_size_bottom: this._height_minus_bottom\n            });\n            if (this.sizing_mode !== 'fixed') {\n                vars.box_equal_size_left = this._left;\n                vars.box_equal_size_right = this._width_minus_right;\n            }\n            return vars;\n        };\n        WidgetBox.prototype.get_layoutable_children = function () {\n            return this.children;\n        };\n        return WidgetBox;\n    }(layout_dom_1.LayoutDOM);\n    exports.WidgetBox = WidgetBox;\n    ;\n    WidgetBox.prototype.type = 'WidgetBox';\n    WidgetBox.prototype.default_view = WidgetBoxView;\n    WidgetBox.define({\n        children: [\n            p.Array,\n            []\n        ]\n    });    \n}","/*models/mappers/categorical_color_mapper*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var _equals;\n    var color_mapper_1 = require(144    /* ./color_mapper */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var types_1 = require(42    /* core/util/types */);\n    _equals = function (a, b) {\n        var i, j, ref;\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (i = j = 0, ref = a.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    var CategoricalColorMapper = function (_super) {\n        tslib_1.__extends(CategoricalColorMapper, _super);\n        function CategoricalColorMapper() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CategoricalColorMapper.prototype._get_values = function (data, palette) {\n            var color, d, j, key, len, values;\n            values = [];\n            for (j = 0, len = data.length; j < len; j++) {\n                d = data[j];\n                if (types_1.isString(d)) {\n                    key = this.factors.indexOf(d);\n                } else {\n                    if (this.start != null) {\n                        if (this.end != null) {\n                            d = d.slice(this.start, this.end);\n                        } else {\n                            d = d.slice(this.start);\n                        }\n                    } else if (this.end != null) {\n                        d = d.slice(0, this.end);\n                    }\n                    if (d.length === 1) {\n                        key = this.factors.indexOf(d[0]);\n                    } else {\n                        key = array_1.findIndex(this.factors, function (x) {\n                            return _equals(x, d);\n                        });\n                    }\n                }\n                if (key < 0 || key >= palette.length) {\n                    color = this.nan_color;\n                } else {\n                    color = palette[key];\n                }\n                values.push(color);\n            }\n            return values;\n        };\n        return CategoricalColorMapper;\n    }(color_mapper_1.ColorMapper);\n    exports.CategoricalColorMapper = CategoricalColorMapper;\n    ;\n    CategoricalColorMapper.prototype.type = 'CategoricalColorMapper';\n    CategoricalColorMapper.define({\n        factors: [p.Array],\n        start: [\n            p.Number,\n            0\n        ],\n        end: [p.Number]\n    });    \n}","/*models/mappers/color_mapper*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var p = require(15    /* core/properties */);\n    var transform_1 = require(243    /* ../transforms/transform */);\n    var types_1 = require(42    /* core/util/types */);\n    var ColorMapper = function (_super) {\n        tslib_1.__extends(ColorMapper, _super);\n        function ColorMapper() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ColorMapper.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this._little_endian = this._is_little_endian();\n            this._palette = this._build_palette(this.palette);\n            return this.connect(this.change, function () {\n                return this._palette = this._build_palette(this.palette);\n            });\n        };\n        // TODO (bev) This should not be needed, everything should use v_compute\n        ColorMapper.prototype.v_map_screen = function (data, image_glyph) {\n            if (image_glyph === void 0) {\n                image_glyph = false;\n            }\n            var buf, color, i, ind, j, k, ref, ref1, value, values;\n            values = this._get_values(data, this._palette, image_glyph);\n            buf = new ArrayBuffer(data.length * 4);\n            if (this._little_endian) {\n                color = new Uint8Array(buf);\n                for (i = j = 0, ref = data.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    value = values[i];\n                    ind = i * 4;\n                    // Bitwise math in JS is limited to 31-bits, to handle 32-bit value\n                    // this uses regular math to compute alpha instead (see issue #6755)\n                    color[ind] = Math.floor(value / 4278190080 * 255);\n                    color[ind + 1] = (value & 16711680) >> 16;\n                    color[ind + 2] = (value & 65280) >> 8;\n                    color[ind + 3] = value & 255;\n                }\n            } else {\n                color = new Uint32Array(buf);\n                for (i = k = 0, ref1 = data.length; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {\n                    value = values[i];\n                    color[i] = value << 8 | 255;    // alpha\n                }\n            }\n            return buf;\n        };\n        ColorMapper.prototype.compute = function (x) {\n            // If it's just a single value, then a color mapper doesn't\n            // really make sense, so return nothing\n            return null;\n        };\n        ColorMapper.prototype.v_compute = function (xs) {\n            var values;\n            values = this._get_values(xs, this.palette);\n            return values;\n        };\n        ColorMapper.prototype._get_values = function (data, palette, image_glyph) {\n            if (image_glyph === void 0) {\n                image_glyph = false;\n            }\n            return [];\n        };\n        // Should be defined by subclass\n        ColorMapper.prototype._is_little_endian = function () {\n            var buf, buf32, buf8, little_endian;\n            buf = new ArrayBuffer(4);\n            buf8 = new Uint8Array(buf);\n            buf32 = new Uint32Array(buf);\n            buf32[1] = 168496141;\n            little_endian = true;\n            if (buf8[4] === 10 && buf8[5] === 11 && buf8[6] === 12 && buf8[7] === 13) {\n                little_endian = false;\n            }\n            return little_endian;\n        };\n        ColorMapper.prototype._build_palette = function (palette) {\n            var _convert, i, j, new_palette, ref;\n            new_palette = new Uint32Array(palette.length);\n            _convert = function (value) {\n                if (types_1.isNumber(value)) {\n                    return value;\n                } else {\n                    if (value.length !== 9) {\n                        value = value + 'ff';\n                    }\n                    return parseInt(value.slice(1), 16);\n                }\n            };\n            for (i = j = 0, ref = palette.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                new_palette[i] = _convert(palette[i]);\n            }\n            return new_palette;\n        };\n        return ColorMapper;\n    }(transform_1.Transform);\n    exports.ColorMapper = ColorMapper;\n    ;\n    ColorMapper.prototype.type = 'ColorMapper';\n    ColorMapper.define({\n        palette: [p.Any],\n        nan_color: [\n            p.Color,\n            'gray'\n        ]\n    });    \n}","/*models/mappers/index*/\nfunction _(require, module, exports) {\n    var categorical_color_mapper_1 = require(143    /* ./categorical_color_mapper */);\n    exports.CategoricalColorMapper = categorical_color_mapper_1.CategoricalColorMapper;\n    var color_mapper_1 = require(144    /* ./color_mapper */);\n    exports.ColorMapper = color_mapper_1.ColorMapper;\n    var linear_color_mapper_1 = require(146    /* ./linear_color_mapper */);\n    exports.LinearColorMapper = linear_color_mapper_1.LinearColorMapper;\n    var log_color_mapper_1 = require(147    /* ./log_color_mapper */);\n    exports.LogColorMapper = log_color_mapper_1.LogColorMapper;    \n}","/*models/mappers/linear_color_mapper*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var p = require(15    /* core/properties */);\n    var color_1 = require(26    /* core/util/color */);\n    var array_1 = require(22    /* core/util/array */);\n    var color_mapper_1 = require(144    /* ./color_mapper */);\n    var LinearColorMapper = function (_super) {\n        tslib_1.__extends(LinearColorMapper, _super);\n        function LinearColorMapper() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LinearColorMapper.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this._nan_color = this._build_palette([color_1.color2hex(this.nan_color)])[0];\n            this._high_color = this.high_color != null ? this._build_palette([color_1.color2hex(this.high_color)])[0] : void 0;\n            return this._low_color = this.low_color != null ? this._build_palette([color_1.color2hex(this.low_color)])[0] : void 0;\n        };\n        LinearColorMapper.prototype._get_values = function (data, palette, image_glyph) {\n            if (image_glyph === void 0) {\n                image_glyph = false;\n            }\n            var d, high, high_color, i, key, len, low, low_color, max_key, nan_color, norm_factor, normed_d, normed_interval, ref, ref1, values;\n            low = (ref = this.low) != null ? ref : array_1.min(data);\n            high = (ref1 = this.high) != null ? ref1 : array_1.max(data);\n            max_key = palette.length - 1;\n            values = [];\n            nan_color = image_glyph ? this._nan_color : this.nan_color;\n            low_color = image_glyph ? this._low_color : this.low_color;\n            high_color = image_glyph ? this._high_color : this.high_color;\n            norm_factor = 1 / (high - low);\n            normed_interval = 1 / palette.length;\n            for (i = 0, len = data.length; i < len; i++) {\n                d = data[i];\n                if (isNaN(d)) {\n                    values.push(nan_color);\n                    continue;\n                }\n                // This handles the edge case where d == high, since the code below maps\n                // values exactly equal to high to palette.length, which is greater than\n                // max_key\n                if (d === high) {\n                    values.push(palette[max_key]);\n                    continue;\n                }\n                normed_d = (d - low) * norm_factor;\n                key = Math.floor(normed_d / normed_interval);\n                if (key < 0) {\n                    if (this.low_color != null) {\n                        values.push(low_color);\n                    } else {\n                        values.push(palette[0]);\n                    }\n                } else if (key > max_key) {\n                    if (this.high_color != null) {\n                        values.push(high_color);\n                    } else {\n                        values.push(palette[max_key]);\n                    }\n                } else {\n                    values.push(palette[key]);\n                }\n            }\n            return values;\n        };\n        return LinearColorMapper;\n    }(color_mapper_1.ColorMapper);\n    exports.LinearColorMapper = LinearColorMapper;\n    ;\n    LinearColorMapper.prototype.type = 'LinearColorMapper';\n    LinearColorMapper.define({\n        high: [p.Number],\n        low: [p.Number],\n        high_color: [p.Color],\n        low_color: [p.Color]\n    });    \n}","/*models/mappers/log_color_mapper*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var log1p, ref;\n    var p = require(15    /* core/properties */);\n    var color_1 = require(26    /* core/util/color */);\n    var array_1 = require(22    /* core/util/array */);\n    var color_mapper_1 = require(144    /* ./color_mapper */);\n    // Math.log1p() is not supported by any version of IE, so let's use a polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p.\n    log1p = (ref = Math.log1p) != null ? ref : function (x) {\n        return Math.log(1 + x);\n    };\n    var LogColorMapper = function (_super) {\n        tslib_1.__extends(LogColorMapper, _super);\n        function LogColorMapper() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LogColorMapper.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this._nan_color = this._build_palette([color_1.color2hex(this.nan_color)])[0];\n            this._high_color = this.high_color != null ? this._build_palette([color_1.color2hex(this.high_color)])[0] : void 0;\n            return this._low_color = this.low_color != null ? this._build_palette([color_1.color2hex(this.low_color)])[0] : void 0;\n        };\n        LogColorMapper.prototype._get_values = function (data, palette, image_glyph) {\n            if (image_glyph === void 0) {\n                image_glyph = false;\n            }\n            var d, high, high_color, i, key, len, log, low, low_color, max_key, n, nan_color, ref1, ref2, scale, values;\n            n = palette.length;\n            low = (ref1 = this.low) != null ? ref1 : array_1.min(data);\n            high = (ref2 = this.high) != null ? ref2 : array_1.max(data);\n            scale = n / (log1p(high) - log1p(low));\n            // subtract the low offset\n            max_key = palette.length - 1;\n            values = [];\n            nan_color = image_glyph ? this._nan_color : this.nan_color;\n            high_color = image_glyph ? this._high_color : this.high_color;\n            low_color = image_glyph ? this._low_color : this.low_color;\n            for (i = 0, len = data.length; i < len; i++) {\n                d = data[i];\n                // Check NaN\n                if (isNaN(d)) {\n                    values.push(nan_color);\n                    continue;\n                }\n                if (d > high) {\n                    if (this.high_color != null) {\n                        values.push(high_color);\n                    } else {\n                        values.push(palette[max_key]);\n                    }\n                    continue;\n                }\n                // This handles the edge case where d == high, since the code below maps\n                // values exactly equal to high to palette.length, which is greater than\n                // max_key\n                if (d === high) {\n                    values.push(palette[max_key]);\n                    continue;\n                }\n                if (d < low) {\n                    if (this.low_color != null) {\n                        values.push(low_color);\n                    } else {\n                        values.push(palette[0]);\n                    }\n                    continue;\n                }\n                // Get the key\n                log = log1p(d) - log1p(low);\n                // subtract the low offset\n                key = Math.floor(log * scale);\n                // Deal with upper bound\n                if (key > max_key) {\n                    key = max_key;\n                }\n                values.push(palette[key]);\n            }\n            return values;\n        };\n        return LogColorMapper;\n    }(color_mapper_1.ColorMapper);\n    exports.LogColorMapper = LogColorMapper;\n    ;\n    LogColorMapper.prototype.type = 'LogColorMapper';\n    LogColorMapper.define({\n        high: [p.Number],\n        low: [p.Number],\n        high_color: [p.Color],\n        low_color: [p.Color]\n    });    \n}","/*models/markers/index*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var SQ3, _mk_model, _one_cross, _one_diamond, _one_tri, _one_x, asterisk, circle_cross, circle_x, cross, diamond, diamond_cross, inverted_triangle, square, square_cross, square_x, triangle, x;\n    var marker_1 = require(149    /* ./marker */);\n    SQ3 = Math.sqrt(3);\n    _one_x = function (ctx, r) {\n        ctx.moveTo(-r, r);\n        ctx.lineTo(r, -r);\n        ctx.moveTo(-r, -r);\n        return ctx.lineTo(r, r);\n    };\n    _one_cross = function (ctx, r) {\n        ctx.moveTo(0, r);\n        ctx.lineTo(0, -r);\n        ctx.moveTo(-r, 0);\n        return ctx.lineTo(r, 0);\n    };\n    _one_diamond = function (ctx, r) {\n        ctx.moveTo(0, r);\n        ctx.lineTo(r / 1.5, 0);\n        ctx.lineTo(0, -r);\n        ctx.lineTo(-r / 1.5, 0);\n        return ctx.closePath();\n    };\n    _one_tri = function (ctx, r) {\n        var a, h;\n        h = r * SQ3;\n        a = h / 3;\n        // TODO (bev) use viewstate to take y-axis inversion into account\n        ctx.moveTo(-r, a);\n        ctx.lineTo(r, a);\n        ctx.lineTo(0, a - h);\n        return ctx.closePath();\n    };\n    asterisk = function (ctx, i, sx, sy, r, line, fill) {\n        var r2;\n        r2 = r * 0.65;\n        _one_cross(ctx, r);\n        _one_x(ctx, r2);\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            ctx.stroke();\n        }\n    };\n    circle_cross = function (ctx, i, sx, sy, r, line, fill) {\n        ctx.arc(0, 0, r, 0, 2 * Math.PI, false);\n        if (fill.doit) {\n            fill.set_vectorize(ctx, i);\n            ctx.fill();\n        }\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            _one_cross(ctx, r);\n            ctx.stroke();\n        }\n    };\n    circle_x = function (ctx, i, sx, sy, r, line, fill) {\n        ctx.arc(0, 0, r, 0, 2 * Math.PI, false);\n        if (fill.doit) {\n            fill.set_vectorize(ctx, i);\n            ctx.fill();\n        }\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            _one_x(ctx, r);\n            ctx.stroke();\n        }\n    };\n    cross = function (ctx, i, sx, sy, r, line, fill) {\n        _one_cross(ctx, r);\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            ctx.stroke();\n        }\n    };\n    diamond = function (ctx, i, sx, sy, r, line, fill) {\n        _one_diamond(ctx, r);\n        if (fill.doit) {\n            fill.set_vectorize(ctx, i);\n            ctx.fill();\n        }\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            ctx.stroke();\n        }\n    };\n    diamond_cross = function (ctx, i, sx, sy, r, line, fill) {\n        _one_diamond(ctx, r);\n        if (fill.doit) {\n            fill.set_vectorize(ctx, i);\n            ctx.fill();\n        }\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            _one_cross(ctx, r);\n            ctx.stroke();\n        }\n    };\n    inverted_triangle = function (ctx, i, sx, sy, r, line, fill) {\n        ctx.rotate(Math.PI);\n        _one_tri(ctx, r);\n        ctx.rotate(-Math.PI);\n        if (fill.doit) {\n            fill.set_vectorize(ctx, i);\n            ctx.fill();\n        }\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            ctx.stroke();\n        }\n    };\n    square = function (ctx, i, sx, sy, r, line, fill) {\n        var size;\n        size = 2 * r;\n        ctx.rect(-r, -r, size, size);\n        if (fill.doit) {\n            fill.set_vectorize(ctx, i);\n            ctx.fill();\n        }\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            ctx.stroke();\n        }\n    };\n    square_cross = function (ctx, i, sx, sy, r, line, fill) {\n        var size;\n        size = 2 * r;\n        ctx.rect(-r, -r, size, size);\n        if (fill.doit) {\n            fill.set_vectorize(ctx, i);\n            ctx.fill();\n        }\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            _one_cross(ctx, r);\n            ctx.stroke();\n        }\n    };\n    square_x = function (ctx, i, sx, sy, r, line, fill) {\n        var size;\n        size = 2 * r;\n        ctx.rect(-r, -r, size, size);\n        if (fill.doit) {\n            fill.set_vectorize(ctx, i);\n            ctx.fill();\n        }\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            _one_x(ctx, r);\n            ctx.stroke();\n        }\n    };\n    triangle = function (ctx, i, sx, sy, r, line, fill) {\n        _one_tri(ctx, r);\n        if (fill.doit) {\n            fill.set_vectorize(ctx, i);\n            ctx.fill();\n        }\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            ctx.stroke();\n        }\n    };\n    x = function (ctx, i, sx, sy, r, line, fill) {\n        _one_x(ctx, r);\n        if (line.doit) {\n            line.set_vectorize(ctx, i);\n            ctx.stroke();\n        }\n    };\n    _mk_model = function (type, f) {\n        var model, view;\n        view = function () {\n            var view = function (_super) {\n                tslib_1.__extends(view, _super);\n                function view() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return view;\n            }(marker_1.MarkerView);\n            ;\n            view.prototype._render_one = f;\n            return view;\n        }();\n        model = function () {\n            var model = function (_super) {\n                tslib_1.__extends(model, _super);\n                function model() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return model;\n            }(marker_1.Marker);\n            ;\n            model.prototype.default_view = view;\n            model.prototype.type = type;\n            return model;\n        }();\n        return model;\n    };\n    // markers are final, so no need to export views\n    exports.Asterisk = _mk_model('Asterisk', asterisk);\n    exports.CircleCross = _mk_model('CircleCross', circle_cross);\n    exports.CircleX = _mk_model('CircleX', circle_x);\n    exports.Cross = _mk_model('Cross', cross);\n    exports.Diamond = _mk_model('Diamond', diamond);\n    exports.DiamondCross = _mk_model('DiamondCross', diamond_cross);\n    exports.InvertedTriangle = _mk_model('InvertedTriangle', inverted_triangle);\n    exports.Square = _mk_model('Square', square);\n    exports.SquareCross = _mk_model('SquareCross', square_cross);\n    exports.SquareX = _mk_model('SquareX', square_x);\n    exports.Triangle = _mk_model('Triangle', triangle);\n    exports.X = _mk_model('X', x);    \n}","/*models/markers/marker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var xy_glyph_1 = require(128    /* ../glyphs/xy_glyph */);\n    var hittest = require(9    /* core/hittest */);\n    var p = require(15    /* core/properties */);\n    exports.MarkerView = function (_super) {\n        tslib_1.__extends(MarkerView, _super);\n        function MarkerView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MarkerView.prototype.draw_legend_for_index = function (ctx, x0, x1, y0, y1, index) {\n            var angle, data, indices, size, sx, sy;\n            // using objects like this seems a little wonky, since the keys are coerced to\n            // stings, but it works\n            indices = [index];\n            sx = {};\n            sx[index] = (x0 + x1) / 2;\n            sy = {};\n            sy[index] = (y0 + y1) / 2;\n            size = {};\n            size[index] = Math.min(Math.abs(x1 - x0), Math.abs(y1 - y0)) * 0.4;\n            angle = {};\n            angle[index] = this._angle[index];\n            data = {\n                sx: sx,\n                sy: sy,\n                _size: size,\n                _angle: angle\n            };\n            return this._render(ctx, indices, data);\n        };\n        MarkerView.prototype._render = function (ctx, indices, _a) {\n            var sx = _a.sx, sy = _a.sy, _size = _a._size, _angle = _a._angle;\n            var i, j, len, r, results;\n            results = [];\n            for (j = 0, len = indices.length; j < len; j++) {\n                i = indices[j];\n                if (isNaN(sx[i] + sy[i] + _size[i] + _angle[i])) {\n                    continue;\n                }\n                r = _size[i] / 2;\n                ctx.beginPath();\n                ctx.translate(sx[i], sy[i]);\n                if (_angle[i]) {\n                    ctx.rotate(_angle[i]);\n                }\n                this._render_one(ctx, i, sx[i], sy[i], r, this.visuals.line, this.visuals.fill);\n                if (_angle[i]) {\n                    ctx.rotate(-_angle[i]);\n                }\n                results.push(ctx.translate(-sx[i], -sy[i]));\n            }\n            return results;\n        };\n        MarkerView.prototype._mask_data = function (all_indices) {\n            var bbox, hr, sx0, sx1, sy0, sy1, vr, x0, x1, y0, y1;\n            // dilate the inner screen region by max_size and map back to data space for use in\n            // spatial query\n            hr = this.renderer.plot_view.frame.bbox.h_range;\n            sx0 = hr.start - this.max_size;\n            sx1 = hr.end + this.max_size;\n            _a = this.renderer.xscale.r_invert(sx0, sx1), x0 = _a[0], x1 = _a[1];\n            vr = this.renderer.plot_view.frame.bbox.v_range;\n            sy0 = vr.start - this.max_size;\n            sy1 = vr.end + this.max_size;\n            _b = this.renderer.yscale.r_invert(sy0, sy1), y0 = _b[0], y1 = _b[1];\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            return this.index.indices(bbox);\n            var _a, _b;\n        };\n        MarkerView.prototype._hit_point = function (geometry) {\n            var bbox, candidates, dist, hits, i, j, len, s2, sx, sx0, sx1, sy, sy0, sy1, x0, x1, y0, y1;\n            sx = geometry.sx, sy = geometry.sy;\n            sx0 = sx - this.max_size;\n            sx1 = sx + this.max_size;\n            _a = this.renderer.xscale.r_invert(sx0, sx1), x0 = _a[0], x1 = _a[1];\n            sy0 = sy - this.max_size;\n            sy1 = sy + this.max_size;\n            _b = this.renderer.yscale.r_invert(sy0, sy1), y0 = _b[0], y1 = _b[1];\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            candidates = this.index.indices(bbox);\n            hits = [];\n            for (j = 0, len = candidates.length; j < len; j++) {\n                i = candidates[j];\n                s2 = this._size[i] / 2;\n                dist = Math.abs(this.sx[i] - sx) + Math.abs(this.sy[i] - sy);\n                if (Math.abs(this.sx[i] - sx) <= s2 && Math.abs(this.sy[i] - sy) <= s2) {\n                    hits.push([\n                        i,\n                        dist\n                    ]);\n                }\n            }\n            return hittest.create_1d_hit_test_result(hits);\n            var _a, _b;\n        };\n        MarkerView.prototype._hit_span = function (geometry) {\n            var bbox, hits, maxX, maxY, minX, minY, ms, result, sx, sx0, sx1, sy, sy0, sy1, x0, x1, y0, y1;\n            sx = geometry.sx, sy = geometry.sy;\n            _a = this.bounds(), minX = _a.minX, minY = _a.minY, maxX = _a.maxX, maxY = _a.maxY;\n            result = hittest.create_hit_test_result();\n            if (geometry.direction === 'h') {\n                y0 = minY;\n                y1 = maxY;\n                ms = this.max_size / 2;\n                sx0 = sx - ms;\n                sx1 = sx + ms;\n                _b = this.renderer.xscale.r_invert(sx0, sx1), x0 = _b[0], x1 = _b[1];\n            } else {\n                x0 = minX;\n                x1 = maxX;\n                ms = this.max_size / 2;\n                sy0 = sy - ms;\n                sy1 = sy + ms;\n                _c = this.renderer.yscale.r_invert(sy0, sy1), y0 = _c[0], y1 = _c[1];\n            }\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            hits = this.index.indices(bbox);\n            result['1d'].indices = hits;\n            return result;\n            var _a, _b, _c;\n        };\n        MarkerView.prototype._hit_rect = function (geometry) {\n            var bbox, result, sx0, sx1, sy0, sy1, x0, x1, y0, y1;\n            sx0 = geometry.sx0, sx1 = geometry.sx1, sy0 = geometry.sy0, sy1 = geometry.sy1;\n            _a = this.renderer.xscale.r_invert(sx0, sx1), x0 = _a[0], x1 = _a[1];\n            _b = this.renderer.yscale.r_invert(sy0, sy1), y0 = _b[0], y1 = _b[1];\n            bbox = hittest.validate_bbox_coords([\n                x0,\n                x1\n            ], [\n                y0,\n                y1\n            ]);\n            result = hittest.create_hit_test_result();\n            result['1d'].indices = this.index.indices(bbox);\n            return result;\n            var _a, _b;\n        };\n        MarkerView.prototype._hit_poly = function (geometry) {\n            var candidates, hits, i, idx, j, k, ref, ref1, result, results, sx, sy;\n            sx = geometry.sx, sy = geometry.sy;\n            // TODO (bev) use spatial index to pare candidate list\n            candidates = function () {\n                results = [];\n                for (var j = 0, ref = this.sx.length; 0 <= ref ? j < ref : j > ref; 0 <= ref ? j++ : j--) {\n                    results.push(j);\n                }\n                return results;\n            }.apply(this);\n            hits = [];\n            for (i = k = 0, ref1 = candidates.length; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {\n                idx = candidates[i];\n                if (hittest.point_in_poly(this.sx[i], this.sy[i], sx, sy)) {\n                    hits.push(idx);\n                }\n            }\n            result = hittest.create_hit_test_result();\n            result['1d'].indices = hits;\n            return result;\n        };\n        return MarkerView;\n    }(xy_glyph_1.XYGlyphView);\n    var Marker = function (_super) {\n        tslib_1.__extends(Marker, _super);\n        function Marker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Marker;\n    }(xy_glyph_1.XYGlyph);\n    exports.Marker = Marker;\n    ;\n    Marker.mixins([\n        'line',\n        'fill'\n    ]);\n    Marker.define({\n        size: [\n            p.DistanceSpec,\n            {\n                units: 'screen',\n                value: 4\n            }\n        ],\n        angle: [\n            p.AngleSpec,\n            0\n        ]\n    });    \n}","/*models/plots/gmap_plot*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var logging_1 = require(14    /* core/logging */);\n    var gmap_plot_canvas_1 = require(151    /* ./gmap_plot_canvas */);\n    var plot_1 = require(153    /* ./plot */);\n    var p = require(15    /* core/properties */);\n    var model_1 = require(50    /* ../../model */);\n    var MapOptions = function (_super) {\n        tslib_1.__extends(MapOptions, _super);\n        function MapOptions() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return MapOptions;\n    }(model_1.Model);\n    exports.MapOptions = MapOptions;\n    ;\n    MapOptions.prototype.type = 'MapOptions';\n    MapOptions.define({\n        lat: [p.Number],\n        lng: [p.Number],\n        zoom: [\n            p.Number,\n            12\n        ]\n    });\n    var GMapOptions = function (_super) {\n        tslib_1.__extends(GMapOptions, _super);\n        function GMapOptions() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return GMapOptions;\n    }(MapOptions);\n    exports.GMapOptions = GMapOptions;\n    ;\n    GMapOptions.prototype.type = 'GMapOptions';\n    GMapOptions.define({\n        map_type: [\n            p.String,\n            'roadmap'\n        ],\n        scale_control: [\n            p.Bool,\n            false\n        ],\n        styles: [p.String]\n    });\n    exports.GMapPlotView = function (_super) {\n        tslib_1.__extends(GMapPlotView, _super);\n        function GMapPlotView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return GMapPlotView;\n    }(plot_1.PlotView);\n    var GMapPlot = function (_super) {\n        tslib_1.__extends(GMapPlot, _super);\n        function GMapPlot() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        GMapPlot.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            if (!this.api_key) {\n                return logging_1.logger.error('api_key is required. See https://developers.google.com/maps/documentation/javascript/get-api-key for more information on how to obtain your own.');\n            }\n        };\n        GMapPlot.prototype._init_plot_canvas = function () {\n            return new gmap_plot_canvas_1.GMapPlotCanvas({ plot: this });\n        };\n        return GMapPlot;\n    }(plot_1.Plot);\n    exports.GMapPlot = GMapPlot;\n    ;\n    GMapPlot.prototype.type = 'GMapPlot';\n    GMapPlot.prototype.default_view = exports.GMapPlotView;\n    // Set all the PlotCanvas properties as internal.\n    // This seems to be necessary so that everything can initialize.\n    // Feels very clumsy, but I'm not sure how the properties system wants\n    // to handle something like this situation.\n    GMapPlot.define({\n        map_options: [p.Instance],\n        api_key: [p.String]\n    });    \n}","/*models/plots/gmap_plot_canvas*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var gmaps_ready, load_google_api, boundMethodCheck = function (instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n                throw new Error('Bound instance method accessed before binding');\n            }\n        };\n    var proj4_1 = require(31    /* core/util/proj4 */);\n    var plot_canvas_1 = require(154    /* ./plot_canvas */);\n    var signaling_1 = require(20    /* core/signaling */);\n    gmaps_ready = new signaling_1.Signal(this, 'gmaps_ready');\n    load_google_api = function (api_key) {\n        var script;\n        window._bokeh_gmaps_callback = function () {\n            return gmaps_ready.emit();\n        };\n        script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = 'https://maps.googleapis.com/maps/api/js?key=' + api_key + '&callback=_bokeh_gmaps_callback';\n        return document.body.appendChild(script);\n    };\n    exports.GMapPlotCanvasView = function (_super) {\n        tslib_1.__extends(GMapPlotCanvasView, _super);\n        function GMapPlotCanvasView() {\n            var _this = _super.apply(this, arguments) || this;\n            _this._get_latlon_bounds = _this._get_latlon_bounds.bind(_this);\n            _this._get_projected_bounds = _this._get_projected_bounds.bind(_this);\n            _this._set_bokeh_ranges = _this._set_bokeh_ranges.bind(_this);\n            return _this;\n        }\n        GMapPlotCanvasView.prototype.initialize = function (options) {\n            var _this = this;\n            var mo, ref;\n            this.pause();\n            _super.prototype.initialize.call(this, options);\n            this._tiles_loaded = false;\n            this.zoom_count = 0;\n            mo = this.model.plot.map_options;\n            this.initial_zoom = mo.zoom;\n            this.initial_lat = mo.lat;\n            this.initial_lng = mo.lng;\n            this.canvas_view.map_el.style.position = 'absolute';\n            if (((ref = window.google) != null ? ref.maps : void 0) == null) {\n                if (window._bokeh_gmaps_callback == null) {\n                    load_google_api(this.model.plot.api_key);\n                }\n                gmaps_ready.connect(function () {\n                    return _this.request_render();\n                });\n            }\n            return this.unpause();\n        };\n        GMapPlotCanvasView.prototype.update_range = function (range_info) {\n            var mo, new_map_zoom, old_map_zoom, proj_xend, proj_xstart, proj_yend, proj_ystart, zoom_change;\n            // RESET -------------------------\n            if (range_info == null) {\n                mo = this.model.plot.map_options;\n                this.map.setCenter({\n                    lat: this.initial_lat,\n                    lng: this.initial_lng\n                });\n                this.map.setOptions({ zoom: this.initial_zoom });\n                _super.prototype.update_range.call(this, null);    // PAN ----------------------------\n            } else if (range_info.sdx != null || range_info.sdy != null) {\n                this.map.panBy(range_info.sdx, range_info.sdy);\n                _super.prototype.update_range.call(this, range_info);    // ZOOM ---------------------------\n            } else if (range_info.factor != null) {\n                // The zoom count decreases the sensitivity of the zoom. (We could make this user configurable)\n                if (this.zoom_count !== 10) {\n                    this.zoom_count += 1;\n                    return;\n                }\n                this.zoom_count = 0;\n                this.pause();\n                _super.prototype.update_range.call(this, range_info);\n                if (range_info.factor < 0) {\n                    zoom_change = -1;\n                } else {\n                    zoom_change = 1;\n                }\n                old_map_zoom = this.map.getZoom();\n                new_map_zoom = old_map_zoom + zoom_change;\n                // Zooming out too far causes problems\n                if (new_map_zoom >= 2) {\n                    this.map.setZoom(new_map_zoom);\n                    // Check we haven't gone out of bounds, and if we have undo the zoom\n                    _a = this._get_projected_bounds(), proj_xstart = _a[0], proj_xend = _a[1], proj_ystart = _a[2], proj_yend = _a[3];\n                    if (proj_xend - proj_xstart < 0) {\n                        this.map.setZoom(old_map_zoom);\n                    }\n                }\n                this.unpause();\n            }\n            // Finally re-center\n            return this._set_bokeh_ranges();\n            var _a;\n        };\n        GMapPlotCanvasView.prototype._build_map = function () {\n            var _this = this;\n            var map_options, maps, mo;\n            maps = window.google.maps;\n            this.map_types = {\n                satellite: maps.MapTypeId.SATELLITE,\n                terrain: maps.MapTypeId.TERRAIN,\n                roadmap: maps.MapTypeId.ROADMAP,\n                hybrid: maps.MapTypeId.HYBRID\n            };\n            mo = this.model.plot.map_options;\n            map_options = {\n                center: new maps.LatLng(mo.lat, mo.lng),\n                zoom: mo.zoom,\n                disableDefaultUI: true,\n                mapTypeId: this.map_types[mo.map_type],\n                scaleControl: mo.scale_control\n            };\n            if (mo.styles != null) {\n                map_options.styles = JSON.parse(mo.styles);\n            }\n            // create the map with above options in div\n            this.map = new maps.Map(this.canvas_view.map_el, map_options);\n            // update bokeh ranges whenever the map idles, which should be after most UI action\n            maps.event.addListener(this.map, 'idle', function () {\n                return _this._set_bokeh_ranges();\n            });\n            // also need an event when bounds change so that map resizes trigger renders too\n            maps.event.addListener(this.map, 'bounds_changed', function () {\n                return _this._set_bokeh_ranges();\n            });\n            maps.event.addListenerOnce(this.map, 'tilesloaded', function () {\n                return _this._render_finished();\n            });\n            // wire up listeners so that changes to properties are reflected\n            this.connect(this.model.plot.properties.map_options.change, function () {\n                return _this._update_options();\n            });\n            this.connect(this.model.plot.map_options.properties.styles.change, function () {\n                return _this._update_styles();\n            });\n            this.connect(this.model.plot.map_options.properties.lat.change, function () {\n                return _this._update_center('lat');\n            });\n            this.connect(this.model.plot.map_options.properties.lng.change, function () {\n                return _this._update_center('lng');\n            });\n            this.connect(this.model.plot.map_options.properties.zoom.change, function () {\n                return _this._update_zoom();\n            });\n            this.connect(this.model.plot.map_options.properties.map_type.change, function () {\n                return _this._update_map_type();\n            });\n            return this.connect(this.model.plot.map_options.properties.scale_control.change, function () {\n                return _this._update_scale_control();\n            });\n        };\n        GMapPlotCanvasView.prototype._render_finished = function () {\n            this._tiles_loaded = true;\n            return this.notify_finished();\n        };\n        GMapPlotCanvasView.prototype.has_finished = function () {\n            return _super.prototype.has_finished.call(this) && this._tiles_loaded === true;\n        };\n        GMapPlotCanvasView.prototype._get_latlon_bounds = function () {\n            var bottom_left, bounds, top_right, xend, xstart, yend, ystart;\n            boundMethodCheck(this, GMapPlotCanvasView);\n            bounds = this.map.getBounds();\n            top_right = bounds.getNorthEast();\n            bottom_left = bounds.getSouthWest();\n            xstart = bottom_left.lng();\n            xend = top_right.lng();\n            ystart = bottom_left.lat();\n            yend = top_right.lat();\n            return [\n                xstart,\n                xend,\n                ystart,\n                yend\n            ];\n        };\n        GMapPlotCanvasView.prototype._get_projected_bounds = function () {\n            var proj_xend, proj_xstart, proj_yend, proj_ystart, xend, xstart, yend, ystart;\n            boundMethodCheck(this, GMapPlotCanvasView);\n            _a = this._get_latlon_bounds(), xstart = _a[0], xend = _a[1], ystart = _a[2], yend = _a[3];\n            _b = proj4_1.proj4(proj4_1.mercator, [\n                xstart,\n                ystart\n            ]), proj_xstart = _b[0], proj_ystart = _b[1];\n            _c = proj4_1.proj4(proj4_1.mercator, [\n                xend,\n                yend\n            ]), proj_xend = _c[0], proj_yend = _c[1];\n            return [\n                proj_xstart,\n                proj_xend,\n                proj_ystart,\n                proj_yend\n            ];\n            var _a, _b, _c;\n        };\n        GMapPlotCanvasView.prototype._set_bokeh_ranges = function () {\n            var proj_xend, proj_xstart, proj_yend, proj_ystart;\n            boundMethodCheck(this, GMapPlotCanvasView);\n            _a = this._get_projected_bounds(), proj_xstart = _a[0], proj_xend = _a[1], proj_ystart = _a[2], proj_yend = _a[3];\n            this.frame.x_range.setv({\n                start: proj_xstart,\n                end: proj_xend\n            });\n            return this.frame.y_range.setv({\n                start: proj_ystart,\n                end: proj_yend\n            });\n            var _a;\n        };\n        GMapPlotCanvasView.prototype._update_center = function (fld) {\n            var c;\n            c = this.map.getCenter().toJSON();\n            c[fld] = this.model.plot.map_options[fld];\n            this.map.setCenter(c);\n            return this._set_bokeh_ranges();\n        };\n        GMapPlotCanvasView.prototype._update_map_type = function () {\n            var maps;\n            maps = window.google.maps;\n            return this.map.setOptions({ mapTypeId: this.map_types[this.model.plot.map_options.map_type] });\n        };\n        GMapPlotCanvasView.prototype._update_scale_control = function () {\n            var maps;\n            maps = window.google.maps;\n            return this.map.setOptions({ scaleControl: this.model.plot.map_options.scale_control });\n        };\n        GMapPlotCanvasView.prototype._update_options = function () {\n            this._update_styles();\n            this._update_center('lat');\n            this._update_center('lng');\n            this._update_zoom();\n            return this._update_map_type();\n        };\n        GMapPlotCanvasView.prototype._update_styles = function () {\n            return this.map.setOptions({ styles: JSON.parse(this.model.plot.map_options.styles) });\n        };\n        GMapPlotCanvasView.prototype._update_zoom = function () {\n            this.map.setOptions({ zoom: this.model.plot.map_options.zoom });\n            return this._set_bokeh_ranges();\n        };\n        // this method is expected and called by PlotCanvasView.render\n        GMapPlotCanvasView.prototype._map_hook = function (ctx, frame_box) {\n            var height, left, ref, top, width;\n            left = frame_box[0], top = frame_box[1], width = frame_box[2], height = frame_box[3];\n            this.canvas_view.map_el.style.top = top + 'px';\n            this.canvas_view.map_el.style.left = left + 'px';\n            this.canvas_view.map_el.style.width = width + 'px';\n            this.canvas_view.map_el.style.height = height + 'px';\n            if (this.map == null && ((ref = window.google) != null ? ref.maps : void 0) != null) {\n                return this._build_map();\n            }\n        };\n        // this overrides the standard _paint_empty to make the inner canvas transparent\n        GMapPlotCanvasView.prototype._paint_empty = function (ctx, frame_box) {\n            var ih, iw, left, oh, ow, top;\n            ow = this.canvas._width.value;\n            oh = this.canvas._height.value;\n            left = frame_box[0], top = frame_box[1], iw = frame_box[2], ih = frame_box[3];\n            ctx.clearRect(0, 0, ow, oh);\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n            ctx.lineTo(0, oh);\n            ctx.lineTo(ow, oh);\n            ctx.lineTo(ow, 0);\n            ctx.lineTo(0, 0);\n            ctx.moveTo(left, top);\n            ctx.lineTo(left + iw, top);\n            ctx.lineTo(left + iw, top + ih);\n            ctx.lineTo(left, top + ih);\n            ctx.lineTo(left, top);\n            ctx.closePath();\n            ctx.fillStyle = this.model.plot.border_fill_color;\n            return ctx.fill();\n        };\n        return GMapPlotCanvasView;\n    }(plot_canvas_1.PlotCanvasView);\n    var GMapPlotCanvas = function (_super) {\n        tslib_1.__extends(GMapPlotCanvas, _super);\n        function GMapPlotCanvas() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        GMapPlotCanvas.prototype.initialize = function (attrs, options) {\n            this.use_map = true;\n            return _super.prototype.initialize.call(this, attrs, options);\n        };\n        return GMapPlotCanvas;\n    }(plot_canvas_1.PlotCanvas);\n    exports.GMapPlotCanvas = GMapPlotCanvas;\n    ;\n    GMapPlotCanvas.prototype.type = 'GMapPlotCanvas';\n    GMapPlotCanvas.prototype.default_view = exports.GMapPlotCanvasView;    \n}","/*models/plots/index*/\nfunction _(require, module, exports) {\n    var gmap_plot_1 = require(150    /* ./gmap_plot */);\n    exports.MapOptions = gmap_plot_1.MapOptions;\n    var gmap_plot_2 = require(150    /* ./gmap_plot */);\n    exports.GMapOptions = gmap_plot_2.GMapOptions;\n    var gmap_plot_3 = require(150    /* ./gmap_plot */);\n    exports.GMapPlot = gmap_plot_3.GMapPlot;\n    var gmap_plot_canvas_1 = require(151    /* ./gmap_plot_canvas */);\n    exports.GMapPlotCanvas = gmap_plot_canvas_1.GMapPlotCanvas;\n    var plot_1 = require(153    /* ./plot */);\n    exports.Plot = plot_1.Plot;\n    var plot_canvas_1 = require(154    /* ./plot_canvas */);\n    exports.PlotCanvas = plot_canvas_1.PlotCanvas;    \n}","/*models/plots/plot*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var solver_1 = require(13    /* core/layout/solver */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var object_1 = require(30    /* core/util/object */);\n    var types_1 = require(42    /* core/util/types */);\n    var layout_dom_1 = require(139    /* ../layouts/layout_dom */);\n    var title_1 = require(65    /* ../annotations/title */);\n    var linear_scale_1 = require(168    /* ../scales/linear_scale */);\n    var toolbar_1 = require(233    /* ../tools/toolbar */);\n    var toolbar_panel_1 = require(66    /* ../annotations/toolbar_panel */);\n    var plot_canvas_1 = require(154    /* ./plot_canvas */);\n    var column_data_source_1 = require(173    /* ../sources/column_data_source */);\n    var glyph_renderer_1 = require(161    /* ../renderers/glyph_renderer */);\n    var bokeh_events_1 = require(3    /* core/bokeh_events */);\n    var PlotView = function (_super) {\n        tslib_1.__extends(PlotView, _super);\n        function PlotView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PlotView.prototype.connect_signals = function () {\n            var title_msg;\n            _super.prototype.connect_signals.call(this);\n            // Note: Title object cannot be replaced after initialization, similar to axes, and also\n            // not being able to change the sizing_mode. All of these changes require a re-initialization\n            // of all constraints which we don't currently support.\n            title_msg = 'Title object cannot be replaced. Try changing properties on title to update it after initialization.';\n            return this.connect(this.model.properties.title.change, function () {\n                return logging_1.logger.warn(title_msg);\n            });\n        };\n        PlotView.prototype.get_height = function () {\n            return this.model._width.value / this.model.get_aspect_ratio();\n        };\n        PlotView.prototype.get_width = function () {\n            return this.model._height.value * this.model.get_aspect_ratio();\n        };\n        PlotView.prototype.save = function (name) {\n            return this.plot_canvas_view.save(name);\n        };\n        return PlotView;\n    }(layout_dom_1.LayoutDOMView);\n    exports.PlotView = PlotView;\n    ;\n    PlotView.prototype.className = 'bk-plot-layout';\n    PlotView.getters({\n        plot_canvas_view: function () {\n            return this.child_views[this.model._plot_canvas.id];\n        }\n    });\n    var Plot = function (_super) {\n        tslib_1.__extends(Plot, _super);\n        function Plot() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Plot.prototype.initialize = function (options) {\n            var i, j, k, layout_renderers, len, len1, len2, plots, ref, ref1, ref2, renderer, results, side, xr, yr;\n            _super.prototype.initialize.call(this, options);\n            ref = object_1.values(this.extra_x_ranges).concat(this.x_range);\n            for (i = 0, len = ref.length; i < len; i++) {\n                xr = ref[i];\n                plots = xr.plots;\n                if (types_1.isArray(plots)) {\n                    plots = plots.concat(this);\n                    xr.setv({ plots: plots }, { silent: true });\n                }\n            }\n            ref1 = object_1.values(this.extra_y_ranges).concat(this.y_range);\n            for (j = 0, len1 = ref1.length; j < len1; j++) {\n                yr = ref1[j];\n                plots = yr.plots;\n                if (types_1.isArray(plots)) {\n                    plots = plots.concat(this);\n                    yr.setv({ plots: plots }, { silent: true });\n                }\n            }\n            // Min border applies to the edge of everything\n            if (this.min_border != null) {\n                if (this.min_border_top == null) {\n                    this.min_border_top = this.min_border;\n                }\n                if (this.min_border_bottom == null) {\n                    this.min_border_bottom = this.min_border;\n                }\n                if (this.min_border_left == null) {\n                    this.min_border_left = this.min_border;\n                }\n                if (this.min_border_right == null) {\n                    this.min_border_right = this.min_border;\n                }\n            }\n            this._init_title_panel();\n            this._init_toolbar_panel();\n            this._plot_canvas = this._init_plot_canvas();\n            this.plot_canvas.toolbar = this.toolbar;\n            // Set width & height to be the passed in plot_width and plot_height\n            // We may need to be more subtle about this - not sure why people use one\n            // or the other.\n            if (this.width == null) {\n                this.width = this.plot_width;\n            }\n            if (this.height == null) {\n                this.height = this.plot_height;\n            }\n            ref2 = [\n                'above',\n                'below',\n                'left',\n                'right'\n            ];\n            // Setup side renderers\n            results = [];\n            for (k = 0, len2 = ref2.length; k < len2; k++) {\n                side = ref2[k];\n                layout_renderers = this.getv(side);\n                results.push(function () {\n                    var l, len3, results1;\n                    results1 = [];\n                    for (l = 0, len3 = layout_renderers.length; l < len3; l++) {\n                        renderer = layout_renderers[l];\n                        results1.push(renderer.add_panel(side));\n                    }\n                    return results1;\n                }());\n            }\n            return results;\n        };\n        Plot.prototype._init_plot_canvas = function () {\n            return new plot_canvas_1.PlotCanvas({ plot: this });\n        };\n        Plot.prototype._init_title_panel = function () {\n            var title;\n            if (this.title != null) {\n                title = types_1.isString(this.title) ? new title_1.Title({ text: this.title }) : this.title;\n                return this.add_layout(title, this.title_location);\n            }\n        };\n        Plot.prototype._init_toolbar_panel = function () {\n            var _this = this;\n            var i, items, len, models, ref, title;\n            if (this._toolbar_panel != null) {\n                ref = [\n                    this.left,\n                    this.right,\n                    this.above,\n                    this.below,\n                    this.renderers\n                ];\n                for (i = 0, len = ref.length; i < len; i++) {\n                    items = ref[i];\n                    array_1.removeBy(items, function (item) {\n                        return item === _this._toolbar_panel;\n                    });\n                }\n                this._toolbar_panel = null;\n            }\n            switch (this.toolbar_location) {\n            case 'left':\n            case 'right':\n            case 'above':\n            case 'below':\n                this._toolbar_panel = new toolbar_panel_1.ToolbarPanel({ toolbar: this.toolbar });\n                this.toolbar.toolbar_location = this.toolbar_location;\n                if (this.toolbar_sticky) {\n                    models = this.getv(this.toolbar_location);\n                    title = array_1.find(models, function (model) {\n                        return model instanceof title_1.Title;\n                    });\n                    if (title != null) {\n                        this._toolbar_panel.set_panel(title.panel);\n                        this.add_renderers(this._toolbar_panel);\n                        return;\n                    }\n                }\n                return this.add_layout(this._toolbar_panel, this.toolbar_location);\n            }\n        };\n        Plot.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            return this.connect(this.properties.toolbar_location.change, function () {\n                return _this._init_toolbar_panel();\n            });\n        };\n        Plot.prototype._doc_attached = function () {\n            this.plot_canvas.attach_document(this.document);\n            return _super.prototype._doc_attached.call(this);\n        };\n        Plot.prototype.add_renderers = function () {\n            var new_renderers = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                new_renderers[_i] = arguments[_i];\n            }\n            var renderers;\n            renderers = this.renderers;\n            renderers = renderers.concat(new_renderers);\n            return this.renderers = renderers;\n        };\n        Plot.prototype.add_layout = function (renderer, side) {\n            if (side === void 0) {\n                side = 'center';\n            }\n            var side_renderers;\n            if (renderer.props.plot != null) {\n                renderer.plot = this;\n            }\n            if (side !== 'center') {\n                side_renderers = this.getv(side);\n                side_renderers.push(renderer);\n                renderer.add_panel(side);\n            }\n            return this.add_renderers(renderer);\n        };\n        Plot.prototype.add_glyph = function (glyph, source, attrs) {\n            if (attrs === void 0) {\n                attrs = {};\n            }\n            var renderer;\n            if (source == null) {\n                source = new column_data_source_1.ColumnDataSource();\n            }\n            attrs = object_1.extend({}, attrs, {\n                data_source: source,\n                glyph: glyph\n            });\n            renderer = new glyph_renderer_1.GlyphRenderer(attrs);\n            this.add_renderers(renderer);\n            return renderer;\n        };\n        Plot.prototype.add_tools = function () {\n            var tools = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                tools[_i] = arguments[_i];\n            }\n            var i, len, tool;\n            for (i = 0, len = tools.length; i < len; i++) {\n                tool = tools[i];\n                if (tool.overlay != null) {\n                    this.add_renderers(tool.overlay);\n                }\n            }\n            return this.toolbar.tools = this.toolbar.tools.concat(tools);\n        };\n        Plot.prototype.get_layoutable_children = function () {\n            return [this.plot_canvas];\n        };\n        Plot.prototype.get_constraints = function () {\n            var constraints;\n            constraints = _super.prototype.get_constraints.call(this);\n            constraints.push(solver_1.EQ(this._width, [\n                -1,\n                this.plot_canvas._width\n            ]));\n            constraints.push(solver_1.EQ(this._height, [\n                -1,\n                this.plot_canvas._height\n            ]));\n            return constraints;\n        };\n        Plot.prototype.get_constrained_variables = function () {\n            var vars;\n            vars = object_1.extend({}, _super.prototype.get_constrained_variables.call(this), {\n                on_edge_align_top: this.plot_canvas._top,\n                on_edge_align_bottom: this.plot_canvas._height_minus_bottom,\n                on_edge_align_left: this.plot_canvas._left,\n                on_edge_align_right: this.plot_canvas._width_minus_right,\n                box_cell_align_top: this.plot_canvas._top,\n                box_cell_align_bottom: this.plot_canvas._height_minus_bottom,\n                box_cell_align_left: this.plot_canvas._left,\n                box_cell_align_right: this.plot_canvas._width_minus_right,\n                box_equal_size_top: this.plot_canvas._top,\n                box_equal_size_bottom: this.plot_canvas._height_minus_bottom\n            });\n            if (this.sizing_mode !== 'fixed') {\n                vars.box_equal_size_left = this.plot_canvas._left;\n                vars.box_equal_size_right = this.plot_canvas._width_minus_right;\n            }\n            return vars;\n        };\n        return Plot;\n    }(layout_dom_1.LayoutDOM);\n    exports.Plot = Plot;\n    ;\n    Plot.prototype.type = 'Plot';\n    Plot.prototype.default_view = PlotView;\n    Plot.getters({\n        plot_canvas: function () {\n            return this._plot_canvas;\n        }\n    });\n    // SETUP PROPERTIES\n    Plot.mixins([\n        'line:outline_',\n        'fill:background_',\n        'fill:border_'\n    ]);\n    Plot.define({\n        toolbar: [\n            p.Instance,\n            function () {\n                return new toolbar_1.Toolbar();\n            }\n        ],\n        toolbar_location: [\n            p.Location,\n            'right'\n        ],\n        toolbar_sticky: [\n            p.Boolean,\n            true\n        ],\n        plot_width: [\n            p.Number,\n            600\n        ],\n        plot_height: [\n            p.Number,\n            600\n        ],\n        title: [\n            p.Any,\n            function () {\n                return new title_1.Title({\n                    text: ''    // TODO: p.Either(p.Instance(Title), p.String)\n                });\n            }\n        ],\n        title_location: [\n            p.Location,\n            'above'\n        ],\n        h_symmetry: [\n            p.Bool,\n            true\n        ],\n        v_symmetry: [\n            p.Bool,\n            false\n        ],\n        above: [\n            p.Array,\n            []\n        ],\n        below: [\n            p.Array,\n            []\n        ],\n        left: [\n            p.Array,\n            []\n        ],\n        right: [\n            p.Array,\n            []\n        ],\n        renderers: [\n            p.Array,\n            []\n        ],\n        x_range: [p.Instance],\n        extra_x_ranges: [\n            p.Any,\n            {}\n        ],\n        y_range: [p.Instance],\n        extra_y_ranges: [\n            p.Any,\n            {}\n        ],\n        x_scale: [\n            p.Instance,\n            function () {\n                return new linear_scale_1.LinearScale();\n            }\n        ],\n        y_scale: [\n            p.Instance,\n            function () {\n                return new linear_scale_1.LinearScale();\n            }\n        ],\n        lod_factor: [\n            p.Number,\n            10\n        ],\n        lod_interval: [\n            p.Number,\n            300\n        ],\n        lod_threshold: [\n            p.Number,\n            2000\n        ],\n        lod_timeout: [\n            p.Number,\n            500\n        ],\n        hidpi: [\n            p.Bool,\n            true\n        ],\n        output_backend: [\n            p.OutputBackend,\n            'canvas'\n        ],\n        min_border: [\n            p.Number,\n            5\n        ],\n        min_border_top: [\n            p.Number,\n            null\n        ],\n        min_border_left: [\n            p.Number,\n            null\n        ],\n        min_border_bottom: [\n            p.Number,\n            null\n        ],\n        min_border_right: [\n            p.Number,\n            null\n        ],\n        inner_width: [p.Number],\n        inner_height: [p.Number],\n        layout_width: [p.Number],\n        layout_height: [p.Number],\n        match_aspect: [\n            p.Bool,\n            false\n        ],\n        aspect_scale: [\n            p.Number,\n            1\n        ]\n    });\n    Plot.override({\n        outline_line_color: '#e5e5e5',\n        border_fill_color: '#ffffff',\n        background_fill_color: '#ffffff'\n    });\n    Plot.getters({\n        all_renderers: function () {\n            var i, len, ref, renderers, tool;\n            renderers = this.renderers;\n            ref = this.toolbar.tools;\n            for (i = 0, len = ref.length; i < len; i++) {\n                tool = ref[i];\n                renderers = renderers.concat(tool.synthetic_renderers);\n            }\n            return renderers;\n        },\n        webgl: function () {\n            log.warning('webgl attr is deprecated, use output_backend');\n            return this.output_backend === 'webgl';\n        },\n        tool_events: function () {\n            log.warning('tool_events attr is deprecated, use SelectionGeometry Event');\n            return null;\n        }\n    });\n    bokeh_events_1.register_with_event(bokeh_events_1.UIEvent, Plot);    \n}","/*models/plots/plot_canvas*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var AbovePanel, BelowPanel, LeftPanel, RightPanel, global_glcanvas, indexOf = [].indexOf;\n    var canvas_1 = require(79    /* ../canvas/canvas */);\n    var cartesian_frame_1 = require(80    /* ../canvas/cartesian_frame */);\n    var data_range1d_1 = require(156    /* ../ranges/data_range1d */);\n    var glyph_renderer_1 = require(161    /* ../renderers/glyph_renderer */);\n    var layout_dom_1 = require(139    /* ../layouts/layout_dom */);\n    var signaling_1 = require(20    /* core/signaling */);\n    var build_views_1 = require(4    /* core/build_views */);\n    var ui_events_1 = require(21    /* core/ui_events */);\n    var visuals_1 = require(46    /* core/visuals */);\n    var dom_view_1 = require(6    /* core/dom_view */);\n    var layout_canvas_1 = require(11    /* core/layout/layout_canvas */);\n    var alignments_1 = require(10    /* core/layout/alignments */);\n    var solver_1 = require(13    /* core/layout/solver */);\n    var logging_1 = require(14    /* core/logging */);\n    var enums = require(7    /* core/enums */);\n    var p = require(15    /* core/properties */);\n    var throttle_1 = require(41    /* core/util/throttle */);\n    var types_1 = require(42    /* core/util/types */);\n    var array_1 = require(22    /* core/util/array */);\n    var object_1 = require(30    /* core/util/object */);\n    var side_panel_1 = require(12    /* core/layout/side_panel */);\n    // Notes on WebGL support:\n    // Glyps can be rendered into the original 2D canvas, or in a (hidden)\n    // webgl canvas that we create below. In this way, the rest of bokehjs\n    // can keep working as it is, and we can incrementally update glyphs to\n    // make them use GL.\n    // When the author or user wants to, we try to create a webgl canvas,\n    // which is saved on the ctx object that gets passed around during drawing.\n    // The presence (and not-being-false) of the ctx.glcanvas attribute is the\n    // marker that we use throughout that determines whether we have gl support.\n    global_glcanvas = null;\n    var PlotCanvasView = function (_super) {\n        tslib_1.__extends(PlotCanvasView, _super);\n        function PlotCanvasView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PlotCanvasView.prototype.view_options = function () {\n            return object_1.extend({\n                plot_view: this,\n                parent: this\n            }, this.options);\n        };\n        PlotCanvasView.prototype.pause = function () {\n            if (this._is_paused == null) {\n                return this._is_paused = 1;\n            } else {\n                return this._is_paused += 1;\n            }\n        };\n        PlotCanvasView.prototype.unpause = function (no_render) {\n            if (no_render === void 0) {\n                no_render = false;\n            }\n            this._is_paused -= 1;\n            if (this._is_paused === 0 && !no_render) {\n                return this.request_render();\n            }\n        };\n        PlotCanvasView.prototype.request_render = function () {\n            return this.request_paint();\n        };\n        PlotCanvasView.prototype.request_paint = function () {\n            if (!this.is_paused) {\n                this.throttled_paint();\n            }\n        };\n        PlotCanvasView.prototype.remove = function () {\n            build_views_1.remove_views(this.renderer_views);\n            build_views_1.remove_views(this.tool_views);\n            this.canvas_view.remove();\n            this.canvas_view = null;\n            return _super.prototype.remove.call(this);\n        };\n        PlotCanvasView.prototype.initialize = function (options) {\n            var _this = this;\n            var j, len, level, ref;\n            this.pause();\n            _super.prototype.initialize.call(this, options);\n            this.force_paint = new signaling_1.Signal(this, 'force_paint');\n            this.state_changed = new signaling_1.Signal(this, 'state_changed');\n            this.lod_started = false;\n            this.visuals = new visuals_1.Visuals(this.model.plot);\n            this._initial_state_info = {\n                range: null,\n                selection: {},\n                dimensions: {\n                    width: this.model.canvas._width.value,\n                    height: this.model.canvas._height.value\n                }\n            };\n            // compat, to be removed\n            this.frame = this.model.frame;\n            this.canvas = this.model.canvas;\n            this.canvas_view = new this.canvas.default_view({\n                model: this.canvas,\n                parent: this\n            });\n            this.el.appendChild(this.canvas_view.el);\n            this.canvas_view.render();\n            // If requested, try enabling webgl\n            if (this.model.plot.output_backend === 'webgl') {\n                this.init_webgl();\n            }\n            this.throttled_paint = throttle_1.throttle(function () {\n                return _this.force_paint.emit();\n            }, 15);\n            // TODO (bev) configurable\n            this.ui_event_bus = new ui_events_1.UIEvents(this, this.model.toolbar, this.canvas_view.el, this.model.plot);\n            this.levels = {};\n            ref = enums.RenderLevel;\n            for (j = 0, len = ref.length; j < len; j++) {\n                level = ref[j];\n                this.levels[level] = {};\n            }\n            this.renderer_views = {};\n            this.tool_views = {};\n            this.build_levels();\n            this.build_tools();\n            this.update_dataranges();\n            this.unpause(true);\n            logging_1.logger.debug('PlotView initialized');\n            return this;\n        };\n        PlotCanvasView.prototype.set_cursor = function (cursor) {\n            if (cursor === void 0) {\n                cursor = 'default';\n            }\n            return this.canvas_view.el.style.cursor = cursor;\n        };\n        PlotCanvasView.prototype.init_webgl = function () {\n            var ctx, glcanvas, opts;\n            ctx = this.canvas_view.ctx;\n            // We use a global invisible canvas and gl context. By having a global context,\n            // we avoid the limitation of max 16 contexts that most browsers have.\n            glcanvas = global_glcanvas;\n            if (glcanvas == null) {\n                global_glcanvas = glcanvas = document.createElement('canvas');\n                opts = {\n                    'premultipliedAlpha': true    // premultipliedAlpha is true by default\n                };\n                glcanvas.gl = glcanvas.getContext('webgl', opts) || glcanvas.getContext('experimental-webgl', opts);\n            }\n            // If WebGL is available, we store a reference to the gl canvas on\n            // the ctx object, because that's what gets passed everywhere.\n            if (glcanvas.gl != null) {\n                return ctx.glcanvas = glcanvas;\n            } else {\n                return logging_1.logger.warn('WebGL is not supported, falling back to 2D canvas.');\n            }\n        };\n        PlotCanvasView.prototype.prepare_webgl = function (ratio, frame_box) {\n            var canvas, ctx, gl;\n            // Prepare WebGL for a drawing pass\n            ctx = this.canvas_view.ctx;\n            canvas = this.canvas_view.get_canvas_element();\n            if (ctx.glcanvas) {\n                // Sync canvas size\n                ctx.glcanvas.width = canvas.width;\n                ctx.glcanvas.height = canvas.height;\n                // Prepare GL for drawing\n                gl = ctx.glcanvas.gl;\n                gl.viewport(0, 0, ctx.glcanvas.width, ctx.glcanvas.height);\n                gl.clearColor(0, 0, 0, 0);\n                gl.clear(gl.COLOR_BUFFER_BIT || gl.DEPTH_BUFFER_BIT);\n                // Clipping\n                gl.enable(gl.SCISSOR_TEST);\n                gl.scissor(ratio * frame_box[0], ratio * frame_box[1], ratio * frame_box[2], ratio * frame_box[3]);\n                // Setup blending\n                gl.enable(gl.BLEND);\n                return gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE_MINUS_DST_ALPHA, gl.ONE);    // premultipliedAlpha == true\n            }\n        };\n        //gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.DST_ALPHA, gl.ONE_MINUS_DST_ALPHA, gl.ONE)  # Without premultipliedAlpha == false\n        PlotCanvasView.prototype.blit_webgl = function (ratio) {\n            var ctx;\n            // This should be called when the ctx has no state except the HIDPI transform\n            ctx = this.canvas_view.ctx;\n            if (ctx.glcanvas) {\n                // Blit gl canvas into the 2D canvas. To do 1-on-1 blitting, we need\n                // to remove the hidpi transform, then blit, then restore.\n                // ctx.globalCompositeOperation = \"source-over\"  -> OK; is the default\n                logging_1.logger.debug('drawing with WebGL');\n                ctx.restore();\n                ctx.drawImage(ctx.glcanvas, 0, 0);\n                // Set back hidpi transform\n                ctx.save();\n                ctx.scale(ratio, ratio);\n                return ctx.translate(0.5, 0.5);\n            }\n        };\n        PlotCanvasView.prototype.update_dataranges = function () {\n            var bds, bounds, bounds_to_use, calculate_log_bounds, follow_enabled, frame, has_bounds, height, j, k, l, len, len1, len2, len3, len4, log_bds, log_bounds, m, n, o, r, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, v, width, xcenter, xr, ycenter, yr;\n            // Update any DataRange1ds here\n            frame = this.model.frame;\n            bounds = {};\n            log_bounds = {};\n            calculate_log_bounds = false;\n            ref = object_1.values(frame.x_ranges).concat(object_1.values(frame.y_ranges));\n            for (j = 0, len = ref.length; j < len; j++) {\n                r = ref[j];\n                if (r instanceof data_range1d_1.DataRange1d) {\n                    if (r.scale_hint === 'log') {\n                        calculate_log_bounds = true;\n                    }\n                }\n            }\n            ref1 = this.renderer_views;\n            for (k in ref1) {\n                v = ref1[k];\n                bds = (ref2 = v.glyph) != null ? typeof ref2.bounds === 'function' ? ref2.bounds() : void 0 : void 0;\n                if (bds != null) {\n                    bounds[k] = bds;\n                }\n                if (calculate_log_bounds) {\n                    log_bds = (ref3 = v.glyph) != null ? typeof ref3.log_bounds === 'function' ? ref3.log_bounds() : void 0 : void 0;\n                    if (log_bds != null) {\n                        log_bounds[k] = log_bds;\n                    }\n                }\n            }\n            follow_enabled = false;\n            has_bounds = false;\n            if (this.model.plot.match_aspect !== false && this.frame._width.value !== 0 && this.frame._height.value !== 0) {\n                r = 1 / this.model.plot.aspect_scale * (this.frame._width.value / this.frame._height.value);\n                for (k in bounds) {\n                    v = bounds[k];\n                    if (isFinite(v.maxX) && isFinite(v.minX) && isFinite(v.maxY) && isFinite(v.minY)) {\n                        width = v.maxX - v.minX;\n                        if (width <= 0) {\n                            width = 1;\n                        }\n                        height = v.maxY - v.minY;\n                        if (height <= 0) {\n                            height = 1;\n                        }\n                        xcenter = 0.5 * (v.maxX + v.minX);\n                        ycenter = 0.5 * (v.maxY + v.minY);\n                        if (width < r * height) {\n                            width = r * height;\n                        } else {\n                            height = width / r;\n                        }\n                        bounds[k].maxX = xcenter + 0.5 * width;\n                        bounds[k].minX = xcenter - 0.5 * width;\n                        bounds[k].maxY = ycenter + 0.5 * height;\n                        bounds[k].minY = ycenter - 0.5 * height;\n                    }\n                }\n            }\n            ref4 = object_1.values(frame.x_ranges);\n            for (l = 0, len1 = ref4.length; l < len1; l++) {\n                xr = ref4[l];\n                if (xr instanceof data_range1d_1.DataRange1d) {\n                    bounds_to_use = xr.scale_hint === 'log' ? log_bounds : bounds;\n                    xr.update(bounds_to_use, 0, this.model.id);\n                    if (xr.follow) {\n                        follow_enabled = true;\n                    }\n                }\n                if (xr.bounds != null) {\n                    has_bounds = true;\n                }\n            }\n            ref5 = object_1.values(frame.y_ranges);\n            for (m = 0, len2 = ref5.length; m < len2; m++) {\n                yr = ref5[m];\n                if (yr instanceof data_range1d_1.DataRange1d) {\n                    bounds_to_use = yr.scale_hint === 'log' ? log_bounds : bounds;\n                    yr.update(bounds_to_use, 1, this.model.id);\n                    if (yr.follow) {\n                        follow_enabled = true;\n                    }\n                }\n                if (yr.bounds != null) {\n                    has_bounds = true;\n                }\n            }\n            if (follow_enabled && has_bounds) {\n                logging_1.logger.warn('Follow enabled so bounds are unset.');\n                ref6 = object_1.values(frame.x_ranges);\n                for (n = 0, len3 = ref6.length; n < len3; n++) {\n                    xr = ref6[n];\n                    xr.bounds = null;\n                }\n                ref7 = object_1.values(frame.y_ranges);\n                for (o = 0, len4 = ref7.length; o < len4; o++) {\n                    yr = ref7[o];\n                    yr.bounds = null;\n                }\n            }\n            return this.range_update_timestamp = Date.now();\n        };\n        PlotCanvasView.prototype.map_to_screen = function (x, y, x_name, y_name) {\n            if (x_name === void 0) {\n                x_name = 'default';\n            }\n            if (y_name === void 0) {\n                y_name = 'default';\n            }\n            return this.frame.map_to_screen(x, y, x_name, y_name);\n        };\n        PlotCanvasView.prototype.push_state = function (type, info) {\n            var prev_info, ref;\n            prev_info = ((ref = this.state.history[this.state.index]) != null ? ref.info : void 0) || {};\n            info = object_1.extend({}, this._initial_state_info, prev_info, info);\n            this.state.history.slice(0, this.state.index + 1);\n            this.state.history.push({\n                type: type,\n                info: info\n            });\n            this.state.index = this.state.history.length - 1;\n            return this.state_changed.emit();\n        };\n        PlotCanvasView.prototype.clear_state = function () {\n            this.state = {\n                history: [],\n                index: -1\n            };\n            return this.state_changed.emit();\n        };\n        PlotCanvasView.prototype.can_undo = function () {\n            return this.state.index >= 0;\n        };\n        PlotCanvasView.prototype.can_redo = function () {\n            return this.state.index < this.state.history.length - 1;\n        };\n        PlotCanvasView.prototype.undo = function () {\n            if (this.can_undo()) {\n                this.state.index -= 1;\n                this._do_state_change(this.state.index);\n                return this.state_changed.emit();\n            }\n        };\n        PlotCanvasView.prototype.redo = function () {\n            if (this.can_redo()) {\n                this.state.index += 1;\n                this._do_state_change(this.state.index);\n                return this.state_changed.emit();\n            }\n        };\n        PlotCanvasView.prototype._do_state_change = function (index) {\n            var info, ref;\n            info = ((ref = this.state.history[index]) != null ? ref.info : void 0) || this._initial_state_info;\n            if (info.range != null) {\n                this.update_range(info.range);\n            }\n            if (info.selection != null) {\n                return this.update_selection(info.selection);\n            }\n        };\n        PlotCanvasView.prototype.get_selection = function () {\n            var j, len, ref, renderer, selected, selection;\n            selection = [];\n            ref = this.model.plot.renderers;\n            for (j = 0, len = ref.length; j < len; j++) {\n                renderer = ref[j];\n                if (renderer instanceof glyph_renderer_1.GlyphRenderer) {\n                    selected = renderer.data_source.selected;\n                    selection[renderer.id] = selected;\n                }\n            }\n            return selection;\n        };\n        PlotCanvasView.prototype.update_selection = function (selection) {\n            var ds, j, len, ref, ref1, renderer, results;\n            ref = this.model.plot.renderers;\n            results = [];\n            for (j = 0, len = ref.length; j < len; j++) {\n                renderer = ref[j];\n                if (!(renderer instanceof glyph_renderer_1.GlyphRenderer)) {\n                    continue;\n                }\n                ds = renderer.data_source;\n                if (selection != null) {\n                    if (ref1 = renderer.id, indexOf.call(selection, ref1) >= 0) {\n                        results.push(ds.selected = selection[renderer.id]);\n                    } else {\n                        results.push(void 0);\n                    }\n                } else {\n                    results.push(ds.selection_manager.clear());\n                }\n            }\n            return results;\n        };\n        PlotCanvasView.prototype.reset_selection = function () {\n            return this.update_selection(null);\n        };\n        PlotCanvasView.prototype._update_ranges_together = function (range_info_iter) {\n            var j, l, len, len1, range_info, results, rng, weight;\n            // Get weight needed to scale the diff of the range to honor interval limits\n            weight = 1;\n            for (j = 0, len = range_info_iter.length; j < len; j++) {\n                _a = range_info_iter[j], rng = _a[0], range_info = _a[1];\n                weight = Math.min(weight, this._get_weight_to_constrain_interval(rng, range_info));\n            }\n            // Apply shared weight to all ranges\n            if (weight < 1) {\n                results = [];\n                for (l = 0, len1 = range_info_iter.length; l < len1; l++) {\n                    _b = range_info_iter[l], rng = _b[0], range_info = _b[1];\n                    range_info['start'] = weight * range_info['start'] + (1 - weight) * rng.start;\n                    results.push(range_info['end'] = weight * range_info['end'] + (1 - weight) * rng.end);\n                }\n                return results;\n            }\n            var _a, _b;\n        };\n        PlotCanvasView.prototype._update_ranges_individually = function (range_info_iter, is_panning, is_scrolling) {\n            var hit_bound, is_reversed, j, l, len, len1, max, min, new_interval, range_info, results, rng, weight;\n            hit_bound = false;\n            for (j = 0, len = range_info_iter.length; j < len; j++) {\n                _a = range_info_iter[j], rng = _a[0], range_info = _a[1];\n                // Is this a reversed range?\n                is_reversed = rng.start > rng.end;\n                // Limit range interval first. Note that for scroll events,\n                // the interval has already been limited for all ranges simultaneously\n                if (!is_scrolling) {\n                    weight = this._get_weight_to_constrain_interval(rng, range_info);\n                    if (weight < 1) {\n                        range_info['start'] = weight * range_info['start'] + (1 - weight) * rng.start;\n                        range_info['end'] = weight * range_info['end'] + (1 - weight) * rng.end;\n                    }\n                }\n                // Prevent range from going outside limits\n                // Also ensure that range keeps the same delta when panning/scrolling\n                if (rng.bounds != null) {\n                    min = rng.bounds[0];\n                    max = rng.bounds[1];\n                    new_interval = Math.abs(range_info['end'] - range_info['start']);\n                    if (is_reversed) {\n                        if (min != null) {\n                            if (min >= range_info['end']) {\n                                hit_bound = true;\n                                range_info['end'] = min;\n                                if (is_panning != null || is_scrolling != null) {\n                                    range_info['start'] = min + new_interval;\n                                }\n                            }\n                        }\n                        if (max != null) {\n                            if (max <= range_info['start']) {\n                                hit_bound = true;\n                                range_info['start'] = max;\n                                if (is_panning != null || is_scrolling != null) {\n                                    range_info['end'] = max - new_interval;\n                                }\n                            }\n                        }\n                    } else {\n                        if (min != null) {\n                            if (min >= range_info['start']) {\n                                hit_bound = true;\n                                range_info['start'] = min;\n                                if (is_panning != null || is_scrolling != null) {\n                                    range_info['end'] = min + new_interval;\n                                }\n                            }\n                        }\n                        if (max != null) {\n                            if (max <= range_info['end']) {\n                                hit_bound = true;\n                                range_info['end'] = max;\n                                if (is_panning != null || is_scrolling != null) {\n                                    range_info['start'] = max - new_interval;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // Cancel the event when hitting a bound while scrolling. This ensures that\n            // the scroll-zoom tool maintains its focus position. Disabling the next\n            // two lines would result in a more \"gliding\" behavior, allowing one to\n            // zoom out more smoothly, at the cost of losing the focus position.\n            if (is_scrolling && hit_bound) {\n                return;\n            }\n            results = [];\n            for (l = 0, len1 = range_info_iter.length; l < len1; l++) {\n                _b = range_info_iter[l], rng = _b[0], range_info = _b[1];\n                rng.have_updated_interactively = true;\n                if (rng.start !== range_info['start'] || rng.end !== range_info['end']) {\n                    results.push(rng.setv(range_info));\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n            var _a, _b;\n        };\n        PlotCanvasView.prototype._get_weight_to_constrain_interval = function (rng, range_info) {\n            var max, max_interval, max_interval2, min, min_interval, new_interval, old_interval, weight;\n            // Get the weight by which a range-update can be applied\n            // to still honor the interval limits (including the implicit\n            // max interval imposed by the bounds)\n            min_interval = rng.min_interval;\n            max_interval = rng.max_interval;\n            weight = 1;\n            // Express bounds as a max_interval. By doing this, the application of\n            // bounds and interval limits can be applied independent from each-other.\n            if (rng.bounds != null) {\n                _a = rng.bounds, min = _a[0], max = _a[1];\n                if (min != null && max != null) {\n                    max_interval2 = Math.abs(max - min);\n                    max_interval = max_interval != null ? Math.min(max_interval, max_interval2) : max_interval2;\n                }\n            }\n            if (min_interval != null || max_interval != null) {\n                old_interval = Math.abs(rng.end - rng.start);\n                new_interval = Math.abs(range_info['end'] - range_info['start']);\n                if (min_interval > 0 && new_interval < min_interval) {\n                    weight = (old_interval - min_interval) / (old_interval - new_interval);\n                }\n                if (max_interval > 0 && new_interval > max_interval) {\n                    weight = (max_interval - old_interval) / (new_interval - old_interval);\n                }\n                weight = Math.max(0, Math.min(1, weight));\n            }\n            return weight;\n            var _a;\n        };\n        PlotCanvasView.prototype.update_range = function (range_info, is_panning, is_scrolling) {\n            var name, range_info_iter, ref, ref1, ref2, ref3, rng;\n            this.pause();\n            if (range_info == null) {\n                ref = this.frame.x_ranges;\n                for (name in ref) {\n                    rng = ref[name];\n                    rng.reset();\n                }\n                ref1 = this.frame.y_ranges;\n                for (name in ref1) {\n                    rng = ref1[name];\n                    rng.reset();\n                }\n                this.update_dataranges();\n            } else {\n                range_info_iter = [];\n                ref2 = this.frame.x_ranges;\n                for (name in ref2) {\n                    rng = ref2[name];\n                    range_info_iter.push([\n                        rng,\n                        range_info.xrs[name]\n                    ]);\n                }\n                ref3 = this.frame.y_ranges;\n                for (name in ref3) {\n                    rng = ref3[name];\n                    range_info_iter.push([\n                        rng,\n                        range_info.yrs[name]\n                    ]);\n                }\n                if (is_scrolling) {\n                    this._update_ranges_together(range_info_iter);    // apply interval bounds while keeping aspect\n                }\n                this._update_ranges_individually(range_info_iter, is_panning, is_scrolling);\n            }\n            return this.unpause();\n        };\n        PlotCanvasView.prototype.reset_range = function () {\n            return this.update_range(null);\n        };\n        PlotCanvasView.prototype.build_levels = function () {\n            var id_, j, l, len, len1, model, new_renderer_views, old_renderers, renderer_models, renderers_to_remove, view;\n            renderer_models = this.model.plot.all_renderers;\n            // should only bind events on NEW views\n            old_renderers = Object.keys(this.renderer_views);\n            new_renderer_views = build_views_1.build_views(this.renderer_views, renderer_models, this.view_options());\n            renderers_to_remove = array_1.difference(old_renderers, function () {\n                var j, len, results;\n                results = [];\n                for (j = 0, len = renderer_models.length; j < len; j++) {\n                    model = renderer_models[j];\n                    results.push(model.id);\n                }\n                return results;\n            }());\n            for (j = 0, len = renderers_to_remove.length; j < len; j++) {\n                id_ = renderers_to_remove[j];\n                delete this.levels.glyph[id_];\n            }\n            for (l = 0, len1 = new_renderer_views.length; l < len1; l++) {\n                view = new_renderer_views[l];\n                this.levels[view.model.level][view.model.id] = view;\n            }\n            return this;\n        };\n        PlotCanvasView.prototype.get_renderer_views = function () {\n            var j, len, r, ref, results;\n            ref = this.model.plot.renderers;\n            results = [];\n            for (j = 0, len = ref.length; j < len; j++) {\n                r = ref[j];\n                results.push(this.levels[r.level][r.id]);\n            }\n            return results;\n        };\n        PlotCanvasView.prototype.build_tools = function () {\n            var j, len, new_tool_views, results, tool_models, tool_view;\n            tool_models = this.model.plot.toolbar.tools;\n            new_tool_views = build_views_1.build_views(this.tool_views, tool_models, this.view_options());\n            results = [];\n            for (j = 0, len = new_tool_views.length; j < len; j++) {\n                tool_view = new_tool_views[j];\n                results.push(this.ui_event_bus.register_tool(tool_view));\n            }\n            return results;\n        };\n        PlotCanvasView.prototype.connect_signals = function () {\n            var _this = this;\n            var name, ref, ref1, rng;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.force_paint, function () {\n                return _this.repaint();\n            });\n            ref = this.model.frame.x_ranges;\n            for (name in ref) {\n                rng = ref[name];\n                this.connect(rng.change, function () {\n                    return this.request_render();\n                });\n            }\n            ref1 = this.model.frame.y_ranges;\n            for (name in ref1) {\n                rng = ref1[name];\n                this.connect(rng.change, function () {\n                    return this.request_render();\n                });\n            }\n            this.connect(this.model.plot.properties.renderers.change, function () {\n                return _this.build_levels();\n            });\n            this.connect(this.model.plot.toolbar.properties.tools.change, function () {\n                _this.build_levels();\n                return _this.build_tools();\n            });\n            return this.connect(this.model.plot.change, function () {\n                return this.request_render();\n            });\n        };\n        PlotCanvasView.prototype.set_initial_range = function () {\n            var good_vals, name, ref, ref1, rng, xrs, yrs;\n            // check for good values for ranges before setting initial range\n            good_vals = true;\n            xrs = {};\n            ref = this.frame.x_ranges;\n            for (name in ref) {\n                rng = ref[name];\n                if (rng.start == null || rng.end == null || types_1.isStrictNaN(rng.start + rng.end)) {\n                    good_vals = false;\n                    break;\n                }\n                xrs[name] = {\n                    start: rng.start,\n                    end: rng.end\n                };\n            }\n            if (good_vals) {\n                yrs = {};\n                ref1 = this.frame.y_ranges;\n                for (name in ref1) {\n                    rng = ref1[name];\n                    if (rng.start == null || rng.end == null || types_1.isStrictNaN(rng.start + rng.end)) {\n                        good_vals = false;\n                        break;\n                    }\n                    yrs[name] = {\n                        start: rng.start,\n                        end: rng.end\n                    };\n                }\n            }\n            if (good_vals) {\n                this._initial_state_info.range = this.initial_range_info = {\n                    xrs: xrs,\n                    yrs: yrs\n                };\n                return logging_1.logger.debug('initial ranges set');\n            } else {\n                return logging_1.logger.warn('could not set initial ranges');\n            }\n        };\n        PlotCanvasView.prototype.update_constraints = function () {\n            var _, ref, view;\n            this.solver.suggest_value(this.frame._width, this.canvas._width.value);\n            this.solver.suggest_value(this.frame._height, this.canvas._height.value);\n            ref = this.renderer_views;\n            for (_ in ref) {\n                view = ref[_];\n                if (view.model.panel != null) {\n                    side_panel_1.update_panel_constraints(view);\n                }\n            }\n            return this.solver.update_variables();\n        };\n        // XXX: bacause PlotCanvas is NOT a LayoutDOM\n        PlotCanvasView.prototype._layout = function (final) {\n            if (final === void 0) {\n                final = false;\n            }\n            this.render();\n            if (final) {\n                this.model.plot.setv({\n                    inner_width: Math.round(this.frame._width.value),\n                    inner_height: Math.round(this.frame._height.value),\n                    layout_width: Math.round(this.canvas._width.value),\n                    layout_height: Math.round(this.canvas._height.value)\n                }, { no_change: true });\n                // XXX: can't be @request_paint(), because it would trigger back-and-forth\n                // layout recomputing feedback loop between plots. Plots are also much more\n                // responsive this way, especially in interactive mode.\n                return this.paint();\n            }\n        };\n        PlotCanvasView.prototype.has_finished = function () {\n            var _, ref, renderer_views, view;\n            if (!_super.prototype.has_finished.call(this)) {\n                return false;\n            }\n            ref = this.levels;\n            for (_ in ref) {\n                renderer_views = ref[_];\n                for (_ in renderer_views) {\n                    view = renderer_views[_];\n                    if (!view.has_finished()) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        };\n        PlotCanvasView.prototype.render = function () {\n            var height, width;\n            // Set the plot and canvas to the current model's size\n            // This gets called upon solver resize events\n            width = this.model._width.value;\n            height = this.model._height.value;\n            this.canvas_view.set_dims([\n                width,\n                height\n            ]);\n            this.update_constraints();\n            if (this.model.plot.match_aspect !== false && this.frame._width.value !== 0 && this.frame._height.value !== 0) {\n                this.update_dataranges();\n            }\n            // This allows the plot canvas to be positioned around the toolbar\n            this.el.style.position = 'absolute';\n            this.el.style.left = this.model._dom_left.value + 'px';\n            this.el.style.top = this.model._dom_top.value + 'px';\n            this.el.style.width = this.model._width.value + 'px';\n            return this.el.style.height = this.model._height.value + 'px';\n        };\n        PlotCanvasView.prototype._needs_layout = function () {\n            var _, ref, view;\n            ref = this.renderer_views;\n            for (_ in ref) {\n                view = ref[_];\n                if (view.model.panel != null) {\n                    if (side_panel_1._view_sizes.get(view) !== view.get_size()) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        PlotCanvasView.prototype.repaint = function () {\n            if (this._needs_layout()) {\n                return this.parent.partial_layout();\n            } else {\n                return this.paint();\n            }\n        };\n        PlotCanvasView.prototype.paint = function () {\n            var _this = this;\n            var ctx, frame_box, h, interactive_duration, k, lod_timeout, ratio, ref, v, w, x0, y0;\n            if (this.is_paused) {\n                return;\n            }\n            logging_1.logger.trace('PlotCanvas.render() for ' + this.model.id);\n            // Prepare the canvas size, taking HIDPI into account. Note that this may cause a resize\n            // of the canvas, which means that any previous calls to ctx.save() will be undone.\n            this.canvas_view.prepare_canvas();\n            if (this.model.document != null) {\n                interactive_duration = this.model.document.interactive_duration();\n                if (interactive_duration >= 0 && interactive_duration < this.model.plot.lod_interval) {\n                    lod_timeout = this.model.plot.lod_timeout;\n                    setTimeout(function () {\n                        if (_this.model.document.interactive_duration() > lod_timeout) {\n                            _this.model.document.interactive_stop(_this.model.plot);\n                        }\n                        return _this.request_render();\n                    }, lod_timeout);\n                } else {\n                    this.model.document.interactive_stop(this.model.plot);\n                }\n            }\n            ref = this.renderer_views;\n            for (k in ref) {\n                v = ref[k];\n                if (this.range_update_timestamp == null || v.set_data_timestamp > this.range_update_timestamp) {\n                    this.update_dataranges();\n                    break;\n                }\n            }\n            // TODO (bev) OK this sucks, but the event from the solver update doesn't\n            // reach the frame in time (sometimes) so force an update here for now\n            // (mp) not only that, but models don't know about solver anymore, so\n            // frame can't update its scales.\n            this.model.frame._update_scales();\n            ctx = this.canvas_view.ctx;\n            ctx.pixel_ratio = ratio = this.canvas.pixel_ratio;\n            // Also store on cts for WebGL\n            // Set hidpi-transform\n            ctx.save();\n            // Save default state, do *after* getting ratio, cause setting canvas.width resets transforms\n            ctx.scale(ratio, ratio);\n            ctx.translate(0.5, 0.5);\n            frame_box = [\n                this.frame._left.value,\n                this.frame._top.value,\n                this.frame._width.value,\n                this.frame._height.value\n            ];\n            this._map_hook(ctx, frame_box);\n            this._paint_empty(ctx, frame_box);\n            this.prepare_webgl(ratio, frame_box);\n            ctx.save();\n            if (this.visuals.outline_line.doit) {\n                this.visuals.outline_line.set_value(ctx);\n                x0 = frame_box[0], y0 = frame_box[1], w = frame_box[2], h = frame_box[3];\n                // XXX: shrink outline region by 1px to make right and bottom lines visible\n                // if they are on the edge of the canvas.\n                if (x0 + w === this.canvas._width.value) {\n                    w -= 1;\n                }\n                if (y0 + h === this.canvas._height.value) {\n                    h -= 1;\n                }\n                ctx.strokeRect(x0, y0, w, h);\n            }\n            ctx.restore();\n            this._paint_levels(ctx, [\n                'image',\n                'underlay',\n                'glyph'\n            ], frame_box);\n            this.blit_webgl(ratio);\n            this._paint_levels(ctx, ['annotation'], frame_box);\n            this._paint_levels(ctx, ['overlay']);\n            if (this.initial_range_info == null) {\n                this.set_initial_range();\n            }\n            ctx.restore();\n            // Restore to default state\n            if (!this._has_finished) {\n                this._has_finished = true;\n                return this.notify_finished();\n            }\n        };\n        PlotCanvasView.prototype._paint_levels = function (ctx, levels, clip_region) {\n            var i, indices, j, l, len, len1, len2, level, m, ref, renderer, renderer_view, renderer_views, sortKey;\n            ctx.save();\n            if (clip_region != null && this.model.plot.output_backend === 'canvas') {\n                ctx.beginPath();\n                ctx.rect.apply(ctx, clip_region);\n                ctx.clip();\n            }\n            indices = {};\n            ref = this.model.plot.renderers;\n            for (i = j = 0, len = ref.length; j < len; i = ++j) {\n                renderer = ref[i];\n                indices[renderer.id] = i;\n            }\n            sortKey = function (renderer_view) {\n                return indices[renderer_view.model.id];\n            };\n            for (l = 0, len1 = levels.length; l < len1; l++) {\n                level = levels[l];\n                renderer_views = array_1.sortBy(object_1.values(this.levels[level]), sortKey);\n                for (m = 0, len2 = renderer_views.length; m < len2; m++) {\n                    renderer_view = renderer_views[m];\n                    renderer_view.render();\n                }\n            }\n            return ctx.restore();\n        };\n        PlotCanvasView.prototype._map_hook = function (ctx, frame_box) {\n        };\n        PlotCanvasView.prototype._paint_empty = function (ctx, frame_box) {\n            ctx.clearRect(0, 0, this.canvas_view.model._width.value, this.canvas_view.model._height.value);\n            if (this.visuals.border_fill.doit) {\n                this.visuals.border_fill.set_value(ctx);\n                ctx.fillRect(0, 0, this.canvas_view.model._width.value, this.canvas_view.model._height.value);\n                ctx.clearRect.apply(ctx, frame_box);\n            }\n            if (this.visuals.background_fill.doit) {\n                this.visuals.background_fill.set_value(ctx);\n                return ctx.fillRect.apply(ctx, frame_box);\n            }\n        };\n        PlotCanvasView.prototype.save = function (name) {\n            var blob, canvas, downloadLink, link, ref, svg, svgblob;\n            if ((ref = this.model.plot.output_backend) === 'canvas' || ref === 'webgl') {\n                canvas = this.canvas_view.get_canvas_element();\n                if (canvas.msToBlob != null) {\n                    blob = canvas.msToBlob();\n                    return window.navigator.msSaveBlob(blob, name);\n                } else {\n                    link = document.createElement('a');\n                    link.href = canvas.toDataURL('image/png');\n                    link.download = name + '.png';\n                    link.target = '_blank';\n                    return link.dispatchEvent(new MouseEvent('click'));\n                }\n            } else if (this.model.plot.output_backend === 'svg') {\n                svg = this.canvas_view.ctx.getSerializedSvg(true);\n                svgblob = new Blob([svg], { type: 'text/plain' });\n                downloadLink = document.createElement('a');\n                downloadLink.download = name + '.svg';\n                downloadLink.innerHTML = 'Download svg';\n                downloadLink.href = window.URL.createObjectURL(svgblob);\n                downloadLink.onclick = function (event) {\n                    return document.body.removeChild(event.target);\n                };\n                downloadLink.style.display = 'none';\n                document.body.appendChild(downloadLink);\n                return downloadLink.click();\n            }\n        };\n        return PlotCanvasView;\n    }(dom_view_1.DOMView);\n    exports.PlotCanvasView = PlotCanvasView;\n    ;\n    PlotCanvasView.prototype.className = 'bk-plot-wrapper';\n    PlotCanvasView.prototype.state = {\n        history: [],\n        index: -1\n    };\n    PlotCanvasView.getters({\n        canvas_overlays: function () {\n            return this.canvas_view.overlays_el;\n        },\n        canvas_events: function () {\n            return this.canvas_view.events_el;\n        },\n        is_paused: function () {\n            return this._is_paused != null && this._is_paused !== 0;\n        }\n    });\n    AbovePanel = function () {\n        var AbovePanel = function (_super) {\n            tslib_1.__extends(AbovePanel, _super);\n            function AbovePanel() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return AbovePanel;\n        }(layout_canvas_1.LayoutCanvas);\n        ;\n        AbovePanel.prototype.type = 'AbovePanel';\n        return AbovePanel;\n    }();\n    BelowPanel = function () {\n        var BelowPanel = function (_super) {\n            tslib_1.__extends(BelowPanel, _super);\n            function BelowPanel() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return BelowPanel;\n        }(layout_canvas_1.LayoutCanvas);\n        ;\n        BelowPanel.prototype.type = 'BelowPanel';\n        return BelowPanel;\n    }();\n    LeftPanel = function () {\n        var LeftPanel = function (_super) {\n            tslib_1.__extends(LeftPanel, _super);\n            function LeftPanel() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return LeftPanel;\n        }(layout_canvas_1.LayoutCanvas);\n        ;\n        LeftPanel.prototype.type = 'LeftPanel';\n        return LeftPanel;\n    }();\n    RightPanel = function () {\n        var RightPanel = function (_super) {\n            tslib_1.__extends(RightPanel, _super);\n            function RightPanel() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return RightPanel;\n        }(layout_canvas_1.LayoutCanvas);\n        ;\n        RightPanel.prototype.type = 'RightPanel';\n        return RightPanel;\n    }();\n    var PlotCanvas = function (_super) {\n        tslib_1.__extends(PlotCanvas, _super);\n        function PlotCanvas() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PlotCanvas.prototype.initialize = function (attrs, options) {\n            var ref;\n            _super.prototype.initialize.call(this, attrs, options);\n            this.canvas = new canvas_1.Canvas({\n                map: (ref = this.use_map) != null ? ref : false,\n                use_hidpi: this.plot.hidpi,\n                output_backend: this.plot.output_backend\n            });\n            this.frame = new cartesian_frame_1.CartesianFrame({\n                x_range: this.plot.x_range,\n                extra_x_ranges: this.plot.extra_x_ranges,\n                x_scale: this.plot.x_scale,\n                y_range: this.plot.y_range,\n                extra_y_ranges: this.plot.extra_y_ranges,\n                y_scale: this.plot.y_scale\n            });\n            this.above_panel = new AbovePanel();\n            this.below_panel = new BelowPanel();\n            this.left_panel = new LeftPanel();\n            this.right_panel = new RightPanel();\n            return logging_1.logger.debug('PlotCanvas initialized');\n        };\n        PlotCanvas.prototype._doc_attached = function () {\n            this.canvas.attach_document(this.document);\n            this.frame.attach_document(this.document);\n            this.above_panel.attach_document(this.document);\n            this.below_panel.attach_document(this.document);\n            this.left_panel.attach_document(this.document);\n            this.right_panel.attach_document(this.document);\n            _super.prototype._doc_attached.call(this);\n            return logging_1.logger.debug('PlotCanvas attached to document');\n        };\n        PlotCanvas.prototype.get_layoutable_children = function () {\n            var children, collect_panels;\n            children = [\n                this.above_panel,\n                this.below_panel,\n                this.left_panel,\n                this.right_panel,\n                this.canvas,\n                this.frame\n            ];\n            collect_panels = function (layout_renderers) {\n                var j, len, r, results;\n                results = [];\n                for (j = 0, len = layout_renderers.length; j < len; j++) {\n                    r = layout_renderers[j];\n                    if (r.panel != null) {\n                        results.push(children.push(r.panel));\n                    } else {\n                        results.push(void 0);\n                    }\n                }\n                return results;\n            };\n            collect_panels(this.plot.above);\n            collect_panels(this.plot.below);\n            collect_panels(this.plot.left);\n            collect_panels(this.plot.right);\n            return children;\n        };\n        PlotCanvas.prototype.get_constraints = function () {\n            return _super.prototype.get_constraints.call(this).concat(this._get_constant_constraints(), this._get_side_constraints());\n        };\n        PlotCanvas.prototype._get_constant_constraints = function () {\n            // Set the origin. Everything else is positioned absolutely wrt canvas.\n            return [\n                solver_1.EQ(this.canvas._left, 0),\n                solver_1.EQ(this.canvas._top, 0),\n                solver_1.GE(this.above_panel._top, [\n                    -1,\n                    this.canvas._top\n                ]),\n                solver_1.EQ(this.above_panel._bottom, [\n                    -1,\n                    this.frame._top\n                ]),\n                solver_1.EQ(this.above_panel._left, [\n                    -1,\n                    this.left_panel._right\n                ]),\n                solver_1.EQ(this.above_panel._right, [\n                    -1,\n                    this.right_panel._left\n                ]),\n                solver_1.EQ(this.below_panel._top, [\n                    -1,\n                    this.frame._bottom\n                ]),\n                solver_1.LE(this.below_panel._bottom, [\n                    -1,\n                    this.canvas._bottom\n                ]),\n                solver_1.EQ(this.below_panel._left, [\n                    -1,\n                    this.left_panel._right\n                ]),\n                solver_1.EQ(this.below_panel._right, [\n                    -1,\n                    this.right_panel._left\n                ]),\n                solver_1.EQ(this.left_panel._top, [\n                    -1,\n                    this.above_panel._bottom\n                ]),\n                solver_1.EQ(this.left_panel._bottom, [\n                    -1,\n                    this.below_panel._top\n                ]),\n                solver_1.GE(this.left_panel._left, [\n                    -1,\n                    this.canvas._left\n                ]),\n                solver_1.EQ(this.left_panel._right, [\n                    -1,\n                    this.frame._left\n                ]),\n                solver_1.EQ(this.right_panel._top, [\n                    -1,\n                    this.above_panel._bottom\n                ]),\n                solver_1.EQ(this.right_panel._bottom, [\n                    -1,\n                    this.below_panel._top\n                ]),\n                solver_1.EQ(this.right_panel._left, [\n                    -1,\n                    this.frame._right\n                ]),\n                solver_1.LE(this.right_panel._right, [\n                    -1,\n                    this.canvas._right\n                ]),\n                solver_1.EQ(this._top, [\n                    -1,\n                    this.above_panel._bottom\n                ]),\n                solver_1.EQ(this._left, [\n                    -1,\n                    this.left_panel._right\n                ]),\n                solver_1.EQ(this._height, [\n                    -1,\n                    this._bottom\n                ], [\n                    -1,\n                    this.canvas._bottom\n                ], this.below_panel._top),\n                solver_1.EQ(this._width, [\n                    -1,\n                    this._right\n                ], [\n                    -1,\n                    this.canvas._right\n                ], this.right_panel._left),\n                solver_1.GE(this._top, -this.plot.min_border_top),\n                solver_1.GE(this._left, -this.plot.min_border_left),\n                solver_1.GE(this._height, [\n                    -1,\n                    this._bottom\n                ], -this.plot.min_border_bottom),\n                solver_1.GE(this._width, [\n                    -1,\n                    this._right\n                ], -this.plot.min_border_right)\n            ];\n        };\n        PlotCanvas.prototype._get_side_constraints = function () {\n            var above, below, left, panels, right;\n            panels = function (objs) {\n                var j, len, obj, results;\n                results = [];\n                for (j = 0, len = objs.length; j < len; j++) {\n                    obj = objs[j];\n                    results.push(obj.panel);\n                }\n                return results;\n            };\n            above = alignments_1.vstack(this.above_panel, panels(this.plot.above));\n            below = alignments_1.vstack(this.below_panel, array_1.reversed(panels(this.plot.below)));\n            left = alignments_1.hstack(this.left_panel, panels(this.plot.left));\n            right = alignments_1.hstack(this.right_panel, array_1.reversed(panels(this.plot.right)));\n            return [].concat(above, below, left, right);\n        };\n        return PlotCanvas;\n    }(layout_dom_1.LayoutDOM);\n    exports.PlotCanvas = PlotCanvas;\n    ;\n    PlotCanvas.prototype.type = 'PlotCanvas';\n    PlotCanvas.prototype.default_view = PlotCanvasView;\n    PlotCanvas.override({\n        // We should find a way to enforce this\n        sizing_mode: 'stretch_both'\n    });\n    PlotCanvas.internal({\n        plot: [p.Instance],\n        toolbar: [p.Instance],\n        canvas: [p.Instance],\n        frame: [p.Instance]\n    });    \n}","/*models/ranges/data_range*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var range_1 = require(159    /* ./range */);\n    var p = require(15    /* core/properties */);\n    var DataRange = function (_super) {\n        tslib_1.__extends(DataRange, _super);\n        function DataRange() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return DataRange;\n    }(range_1.Range);\n    exports.DataRange = DataRange;\n    ;\n    DataRange.prototype.type = 'DataRange';\n    DataRange.define({\n        names: [\n            p.Array,\n            []\n        ],\n        renderers: [\n            p.Array,\n            []\n        ]\n    });    \n}","/*models/ranges/data_range1d*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var data_range_1 = require(155    /* ./data_range */);\n    var glyph_renderer_1 = require(161    /* ../renderers/glyph_renderer */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var bbox = require(23    /* core/util/bbox */);\n    var DataRange1d = function (_super) {\n        tslib_1.__extends(DataRange1d, _super);\n        function DataRange1d() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DataRange1d.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this.plot_bounds = {};\n            this.have_updated_interactively = false;\n            this._initial_start = this.start;\n            this._initial_end = this.end;\n            this._initial_range_padding = this.range_padding;\n            this._initial_range_padding_units = this.range_padding_units;\n            this._initial_follow = this.follow;\n            this._initial_follow_interval = this.follow_interval;\n            return this._initial_default_span = this.default_span;\n        };\n        DataRange1d.prototype.computed_renderers = function () {\n            var all_renderers, i, j, len, len1, names, plot, r, ref, renderers, rs;\n            // TODO (bev) check that renderers actually configured with this range\n            names = this.names;\n            renderers = this.renderers;\n            if (renderers.length === 0) {\n                ref = this.plots;\n                for (i = 0, len = ref.length; i < len; i++) {\n                    plot = ref[i];\n                    all_renderers = plot.renderers;\n                    rs = function () {\n                        var j, len1, results;\n                        results = [];\n                        for (j = 0, len1 = all_renderers.length; j < len1; j++) {\n                            r = all_renderers[j];\n                            if (r instanceof glyph_renderer_1.GlyphRenderer) {\n                                results.push(r);\n                            }\n                        }\n                        return results;\n                    }();\n                    renderers = renderers.concat(rs);\n                }\n            }\n            if (names.length > 0) {\n                renderers = function () {\n                    var j, len1, results;\n                    results = [];\n                    for (j = 0, len1 = renderers.length; j < len1; j++) {\n                        r = renderers[j];\n                        if (names.indexOf(r.name) >= 0) {\n                            results.push(r);\n                        }\n                    }\n                    return results;\n                }();\n            }\n            logging_1.logger.debug('computed ' + renderers.length + ' renderers for DataRange1d ' + this.id);\n            for (j = 0, len1 = renderers.length; j < len1; j++) {\n                r = renderers[j];\n                logging_1.logger.trace(' - ' + r.type + ' ' + r.id);\n            }\n            return renderers;\n        };\n        DataRange1d.prototype._compute_plot_bounds = function (renderers, bounds) {\n            var i, len, r, result;\n            result = bbox.empty();\n            for (i = 0, len = renderers.length; i < len; i++) {\n                r = renderers[i];\n                if (bounds[r.id] != null) {\n                    result = bbox.union(result, bounds[r.id]);\n                }\n            }\n            return result;\n        };\n        DataRange1d.prototype._compute_min_max = function (plot_bounds, dimension) {\n            var k, max, min, overall, v;\n            overall = bbox.empty();\n            for (k in plot_bounds) {\n                v = plot_bounds[k];\n                overall = bbox.union(overall, v);\n            }\n            if (dimension === 0) {\n                _a = [\n                    overall.minX,\n                    overall.maxX\n                ], min = _a[0], max = _a[1];\n            } else {\n                _b = [\n                    overall.minY,\n                    overall.maxY\n                ], min = _b[0], max = _b[1];\n            }\n            return [\n                min,\n                max\n            ];\n            var _a, _b;\n        };\n        DataRange1d.prototype._compute_range = function (min, max) {\n            var center, end, follow_interval, follow_sign, log_max, log_min, range_padding, ref, span, start;\n            range_padding = (ref = this.range_padding) != null ? ref : 0;\n            if (this.scale_hint === 'log') {\n                if (isNaN(min) || !isFinite(min) || min <= 0) {\n                    if (isNaN(max) || !isFinite(max) || max <= 0) {\n                        min = 0.1;\n                    } else {\n                        min = max / 100;\n                    }\n                    logging_1.logger.warn('could not determine minimum data value for log axis, DataRange1d using value ' + min);\n                }\n                if (isNaN(max) || !isFinite(max) || max <= 0) {\n                    if (isNaN(min) || !isFinite(min) || min <= 0) {\n                        max = 10;\n                    } else {\n                        max = min * 100;\n                    }\n                    logging_1.logger.warn('could not determine maximum data value for log axis, DataRange1d using value ' + max);\n                }\n                if (max === min) {\n                    span = this.default_span + 0.001;\n                    center = Math.log(min) / Math.log(10);\n                } else {\n                    if (this.range_padding_units === 'percent') {\n                        log_min = Math.log(min) / Math.log(10);\n                        log_max = Math.log(max) / Math.log(10);\n                        span = (log_max - log_min) * (1 + range_padding);\n                    } else {\n                        log_min = Math.log(min - range_padding) / Math.log(10);\n                        log_max = Math.log(max + range_padding) / Math.log(10);\n                        span = log_max - log_min;\n                    }\n                    center = (log_min + log_max) / 2;\n                }\n                _a = [\n                    Math.pow(10, center - span / 2),\n                    Math.pow(10, center + span / 2)\n                ], start = _a[0], end = _a[1];\n            } else {\n                if (max === min) {\n                    span = this.default_span;\n                } else {\n                    if (this.range_padding_units === 'percent') {\n                        span = (max - min) * (1 + range_padding);\n                    } else {\n                        span = max - min + 2 * range_padding;\n                    }\n                }\n                center = (max + min) / 2;\n                _b = [\n                    center - span / 2,\n                    center + span / 2\n                ], start = _b[0], end = _b[1];\n            }\n            follow_sign = +1;\n            if (this.flipped) {\n                _c = [\n                    end,\n                    start\n                ], start = _c[0], end = _c[1];\n                follow_sign = -1;\n            }\n            follow_interval = this.follow_interval;\n            if (follow_interval != null && Math.abs(start - end) > follow_interval) {\n                if (this.follow === 'start') {\n                    end = start + follow_sign * follow_interval;\n                } else if (this.follow === 'end') {\n                    start = end - follow_sign * follow_interval;\n                }\n            }\n            return [\n                start,\n                end\n            ];\n            var _a, _b, _c;\n        };\n        DataRange1d.prototype.update = function (bounds, dimension, bounds_id) {\n            var _end, _start, end, max, min, new_range, renderers, start;\n            if (this.have_updated_interactively) {\n                return;\n            }\n            renderers = this.computed_renderers();\n            // update the raw data bounds for all renderers we care about\n            this.plot_bounds[bounds_id] = this._compute_plot_bounds(renderers, bounds);\n            // compute the min/mix for our specified dimension\n            _a = this._compute_min_max(this.plot_bounds, dimension), min = _a[0], max = _a[1];\n            // derive start, end from bounds and data range config\n            _b = this._compute_range(min, max), start = _b[0], end = _b[1];\n            if (this._initial_start != null) {\n                if (this.scale_hint === 'log') {\n                    if (this._initial_start > 0) {\n                        start = this._initial_start;\n                    }\n                } else {\n                    start = this._initial_start;\n                }\n            }\n            if (this._initial_end != null) {\n                if (this.scale_hint === 'log') {\n                    if (this._initial_end > 0) {\n                        end = this._initial_end;\n                    }\n                } else {\n                    end = this._initial_end;\n                }\n            }\n            // only trigger updates when there are changes\n            _c = [\n                this.start,\n                this.end\n            ], _start = _c[0], _end = _c[1];\n            if (start !== _start || end !== _end) {\n                new_range = {};\n                if (start !== _start) {\n                    new_range.start = start;\n                }\n                if (end !== _end) {\n                    new_range.end = end;\n                }\n                this.setv(new_range);\n            }\n            if (this.bounds === 'auto') {\n                this.setv({\n                    bounds: [\n                        start,\n                        end\n                    ]\n                }, { silent: true });\n            }\n            return this.change.emit();\n            var _a, _b, _c;\n        };\n        DataRange1d.prototype.reset = function () {\n            this.have_updated_interactively = false;\n            // change events silenced as PlotCanvasView.update_dataranges triggers property callbacks\n            this.setv({\n                range_padding: this._initial_range_padding,\n                range_padding_units: this._initial_range_padding_units,\n                follow: this._initial_follow,\n                follow_interval: this._initial_follow_interval,\n                default_span: this._initial_default_span\n            }, { silent: true });\n            return this.change.emit();\n        };\n        return DataRange1d;\n    }(data_range_1.DataRange);\n    exports.DataRange1d = DataRange1d;\n    ;\n    DataRange1d.prototype.type = 'DataRange1d';\n    DataRange1d.define({\n        start: [p.Number],\n        end: [p.Number],\n        range_padding: [\n            p.Number,\n            0.1\n        ],\n        range_padding_units: [\n            p.PaddingUnits,\n            'percent'\n        ],\n        flipped: [\n            p.Bool,\n            false\n        ],\n        follow: [p.StartEnd],\n        follow_interval: [p.Number],\n        default_span: [\n            p.Number,\n            2\n        ],\n        bounds: [p.Any],\n        min_interval: [p.Any],\n        max_interval: [p.Any]\n    });\n    DataRange1d.internal({\n        scale_hint: [\n            p.String,\n            'auto'\n        ]\n    });\n    DataRange1d.getters({\n        min: function () {\n            return Math.min(this.start, this.end);\n        },\n        max: function () {\n            return Math.max(this.start, this.end);\n        }\n    });    \n}","/*models/ranges/factor_range*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var range_1 = require(159    /* ./range */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var types_1 = require(42    /* core/util/types */);\n    // exported for testing\n    exports.map_one_level = function (factors, padding, offset) {\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var f, i, j, len, mapping;\n        mapping = {};\n        for (i = j = 0, len = factors.length; j < len; i = ++j) {\n            f = factors[i];\n            if (f in mapping) {\n                throw new Error('duplicate factor or subfactor ' + f);\n            }\n            mapping[f] = { value: 0.5 + i * (1 + padding) + offset };\n        }\n        return [\n            mapping,\n            (factors.length - 1) * padding\n        ];\n    };\n    // exported for testing\n    exports.map_two_levels = function (factors, outer_pad, factor_pad, offset) {\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var f0, f1, j, k, len, len1, mapping, n, submap, suboffset, subpad, subtot, tops, tops_order, total_subpad;\n        mapping = {};\n        tops = {};\n        tops_order = [];\n        for (j = 0, len = factors.length; j < len; j++) {\n            _a = factors[j], f0 = _a[0], f1 = _a[1];\n            if (!(f0 in tops)) {\n                tops[f0] = [];\n                tops_order.push(f0);\n            }\n            tops[f0].push(f1);\n        }\n        suboffset = offset;\n        total_subpad = 0;\n        for (k = 0, len1 = tops_order.length; k < len1; k++) {\n            f0 = tops_order[k];\n            n = tops[f0].length;\n            _b = exports.map_one_level(tops[f0], factor_pad, suboffset), submap = _b[0], subpad = _b[1];\n            total_subpad += subpad;\n            subtot = array_1.sum(function () {\n                var l, len2, ref, results;\n                ref = tops[f0];\n                results = [];\n                for (l = 0, len2 = ref.length; l < len2; l++) {\n                    f1 = ref[l];\n                    results.push(submap[f1].value);\n                }\n                return results;\n            }());\n            mapping[f0] = {\n                value: subtot / n,\n                mapping: submap\n            };\n            suboffset += n + outer_pad + subpad;\n        }\n        return [\n            mapping,\n            tops_order,\n            (tops_order.length - 1) * outer_pad + total_subpad\n        ];\n        var _a, _b;\n    };\n    // exported for testing\n    exports.map_three_levels = function (factors, outer_pad, inner_pad, factor_pad, offset) {\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var f0, f1, f2, j, k, l, len, len1, len2, mapping, mids_order, n, submap, submids_order, suboffset, subpad, subtot, tops, tops_order, total_subpad;\n        mapping = {};\n        tops = {};\n        tops_order = [];\n        for (j = 0, len = factors.length; j < len; j++) {\n            _a = factors[j], f0 = _a[0], f1 = _a[1], f2 = _a[2];\n            if (!(f0 in tops)) {\n                tops[f0] = [];\n                tops_order.push(f0);\n            }\n            tops[f0].push([\n                f1,\n                f2\n            ]);\n        }\n        mids_order = [];\n        suboffset = offset;\n        total_subpad = 0;\n        for (k = 0, len1 = tops_order.length; k < len1; k++) {\n            f0 = tops_order[k];\n            n = tops[f0].length;\n            _b = exports.map_two_levels(tops[f0], inner_pad, factor_pad, suboffset), submap = _b[0], submids_order = _b[1], subpad = _b[2];\n            for (l = 0, len2 = submids_order.length; l < len2; l++) {\n                f1 = submids_order[l];\n                mids_order.push([\n                    f0,\n                    f1\n                ]);\n            }\n            total_subpad += subpad;\n            subtot = array_1.sum(function () {\n                var len3, m, ref, results;\n                ref = tops[f0];\n                results = [];\n                for (m = 0, len3 = ref.length; m < len3; m++) {\n                    _a = ref[m], f1 = _a[0], f2 = _a[1];\n                    results.push(submap[f1].value);\n                }\n                return results;\n                var _a;\n            }());\n            mapping[f0] = {\n                value: subtot / n,\n                mapping: submap\n            };\n            suboffset += n + outer_pad + subpad;\n        }\n        return [\n            mapping,\n            tops_order,\n            mids_order,\n            (tops_order.length - 1) * outer_pad + total_subpad\n        ];\n        var _a, _b;\n    };\n    var FactorRange = function (_super) {\n        tslib_1.__extends(FactorRange, _super);\n        function FactorRange() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        FactorRange.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this._init();\n            this.connect(this.properties.factors.change, function () {\n                return this._init();\n            });\n            this.connect(this.properties.factor_padding.change, function () {\n                return this._init();\n            });\n            this.connect(this.properties.group_padding.change, function () {\n                return this._init();\n            });\n            this.connect(this.properties.subgroup_padding.change, function () {\n                return this._init();\n            });\n            this.connect(this.properties.range_padding.change, function () {\n                return this._init();\n            });\n            return this.connect(this.properties.range_padding_units.change, function () {\n                return this._init();\n            });\n        };\n        FactorRange.prototype.reset = function () {\n            this._init();\n            return this.change.emit();\n        };\n        // convert a string factor into a synthetic coordinate\n        FactorRange.prototype.synthetic = function (x) {\n            var offset;\n            if (types_1.isNumber(x)) {\n                return x;\n            }\n            if (types_1.isString(x)) {\n                return this._lookup([x]);\n            }\n            offset = 0;\n            if (types_1.isNumber(x[x.length - 1])) {\n                offset = x[x.length - 1];\n                x = x.slice(0, -1);\n            }\n            return this._lookup(x) + offset;\n        };\n        // convert an array of string factors into synthetic coordinates\n        FactorRange.prototype.v_synthetic = function (xs) {\n            var result, x;\n            return result = function () {\n                var j, len, results;\n                results = [];\n                for (j = 0, len = xs.length; j < len; j++) {\n                    x = xs[j];\n                    results.push(this.synthetic(x));\n                }\n                return results;\n            }.call(this);\n        };\n        FactorRange.prototype._init = function () {\n            var end, half_span, inside_padding, levels, start;\n            if (array_1.all(this.factors, types_1.isString)) {\n                levels = 1;\n                _a = exports.map_one_level(this.factors, this.factor_padding), this._mapping = _a[0], inside_padding = _a[1];\n            } else if (array_1.all(this.factors, function (x) {\n                    return types_1.isArray(x) && x.length === 2 && types_1.isString(x[0]) && types_1.isString(x[1]);\n                })) {\n                levels = 2;\n                _b = exports.map_two_levels(this.factors, this.group_padding, this.factor_padding), this._mapping = _b[0], this.tops = _b[1], inside_padding = _b[2];\n            } else if (array_1.all(this.factors, function (x) {\n                    return types_1.isArray(x) && x.length === 3 && types_1.isString(x[0]) && types_1.isString(x[1]) && types_1.isString(x[2]);\n                })) {\n                levels = 3;\n                _c = exports.map_three_levels(this.factors, this.group_padding, this.subgroup_padding, this.factor_padding), this._mapping = _c[0], this.tops = _c[1], this.mids = _c[2], inside_padding = _c[3];\n            } else {\n                throw new Error('');\n            }\n            start = 0;\n            end = this.factors.length + inside_padding;\n            if (this.range_padding_units === 'percent') {\n                half_span = (end - start) * this.range_padding / 2;\n                start -= half_span;\n                end += half_span;\n            } else {\n                start -= this.range_padding;\n                end += this.range_padding;\n            }\n            this.setv({\n                start: start,\n                end: end,\n                levels: levels\n            }, { silent: true });\n            if (this.bounds === 'auto') {\n                return this.setv({\n                    bounds: [\n                        start,\n                        end\n                    ]\n                }, { silent: true });\n            }\n            var _a, _b, _c;\n        };\n        FactorRange.prototype._lookup = function (x) {\n            if (x.length === 1) {\n                return this._mapping[x[0]].value;\n            } else if (x.length === 2) {\n                return this._mapping[x[0]].mapping[x[1]].value;\n            } else if (x.length === 3) {\n                return this._mapping[x[0]].mapping[x[1]].mapping[x[2]].value;\n            }\n        };\n        return FactorRange;\n    }(range_1.Range);\n    exports.FactorRange = FactorRange;\n    ;\n    FactorRange.prototype.type = 'FactorRange';\n    FactorRange.define({\n        factors: [\n            p.Array,\n            []\n        ],\n        factor_padding: [\n            p.Number,\n            0\n        ],\n        subgroup_padding: [\n            p.Number,\n            0.8\n        ],\n        group_padding: [\n            p.Number,\n            1.4\n        ],\n        range_padding: [\n            p.Number,\n            0\n        ],\n        range_padding_units: [\n            p.PaddingUnits,\n            'percent'\n        ],\n        start: [p.Number],\n        end: [p.Number],\n        bounds: [p.Any],\n        min_interval: [p.Any],\n        max_interval: [p.Any]\n    });\n    FactorRange.getters({\n        min: function () {\n            return this.start;\n        },\n        max: function () {\n            return this.end;\n        }\n    });\n    FactorRange.internal({\n        levels: [p.Number],\n        mids: [p.Array],\n        tops: [p.Array],\n        tops_groups: [p.Array]    // ordered list of full factors for each top level factor in tops\n    });    \n}","/*models/ranges/index*/\nfunction _(require, module, exports) {\n    var data_range_1 = require(155    /* ./data_range */);\n    exports.DataRange = data_range_1.DataRange;\n    var data_range1d_1 = require(156    /* ./data_range1d */);\n    exports.DataRange1d = data_range1d_1.DataRange1d;\n    var factor_range_1 = require(157    /* ./factor_range */);\n    exports.FactorRange = factor_range_1.FactorRange;\n    var range_1 = require(159    /* ./range */);\n    exports.Range = range_1.Range;\n    var range1d_1 = require(160    /* ./range1d */);\n    exports.Range1d = range1d_1.Range1d;    \n}","/*models/ranges/range*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    var p = require(15    /* core/properties */);\n    var types_1 = require(42    /* core/util/types */);\n    var Range = function (_super) {\n        tslib_1.__extends(Range, _super);\n        function Range() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Range.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this.connect(this.change, function () {\n                return this._emit_callback();\n            });\n        };\n        Range.prototype.reset = function () {\n            'This method should be reimplemented by subclasses and ensure that\\nthe callback, if exists, is executed at completion.';\n            return this.change.emit();\n        };\n        Range.prototype._emit_callback = function () {\n            if (this.callback != null) {\n                if (types_1.isFunction(this.callback)) {\n                    return this.callback(this);\n                } else {\n                    return this.callback.execute(this);\n                }\n            }\n        };\n        return Range;\n    }(model_1.Model);\n    exports.Range = Range;\n    ;\n    Range.prototype.type = 'Range';\n    Range.define({\n        callback: [p.Any]    // TODO: p.Either(p.Instance(Callback), p.Function)\n    });\n    Range.internal({\n        plots: [\n            p.Array,\n            []\n        ]\n    });    \n}","/*models/ranges/range1d*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var range_1 = require(159    /* ./range */);\n    var p = require(15    /* core/properties */);\n    var Range1d = function (_super) {\n        tslib_1.__extends(Range1d, _super);\n        function Range1d() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Range1d.prototype._set_auto_bounds = function () {\n            var max, min;\n            if (this.bounds === 'auto') {\n                min = Math.min(this._initial_start, this._initial_end);\n                max = Math.max(this._initial_start, this._initial_end);\n                return this.setv({\n                    bounds: [\n                        min,\n                        max\n                    ]\n                }, { silent: true });\n            }\n        };\n        Range1d.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this._initial_start = this.start;\n            this._initial_end = this.end;\n            return this._set_auto_bounds();\n        };\n        Object.defineProperty(Range1d.prototype, 'min', {\n            get: function () {\n                return Math.min(this.start, this.end);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Range1d.prototype, 'max', {\n            get: function () {\n                return Math.max(this.start, this.end);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Range1d.prototype, 'is_reversed', {\n            get: function () {\n                return this.start > this.end;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Range1d.prototype.reset = function () {\n            this._set_auto_bounds();\n            if (this.start !== this._initial_start || this.end !== this._initial_end) {\n                return this.setv({\n                    start: this._initial_start,\n                    end: this._initial_end\n                });\n            } else {\n                return this.change.emit();\n            }\n        };\n        return Range1d;\n    }(range_1.Range);\n    exports.Range1d = Range1d;\n    ;\n    Range1d.prototype.type = 'Range1d';\n    Range1d.define({\n        start: [\n            p.Number,\n            0\n        ],\n        end: [\n            p.Number,\n            1\n        ],\n        bounds: [p.Any],\n        min_interval: [p.Any],\n        max_interval: [p.Any]\n    });    \n}","/*models/renderers/glyph_renderer*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var indexOf = [].indexOf;\n    var renderer_1 = require(165    /* ./renderer */);\n    var line_1 = require(114    /* ../glyphs/line */);\n    var remote_data_source_1 = require(178    /* ../sources/remote_data_source */);\n    var cds_view_1 = require(172    /* ../sources/cds_view */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var object_1 = require(30    /* core/util/object */);\n    exports.GlyphRendererView = function (_super) {\n        tslib_1.__extends(GlyphRendererView, _super);\n        function GlyphRendererView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        GlyphRendererView.prototype.initialize = function (options) {\n            var base_glyph, decimated_glyph, glyph_attrs, has_fill, has_line, hover_glyph, mk_glyph, muted_glyph, nonselection_glyph, selection_glyph;\n            _super.prototype.initialize.call(this, options);\n            base_glyph = this.model.glyph;\n            has_fill = indexOf.call(base_glyph.mixins, 'fill') >= 0;\n            has_line = indexOf.call(base_glyph.mixins, 'line') >= 0;\n            glyph_attrs = object_1.clone(base_glyph.attributes);\n            delete glyph_attrs.id;\n            mk_glyph = function (defaults) {\n                var attrs;\n                attrs = object_1.clone(glyph_attrs);\n                if (has_fill) {\n                    object_1.extend(attrs, defaults.fill);\n                }\n                if (has_line) {\n                    object_1.extend(attrs, defaults.line);\n                }\n                return new base_glyph.constructor(attrs);\n            };\n            this.glyph = this.build_glyph_view(base_glyph);\n            selection_glyph = this.model.selection_glyph;\n            if (selection_glyph == null) {\n                selection_glyph = mk_glyph({\n                    fill: {},\n                    line: {}\n                });\n            } else if (selection_glyph === 'auto') {\n                selection_glyph = mk_glyph(this.model.selection_defaults);\n            }\n            this.selection_glyph = this.build_glyph_view(selection_glyph);\n            nonselection_glyph = this.model.nonselection_glyph;\n            if (nonselection_glyph == null) {\n                nonselection_glyph = mk_glyph({\n                    fill: {},\n                    line: {}\n                });\n            } else if (nonselection_glyph === 'auto') {\n                nonselection_glyph = mk_glyph(this.model.nonselection_defaults);\n            }\n            this.nonselection_glyph = this.build_glyph_view(nonselection_glyph);\n            hover_glyph = this.model.hover_glyph;\n            if (hover_glyph != null) {\n                this.hover_glyph = this.build_glyph_view(hover_glyph);\n            }\n            muted_glyph = this.model.muted_glyph;\n            if (muted_glyph != null) {\n                this.muted_glyph = this.build_glyph_view(muted_glyph);\n            }\n            decimated_glyph = mk_glyph(this.model.decimated_defaults);\n            this.decimated_glyph = this.build_glyph_view(decimated_glyph);\n            this.xscale = this.plot_view.frame.xscales[this.model.x_range_name];\n            this.yscale = this.plot_view.frame.yscales[this.model.y_range_name];\n            this.set_data(false);\n            if (this.model.data_source instanceof remote_data_source_1.RemoteDataSource) {\n                return this.model.data_source.setup();\n            }\n        };\n        GlyphRendererView.prototype.build_glyph_view = function (model) {\n            return new model.default_view({\n                model: model,\n                renderer: this,\n                plot_view: this.plot_view,\n                parent: this\n            });\n        };\n        GlyphRendererView.prototype.connect_signals = function () {\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.change, function () {\n                return this.request_render();\n            });\n            this.connect(this.model.glyph.change, function () {\n                return this.set_data();\n            });\n            this.connect(this.model.data_source.change, function () {\n                return this.set_data();\n            });\n            this.connect(this.model.data_source.streaming, function () {\n                return this.set_data();\n            });\n            this.connect(this.model.data_source.patching, function (indices) {\n                return this.set_data(true, indices);\n            });\n            this.connect(this.model.data_source.select, function () {\n                return this.request_render();\n            });\n            if (this.hover_glyph != null) {\n                this.connect(this.model.data_source.inspect, function () {\n                    return this.request_render();\n                });\n            }\n            this.connect(this.model.properties.view.change, function () {\n                return this.set_data();\n            });\n            this.connect(this.model.view.change, function () {\n                return this.set_data();\n            });\n            return this.connect(this.model.glyph.transformchange, function () {\n                return this.set_data();\n            });\n        };\n        GlyphRendererView.prototype.have_selection_glyphs = function () {\n            return this.selection_glyph != null && this.nonselection_glyph != null;\n        };\n        // in case of partial updates like patching, the list of indices that actually\n        // changed may be passed as the \"indices\" parameter to afford any optional optimizations\n        GlyphRendererView.prototype.set_data = function (request_render, indices) {\n            if (request_render === void 0) {\n                request_render = true;\n            }\n            var dt, i, j, lod_factor, ref, source, t0;\n            t0 = Date.now();\n            source = this.model.data_source;\n            this.all_indices = this.model.view.indices;\n            // TODO (bev) this is a bit clunky, need to make sure glyphs use the correct ranges when they call\n            // mapping functions on the base Renderer class\n            this.glyph.model.setv({\n                x_range_name: this.model.x_range_name,\n                y_range_name: this.model.y_range_name\n            }, { silent: true });\n            this.glyph.set_data(source, this.all_indices, indices);\n            this.glyph.set_visuals(source);\n            this.decimated_glyph.set_visuals(source);\n            if (this.have_selection_glyphs()) {\n                this.selection_glyph.set_visuals(source);\n                this.nonselection_glyph.set_visuals(source);\n            }\n            if (this.hover_glyph != null) {\n                this.hover_glyph.set_visuals(source);\n            }\n            if (this.muted_glyph != null) {\n                this.muted_glyph.set_visuals(source);\n            }\n            lod_factor = this.plot_model.plot.lod_factor;\n            this.decimated = [];\n            for (i = j = 0, ref = Math.floor(this.all_indices.length / lod_factor); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                this.decimated.push(i * lod_factor);\n            }\n            dt = Date.now() - t0;\n            logging_1.logger.debug(this.glyph.model.type + ' GlyphRenderer (' + this.model.id + '): set_data finished in ' + dt + 'ms');\n            this.set_data_timestamp = Date.now();\n            if (request_render) {\n                return this.request_render();\n            }\n        };\n        GlyphRendererView.prototype.render = function () {\n            var ctx, dtmap, dtmask, dtrender, dtselect, dttot, glsupport, glyph, i, indices, inspected, j, k, l, len, len1, len2, lod_threshold, m, nonselected, nonselection_glyph, ref, ref1, ref2, results, selected, selected_mask, selection_glyph, t0, tmap, tmask, trender, tselect;\n            if (!this.model.visible) {\n                return;\n            }\n            t0 = Date.now();\n            glsupport = this.glyph.glglyph;\n            tmap = Date.now();\n            this.glyph.map_data();\n            dtmap = Date.now() - t0;\n            tmask = Date.now();\n            // all_indices is in full data space, indices is converted to subset space\n            // either by mask_data (that uses the spatial index) or manually\n            indices = this.glyph.mask_data(this.all_indices);\n            if (indices.length === this.all_indices.length) {\n                indices = function () {\n                    results = [];\n                    for (var j = 0, ref = this.all_indices.length; 0 <= ref ? j < ref : j > ref; 0 <= ref ? j++ : j--) {\n                        results.push(j);\n                    }\n                    return results;\n                }.apply(this);\n            }\n            dtmask = Date.now() - tmask;\n            ctx = this.plot_view.canvas_view.ctx;\n            ctx.save();\n            // selected is in full set space\n            selected = this.model.data_source.selected;\n            if (!selected || selected.length === 0) {\n                selected = [];\n            } else {\n                if (selected['0d'].glyph) {\n                    selected = this.model.view.convert_indices_from_subset(indices);\n                } else if (selected['1d'].indices.length > 0) {\n                    selected = selected['1d'].indices;\n                } else {\n                    selected = function () {\n                        var k, len, ref1, results1;\n                        ref1 = Object.keys(selected['2d'].indices);\n                        results1 = [];\n                        for (k = 0, len = ref1.length; k < len; k++) {\n                            i = ref1[k];\n                            results1.push(parseInt(i));\n                        }\n                        return results1;\n                    }();\n                }\n            }\n            // inspected is in full set space\n            inspected = this.model.data_source.inspected;\n            if (!inspected || inspected.length === 0) {\n                inspected = [];\n            } else {\n                if (inspected['0d'].glyph) {\n                    inspected = this.model.view.convert_indices_from_subset(indices);\n                } else if (inspected['1d'].indices.length > 0) {\n                    inspected = inspected['1d'].indices;\n                } else {\n                    inspected = function () {\n                        var k, len, ref1, results1;\n                        ref1 = Object.keys(inspected['2d'].indices);\n                        results1 = [];\n                        for (k = 0, len = ref1.length; k < len; k++) {\n                            i = ref1[k];\n                            results1.push(parseInt(i));\n                        }\n                        return results1;\n                    }();\n                }\n            }\n            // inspected is transformed to subset space\n            inspected = function () {\n                var k, len, ref1, results1;\n                results1 = [];\n                for (k = 0, len = indices.length; k < len; k++) {\n                    i = indices[k];\n                    if (ref1 = this.all_indices[i], indexOf.call(inspected, ref1) >= 0) {\n                        results1.push(i);\n                    }\n                }\n                return results1;\n            }.call(this);\n            lod_threshold = this.plot_model.plot.lod_threshold;\n            if (((ref1 = this.model.document) != null ? ref1.interactive_duration() : void 0) > 0 && !glsupport && lod_threshold != null && this.all_indices.length > lod_threshold) {\n                // Render decimated during interaction if too many elements and not using GL\n                indices = this.decimated;\n                glyph = this.decimated_glyph;\n                nonselection_glyph = this.decimated_glyph;\n                selection_glyph = this.selection_glyph;\n            } else {\n                glyph = this.model.muted && this.muted_glyph != null ? this.muted_glyph : this.glyph;\n                nonselection_glyph = this.nonselection_glyph;\n                selection_glyph = this.selection_glyph;\n            }\n            if (this.hover_glyph != null && inspected.length) {\n                indices = array_1.difference(indices, inspected);\n            }\n            if (!(selected.length && this.have_selection_glyphs())) {\n                trender = Date.now();\n                if (this.glyph instanceof line_1.LineView) {\n                    if (this.hover_glyph && inspected.length) {\n                        this.hover_glyph.render(ctx, this.model.view.convert_indices_from_subset(inspected), this.glyph);\n                    } else {\n                        glyph.render(ctx, this.all_indices, this.glyph);\n                    }\n                } else {\n                    glyph.render(ctx, indices, this.glyph);\n                    if (this.hover_glyph && inspected.length) {\n                        this.hover_glyph.render(ctx, inspected, this.glyph);\n                    }\n                }\n                dtrender = Date.now() - trender;\n            } else {\n                // reset the selection mask\n                tselect = Date.now();\n                selected_mask = {};\n                for (k = 0, len = selected.length; k < len; k++) {\n                    i = selected[k];\n                    selected_mask[i] = true;\n                }\n                // intersect/different selection with render mask\n                selected = new Array();\n                nonselected = new Array();\n                // now, selected is changed to subset space, except for Line glyph\n                if (this.glyph instanceof line_1.LineView) {\n                    ref2 = this.all_indices;\n                    for (l = 0, len1 = ref2.length; l < len1; l++) {\n                        i = ref2[l];\n                        if (selected_mask[i] != null) {\n                            selected.push(i);\n                        } else {\n                            nonselected.push(i);\n                        }\n                    }\n                } else {\n                    for (m = 0, len2 = indices.length; m < len2; m++) {\n                        i = indices[m];\n                        if (selected_mask[this.all_indices[i]] != null) {\n                            selected.push(i);\n                        } else {\n                            nonselected.push(i);\n                        }\n                    }\n                }\n                dtselect = Date.now() - tselect;\n                trender = Date.now();\n                nonselection_glyph.render(ctx, nonselected, this.glyph);\n                selection_glyph.render(ctx, selected, this.glyph);\n                if (this.hover_glyph != null) {\n                    if (this.glyph instanceof line_1.LineView) {\n                        this.hover_glyph.render(ctx, this.model.view.convert_indices_from_subset(inspected), this.glyph);\n                    } else {\n                        this.hover_glyph.render(ctx, inspected, this.glyph);\n                    }\n                }\n                dtrender = Date.now() - trender;\n            }\n            this.last_dtrender = dtrender;\n            dttot = Date.now() - t0;\n            logging_1.logger.debug(this.glyph.model.type + ' GlyphRenderer (' + this.model.id + '): render finished in ' + dttot + 'ms');\n            logging_1.logger.trace(' - map_data finished in       : ' + dtmap + 'ms');\n            if (dtmask != null) {\n                logging_1.logger.trace(' - mask_data finished in      : ' + dtmask + 'ms');\n            }\n            if (dtselect != null) {\n                logging_1.logger.trace(' - selection mask finished in : ' + dtselect + 'ms');\n            }\n            logging_1.logger.trace(' - glyph renders finished in  : ' + dtrender + 'ms');\n            return ctx.restore();\n        };\n        GlyphRendererView.prototype.draw_legend = function (ctx, x0, x1, y0, y1, field, label) {\n            var index;\n            index = this.model.get_reference_point(field, label);\n            return this.glyph.draw_legend_for_index(ctx, x0, x1, y0, y1, index);\n        };\n        GlyphRendererView.prototype.hit_test = function (geometry, final, append, mode) {\n            if (mode === void 0) {\n                mode = 'select';\n            }\n            return this.model.hit_test_helper(geometry, this, final, append, mode);\n        };\n        return GlyphRendererView;\n    }(renderer_1.RendererView);\n    var GlyphRenderer = function (_super) {\n        tslib_1.__extends(GlyphRenderer, _super);\n        function GlyphRenderer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        GlyphRenderer.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            if (this.view.source == null) {\n                this.view.source = this.data_source;\n                return this.view.compute_indices();\n            }\n        };\n        GlyphRenderer.prototype.get_reference_point = function (field, value) {\n            var data, i, index;\n            index = 0;\n            // This is the default to return\n            if (field != null && this.data_source.get_column != null) {\n                data = this.data_source.get_column(field);\n                if (data) {\n                    i = data.indexOf(value);\n                    if (i > 0) {\n                        index = i;\n                    }\n                }\n            }\n            return index;\n        };\n        GlyphRenderer.prototype.hit_test_helper = function (geometry, renderer_view, final, append, mode) {\n            var hit_test_result, indices, inspector, selector;\n            if (!this.visible) {\n                return false;\n            }\n            hit_test_result = renderer_view.glyph.hit_test(geometry);\n            // glyphs that don't have hit-testing implemented will return null\n            if (hit_test_result === null) {\n                return false;\n            }\n            indices = this.view.convert_selection_from_subset(hit_test_result);\n            if (mode === 'select') {\n                selector = this.data_source.selection_manager.selector;\n                selector.update(indices, final, append);\n                this.data_source.selected = selector.indices;\n                this.data_source.select.emit();    // mode == \"inspect\"\n            } else {\n                inspector = this.data_source.selection_manager.get_or_create_inspector(this);\n                inspector.update(indices, true, false, true);\n                // silently set inspected attr to avoid triggering data_source.change event and rerender\n                this.data_source.setv({ inspected: inspector.indices }, { silent: true });\n                this.data_source.inspect.emit([\n                    renderer_view,\n                    { geometry: geometry }\n                ]);\n            }\n            return !indices.is_empty();\n        };\n        GlyphRenderer.prototype.get_selection_manager = function () {\n            return this.data_source.selection_manager;\n        };\n        return GlyphRenderer;\n    }(renderer_1.Renderer);\n    exports.GlyphRenderer = GlyphRenderer;\n    ;\n    GlyphRenderer.prototype.default_view = exports.GlyphRendererView;\n    GlyphRenderer.prototype.type = 'GlyphRenderer';\n    GlyphRenderer.define({\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ],\n        data_source: [p.Instance],\n        view: [\n            p.Instance,\n            function () {\n                return new cds_view_1.CDSView();\n            }\n        ],\n        glyph: [p.Instance],\n        hover_glyph: [p.Instance],\n        nonselection_glyph: [\n            p.Any,\n            'auto'    // Instance or \"auto\"\n        ],\n        selection_glyph: [\n            p.Any,\n            'auto'    // Instance or \"auto\"\n        ],\n        muted_glyph: [p.Instance],\n        muted: [\n            p.Bool,\n            false\n        ]\n    });\n    GlyphRenderer.override({ level: 'glyph' });\n    GlyphRenderer.prototype.selection_defaults = {\n        fill: {},\n        line: {}\n    };\n    GlyphRenderer.prototype.decimated_defaults = {\n        fill: {\n            fill_alpha: 0.3,\n            fill_color: 'grey'\n        },\n        line: {\n            line_alpha: 0.3,\n            line_color: 'grey'\n        }\n    };\n    GlyphRenderer.prototype.nonselection_defaults = {\n        fill: {\n            fill_alpha: 0.2,\n            line_alpha: 0.2\n        },\n        line: {}\n    };    \n}","/*models/renderers/graph_renderer*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var renderer_1 = require(165    /* ../renderers/renderer */);\n    var graph_hit_test_policy_1 = require(129    /* ../graphs/graph_hit_test_policy */);\n    var p = require(15    /* core/properties */);\n    var build_views_1 = require(4    /* core/build_views */);\n    exports.GraphRendererView = function (_super) {\n        tslib_1.__extends(GraphRendererView, _super);\n        function GraphRendererView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        GraphRendererView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this.xscale = this.plot_view.frame.xscales['default'];\n            this.yscale = this.plot_view.frame.yscales['default'];\n            this._renderer_views = {};\n            _a = build_views_1.build_views(this._renderer_views, [\n                this.model.node_renderer,\n                this.model.edge_renderer\n            ], this.plot_view.view_options()), this.node_view = _a[0], this.edge_view = _a[1];\n            return this.set_data();\n            var _a;\n        };\n        GraphRendererView.prototype.connect_signals = function () {\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.layout_provider.change, function () {\n                return this.set_data();\n            });\n            this.connect(this.model.node_renderer.data_source.select, function () {\n                return this.set_data();\n            });\n            this.connect(this.model.node_renderer.data_source.inspect, function () {\n                return this.set_data();\n            });\n            this.connect(this.model.node_renderer.data_source.change, function () {\n                return this.set_data();\n            });\n            this.connect(this.model.edge_renderer.data_source.select, function () {\n                return this.set_data();\n            });\n            this.connect(this.model.edge_renderer.data_source.inspect, function () {\n                return this.set_data();\n            });\n            return this.connect(this.model.edge_renderer.data_source.change, function () {\n                return this.set_data();\n            });\n        };\n        GraphRendererView.prototype.set_data = function (request_render) {\n            if (request_render === void 0) {\n                request_render = true;\n            }\n            // TODO (bev) this is a bit clunky, need to make sure glyphs use the correct ranges when they call\n            // mapping functions on the base Renderer class\n            this.node_view.glyph.model.setv({\n                x_range_name: this.model.x_range_name,\n                y_range_name: this.model.y_range_name\n            }, { silent: true });\n            this.edge_view.glyph.model.setv({\n                x_range_name: this.model.x_range_name,\n                y_range_name: this.model.y_range_name\n            }, { silent: true });\n            _a = this.model.layout_provider.get_node_coordinates(this.model.node_renderer.data_source), this.node_view.glyph._x = _a[0], this.node_view.glyph._y = _a[1];\n            _b = this.model.layout_provider.get_edge_coordinates(this.model.edge_renderer.data_source), this.edge_view.glyph._xs = _b[0], this.edge_view.glyph._ys = _b[1];\n            this.node_view.glyph.index = this.node_view.glyph._index_data();\n            this.edge_view.glyph.index = this.edge_view.glyph._index_data();\n            if (request_render) {\n                return this.request_render();\n            }\n            var _a, _b;\n        };\n        GraphRendererView.prototype.render = function () {\n            this.edge_view.render();\n            return this.node_view.render();\n        };\n        GraphRendererView.prototype.hit_test = function (geometry, final, append, mode) {\n            if (mode === void 0) {\n                mode = 'select';\n            }\n            var did_hit, ref, ref1;\n            if (!this.model.visible) {\n                return false;\n            }\n            did_hit = false;\n            if (mode === 'select') {\n                did_hit = (ref = this.model.selection_policy) != null ? ref.do_selection(geometry, this, final, append) : void 0;    // if mode == \"inspect\"\n            } else {\n                did_hit = (ref1 = this.model.inspection_policy) != null ? ref1.do_inspection(geometry, this, final, append) : void 0;\n            }\n            return did_hit;\n        };\n        return GraphRendererView;\n    }(renderer_1.RendererView);\n    var GraphRenderer = function (_super) {\n        tslib_1.__extends(GraphRenderer, _super);\n        function GraphRenderer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        GraphRenderer.prototype.get_selection_manager = function () {\n            return this.node_renderer.data_source.selection_manager;\n        };\n        return GraphRenderer;\n    }(renderer_1.Renderer);\n    exports.GraphRenderer = GraphRenderer;\n    ;\n    GraphRenderer.prototype.default_view = exports.GraphRendererView;\n    GraphRenderer.prototype.type = 'GraphRenderer';\n    GraphRenderer.define({\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ],\n        layout_provider: [p.Instance],\n        node_renderer: [p.Instance],\n        edge_renderer: [p.Instance],\n        selection_policy: [\n            p.Instance,\n            function () {\n                return new graph_hit_test_policy_1.NodesOnly();\n            }\n        ],\n        inspection_policy: [\n            p.Instance,\n            function () {\n                return new graph_hit_test_policy_1.NodesOnly();\n            }\n        ]\n    });\n    GraphRenderer.override({ level: 'glyph' });    \n}","/*models/renderers/guide_renderer*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var renderer_1 = require(165    /* ./renderer */);\n    var p = require(15    /* core/properties */);\n    var GuideRenderer = function (_super) {\n        tslib_1.__extends(GuideRenderer, _super);\n        function GuideRenderer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return GuideRenderer;\n    }(renderer_1.Renderer);\n    exports.GuideRenderer = GuideRenderer;\n    ;\n    GuideRenderer.prototype.type = 'GuideRenderer';\n    GuideRenderer.define({ plot: [p.Instance] });\n    GuideRenderer.override({ level: 'overlay' });    \n}","/*models/renderers/index*/\nfunction _(require, module, exports) {\n    var glyph_renderer_1 = require(161    /* ./glyph_renderer */);\n    exports.GlyphRenderer = glyph_renderer_1.GlyphRenderer;\n    var graph_renderer_1 = require(162    /* ./graph_renderer */);\n    exports.GraphRenderer = graph_renderer_1.GraphRenderer;\n    var guide_renderer_1 = require(163    /* ./guide_renderer */);\n    exports.GuideRenderer = guide_renderer_1.GuideRenderer;\n    var renderer_1 = require(165    /* ./renderer */);\n    exports.Renderer = renderer_1.Renderer;    \n}","/*models/renderers/renderer*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var dom_view_1 = require(6    /* core/dom_view */);\n    var visuals_1 = require(46    /* core/visuals */);\n    var p = require(15    /* core/properties */);\n    var proj = require(32    /* core/util/projections */);\n    var object_1 = require(30    /* core/util/object */);\n    var model_1 = require(50    /* ../../model */);\n    var RendererView = function (_super) {\n        tslib_1.__extends(RendererView, _super);\n        function RendererView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        RendererView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this.plot_view = options.plot_view;\n            this.visuals = new visuals_1.Visuals(this.model);\n            return this._has_finished = true;    // XXX: should be in render() but subclasses don't respect super()\n        };\n        RendererView.prototype.request_render = function () {\n            return this.plot_view.request_render();\n        };\n        RendererView.prototype.set_data = function (source) {\n            var data;\n            data = this.model.materialize_dataspecs(source);\n            object_1.extend(this, data);\n            if (this.plot_model.use_map) {\n                if (this._x != null) {\n                    _a = proj.project_xy(this._x, this._y), this._x = _a[0], this._y = _a[1];\n                }\n                if (this._xs != null) {\n                    return _b = proj.project_xsys(this._xs, this._ys), this._xs = _b[0], this._ys = _b[1], _b;\n                }\n            }\n            var _a, _b;\n        };\n        RendererView.prototype.map_to_screen = function (x, y) {\n            return this.plot_view.map_to_screen(x, y, this.model.x_range_name, this.model.y_range_name);\n        };\n        return RendererView;\n    }(dom_view_1.DOMView);\n    exports.RendererView = RendererView;\n    ;\n    RendererView.getters({\n        plot_model: function () {\n            return this.plot_view.model;\n        }\n    });\n    var Renderer = function (_super) {\n        tslib_1.__extends(Renderer, _super);\n        function Renderer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Renderer;\n    }(model_1.Model);\n    exports.Renderer = Renderer;\n    ;\n    Renderer.prototype.type = 'Renderer';\n    Renderer.define({\n        level: [\n            p.RenderLevel,\n            null\n        ],\n        visible: [\n            p.Bool,\n            true\n        ]\n    });    \n}","/*models/scales/categorical_scale*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var linear_scale_1 = require(168    /* ./linear_scale */);\n    var CategoricalScale = function (_super) {\n        tslib_1.__extends(CategoricalScale, _super);\n        function CategoricalScale() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CategoricalScale.prototype.compute = function (x) {\n            return _super.prototype.compute.call(this, this.source_range.synthetic(x));\n        };\n        CategoricalScale.prototype.v_compute = function (xs) {\n            return _super.prototype.v_compute.call(this, this.source_range.v_synthetic(xs));\n        };\n        return CategoricalScale;\n    }(linear_scale_1.LinearScale);\n    exports.CategoricalScale = CategoricalScale;\n    ;\n    CategoricalScale.prototype.type = 'CategoricalScale';    \n}","/*models/scales/index*/\nfunction _(require, module, exports) {\n    var categorical_scale_1 = require(166    /* ./categorical_scale */);\n    exports.CategoricalScale = categorical_scale_1.CategoricalScale;\n    var linear_scale_1 = require(168    /* ./linear_scale */);\n    exports.LinearScale = linear_scale_1.LinearScale;\n    var log_scale_1 = require(169    /* ./log_scale */);\n    exports.LogScale = log_scale_1.LogScale;\n    var scale_1 = require(170    /* ./scale */);\n    exports.Scale = scale_1.Scale;    \n}","/*models/scales/linear_scale*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var scale_1 = require(170    /* ./scale */);\n    var LinearScale = function (_super) {\n        tslib_1.__extends(LinearScale, _super);\n        function LinearScale() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LinearScale.prototype.compute = function (x) {\n            var factor, offset;\n            _a = this._compute_state(), factor = _a[0], offset = _a[1];\n            return factor * x + offset;\n            var _a;\n        };\n        LinearScale.prototype.v_compute = function (xs) {\n            var factor, i, idx, len, offset, result, x;\n            _a = this._compute_state(), factor = _a[0], offset = _a[1];\n            result = new Float64Array(xs.length);\n            for (idx = i = 0, len = xs.length; i < len; idx = ++i) {\n                x = xs[idx];\n                result[idx] = factor * x + offset;\n            }\n            return result;\n            var _a;\n        };\n        LinearScale.prototype.invert = function (xprime) {\n            var factor, offset;\n            _a = this._compute_state(), factor = _a[0], offset = _a[1];\n            return (xprime - offset) / factor;\n            var _a;\n        };\n        LinearScale.prototype.v_invert = function (xprimes) {\n            var factor, i, idx, len, offset, result, xprime;\n            _a = this._compute_state(), factor = _a[0], offset = _a[1];\n            result = new Float64Array(xprimes.length);\n            for (idx = i = 0, len = xprimes.length; i < len; idx = ++i) {\n                xprime = xprimes[idx];\n                result[idx] = (xprime - offset) / factor;\n            }\n            return result;\n            var _a;\n        };\n        LinearScale.prototype._compute_state = function () {\n            var factor, offset, source_end, source_start, target_end, target_start;\n            //  (t1 - t0)       (t1 - t0)\n            //  --------- * x - --------- * s0 + t0\n            //  (s1 - s0)       (s1 - s0)\n            // [  factor  ]     [    offset    ]\n            source_start = this.source_range.start;\n            source_end = this.source_range.end;\n            target_start = this.target_range.start;\n            target_end = this.target_range.end;\n            factor = (target_end - target_start) / (source_end - source_start);\n            offset = -(factor * source_start) + target_start;\n            return [\n                factor,\n                offset\n            ];\n        };\n        return LinearScale;\n    }(scale_1.Scale);\n    exports.LinearScale = LinearScale;\n    ;\n    LinearScale.prototype.type = 'LinearScale';    \n}","/*models/scales/log_scale*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var scale_1 = require(170    /* ./scale */);\n    var LogScale = function (_super) {\n        tslib_1.__extends(LogScale, _super);\n        function LogScale() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LogScale.prototype.compute = function (x) {\n            var _x, factor, inter_factor, inter_offset, offset, value;\n            _a = this._compute_state(), factor = _a[0], offset = _a[1], inter_factor = _a[2], inter_offset = _a[3];\n            if (inter_factor === 0) {\n                value = 0;\n            } else {\n                _x = (Math.log(x) - inter_offset) / inter_factor;\n                if (isFinite(_x)) {\n                    value = _x * factor + offset;\n                } else {\n                    value = 0 / 0;\n                }\n            }\n            return value;\n            var _a;\n        };\n        LogScale.prototype.v_compute = function (xs) {\n            var _x, factor, i, inter_factor, inter_offset, j, k, offset, ref, ref1, result, value;\n            _a = this._compute_state(), factor = _a[0], offset = _a[1], inter_factor = _a[2], inter_offset = _a[3];\n            result = new Float64Array(xs.length);\n            if (inter_factor === 0) {\n                for (i = j = 0, ref = xs.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    result[i] = 0;\n                }\n            } else {\n                for (i = k = 0, ref1 = xs.length; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {\n                    _x = (Math.log(xs[i]) - inter_offset) / inter_factor;\n                    if (isFinite(_x)) {\n                        value = _x * factor + offset;\n                    } else {\n                        value = 0 / 0;\n                    }\n                    result[i] = value;\n                }\n            }\n            return result;\n            var _a;\n        };\n        LogScale.prototype.invert = function (xprime) {\n            var factor, inter_factor, inter_offset, offset, value;\n            _a = this._compute_state(), factor = _a[0], offset = _a[1], inter_factor = _a[2], inter_offset = _a[3];\n            value = (xprime - offset) / factor;\n            return Math.exp(inter_factor * value + inter_offset);\n            var _a;\n        };\n        LogScale.prototype.v_invert = function (xprimes) {\n            var factor, i, inter_factor, inter_offset, j, offset, ref, result, value;\n            _a = this._compute_state(), factor = _a[0], offset = _a[1], inter_factor = _a[2], inter_offset = _a[3];\n            result = new Float64Array(xprimes.length);\n            for (i = j = 0, ref = xprimes.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                value = (xprimes[i] - offset) / factor;\n                result[i] = Math.exp(inter_factor * value + inter_offset);\n            }\n            return result;\n            var _a;\n        };\n        LogScale.prototype._get_safe_factor = function (orig_start, orig_end) {\n            var end, log_val, start;\n            if (orig_start < 0) {\n                start = 0;\n            } else {\n                start = orig_start;\n            }\n            if (orig_end < 0) {\n                end = 0;\n            } else {\n                end = orig_end;\n            }\n            if (start === end) {\n                if (start === 0) {\n                    _a = [\n                        1,\n                        10\n                    ], start = _a[0], end = _a[1];\n                } else {\n                    log_val = Math.log(start) / Math.log(10);\n                    start = Math.pow(10, Math.floor(log_val));\n                    if (Math.ceil(log_val) !== Math.floor(log_val)) {\n                        end = Math.pow(10, Math.ceil(log_val));\n                    } else {\n                        end = Math.pow(10, Math.ceil(log_val) + 1);\n                    }\n                }\n            }\n            return [\n                start,\n                end\n            ];\n            var _a;\n        };\n        LogScale.prototype._compute_state = function () {\n            var end, factor, inter_factor, inter_offset, offset, screen_range, source_end, source_start, start, target_end, target_start;\n            source_start = this.source_range.start;\n            source_end = this.source_range.end;\n            target_start = this.target_range.start;\n            target_end = this.target_range.end;\n            screen_range = target_end - target_start;\n            _a = this._get_safe_factor(source_start, source_end), start = _a[0], end = _a[1];\n            if (start === 0) {\n                inter_factor = Math.log(end);\n                inter_offset = 0;\n            } else {\n                inter_factor = Math.log(end) - Math.log(start);\n                inter_offset = Math.log(start);\n            }\n            factor = screen_range;\n            offset = target_start;\n            return [\n                factor,\n                offset,\n                inter_factor,\n                inter_offset\n            ];\n            var _a;\n        };\n        return LogScale;\n    }(scale_1.Scale);\n    exports.LogScale = LogScale;\n    ;\n    LogScale.prototype.type = 'LogScale';    \n}","/*models/scales/scale*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var transforms_1 = require(238    /* ../transforms */);\n    var p = require(15    /* core/properties */);\n    var Scale = function (_super) {\n        tslib_1.__extends(Scale, _super);\n        function Scale() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Scale.prototype.r_compute = function (x0, x1) {\n            if (this.target_range.is_reversed)\n                return [\n                    this.compute(x1),\n                    this.compute(x0)\n                ];\n            else\n                return [\n                    this.compute(x0),\n                    this.compute(x1)\n                ];\n        };\n        Scale.prototype.r_invert = function (sx0, sx1) {\n            if (this.target_range.is_reversed)\n                return [\n                    this.invert(sx1),\n                    this.invert(sx0)\n                ];\n            else\n                return [\n                    this.invert(sx0),\n                    this.invert(sx1)\n                ];\n        };\n        return Scale;\n    }(transforms_1.Transform);\n    exports.Scale = Scale;\n    Scale.prototype.type = 'Scale';\n    Scale.internal({\n        source_range: [p.Any],\n        target_range: [p.Any]\n    });    \n}","/*models/sources/ajax_data_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var boundMethodCheck = function (instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new Error('Bound instance method accessed before binding');\n        }\n    };\n    var remote_data_source_1 = require(178    /* ./remote_data_source */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var AjaxDataSource = function (_super) {\n        tslib_1.__extends(AjaxDataSource, _super);\n        function AjaxDataSource() {\n            var _this = _super.apply(this, arguments) || this;\n            _this.destroy = _this.destroy.bind(_this);\n            _this.setup = _this.setup.bind(_this);\n            _this.get_data = _this.get_data.bind(_this);\n            return _this;\n        }\n        AjaxDataSource.prototype.destroy = function () {\n            boundMethodCheck(this, AjaxDataSource);\n            if (this.interval != null) {\n                return clearInterval(this.interval);\n            }\n        };\n        AjaxDataSource.prototype.setup = function () {\n            boundMethodCheck(this, AjaxDataSource);\n            if (this.initialized == null) {\n                this.initialized = true;\n                this.get_data(this.mode);\n                if (this.polling_interval) {\n                    return this.interval = setInterval(this.get_data, this.polling_interval, this.mode, this.max_size, this.if_modified);\n                }\n            }\n        };\n        AjaxDataSource.prototype.get_data = function (mode, max_size, if_modified) {\n            var _this = this;\n            if (max_size === void 0) {\n                max_size = 0;\n            }\n            if (if_modified === void 0) {\n                if_modified = false;\n            }\n            var name, ref, value, xhr;\n            boundMethodCheck(this, AjaxDataSource);\n            xhr = new XMLHttpRequest();\n            xhr.open(this.method, this.data_url, true);\n            xhr.withCredentials = false;\n            xhr.setRequestHeader('Content-Type', this.content_type);\n            ref = this.http_headers;\n            for (name in ref) {\n                value = ref[name];\n                xhr.setRequestHeader(name, value);\n            }\n            // TODO: if_modified\n            xhr.addEventListener('load', function () {\n                var column, data, i, len, original_data, ref1;\n                if (xhr.status === 200) {\n                    data = JSON.parse(xhr.responseText);\n                    switch (mode) {\n                    case 'replace':\n                        return _this.data = data;\n                    case 'append':\n                        original_data = _this.data;\n                        ref1 = _this.columns();\n                        for (i = 0, len = ref1.length; i < len; i++) {\n                            column = ref1[i];\n                            data[column] = original_data[column].concat(data[column]).slice(-max_size);\n                        }\n                        return _this.data = data;\n                    }\n                }\n            });\n            xhr.addEventListener('error', function () {\n                return logging_1.logger.error('Failed to fetch JSON from ' + _this.data_url + ' with code ' + xhr.status);\n            });\n            xhr.send();\n            return null;\n        };\n        return AjaxDataSource;\n    }(remote_data_source_1.RemoteDataSource);\n    exports.AjaxDataSource = AjaxDataSource;\n    ;\n    AjaxDataSource.prototype.type = 'AjaxDataSource';\n    AjaxDataSource.define({\n        mode: [\n            p.String,\n            'replace'\n        ],\n        content_type: [\n            p.String,\n            'application/json'\n        ],\n        http_headers: [\n            p.Any,\n            {}\n        ],\n        max_size: [p.Number],\n        method: [\n            p.String,\n            'POST'    // TODO (bev)  enum?\n        ],\n        if_modified: [\n            p.Bool,\n            false\n        ]\n    });    \n}","/*models/sources/cds_view*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    var p = require(15    /* core/properties */);\n    var hittest_1 = require(9    /* core/hittest */);\n    var array_1 = require(22    /* core/util/array */);\n    var columnar_data_source_1 = require(174    /* ./columnar_data_source */);\n    var CDSView = function (_super) {\n        tslib_1.__extends(CDSView, _super);\n        function CDSView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CDSView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this.compute_indices();\n        };\n        CDSView.prototype.connect_signals = function () {\n            var ref, ref1, ref2;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.properties.filters.change, function () {\n                this.compute_indices();\n                return this.change.emit();\n            });\n            if (((ref = this.source) != null ? ref.change : void 0) != null) {\n                this.connect(this.source.change, function () {\n                    return this.compute_indices();\n                });\n            }\n            if (((ref1 = this.source) != null ? ref1.streaming : void 0) != null) {\n                this.connect(this.source.streaming, function () {\n                    return this.compute_indices();\n                });\n            }\n            if (((ref2 = this.source) != null ? ref2.patching : void 0) != null) {\n                return this.connect(this.source.patching, function () {\n                    return this.compute_indices();\n                });\n            }\n        };\n        CDSView.prototype.compute_indices = function () {\n            var filter, indices, inds, ref;\n            indices = function () {\n                var j, len, ref, results;\n                ref = this.filters;\n                results = [];\n                for (j = 0, len = ref.length; j < len; j++) {\n                    filter = ref[j];\n                    results.push(filter.compute_indices(this.source));\n                }\n                return results;\n            }.call(this);\n            indices = function () {\n                var j, len, results;\n                results = [];\n                for (j = 0, len = indices.length; j < len; j++) {\n                    inds = indices[j];\n                    if (inds != null) {\n                        results.push(inds);\n                    }\n                }\n                return results;\n            }();\n            if (indices.length > 0) {\n                this.indices = array_1.intersection.apply(this, indices);\n            } else {\n                if (this.source instanceof columnar_data_source_1.ColumnarDataSource) {\n                    this.indices = (ref = this.source) != null ? ref.get_indices() : void 0;\n                }\n            }\n            return this.indices_map_to_subset();\n        };\n        CDSView.prototype.indices_map_to_subset = function () {\n            var i, j, ref, results;\n            this.indices_map = {};\n            results = [];\n            for (i = j = 0, ref = this.indices.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                results.push(this.indices_map[this.indices[i]] = i);\n            }\n            return results;\n        };\n        CDSView.prototype.convert_selection_from_subset = function (selection_subset) {\n            var i, indices_1d, selection_full;\n            selection_full = hittest_1.create_hit_test_result();\n            selection_full.update_through_union(selection_subset);\n            indices_1d = function () {\n                var j, len, ref, results;\n                ref = selection_subset['1d']['indices'];\n                results = [];\n                for (j = 0, len = ref.length; j < len; j++) {\n                    i = ref[j];\n                    results.push(this.indices[i]);\n                }\n                return results;\n            }.call(this);\n            selection_full['1d']['indices'] = indices_1d;\n            return selection_full;\n        };\n        CDSView.prototype.convert_selection_to_subset = function (selection_full) {\n            var i, indices_1d, selection_subset;\n            selection_subset = hittest_1.create_hit_test_result();\n            selection_subset.update_through_union(selection_full);\n            indices_1d = function () {\n                var j, len, ref, results;\n                ref = selection_full['1d']['indices'];\n                results = [];\n                for (j = 0, len = ref.length; j < len; j++) {\n                    i = ref[j];\n                    results.push(this.indices_map[i]);\n                }\n                return results;\n            }.call(this);\n            selection_subset['1d']['indices'] = indices_1d;\n            return selection_subset;\n        };\n        CDSView.prototype.convert_indices_from_subset = function (indices) {\n            var i;\n            return function () {\n                var j, len, results;\n                results = [];\n                for (j = 0, len = indices.length; j < len; j++) {\n                    i = indices[j];\n                    results.push(this.indices[i]);\n                }\n                return results;\n            }.call(this);\n        };\n        return CDSView;\n    }(model_1.Model);\n    exports.CDSView = CDSView;\n    ;\n    CDSView.prototype.type = 'CDSView';\n    CDSView.define({\n        filters: [\n            p.Array,\n            []\n        ],\n        source: [p.Instance]\n    });\n    CDSView.internal({\n        indices: [\n            p.Array,\n            []\n        ],\n        indices_map: [\n            p.Any,\n            {}\n        ]\n    });    \n}","/*models/sources/column_data_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var hasProp = {}.hasOwnProperty;\n    var columnar_data_source_1 = require(174    /* ./columnar_data_source */);\n    var has_props_1 = require(8    /* core/has_props */);\n    var p = require(15    /* core/properties */);\n    var data_structures_1 = require(27    /* core/util/data_structures */);\n    var serialization = require(35    /* core/util/serialization */);\n    var types_1 = require(42    /* core/util/types */);\n    // exported for testing\n    exports.concat_typed_arrays = function (a, b) {\n        var c;\n        c = new a.constructor(a.length + b.length);\n        c.set(a, 0);\n        c.set(b, a.length);\n        return c;\n    };\n    //exported for testing\n    exports.stream_to_column = function (col, new_col, rollover) {\n        var end, i, l, m, ref, ref1, ref2, start, tmp, total_len;\n        // handle regular (non-typed) arrays\n        if (col.concat != null) {\n            col = col.concat(new_col);\n            if (col.length > rollover) {\n                col = col.slice(-rollover);\n            }\n            return col;\n        }\n        total_len = col.length + new_col.length;\n        // handle rollover case for typed arrays\n        if (rollover != null && total_len > rollover) {\n            start = total_len - rollover;\n            end = col.length;\n            // resize col if it is shorter than the rollover length\n            if (col.length < rollover) {\n                tmp = new col.constructor(rollover);\n                tmp.set(col, 0);\n                col = tmp;\n            }\n            // shift values in original col to accommodate new_col\n            for (i = l = ref = start, ref1 = end; ref <= ref1 ? l < ref1 : l > ref1; i = ref <= ref1 ? ++l : --l) {\n                col[i - start] = col[i];\n            }\n            // update end values in col with new_col\n            for (i = m = 0, ref2 = new_col.length; 0 <= ref2 ? m < ref2 : m > ref2; i = 0 <= ref2 ? ++m : --m) {\n                col[i + (end - start)] = new_col[i];\n            }\n            return col;\n        }\n        // handle non-rollover case for typed arrays\n        tmp = new col.constructor(new_col);\n        return exports.concat_typed_arrays(col, tmp);\n    };\n    // exported for testing\n    exports.slice = function (ind, length) {\n        var ref, ref1, ref2, start, step, stop;\n        if (types_1.isObject(ind)) {\n            return [\n                (ref = ind.start) != null ? ref : 0,\n                (ref1 = ind.stop) != null ? ref1 : length,\n                (ref2 = ind.step) != null ? ref2 : 1\n            ];\n        }\n        return _a = [\n            ind,\n            ind + 1,\n            1\n        ], start = _a[0], stop = _a[1], step = _a[2], _a;\n        var _a;\n    };\n    // exported for testing\n    exports.patch_to_column = function (col, patch, shapes) {\n        var flat_index, i, ind, istart, istep, istop, item, j, jstart, jstep, jstop, l, len, m, n, patched, patched_range, ref, ref1, ref2, ref3, ref4, ref5, shape, value;\n        patched = new data_structures_1.Set();\n        patched_range = false;\n        for (l = 0, len = patch.length; l < len; l++) {\n            _a = patch[l], ind = _a[0], value = _a[1];\n            // make the single index case look like the length-3 multi-index case\n            if (!types_1.isArray(ind)) {\n                if (types_1.isNumber(ind)) {\n                    value = [value];\n                    patched.push(ind);\n                } else {\n                    patched_range = true;\n                }\n                ind = [\n                    0,\n                    0,\n                    ind\n                ];\n                shape = [\n                    1,\n                    col.length\n                ];\n                item = col;\n            } else {\n                patched.push(ind[0]);\n                shape = shapes[ind[0]];\n                item = col[ind[0]];\n            }\n            // this is basically like NumPy's \"newaxis\", inserting an empty dimension\n            // makes length 2 and 3 multi-index cases uniform, so that the same code\n            // can handle both\n            if (ind.length === 2) {\n                shape = [\n                    1,\n                    shape[0]\n                ];\n                ind = [\n                    ind[0],\n                    0,\n                    ind[1]\n                ];\n            }\n            // now this one nested loop handles all cases\n            flat_index = 0;\n            _b = exports.slice(ind[1], shape[0]), istart = _b[0], istop = _b[1], istep = _b[2];\n            _c = exports.slice(ind[2], shape[1]), jstart = _c[0], jstop = _c[1], jstep = _c[2];\n            for (i = m = ref = istart, ref1 = istop, ref2 = istep; ref2 > 0 ? m < ref1 : m > ref1; i = m += ref2) {\n                for (j = n = ref3 = jstart, ref4 = jstop, ref5 = jstep; ref5 > 0 ? n < ref4 : n > ref4; j = n += ref5) {\n                    if (patched_range) {\n                        patched.push(j);\n                    }\n                    item[i * shape[1] + j] = value[flat_index];\n                    flat_index++;\n                }\n            }\n        }\n        return patched;\n        var _a, _b, _c;\n    };\n    var ColumnDataSource = function (_super) {\n        tslib_1.__extends(ColumnDataSource, _super);\n        function ColumnDataSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ColumnDataSource.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return _a = serialization.decode_column_data(this.data), this.data = _a[0], this._shapes = _a[1], _a;\n            var _a;\n        };\n        ColumnDataSource.prototype.attributes_as_json = function (include_defaults, value_to_json) {\n            if (include_defaults === void 0) {\n                include_defaults = true;\n            }\n            if (value_to_json === void 0) {\n                value_to_json = ColumnDataSource._value_to_json;\n            }\n            var attrs, key, ref, value;\n            attrs = {};\n            ref = this.serializable_attributes();\n            for (key in ref) {\n                if (!hasProp.call(ref, key))\n                    continue;\n                value = ref[key];\n                if (key === 'data') {\n                    value = serialization.encode_column_data(value, this._shapes);\n                }\n                if (include_defaults) {\n                    attrs[key] = value;\n                } else if (key in this._set_after_defaults) {\n                    attrs[key] = value;\n                }\n            }\n            return value_to_json('attributes', attrs, this);\n        };\n        ColumnDataSource._value_to_json = function (key, value, optional_parent_object) {\n            if (types_1.isObject(value) && key === 'data') {\n                return serialization.encode_column_data(value, optional_parent_object._shapes);\n            } else {\n                return has_props_1.HasProps._value_to_json(key, value, optional_parent_object);\n            }\n        };\n        ColumnDataSource.prototype.stream = function (new_data, rollover) {\n            var data, k, v;\n            data = this.data;\n            for (k in new_data) {\n                v = new_data[k];\n                data[k] = exports.stream_to_column(data[k], new_data[k], rollover);\n            }\n            this.setv({ data: data }, { silent: true });\n            return this.streaming.emit();\n        };\n        ColumnDataSource.prototype.patch = function (patches) {\n            var data, k, patch, patched;\n            data = this.data;\n            patched = new data_structures_1.Set();\n            for (k in patches) {\n                patch = patches[k];\n                patched = patched.union(exports.patch_to_column(data[k], patch, this._shapes[k]));\n            }\n            this.setv({ data: data }, { silent: true });\n            return this.patching.emit(patched.values);\n        };\n        return ColumnDataSource;\n    }(columnar_data_source_1.ColumnarDataSource);\n    exports.ColumnDataSource = ColumnDataSource;\n    ;\n    ColumnDataSource.prototype.type = 'ColumnDataSource';\n    ColumnDataSource.define({\n        data: [\n            p.Any,\n            {}\n        ]\n    });    \n}","/*models/sources/columnar_data_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var data_source_1 = require(175    /* ./data_source */);\n    var signaling_1 = require(20    /* core/signaling */);\n    var logging_1 = require(14    /* core/logging */);\n    var selection_manager_1 = require(17    /* core/selection_manager */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var ColumnarDataSource = function (_super) {\n        tslib_1.__extends(ColumnarDataSource, _super);\n        function ColumnarDataSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ColumnarDataSource.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this.select = new signaling_1.Signal(this, 'select');\n            this.inspect = new signaling_1.Signal(this, 'inspect');\n            // XXX: <[indices, tool, renderer-view, source, data], this>\n            this.streaming = new signaling_1.Signal(this, 'streaming');\n            return this.patching = new signaling_1.Signal(this, 'patching');    // <number[], ColumnarDataSource>\n        };\n        ColumnarDataSource.prototype.get_column = function (colname) {\n            var ref;\n            return (ref = this.data[colname]) != null ? ref : null;\n        };\n        ColumnarDataSource.prototype.columns = function () {\n            // return the column names in this data source\n            return Object.keys(this.data);\n        };\n        ColumnarDataSource.prototype.get_length = function (soft) {\n            if (soft === void 0) {\n                soft = true;\n            }\n            var _key, lengths, msg, val;\n            lengths = array_1.uniq(function () {\n                var ref, results;\n                ref = this.data;\n                results = [];\n                for (_key in ref) {\n                    val = ref[_key];\n                    results.push(val.length);\n                }\n                return results;\n            }.call(this));\n            switch (lengths.length) {\n            case 0:\n                return null;\n            // XXX: don't guess, treat on case-by-case basis\n            case 1:\n                return lengths[0];\n            default:\n                msg = 'data source has columns of inconsistent lengths';\n                if (soft) {\n                    logging_1.logger.warn(msg);\n                    return lengths.sort()[0];\n                } else {\n                    throw new Error(msg);\n                }\n            }\n        };\n        ColumnarDataSource.prototype.get_indices = function () {\n            var i, length, results;\n            length = this.get_length();\n            if (length == null) {\n                length = 1;\n            }\n            return function () {\n                results = [];\n                for (var i = 0; 0 <= length ? i < length : i > length; 0 <= length ? i++ : i--) {\n                    results.push(i);\n                }\n                return results;\n            }.apply(this);\n        };\n        return ColumnarDataSource;\n    }(data_source_1.DataSource);\n    exports.ColumnarDataSource = ColumnarDataSource;\n    ;\n    ColumnarDataSource.prototype.type = 'ColumnarDataSource';\n    ColumnarDataSource.define({\n        column_names: [\n            p.Array,\n            []\n        ]\n    });\n    ColumnarDataSource.internal({\n        selection_manager: [\n            p.Instance,\n            function (self) {\n                return new selection_manager_1.SelectionManager({ source: self });\n            }\n        ],\n        inspected: [p.Any],\n        _shapes: [\n            p.Any,\n            {}\n        ]\n    });    \n}","/*models/sources/data_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    var hittest = require(9    /* core/hittest */);\n    var p = require(15    /* core/properties */);\n    var types_1 = require(42    /* core/util/types */);\n    var DataSource = function (_super) {\n        tslib_1.__extends(DataSource, _super);\n        function DataSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DataSource.prototype.initialize = function (options) {\n            var _this = this;\n            _super.prototype.initialize.call(this, options);\n            return this.connect(this.properties.selected.change, function () {\n                var callback;\n                callback = _this.callback;\n                if (callback != null) {\n                    if (types_1.isFunction(callback)) {\n                        return callback(_this);\n                    } else {\n                        return callback.execute(_this);\n                    }\n                }\n            });\n        };\n        return DataSource;\n    }(model_1.Model);\n    exports.DataSource = DataSource;\n    ;\n    DataSource.prototype.type = 'DataSource';\n    DataSource.define({\n        selected: [\n            p.Any,\n            hittest.create_hit_test_result()    // TODO (bev)\n        ],\n        callback: [p.Any]    // TODO: p.Either(p.Instance(Callback), p.Function) ]\n    });    \n}","/*models/sources/geojson_data_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var columnar_data_source_1 = require(174    /* ./columnar_data_source */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var GeoJSONDataSource = function (_super) {\n        tslib_1.__extends(GeoJSONDataSource, _super);\n        function GeoJSONDataSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        GeoJSONDataSource.prototype.initialize = function (options) {\n            var _this = this;\n            _super.prototype.initialize.call(this, options);\n            this._update_data();\n            return this.connect(this.properties.geojson.change, function () {\n                return _this._update_data();\n            });\n        };\n        GeoJSONDataSource.prototype._update_data = function () {\n            return this.data = this.geojson_to_column_data();\n        };\n        GeoJSONDataSource.prototype._get_new_list_array = function (length) {\n            var i, k, ref, results;\n            results = [];\n            for (i = k = 0, ref = length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                results.push([]);\n            }\n            return results;\n        };\n        GeoJSONDataSource.prototype._get_new_nan_array = function (length) {\n            var i, k, ref, results;\n            results = [];\n            for (i = k = 0, ref = length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                results.push(0 / 0);\n            }\n            return results;\n        };\n        GeoJSONDataSource.prototype._flatten_function = function (accumulator, currentItem) {\n            return accumulator.concat([[\n                    0 / 0,\n                    0 / 0,\n                    0 / 0\n                ]]).concat(currentItem);\n        };\n        GeoJSONDataSource.prototype._add_properties = function (item, data, i, item_count) {\n            var property, results;\n            results = [];\n            for (property in item.properties) {\n                if (!data.hasOwnProperty(property)) {\n                    data[property] = this._get_new_nan_array(item_count);\n                }\n                results.push(data[property][i] = item.properties[property]);\n            }\n            return results;\n        };\n        GeoJSONDataSource.prototype._add_geometry = function (geometry, data, i) {\n            var coord_list, coords, exterior_ring, exterior_rings, flattened_coord_list, j, k, l, len, len1, len2, len3, len4, m, n, o, polygon, ref, ref1, ref2, ref3, ref4, ref5, results, results1, results2, results3;\n            switch (geometry.type) {\n            case 'Point':\n                coords = geometry.coordinates;\n                data.x[i] = coords[0];\n                data.y[i] = coords[1];\n                return data.z[i] = (ref = coords[2]) != null ? ref : 0 / 0;\n            case 'LineString':\n                coord_list = geometry.coordinates;\n                results = [];\n                for (j = k = 0, len = coord_list.length; k < len; j = ++k) {\n                    coords = coord_list[j];\n                    data.xs[i][j] = coords[0];\n                    data.ys[i][j] = coords[1];\n                    results.push(data.zs[i][j] = (ref1 = coords[2]) != null ? ref1 : 0 / 0);\n                }\n                return results;\n                break;\n            case 'Polygon':\n                if (geometry.coordinates.length > 1) {\n                    logging_1.logger.warn('Bokeh does not support Polygons with holes in, only exterior ring used.');\n                }\n                exterior_ring = geometry.coordinates[0];\n                results1 = [];\n                for (j = l = 0, len1 = exterior_ring.length; l < len1; j = ++l) {\n                    coords = exterior_ring[j];\n                    data.xs[i][j] = coords[0];\n                    data.ys[i][j] = coords[1];\n                    results1.push(data.zs[i][j] = (ref2 = coords[2]) != null ? ref2 : 0 / 0);\n                }\n                return results1;\n                break;\n            case 'MultiPoint':\n                return logging_1.logger.warn('MultiPoint not supported in Bokeh');\n            case 'MultiLineString':\n                flattened_coord_list = geometry.coordinates.reduce(this._flatten_function);\n                results2 = [];\n                for (j = m = 0, len2 = flattened_coord_list.length; m < len2; j = ++m) {\n                    coords = flattened_coord_list[j];\n                    data.xs[i][j] = coords[0];\n                    data.ys[i][j] = coords[1];\n                    results2.push(data.zs[i][j] = (ref3 = coords[2]) != null ? ref3 : 0 / 0);\n                }\n                return results2;\n                break;\n            case 'MultiPolygon':\n                exterior_rings = [];\n                ref4 = geometry.coordinates;\n                for (n = 0, len3 = ref4.length; n < len3; n++) {\n                    polygon = ref4[n];\n                    if (polygon.length > 1) {\n                        logging_1.logger.warn('Bokeh does not support Polygons with holes in, only exterior ring used.');\n                    }\n                    exterior_rings.push(polygon[0]);\n                }\n                flattened_coord_list = exterior_rings.reduce(this._flatten_function);\n                results3 = [];\n                for (j = o = 0, len4 = flattened_coord_list.length; o < len4; j = ++o) {\n                    coords = flattened_coord_list[j];\n                    data.xs[i][j] = coords[0];\n                    data.ys[i][j] = coords[1];\n                    results3.push(data.zs[i][j] = (ref5 = coords[2]) != null ? ref5 : 0 / 0);\n                }\n                return results3;\n                break;\n            default:\n                throw new Error('Invalid type ' + geometry.type);\n            }\n        };\n        GeoJSONDataSource.prototype._get_items_length = function (items) {\n            var count, g, geometry, i, item, j, k, l, len, len1, ref;\n            count = 0;\n            for (i = k = 0, len = items.length; k < len; i = ++k) {\n                item = items[i];\n                geometry = item.type === 'Feature' ? item.geometry : item;\n                if (geometry.type === 'GeometryCollection') {\n                    ref = geometry.geometries;\n                    for (j = l = 0, len1 = ref.length; l < len1; j = ++l) {\n                        g = ref[j];\n                        count += 1;\n                    }\n                } else {\n                    count += 1;\n                }\n            }\n            return count;\n        };\n        GeoJSONDataSource.prototype.geojson_to_column_data = function () {\n            var arr_index, data, g, geojson, geometry, i, item, item_count, items, j, k, l, len, len1, ref, ref1;\n            geojson = JSON.parse(this.geojson);\n            if ((ref = geojson.type) !== 'GeometryCollection' && ref !== 'FeatureCollection') {\n                throw new Error('Bokeh only supports type GeometryCollection and FeatureCollection at top level');\n            }\n            if (geojson.type === 'GeometryCollection') {\n                if (geojson.geometries == null) {\n                    throw new Error('No geometries found in GeometryCollection');\n                }\n                if (geojson.geometries.length === 0) {\n                    throw new Error('geojson.geometries must have one or more items');\n                }\n                items = geojson.geometries;\n            }\n            if (geojson.type === 'FeatureCollection') {\n                if (geojson.features == null) {\n                    throw new Error('No features found in FeaturesCollection');\n                }\n                if (geojson.features.length === 0) {\n                    throw new Error('geojson.features must have one or more items');\n                }\n                items = geojson.features;\n            }\n            item_count = this._get_items_length(items);\n            data = {\n                'x': this._get_new_nan_array(item_count),\n                'y': this._get_new_nan_array(item_count),\n                'z': this._get_new_nan_array(item_count),\n                'xs': this._get_new_list_array(item_count),\n                'ys': this._get_new_list_array(item_count),\n                'zs': this._get_new_list_array(item_count)\n            };\n            arr_index = 0;\n            for (i = k = 0, len = items.length; k < len; i = ++k) {\n                item = items[i];\n                geometry = item.type === 'Feature' ? item.geometry : item;\n                if (geometry.type === 'GeometryCollection') {\n                    ref1 = geometry.geometries;\n                    for (j = l = 0, len1 = ref1.length; l < len1; j = ++l) {\n                        g = ref1[j];\n                        this._add_geometry(g, data, arr_index);\n                        if (item.type === 'Feature') {\n                            this._add_properties(item, data, arr_index, item_count);\n                        }\n                        arr_index += 1;\n                    }\n                } else {\n                    // Now populate based on Geometry type\n                    this._add_geometry(geometry, data, arr_index);\n                    if (item.type === 'Feature') {\n                        this._add_properties(item, data, arr_index, item_count);\n                    }\n                    arr_index += 1;\n                }\n            }\n            return data;\n        };\n        return GeoJSONDataSource;\n    }(columnar_data_source_1.ColumnarDataSource);\n    exports.GeoJSONDataSource = GeoJSONDataSource;\n    ;\n    GeoJSONDataSource.prototype.type = 'GeoJSONDataSource';\n    GeoJSONDataSource.define({\n        geojson: [p.Any]    // TODO (bev)\n    });\n    GeoJSONDataSource.internal({\n        data: [\n            p.Any,\n            {}\n        ]\n    });    \n}","/*models/sources/index*/\nfunction _(require, module, exports) {\n    var ajax_data_source_1 = require(171    /* ./ajax_data_source */);\n    exports.AjaxDataSource = ajax_data_source_1.AjaxDataSource;\n    var column_data_source_1 = require(173    /* ./column_data_source */);\n    exports.ColumnDataSource = column_data_source_1.ColumnDataSource;\n    var columnar_data_source_1 = require(174    /* ./columnar_data_source */);\n    exports.ColumnarDataSource = columnar_data_source_1.ColumnarDataSource;\n    var cds_view_1 = require(172    /* ./cds_view */);\n    exports.CDSView = cds_view_1.CDSView;\n    var data_source_1 = require(175    /* ./data_source */);\n    exports.DataSource = data_source_1.DataSource;\n    var geojson_data_source_1 = require(176    /* ./geojson_data_source */);\n    exports.GeoJSONDataSource = geojson_data_source_1.GeoJSONDataSource;\n    var remote_data_source_1 = require(178    /* ./remote_data_source */);\n    exports.RemoteDataSource = remote_data_source_1.RemoteDataSource;    \n}","/*models/sources/remote_data_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var column_data_source_1 = require(173    /* ./column_data_source */);\n    var p = require(15    /* core/properties */);\n    var RemoteDataSource = function (_super) {\n        tslib_1.__extends(RemoteDataSource, _super);\n        function RemoteDataSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return RemoteDataSource;\n    }(column_data_source_1.ColumnDataSource);\n    exports.RemoteDataSource = RemoteDataSource;\n    ;\n    RemoteDataSource.prototype.type = 'RemoteDataSource';\n    RemoteDataSource.define({\n        data_url: [p.String],\n        polling_interval: [p.Number]\n    });    \n}","/*models/tickers/adaptive_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var continuous_ticker_1 = require(183    /* ./continuous_ticker */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    // Forces a number x into a specified range [min_val, max_val].\n    function clamp(x, min_val, max_val) {\n        return Math.max(min_val, Math.min(max_val, x));\n    }\n    // A log function with an optional base.\n    function log(x, base) {\n        if (base === void 0) {\n            base = Math.E;\n        }\n        return Math.log(x) / Math.log(base);\n    }\n    // This Ticker produces nice round ticks at any magnitude.\n    // AdaptiveTicker([1, 2, 5]) will choose the best tick interval from the\n    // following:\n    // ..., 0.1, 0.2, 0.5, 1, 2, 5, 10, 20, 50, 100, ...\n    var AdaptiveTicker = function (_super) {\n        tslib_1.__extends(AdaptiveTicker, _super);\n        function AdaptiveTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        // These arguments control the range of possible intervals.  The interval I\n        // returned by get_interval() will be the one that most closely matches the\n        // desired number of ticks, subject to the following constraints:\n        // I = (M * B^N), where\n        // M is a member of mantissas,\n        // B is base,\n        // and N is an integer;\n        // and min_interval <= I <= max_interval.\n        AdaptiveTicker.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            var prefix_mantissa = array_1.nth(this.mantissas, -1) / this.base;\n            var suffix_mantissa = array_1.nth(this.mantissas, 0) * this.base;\n            this.extended_mantissas = [prefix_mantissa].concat(this.mantissas, [suffix_mantissa]);\n            this.base_factor = this.get_min_interval() === 0 ? 1 : this.get_min_interval();\n        };\n        AdaptiveTicker.prototype.get_interval = function (data_low, data_high, desired_n_ticks) {\n            var data_range = data_high - data_low;\n            var ideal_interval = this.get_ideal_interval(data_low, data_high, desired_n_ticks);\n            var interval_exponent = Math.floor(log(ideal_interval / this.base_factor, this.base));\n            var ideal_magnitude = Math.pow(this.base, interval_exponent) * this.base_factor;\n            // An untested optimization.\n            //   const ideal_mantissa = ideal_interval / ideal_magnitude\n            //   index = sortedIndex(this.extended_mantissas, ideal_mantissa)\n            //   candidate_mantissas = this.extended_mantissas[index..index + 1]\n            var candidate_mantissas = this.extended_mantissas;\n            var errors = candidate_mantissas.map(function (mantissa) {\n                return Math.abs(desired_n_ticks - data_range / (mantissa * ideal_magnitude));\n            });\n            var best_mantissa = candidate_mantissas[array_1.argmin(errors)];\n            var interval = best_mantissa * ideal_magnitude;\n            return clamp(interval, this.get_min_interval(), this.get_max_interval());\n        };\n        return AdaptiveTicker;\n    }(continuous_ticker_1.ContinuousTicker);\n    exports.AdaptiveTicker = AdaptiveTicker;\n    AdaptiveTicker.prototype.type = 'AdaptiveTicker';\n    AdaptiveTicker.define({\n        base: [\n            p.Number,\n            10\n        ],\n        mantissas: [\n            p.Array,\n            [\n                1,\n                2,\n                5\n            ]\n        ],\n        min_interval: [\n            p.Number,\n            0\n        ],\n        max_interval: [p.Number]\n    });    \n}","/*models/tickers/basic_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var adaptive_ticker_1 = require(179    /* ./adaptive_ticker */);\n    var BasicTicker = function (_super) {\n        tslib_1.__extends(BasicTicker, _super);\n        function BasicTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return BasicTicker;\n    }(adaptive_ticker_1.AdaptiveTicker);\n    exports.BasicTicker = BasicTicker;\n    BasicTicker.prototype.type = 'BasicTicker';    \n}","/*models/tickers/categorical_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var ticker_1 = require(192    /* ./ticker */);\n    var CategoricalTicker = function (_super) {\n        tslib_1.__extends(CategoricalTicker, _super);\n        function CategoricalTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CategoricalTicker.prototype.get_ticks = function (start, end, range, _cross_loc, _) {\n            var majors = this._collect(range.factors, range, start, end);\n            var tops = this._collect(range.tops || [], range, start, end);\n            var mids = this._collect(range.mids || [], range, start, end);\n            return {\n                major: majors,\n                minor: [],\n                tops: tops,\n                mids: mids\n            };\n        };\n        CategoricalTicker.prototype._collect = function (factors, range, start, end) {\n            var result = [];\n            for (var _i = 0, factors_1 = factors; _i < factors_1.length; _i++) {\n                var factor = factors_1[_i];\n                var coord = range.synthetic(factor);\n                if (coord > start && coord < end)\n                    result.push(factor);\n            }\n            return result;\n        };\n        return CategoricalTicker;\n    }(ticker_1.Ticker);\n    exports.CategoricalTicker = CategoricalTicker;\n    CategoricalTicker.prototype.type = 'CategoricalTicker';    \n}","/*models/tickers/composite_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var continuous_ticker_1 = require(183    /* ./continuous_ticker */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var object_1 = require(30    /* core/util/object */);\n    // This Ticker takes a collection of Tickers and picks the one most appropriate\n    // for a given range.\n    var CompositeTicker = function (_super) {\n        tslib_1.__extends(CompositeTicker, _super);\n        function CompositeTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Object.defineProperty(CompositeTicker.prototype, 'min_intervals', {\n            // The tickers should be in order of increasing interval size; specifically,\n            // if S comes before T, then it should be the case that\n            // S.get_max_interval() < T.get_min_interval().\n            // FIXME Enforce this automatically.\n            get: function () {\n                return this.tickers.map(function (ticker) {\n                    return ticker.get_min_interval();\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CompositeTicker.prototype, 'max_intervals', {\n            get: function () {\n                return this.tickers.map(function (ticker) {\n                    return ticker.get_max_interval();\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CompositeTicker.prototype, 'min_interval', {\n            get: function () {\n                return this.min_intervals[0];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CompositeTicker.prototype, 'max_interval', {\n            get: function () {\n                return this.max_intervals[0];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        CompositeTicker.prototype.get_best_ticker = function (data_low, data_high, desired_n_ticks) {\n            var data_range = data_high - data_low;\n            var ideal_interval = this.get_ideal_interval(data_low, data_high, desired_n_ticks);\n            var ticker_ndxs = [\n                array_1.sortedIndex(this.min_intervals, ideal_interval) - 1,\n                array_1.sortedIndex(this.max_intervals, ideal_interval)\n            ];\n            var intervals = [\n                this.min_intervals[ticker_ndxs[0]],\n                this.max_intervals[ticker_ndxs[1]]\n            ];\n            var errors = intervals.map(function (interval) {\n                return Math.abs(desired_n_ticks - data_range / interval);\n            });\n            var best_ticker;\n            if (object_1.isEmpty(errors.filter(function (e) {\n                    return !isNaN(e);\n                }))) {\n                // this can happen if the data isn't loaded yet, we just default to the first scale\n                best_ticker = this.tickers[0];\n            } else {\n                var best_index = array_1.argmin(errors);\n                var best_ticker_ndx = ticker_ndxs[best_index];\n                best_ticker = this.tickers[best_ticker_ndx];\n            }\n            return best_ticker;\n        };\n        CompositeTicker.prototype.get_interval = function (data_low, data_high, desired_n_ticks) {\n            var best_ticker = this.get_best_ticker(data_low, data_high, desired_n_ticks);\n            return best_ticker.get_interval(data_low, data_high, desired_n_ticks);\n        };\n        CompositeTicker.prototype.get_ticks_no_defaults = function (data_low, data_high, cross_loc, desired_n_ticks) {\n            var best_ticker = this.get_best_ticker(data_low, data_high, desired_n_ticks);\n            return best_ticker.get_ticks_no_defaults(data_low, data_high, cross_loc, desired_n_ticks);\n        };\n        return CompositeTicker;\n    }(continuous_ticker_1.ContinuousTicker);\n    exports.CompositeTicker = CompositeTicker;\n    CompositeTicker.prototype.type = 'CompositeTicker';\n    CompositeTicker.define({\n        tickers: [\n            p.Array,\n            []\n        ]\n    });    \n}","/*models/tickers/continuous_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var ticker_1 = require(192    /* ./ticker */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var types_1 = require(42    /* core/util/types */);\n    // The base class for all Ticker objects.  It needs to be subclassed before\n    // being used.  The simplest subclass is SingleIntervalTicker.\n    //\n    // The main value of a Ticker is its get_ticks() method, which takes a min and\n    // max value and (optionally) a desired number of ticks, and returns an array\n    // of approximately that many ticks, evenly spaced, with nice round values,\n    // within that range.\n    //\n    // Different Tickers are suited to different types of data or different\n    // magnitudes.  To make it possible to select Tickers programmatically, they\n    // also support some additional methods: get_interval(), get_min_interval(),\n    // and get_max_interval().\n    var ContinuousTicker = function (_super) {\n        tslib_1.__extends(ContinuousTicker, _super);\n        function ContinuousTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ContinuousTicker.prototype.get_ticks = function (data_low, data_high, _range, cross_loc, _) {\n            return this.get_ticks_no_defaults(data_low, data_high, cross_loc, this.desired_num_ticks);\n        };\n        // The version of get_ticks() that does the work (and the version that\n        // should be overridden in subclasses).\n        ContinuousTicker.prototype.get_ticks_no_defaults = function (data_low, data_high, _cross_loc, desired_n_ticks) {\n            var interval = this.get_interval(data_low, data_high, desired_n_ticks);\n            var start_factor = Math.floor(data_low / interval);\n            var end_factor = Math.ceil(data_high / interval);\n            var factors;\n            if (types_1.isStrictNaN(start_factor) || types_1.isStrictNaN(end_factor))\n                factors = [];\n            else\n                factors = array_1.range(start_factor, end_factor + 1);\n            var ticks = factors.map(function (factor) {\n                return factor * interval;\n            }).filter(function (tick) {\n                return data_low <= tick && tick <= data_high;\n            });\n            var num_minor_ticks = this.num_minor_ticks;\n            var minor_ticks = [];\n            if (num_minor_ticks > 0 && ticks.length > 0) {\n                var minor_interval_1 = interval / num_minor_ticks;\n                var minor_offsets = array_1.range(0, num_minor_ticks).map(function (i) {\n                    return i * minor_interval_1;\n                });\n                for (var _i = 0, _a = minor_offsets.slice(1); _i < _a.length; _i++) {\n                    var x = _a[_i];\n                    minor_ticks.push(ticks[0] - x);\n                }\n                for (var _b = 0, ticks_1 = ticks; _b < ticks_1.length; _b++) {\n                    var tick = ticks_1[_b];\n                    for (var _c = 0, minor_offsets_1 = minor_offsets; _c < minor_offsets_1.length; _c++) {\n                        var x = minor_offsets_1[_c];\n                        minor_ticks.push(tick + x);\n                    }\n                }\n            }\n            return {\n                major: ticks,\n                minor: minor_ticks\n            };\n        };\n        // Returns the smallest interval that can be returned by get_interval().\n        ContinuousTicker.prototype.get_min_interval = function () {\n            return this.min_interval;\n        };\n        // Returns the largest interval that can be returned by get_interval().\n        ContinuousTicker.prototype.get_max_interval = function () {\n            return this.max_interval != null ? this.max_interval : Infinity;\n        };\n        // Returns the interval size that would produce exactly the number of\n        // desired ticks.  (In general we won't use exactly this interval, because\n        // we want the ticks to be round numbers.)\n        ContinuousTicker.prototype.get_ideal_interval = function (data_low, data_high, desired_n_ticks) {\n            var data_range = data_high - data_low;\n            return data_range / desired_n_ticks;\n        };\n        return ContinuousTicker;\n    }(ticker_1.Ticker);\n    exports.ContinuousTicker = ContinuousTicker;\n    ContinuousTicker.prototype.type = 'ContinuousTicker';\n    ContinuousTicker.define({\n        num_minor_ticks: [\n            p.Number,\n            5\n        ],\n        desired_num_ticks: [\n            p.Number,\n            6\n        ]\n    });    \n}","/*models/tickers/datetime_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var array_1 = require(22    /* core/util/array */);\n    var adaptive_ticker_1 = require(179    /* ./adaptive_ticker */);\n    var composite_ticker_1 = require(182    /* ./composite_ticker */);\n    var days_ticker_1 = require(185    /* ./days_ticker */);\n    var months_ticker_1 = require(190    /* ./months_ticker */);\n    var years_ticker_1 = require(194    /* ./years_ticker */);\n    var util_1 = require(193    /* ./util */);\n    // This is a decent ticker for time data (in milliseconds).\n    // It could certainly be improved:\n    // FIXME There should probably be a special ticker for years.\n    // FIXME Some of the adaptive tickers probably have too many mantissas, which\n    // leads to too-frequent tick transitions.\n    var DatetimeTicker = function (_super) {\n        tslib_1.__extends(DatetimeTicker, _super);\n        function DatetimeTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return DatetimeTicker;\n    }(composite_ticker_1.CompositeTicker);\n    exports.DatetimeTicker = DatetimeTicker;\n    DatetimeTicker.prototype.type = 'DatetimeTicker';\n    DatetimeTicker.override({\n        num_minor_ticks: 0,\n        tickers: function () {\n            return [\n                // Sub-second.\n                new adaptive_ticker_1.AdaptiveTicker({\n                    mantissas: [\n                        1,\n                        2,\n                        5\n                    ],\n                    base: 10,\n                    min_interval: 0,\n                    max_interval: 500 * util_1.ONE_MILLI,\n                    num_minor_ticks: 0\n                }),\n                // Seconds, minutes.\n                new adaptive_ticker_1.AdaptiveTicker({\n                    mantissas: [\n                        1,\n                        2,\n                        5,\n                        10,\n                        15,\n                        20,\n                        30\n                    ],\n                    base: 60,\n                    min_interval: util_1.ONE_SECOND,\n                    max_interval: 30 * util_1.ONE_MINUTE,\n                    num_minor_ticks: 0\n                }),\n                // Hours.\n                new adaptive_ticker_1.AdaptiveTicker({\n                    mantissas: [\n                        1,\n                        2,\n                        4,\n                        6,\n                        8,\n                        12\n                    ],\n                    base: 24,\n                    min_interval: util_1.ONE_HOUR,\n                    max_interval: 12 * util_1.ONE_HOUR,\n                    num_minor_ticks: 0\n                }),\n                // Days.\n                new days_ticker_1.DaysTicker({ days: array_1.range(1, 32) }),\n                new days_ticker_1.DaysTicker({ days: array_1.range(1, 31, 3) }),\n                new days_ticker_1.DaysTicker({\n                    days: [\n                        1,\n                        8,\n                        15,\n                        22\n                    ]\n                }),\n                new days_ticker_1.DaysTicker({\n                    days: [\n                        1,\n                        15\n                    ]\n                }),\n                // Months.\n                new months_ticker_1.MonthsTicker({ months: array_1.range(0, 12, 1) }),\n                new months_ticker_1.MonthsTicker({ months: array_1.range(0, 12, 2) }),\n                new months_ticker_1.MonthsTicker({ months: array_1.range(0, 12, 4) }),\n                new months_ticker_1.MonthsTicker({ months: array_1.range(0, 12, 6) }),\n                // Years\n                new years_ticker_1.YearsTicker({})\n            ];\n        }\n    });    \n}","/*models/tickers/days_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var single_interval_ticker_1 = require(191    /* ./single_interval_ticker */);\n    var util_1 = require(193    /* ./util */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    // Given a start and end time in millis, returns the shortest array of\n    // consecutive months (as Dates) that surrounds both times.\n    function date_range_by_month(start_time, end_time) {\n        var start_date = util_1.last_month_no_later_than(new Date(start_time));\n        var end_date = util_1.last_month_no_later_than(new Date(end_time));\n        // XXX This is not a reliable technique in general, but it should be\n        // safe when the day of the month is 1.  (The problem case is this:\n        // Mar 31 -> Apr 31, which becomes May 1.)\n        end_date.setUTCMonth(end_date.getUTCMonth() + 1);\n        var dates = [];\n        var date = start_date;\n        while (true) {\n            dates.push(util_1.copy_date(date));\n            date.setUTCMonth(date.getUTCMonth() + 1);\n            if (date > end_date)\n                break;\n        }\n        return dates;\n    }\n    // A DaysTicker produces ticks from a fixed subset of calendar days.\n    // E.g., DaysTicker([1, 15]) produces ticks on the 1st and 15th days of each\n    // month.\n    var DaysTicker = function (_super) {\n        tslib_1.__extends(DaysTicker, _super);\n        function DaysTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DaysTicker.prototype.initialize = function (attrs, options) {\n            attrs.num_minor_ticks = 0;\n            _super.prototype.initialize.call(this, attrs, options);\n            var days = this.days;\n            if (days.length > 1)\n                this.interval = (days[1] - days[0]) * util_1.ONE_DAY;\n            else\n                this.interval = 31 * util_1.ONE_DAY;\n        };\n        DaysTicker.prototype.get_ticks_no_defaults = function (data_low, data_high, _cross_loc, _desired_n_ticks) {\n            var month_dates = date_range_by_month(data_low, data_high);\n            var days = this.days;\n            var days_of_month = function (month_date, interval) {\n                var dates = [];\n                for (var _i = 0, days_1 = days; _i < days_1.length; _i++) {\n                    var day = days_1[_i];\n                    var day_date = util_1.copy_date(month_date);\n                    day_date.setUTCDate(day);\n                    // We can't use all of the values in this.days, because they may not\n                    // fall within the current month.  In fact, if, e.g., our month is 28 days\n                    // and we're marking every third day, we don't want day 28 to show up\n                    // because it'll be right next to the 1st of the next month.  So we\n                    // make sure we have a bit of room before we include a day.\n                    var future_date = new Date(day_date.getTime() + interval / 2);\n                    if (future_date.getUTCMonth() == month_date.getUTCMonth())\n                        dates.push(day_date);\n                }\n                return dates;\n            };\n            var interval = this.interval;\n            var day_dates = array_1.concat(month_dates.map(function (date) {\n                return days_of_month(date, interval);\n            }));\n            var all_ticks = day_dates.map(function (day_date) {\n                return day_date.getTime();\n            });\n            // FIXME Since the ticks are sorted, this could be done more efficiently.\n            var ticks_in_range = all_ticks.filter(function (tick) {\n                return data_low <= tick && tick <= data_high;\n            });\n            return {\n                major: ticks_in_range,\n                minor: []\n            };\n        };\n        return DaysTicker;\n    }(single_interval_ticker_1.SingleIntervalTicker);\n    exports.DaysTicker = DaysTicker;\n    DaysTicker.prototype.type = 'DaysTicker';\n    DaysTicker.define({\n        days: [\n            p.Array,\n            []\n        ]\n    });    \n}","/*models/tickers/fixed_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var continuous_ticker_1 = require(183    /* ./continuous_ticker */);\n    var p = require(15    /* core/properties */);\n    var FixedTicker = function (_super) {\n        tslib_1.__extends(FixedTicker, _super);\n        function FixedTicker() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.min_interval = 0;\n            _this.max_interval = 0;\n            return _this;    //\n        }\n        FixedTicker.prototype.get_ticks_no_defaults = function (_data_low, _data_high, _cross_loc, _desired_n_ticks) {\n            return {\n                major: this.ticks,\n                minor: []\n            };\n        };\n        // XXX: whatever, because FixedTicker needs to fullfill the interface somehow\n        FixedTicker.prototype.get_interval = function (_data_low, _data_high, _desired_n_ticks) {\n            return 0;\n        };\n        return FixedTicker;\n    }(continuous_ticker_1.ContinuousTicker);\n    exports.FixedTicker = FixedTicker;\n    FixedTicker.prototype.type = 'FixedTicker';\n    FixedTicker.define({\n        ticks: [\n            p.Array,\n            []\n        ]\n    });    \n}","/*models/tickers/index*/\nfunction _(require, module, exports) {\n    var adaptive_ticker_1 = require(179    /* ./adaptive_ticker */);\n    exports.AdaptiveTicker = adaptive_ticker_1.AdaptiveTicker;\n    var basic_ticker_1 = require(180    /* ./basic_ticker */);\n    exports.BasicTicker = basic_ticker_1.BasicTicker;\n    var categorical_ticker_1 = require(181    /* ./categorical_ticker */);\n    exports.CategoricalTicker = categorical_ticker_1.CategoricalTicker;\n    var composite_ticker_1 = require(182    /* ./composite_ticker */);\n    exports.CompositeTicker = composite_ticker_1.CompositeTicker;\n    var continuous_ticker_1 = require(183    /* ./continuous_ticker */);\n    exports.ContinuousTicker = continuous_ticker_1.ContinuousTicker;\n    var datetime_ticker_1 = require(184    /* ./datetime_ticker */);\n    exports.DatetimeTicker = datetime_ticker_1.DatetimeTicker;\n    var days_ticker_1 = require(185    /* ./days_ticker */);\n    exports.DaysTicker = days_ticker_1.DaysTicker;\n    var fixed_ticker_1 = require(186    /* ./fixed_ticker */);\n    exports.FixedTicker = fixed_ticker_1.FixedTicker;\n    var log_ticker_1 = require(188    /* ./log_ticker */);\n    exports.LogTicker = log_ticker_1.LogTicker;\n    var mercator_ticker_1 = require(189    /* ./mercator_ticker */);\n    exports.MercatorTicker = mercator_ticker_1.MercatorTicker;\n    var months_ticker_1 = require(190    /* ./months_ticker */);\n    exports.MonthsTicker = months_ticker_1.MonthsTicker;\n    var single_interval_ticker_1 = require(191    /* ./single_interval_ticker */);\n    exports.SingleIntervalTicker = single_interval_ticker_1.SingleIntervalTicker;\n    var ticker_1 = require(192    /* ./ticker */);\n    exports.Ticker = ticker_1.Ticker;\n    var years_ticker_1 = require(194    /* ./years_ticker */);\n    exports.YearsTicker = years_ticker_1.YearsTicker;    \n}","/*models/tickers/log_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var array_1 = require(22    /* core/util/array */);\n    var adaptive_ticker_1 = require(179    /* ./adaptive_ticker */);\n    var LogTicker = function (_super) {\n        tslib_1.__extends(LogTicker, _super);\n        function LogTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LogTicker.prototype.get_ticks_no_defaults = function (data_low, data_high, _cross_loc, desired_n_ticks) {\n            var num_minor_ticks = this.num_minor_ticks;\n            var minor_ticks = [];\n            var base = this.base;\n            var log_low = Math.log(data_low) / Math.log(base);\n            var log_high = Math.log(data_high) / Math.log(base);\n            var log_interval = log_high - log_low;\n            var ticks;\n            if (!isFinite(log_interval)) {\n                ticks = [];\n            } else if (log_interval < 2) {\n                var interval_1 = this.get_interval(data_low, data_high, desired_n_ticks);\n                var start_factor = Math.floor(data_low / interval_1);\n                var end_factor = Math.ceil(data_high / interval_1);\n                ticks = array_1.range(start_factor, end_factor + 1).filter(function (factor) {\n                    return factor != 0;\n                }).map(function (factor) {\n                    return factor * interval_1;\n                }).filter(function (tick) {\n                    return data_low <= tick && tick <= data_high;\n                });\n                if (num_minor_ticks > 0 && ticks.length > 0) {\n                    var minor_interval_1 = interval_1 / num_minor_ticks;\n                    var minor_offsets = array_1.range(0, num_minor_ticks).map(function (i) {\n                        return i * minor_interval_1;\n                    });\n                    for (var _i = 0, _a = minor_offsets.slice(1); _i < _a.length; _i++) {\n                        var x = _a[_i];\n                        minor_ticks.push(ticks[0] - x);\n                    }\n                    for (var _b = 0, ticks_1 = ticks; _b < ticks_1.length; _b++) {\n                        var tick = ticks_1[_b];\n                        for (var _c = 0, minor_offsets_1 = minor_offsets; _c < minor_offsets_1.length; _c++) {\n                            var x = minor_offsets_1[_c];\n                            minor_ticks.push(tick + x);\n                        }\n                    }\n                }\n            } else {\n                var startlog = Math.ceil(log_low * 0.999999);\n                var endlog = Math.floor(log_high * 1.000001);\n                var interval = Math.ceil((endlog - startlog) / 9);\n                ticks = array_1.range(startlog, endlog + 1, interval).map(function (i) {\n                    return Math.pow(base, i);\n                }).filter(function (tick) {\n                    return data_low <= tick && tick <= data_high;\n                });\n                if (num_minor_ticks > 0 && ticks.length > 0) {\n                    var minor_interval_2 = Math.pow(base, interval) / num_minor_ticks;\n                    var minor_offsets = array_1.range(1, num_minor_ticks + 1).map(function (i) {\n                        return i * minor_interval_2;\n                    });\n                    for (var _d = 0, minor_offsets_2 = minor_offsets; _d < minor_offsets_2.length; _d++) {\n                        var x = minor_offsets_2[_d];\n                        minor_ticks.push(ticks[0] / x);\n                    }\n                    minor_ticks.push(ticks[0]);\n                    for (var _e = 0, ticks_2 = ticks; _e < ticks_2.length; _e++) {\n                        var tick = ticks_2[_e];\n                        for (var _f = 0, minor_offsets_3 = minor_offsets; _f < minor_offsets_3.length; _f++) {\n                            var x = minor_offsets_3[_f];\n                            minor_ticks.push(tick * x);\n                        }\n                    }\n                }\n            }\n            return {\n                major: ticks,\n                minor: minor_ticks\n            };\n        };\n        return LogTicker;\n    }(adaptive_ticker_1.AdaptiveTicker);\n    exports.LogTicker = LogTicker;\n    LogTicker.prototype.type = 'LogTicker';\n    LogTicker.override({\n        mantissas: [\n            1,\n            5\n        ]\n    });    \n}","/*models/tickers/mercator_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var basic_ticker_1 = require(180    /* ./basic_ticker */);\n    var p = require(15    /* core/properties */);\n    var proj4_1 = require(31    /* core/util/proj4 */);\n    var MercatorTicker = function (_super) {\n        tslib_1.__extends(MercatorTicker, _super);\n        function MercatorTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MercatorTicker.prototype.get_ticks_no_defaults = function (data_low, data_high, cross_loc, desired_n_ticks) {\n            if (this.dimension == null) {\n                throw new Error('MercatorTicker.dimension not configured');\n            }\n            _a = proj4_1.clip_mercator(data_low, data_high, this.dimension), data_low = _a[0], data_high = _a[1];\n            var proj_low, proj_high, proj_cross_loc;\n            if (this.dimension === 'lon') {\n                _b = proj4_1.proj4(proj4_1.mercator).inverse([\n                    data_low,\n                    cross_loc\n                ]), proj_low = _b[0], proj_cross_loc = _b[1];\n                _c = proj4_1.proj4(proj4_1.mercator).inverse([\n                    data_high,\n                    cross_loc\n                ]), proj_high = _c[0], proj_cross_loc = _c[1];\n            } else {\n                _d = proj4_1.proj4(proj4_1.mercator).inverse([\n                    cross_loc,\n                    data_low\n                ]), proj_cross_loc = _d[0], proj_low = _d[1];\n                _e = proj4_1.proj4(proj4_1.mercator).inverse([\n                    cross_loc,\n                    data_high\n                ]), proj_cross_loc = _e[0], proj_high = _e[1];\n            }\n            var proj_ticks = _super.prototype.get_ticks_no_defaults.call(this, proj_low, proj_high, cross_loc, desired_n_ticks);\n            var major = [];\n            var minor = [];\n            if (this.dimension === 'lon') {\n                for (var _i = 0, _f = proj_ticks.major; _i < _f.length; _i++) {\n                    var tick = _f[_i];\n                    if (proj4_1.in_bounds(tick, 'lon')) {\n                        var lon = proj4_1.proj4(proj4_1.mercator).forward([\n                            tick,\n                            proj_cross_loc\n                        ])[0];\n                        major.push(lon);\n                    }\n                }\n                for (var _g = 0, _h = proj_ticks.minor; _g < _h.length; _g++) {\n                    var tick = _h[_g];\n                    if (proj4_1.in_bounds(tick, 'lon')) {\n                        var lon = proj4_1.proj4(proj4_1.mercator).forward([\n                            tick,\n                            proj_cross_loc\n                        ])[0];\n                        minor.push(lon);\n                    }\n                }\n            } else {\n                for (var _j = 0, _k = proj_ticks.major; _j < _k.length; _j++) {\n                    var tick = _k[_j];\n                    if (proj4_1.in_bounds(tick, 'lat')) {\n                        var _l = proj4_1.proj4(proj4_1.mercator).forward([\n                                proj_cross_loc,\n                                tick\n                            ]), lat = _l[1];\n                        major.push(lat);\n                    }\n                }\n                for (var _m = 0, _o = proj_ticks.minor; _m < _o.length; _m++) {\n                    var tick = _o[_m];\n                    if (proj4_1.in_bounds(tick, 'lat')) {\n                        var _p = proj4_1.proj4(proj4_1.mercator).forward([\n                                proj_cross_loc,\n                                tick\n                            ]), lat = _p[1];\n                        minor.push(lat);\n                    }\n                }\n            }\n            return {\n                major: major,\n                minor: minor\n            };\n            var _a, _b, _c, _d, _e;\n        };\n        return MercatorTicker;\n    }(basic_ticker_1.BasicTicker);\n    exports.MercatorTicker = MercatorTicker;\n    MercatorTicker.prototype.type = 'MercatorTicker';\n    MercatorTicker.define({ dimension: [p.LatLon] });    \n}","/*models/tickers/months_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var single_interval_ticker_1 = require(191    /* ./single_interval_ticker */);\n    var util_1 = require(193    /* ./util */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    // Given a start and end time in millis, returns the shortest array of\n    // consecutive years (as Dates) that surrounds both times.\n    function date_range_by_year(start_time, end_time) {\n        var start_date = util_1.last_year_no_later_than(new Date(start_time));\n        var end_date = util_1.last_year_no_later_than(new Date(end_time));\n        end_date.setUTCFullYear(end_date.getUTCFullYear() + 1);\n        var dates = [];\n        var date = start_date;\n        while (true) {\n            dates.push(util_1.copy_date(date));\n            date.setUTCFullYear(date.getUTCFullYear() + 1);\n            if (date > end_date)\n                break;\n        }\n        return dates;\n    }\n    // A MonthsTicker produces ticks from a fixed subset of months of the year.\n    // E.g., MonthsTicker([0, 3, 6, 9]) produces ticks of the 1st of January,\n    // April, July, and October of each year.\n    var MonthsTicker = function (_super) {\n        tslib_1.__extends(MonthsTicker, _super);\n        function MonthsTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MonthsTicker.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            var months = this.months;\n            if (months.length > 1)\n                this.interval = (months[1] - months[0]) * util_1.ONE_MONTH;\n            else\n                this.interval = 12 * util_1.ONE_MONTH;\n        };\n        MonthsTicker.prototype.get_ticks_no_defaults = function (data_low, data_high, _cross_loc, _desired_n_ticks) {\n            var year_dates = date_range_by_year(data_low, data_high);\n            var months = this.months;\n            var months_of_year = function (year_date) {\n                return months.map(function (month) {\n                    var month_date = util_1.copy_date(year_date);\n                    month_date.setUTCMonth(month);\n                    return month_date;\n                });\n            };\n            var month_dates = array_1.concat(year_dates.map(months_of_year));\n            var all_ticks = month_dates.map(function (month_date) {\n                return month_date.getTime();\n            });\n            var ticks_in_range = all_ticks.filter(function (tick) {\n                return data_low <= tick && tick <= data_high;\n            });\n            return {\n                major: ticks_in_range,\n                minor: []\n            };\n        };\n        return MonthsTicker;\n    }(single_interval_ticker_1.SingleIntervalTicker);\n    exports.MonthsTicker = MonthsTicker;\n    MonthsTicker.prototype.type = 'MonthsTicker';\n    MonthsTicker.define({\n        months: [\n            p.Array,\n            []\n        ]\n    });    \n}","/*models/tickers/single_interval_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var continuous_ticker_1 = require(183    /* ./continuous_ticker */);\n    var p = require(15    /* core/properties */);\n    // The SingleIntervalTicker is a Ticker that always uses the same tick spacing,\n    // regardless of the input range.  It's not very useful by itself, but can\n    // be used as part of a CompositeTicker below.\n    var SingleIntervalTicker = function (_super) {\n        tslib_1.__extends(SingleIntervalTicker, _super);\n        function SingleIntervalTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SingleIntervalTicker.prototype.get_interval = function (_data_low, _data_high, _n_desired_ticks) {\n            return this.interval;\n        };\n        Object.defineProperty(SingleIntervalTicker.prototype, 'min_interval', {\n            get: function () {\n                return this.interval;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(SingleIntervalTicker.prototype, 'max_interval', {\n            get: function () {\n                return this.interval;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return SingleIntervalTicker;\n    }(continuous_ticker_1.ContinuousTicker);\n    exports.SingleIntervalTicker = SingleIntervalTicker;\n    SingleIntervalTicker.prototype.type = 'SingleIntervalTicker';\n    SingleIntervalTicker.define({ interval: [p.Number] });    \n}","/*models/tickers/ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    // The base class for all Ticker objects.  It needs to be subclassed before\n    // being used.  The simplest subclass is SingleIntervalTicker.\n    //\n    // The main value of a Ticker is its get_ticks() method, which takes a min and\n    // max value and (optionally) a desired number of ticks, and returns an array\n    // of approximately that many ticks, evenly spaced, with nice round values,\n    // within that range.\n    //\n    // Different Tickers are suited to different types of data or different\n    // magnitudes.  To make it possible to select Tickers programmatically, they\n    // also support some additional methods: get_interval(), get_min_interval(),\n    // and get_max_interval().\n    var Ticker = function (_super) {\n        tslib_1.__extends(Ticker, _super);\n        function Ticker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return Ticker;\n    }(model_1.Model);\n    exports.Ticker = Ticker;\n    Ticker.prototype.type = 'Ticker';    \n}","/*models/tickers/util*/\nfunction _(require, module, exports) {\n    // Some time constants, in milliseconds.\n    exports.ONE_MILLI = 1;\n    exports.ONE_SECOND = 1000;\n    exports.ONE_MINUTE = 60 * exports.ONE_SECOND;\n    exports.ONE_HOUR = 60 * exports.ONE_MINUTE;\n    exports.ONE_DAY = 24 * exports.ONE_HOUR;\n    exports.ONE_MONTH = 30 * exports.ONE_DAY;\n    // An approximation, obviously.\n    exports.ONE_YEAR = 365 * exports.ONE_DAY;\n    // ---------------------------------------------------------------------------\n    // Date/time utility functions\n    // ---------------------------------------------------------------------------\n    // Makes a copy of a date object.\n    function copy_date(date) {\n        return new Date(date.getTime());\n    }\n    exports.copy_date = copy_date;\n    // Rounds a date down to the month.\n    function last_month_no_later_than(date) {\n        var new_date = copy_date(date);\n        new_date.setUTCDate(1);\n        new_date.setUTCHours(0);\n        new_date.setUTCMinutes(0);\n        new_date.setUTCSeconds(0);\n        new_date.setUTCMilliseconds(0);\n        return new_date;\n    }\n    exports.last_month_no_later_than = last_month_no_later_than;\n    // Rounds a date down to the year.\n    function last_year_no_later_than(date) {\n        var new_date = last_month_no_later_than(date);\n        new_date.setUTCMonth(0);\n        return new_date;\n    }\n    exports.last_year_no_later_than = last_year_no_later_than;    \n}","/*models/tickers/years_ticker*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var basic_ticker_1 = require(180    /* ./basic_ticker */);\n    var single_interval_ticker_1 = require(191    /* ./single_interval_ticker */);\n    var util_1 = require(193    /* ./util */);\n    var YearsTicker = function (_super) {\n        tslib_1.__extends(YearsTicker, _super);\n        function YearsTicker() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        YearsTicker.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this.interval = util_1.ONE_YEAR;\n            this.basic_ticker = new basic_ticker_1.BasicTicker({ num_minor_ticks: 0 });\n        };\n        YearsTicker.prototype.get_ticks_no_defaults = function (data_low, data_high, cross_loc, desired_n_ticks) {\n            var start_year = util_1.last_year_no_later_than(new Date(data_low)).getUTCFullYear();\n            var end_year = util_1.last_year_no_later_than(new Date(data_high)).getUTCFullYear();\n            var years = this.basic_ticker.get_ticks_no_defaults(start_year, end_year, cross_loc, desired_n_ticks).major;\n            var all_ticks = years.map(function (year) {\n                return Date.UTC(year, 0, 1);\n            });\n            var ticks_in_range = all_ticks.filter(function (tick) {\n                return data_low <= tick && tick <= data_high;\n            });\n            return {\n                major: ticks_in_range,\n                minor: []\n            };\n        };\n        return YearsTicker;\n    }(single_interval_ticker_1.SingleIntervalTicker);\n    exports.YearsTicker = YearsTicker;\n    YearsTicker.prototype.type = 'YearsTicker';    \n}","/*models/tiles/bbox_tile_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var mercator_tile_source_1 = require(200    /* ./mercator_tile_source */);\n    var p = require(15    /* core/properties */);\n    var BBoxTileSource = function (_super) {\n        tslib_1.__extends(BBoxTileSource, _super);\n        function BBoxTileSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BBoxTileSource.prototype.get_image_url = function (x, y, z) {\n            var image_url, xmax, xmin, ymax, ymin;\n            image_url = this.string_lookup_replace(this.url, this.extra_url_vars);\n            if (this.use_latlon) {\n                _a = this.get_tile_geographic_bounds(x, y, z), xmin = _a[0], ymin = _a[1], xmax = _a[2], ymax = _a[3];\n            } else {\n                _b = this.get_tile_meter_bounds(x, y, z), xmin = _b[0], ymin = _b[1], xmax = _b[2], ymax = _b[3];\n            }\n            return image_url.replace('{XMIN}', xmin).replace('{YMIN}', ymin).replace('{XMAX}', xmax).replace('{YMAX}', ymax);\n            var _a, _b;\n        };\n        return BBoxTileSource;\n    }(mercator_tile_source_1.MercatorTileSource);\n    exports.BBoxTileSource = BBoxTileSource;\n    ;\n    BBoxTileSource.prototype.type = 'BBoxTileSource';\n    BBoxTileSource.define({\n        use_latlon: [\n            p.Bool,\n            false\n        ]\n    });    \n}","/*models/tiles/dynamic_image_renderer*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var boundMethodCheck = function (instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new Error('Bound instance method accessed before binding');\n        }\n    };\n    var renderer_1 = require(165    /* ../renderers/renderer */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    exports.DynamicImageView = function (_super) {\n        tslib_1.__extends(DynamicImageView, _super);\n        function DynamicImageView() {\n            var _this = _super.apply(this, arguments) || this;\n            _this._on_image_load = _this._on_image_load.bind(_this);\n            _this._on_image_error = _this._on_image_error.bind(_this);\n            return _this;\n        }\n        DynamicImageView.prototype.connect_signals = function () {\n            _super.prototype.connect_signals.call(this);\n            return this.connect(this.model.change, function () {\n                return this.request_render();\n            });\n        };\n        DynamicImageView.prototype.get_extent = function () {\n            return [\n                this.x_range.start,\n                this.y_range.start,\n                this.x_range.end,\n                this.y_range.end\n            ];\n        };\n        DynamicImageView.prototype._set_data = function () {\n            this.map_plot = this.plot_view.model.plot;\n            this.map_canvas = this.plot_view.canvas_view.ctx;\n            this.map_frame = this.plot_view.frame;\n            this.x_range = this.map_plot.x_range;\n            this.y_range = this.map_plot.y_range;\n            this.lastImage = void 0;\n            return this.extent = this.get_extent();\n        };\n        DynamicImageView.prototype._map_data = function () {\n            return this.initial_extent = this.get_extent();\n        };\n        DynamicImageView.prototype._on_image_load = function (e) {\n            var image_data;\n            boundMethodCheck(this, DynamicImageView);\n            image_data = e.target.image_data;\n            image_data.img = e.target;\n            image_data.loaded = true;\n            this.lastImage = image_data;\n            if (this.get_extent().join(':') === image_data.cache_key) {\n                return this.request_render();\n            }\n        };\n        DynamicImageView.prototype._on_image_error = function (e) {\n            var image_data;\n            boundMethodCheck(this, DynamicImageView);\n            logging_1.logger.error('Error loading image: ' + e.target.src);\n            image_data = e.target.image_data;\n            return this.model.image_source.remove_image(image_data);\n        };\n        DynamicImageView.prototype._create_image = function (bounds) {\n            var image;\n            image = new Image();\n            image.onload = this._on_image_load;\n            image.onerror = this._on_image_error;\n            image.alt = '';\n            image.image_data = {\n                bounds: bounds,\n                loaded: false,\n                cache_key: bounds.join(':')\n            };\n            this.model.image_source.add_image(image.image_data);\n            image.src = this.model.image_source.get_image_url(bounds[0], bounds[1], bounds[2], bounds[3], Math.ceil(this.map_frame._height.value), Math.ceil(this.map_frame._width.value));\n            return image;\n        };\n        DynamicImageView.prototype.render = function (ctx, indices, args) {\n            var _this = this;\n            var extent, image_obj;\n            if (this.map_initialized == null) {\n                this._set_data();\n                this._map_data();\n                this.map_initialized = true;\n            }\n            extent = this.get_extent();\n            if (this.render_timer) {\n                clearTimeout(this.render_timer);\n            }\n            image_obj = this.model.image_source.images[extent.join(':')];\n            if (image_obj != null && image_obj.loaded) {\n                this._draw_image(extent.join(':'));\n                return;\n            }\n            if (this.lastImage != null) {\n                this._draw_image(this.lastImage.cache_key);\n            }\n            if (image_obj == null) {\n                return this.render_timer = setTimeout(function () {\n                    return _this._create_image(extent);\n                }, 125);\n            }\n        };\n        DynamicImageView.prototype._draw_image = function (image_key) {\n            var image_obj, sh, sw, sx, sxmax, sxmin, sy, symax, symin;\n            image_obj = this.model.image_source.images[image_key];\n            if (image_obj != null) {\n                this.map_canvas.save();\n                this._set_rect();\n                this.map_canvas.globalAlpha = this.model.alpha;\n                _a = this.plot_view.map_to_screen([image_obj.bounds[0]], [image_obj.bounds[3]]), sxmin = _a[0], symin = _a[1];\n                _b = this.plot_view.map_to_screen([image_obj.bounds[2]], [image_obj.bounds[1]]), sxmax = _b[0], symax = _b[1];\n                sxmin = sxmin[0];\n                symin = symin[0];\n                sxmax = sxmax[0];\n                symax = symax[0];\n                sw = sxmax - sxmin;\n                sh = symax - symin;\n                sx = sxmin;\n                sy = symin;\n                this.map_canvas.drawImage(image_obj.img, sx, sy, sw, sh);\n                return this.map_canvas.restore();\n            }\n            var _a, _b;\n        };\n        DynamicImageView.prototype._set_rect = function () {\n            var h, l, outline_width, t, w;\n            outline_width = this.plot_model.plot.properties.outline_line_width.value();\n            l = this.map_frame._left.value + outline_width / 2;\n            t = this.map_frame._top.value + outline_width / 2;\n            w = this.map_frame._width.value - outline_width;\n            h = this.map_frame._height.value - outline_width;\n            this.map_canvas.rect(l, t, w, h);\n            return this.map_canvas.clip();\n        };\n        return DynamicImageView;\n    }(renderer_1.RendererView);\n    var DynamicImageRenderer = function (_super) {\n        tslib_1.__extends(DynamicImageRenderer, _super);\n        function DynamicImageRenderer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return DynamicImageRenderer;\n    }(renderer_1.Renderer);\n    exports.DynamicImageRenderer = DynamicImageRenderer;\n    ;\n    DynamicImageRenderer.prototype.default_view = exports.DynamicImageView;\n    DynamicImageRenderer.prototype.type = 'DynamicImageRenderer';\n    DynamicImageRenderer.define({\n        alpha: [\n            p.Number,\n            1\n        ],\n        image_source: [p.Instance],\n        render_parents: [\n            p.Bool,\n            true\n        ]\n    });\n    DynamicImageRenderer.override({ level: 'underlay' });    \n}","/*models/tiles/image_pool*/\nfunction _(require, module, exports) {\n    exports.ImagePool = function () {\n        function ImagePool() {\n            this.images = [];\n        }\n        ImagePool.prototype.pop = function () {\n            var img;\n            img = this.images.pop();\n            if (img != null) {\n                return img;\n            } else {\n                return new Image();\n            }\n        };\n        ImagePool.prototype.push = function (img) {\n            if (this.images.length > 50) {\n                return;\n            }\n            if (img.constructor === Array) {\n                return Array.prototype.push.apply(this.images, img);\n            } else {\n                return this.images.push(img);\n            }\n        };\n        return ImagePool;\n    }();    \n}","/*models/tiles/image_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var p = require(15    /* core/properties */);\n    var model_1 = require(50    /* ../../model */);\n    var ImageSource = function (_super) {\n        tslib_1.__extends(ImageSource, _super);\n        function ImageSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ImageSource.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this.images = {};\n            return this.normalize_case();\n        };\n        ImageSource.prototype.normalize_case = function () {\n            'Note: should probably be refactored into subclasses.';\n            var url;\n            url = this.url;\n            url = url.replace('{xmin}', '{XMIN}');\n            url = url.replace('{ymin}', '{YMIN}');\n            url = url.replace('{xmax}', '{XMAX}');\n            url = url.replace('{ymax}', '{YMAX}');\n            url = url.replace('{height}', '{HEIGHT}');\n            url = url.replace('{width}', '{WIDTH}');\n            return this.url = url;\n        };\n        ImageSource.prototype.string_lookup_replace = function (str, lookup) {\n            var key, result_str, value;\n            result_str = str;\n            for (key in lookup) {\n                value = lookup[key];\n                result_str = result_str.replace('{' + key + '}', value.toString());\n            }\n            return result_str;\n        };\n        ImageSource.prototype.add_image = function (image_obj) {\n            return this.images[image_obj.cache_key] = image_obj;\n        };\n        ImageSource.prototype.remove_image = function (image_obj) {\n            return delete this.images[image_obj.cache_key];\n        };\n        ImageSource.prototype.get_image_url = function (xmin, ymin, xmax, ymax, height, width) {\n            var image_url;\n            image_url = this.string_lookup_replace(this.url, this.extra_url_vars);\n            return image_url.replace('{XMIN}', xmin).replace('{YMIN}', ymin).replace('{XMAX}', xmax).replace('{YMAX}', ymax).replace('{WIDTH}', width).replace('{HEIGHT}', height);\n        };\n        return ImageSource;\n    }(model_1.Model);\n    exports.ImageSource = ImageSource;\n    ;\n    ImageSource.prototype.type = 'ImageSource';\n    ImageSource.define({\n        url: [\n            p.String,\n            ''\n        ],\n        extra_url_vars: [\n            p.Any,\n            {}\n        ]\n    });    \n}","/*models/tiles/index*/\nfunction _(require, module, exports) {\n    var bbox_tile_source_1 = require(195    /* ./bbox_tile_source */);\n    exports.BBoxTileSource = bbox_tile_source_1.BBoxTileSource;\n    var dynamic_image_renderer_1 = require(196    /* ./dynamic_image_renderer */);\n    exports.DynamicImageRenderer = dynamic_image_renderer_1.DynamicImageRenderer;\n    var image_source_1 = require(198    /* ./image_source */);\n    exports.ImageSource = image_source_1.ImageSource;\n    var mercator_tile_source_1 = require(200    /* ./mercator_tile_source */);\n    exports.MercatorTileSource = mercator_tile_source_1.MercatorTileSource;\n    var quadkey_tile_source_1 = require(201    /* ./quadkey_tile_source */);\n    exports.QUADKEYTileSource = quadkey_tile_source_1.QUADKEYTileSource;\n    var tile_renderer_1 = require(202    /* ./tile_renderer */);\n    exports.TileRenderer = tile_renderer_1.TileRenderer;\n    var tile_source_1 = require(203    /* ./tile_source */);\n    exports.TileSource = tile_source_1.TileSource;\n    var tms_tile_source_1 = require(205    /* ./tms_tile_source */);\n    exports.TMSTileSource = tms_tile_source_1.TMSTileSource;\n    var wmts_tile_source_1 = require(206    /* ./wmts_tile_source */);\n    exports.WMTSTileSource = wmts_tile_source_1.WMTSTileSource;    \n}","/*models/tiles/mercator_tile_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var indexOf = [].indexOf;\n    var tile_source_1 = require(203    /* ./tile_source */);\n    var p = require(15    /* core/properties */);\n    var MercatorTileSource = function (_super) {\n        tslib_1.__extends(MercatorTileSource, _super);\n        function MercatorTileSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MercatorTileSource.prototype.initialize = function (options) {\n            var z;\n            _super.prototype.initialize.call(this, options);\n            return this._resolutions = function () {\n                var j, ref, ref1, results;\n                results = [];\n                for (z = j = ref = this.min_zoom, ref1 = this.max_zoom; ref <= ref1 ? j <= ref1 : j >= ref1; z = ref <= ref1 ? ++j : --j) {\n                    results.push(this.get_resolution(z));\n                }\n                return results;\n            }.call(this);\n        };\n        MercatorTileSource.prototype._computed_initial_resolution = function () {\n            if (this.initial_resolution != null) {\n                return this.initial_resolution;\n            } else {\n                // TODO testing 2015-11-17, if this codepath is used it seems\n                // to use 100% cpu and wedge Chrome\n                return 2 * Math.PI * 6378137 / this.tile_size;\n            }\n        };\n        MercatorTileSource.prototype.is_valid_tile = function (x, y, z) {\n            if (!this.wrap_around) {\n                if (x < 0 || x >= Math.pow(2, z)) {\n                    return false;\n                }\n            }\n            if (y < 0 || y >= Math.pow(2, z)) {\n                return false;\n            }\n            return true;\n        };\n        MercatorTileSource.prototype.retain_children = function (reference_tile) {\n            var key, max_zoom, min_zoom, quadkey, ref, results, tile;\n            quadkey = reference_tile.quadkey;\n            min_zoom = quadkey.length;\n            max_zoom = min_zoom + 3;\n            ref = this.tiles;\n            results = [];\n            for (key in ref) {\n                tile = ref[key];\n                if (tile.quadkey.indexOf(quadkey) === 0 && tile.quadkey.length > min_zoom && tile.quadkey.length <= max_zoom) {\n                    results.push(tile.retain = true);\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        MercatorTileSource.prototype.retain_neighbors = function (reference_tile) {\n            var key, neighbor_radius, neighbor_x, neighbor_y, ref, ref1, ref2, results, tile, tx, ty, tz, x, y;\n            neighbor_radius = 4;\n            _a = reference_tile.tile_coords, tx = _a[0], ty = _a[1], tz = _a[2];\n            neighbor_x = function () {\n                var j, ref, ref1, results;\n                results = [];\n                for (x = j = ref = tx - neighbor_radius, ref1 = tx + neighbor_radius; ref <= ref1 ? j <= ref1 : j >= ref1; x = ref <= ref1 ? ++j : --j) {\n                    results.push(x);\n                }\n                return results;\n            }();\n            neighbor_y = function () {\n                var j, ref, ref1, results;\n                results = [];\n                for (y = j = ref = ty - neighbor_radius, ref1 = ty + neighbor_radius; ref <= ref1 ? j <= ref1 : j >= ref1; y = ref <= ref1 ? ++j : --j) {\n                    results.push(y);\n                }\n                return results;\n            }();\n            ref = this.tiles;\n            results = [];\n            for (key in ref) {\n                tile = ref[key];\n                if (tile.tile_coords[2] === tz && (ref1 = tile.tile_coords[0], indexOf.call(neighbor_x, ref1) >= 0) && (ref2 = tile.tile_coords[1], indexOf.call(neighbor_y, ref2) >= 0)) {\n                    results.push(tile.retain = true);\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n            var _a;\n        };\n        MercatorTileSource.prototype.retain_parents = function (reference_tile) {\n            var key, quadkey, ref, results, tile;\n            quadkey = reference_tile.quadkey;\n            ref = this.tiles;\n            results = [];\n            for (key in ref) {\n                tile = ref[key];\n                results.push(tile.retain = quadkey.indexOf(tile.quadkey) === 0);\n            }\n            return results;\n        };\n        MercatorTileSource.prototype.children_by_tile_xyz = function (x, y, z) {\n            var b, child_tile_xyz, i, j, quad_key, world_x;\n            world_x = this.calculate_world_x_by_tile_xyz(x, y, z);\n            if (world_x !== 0) {\n                _a = this.normalize_xyz(x, y, z), x = _a[0], y = _a[1], z = _a[2];\n            }\n            quad_key = this.tile_xyz_to_quadkey(x, y, z);\n            child_tile_xyz = [];\n            for (i = j = 0; j <= 3; i = j += 1) {\n                _b = this.quadkey_to_tile_xyz(quad_key + i.toString()), x = _b[0], y = _b[1], z = _b[2];\n                if (world_x !== 0) {\n                    _c = this.denormalize_xyz(x, y, z, world_x), x = _c[0], y = _c[1], z = _c[2];\n                }\n                b = this.get_tile_meter_bounds(x, y, z);\n                if (b != null) {\n                    child_tile_xyz.push([\n                        x,\n                        y,\n                        z,\n                        b\n                    ]);\n                }\n            }\n            return child_tile_xyz;\n            var _a, _b, _c;\n        };\n        MercatorTileSource.prototype.parent_by_tile_xyz = function (x, y, z) {\n            var parent_quad_key, quad_key;\n            quad_key = this.tile_xyz_to_quadkey(x, y, z);\n            parent_quad_key = quad_key.substring(0, quad_key.length - 1);\n            return this.quadkey_to_tile_xyz(parent_quad_key);\n        };\n        MercatorTileSource.prototype.get_resolution = function (level) {\n            return this._computed_initial_resolution() / Math.pow(2, level);\n        };\n        MercatorTileSource.prototype.get_resolution_by_extent = function (extent, height, width) {\n            var x_rs, y_rs;\n            x_rs = (extent[2] - extent[0]) / width;\n            y_rs = (extent[3] - extent[1]) / height;\n            return [\n                x_rs,\n                y_rs\n            ];\n        };\n        MercatorTileSource.prototype.get_level_by_extent = function (extent, height, width) {\n            var i, j, len, r, ref, resolution, x_rs, y_rs;\n            x_rs = (extent[2] - extent[0]) / width;\n            y_rs = (extent[3] - extent[1]) / height;\n            resolution = Math.max(x_rs, y_rs);\n            i = 0;\n            ref = this._resolutions;\n            for (j = 0, len = ref.length; j < len; j++) {\n                r = ref[j];\n                if (resolution > r) {\n                    if (i === 0) {\n                        return 0;\n                    }\n                    if (i > 0) {\n                        return i - 1;\n                    }\n                }\n                i += 1;\n            }\n        };\n        MercatorTileSource.prototype.get_closest_level_by_extent = function (extent, height, width) {\n            var closest, resolution, ress, x_rs, y_rs;\n            x_rs = (extent[2] - extent[0]) / width;\n            y_rs = (extent[3] - extent[1]) / height;\n            resolution = Math.max(x_rs, y_rs);\n            ress = this._resolutions;\n            closest = this._resolutions.reduce(function (previous, current) {\n                if (Math.abs(current - resolution) < Math.abs(previous - resolution)) {\n                    return current;\n                }\n                return previous;\n            });\n            return this._resolutions.indexOf(closest);\n        };\n        MercatorTileSource.prototype.snap_to_zoom = function (extent, height, width, level) {\n            var desired_res, desired_x_delta, desired_y_delta, x_adjust, xmax, xmin, y_adjust, ymax, ymin;\n            desired_res = this._resolutions[level];\n            desired_x_delta = width * desired_res;\n            desired_y_delta = height * desired_res;\n            xmin = extent[0], ymin = extent[1], xmax = extent[2], ymax = extent[3];\n            x_adjust = (desired_x_delta - (xmax - xmin)) / 2;\n            y_adjust = (desired_y_delta - (ymax - ymin)) / 2;\n            return [\n                xmin - x_adjust,\n                ymin - y_adjust,\n                xmax + x_adjust,\n                ymax + y_adjust\n            ];\n        };\n        MercatorTileSource.prototype.tms_to_wmts = function (x, y, z) {\n            'Note this works both ways';\n            return [\n                x,\n                Math.pow(2, z) - 1 - y,\n                z\n            ];\n        };\n        MercatorTileSource.prototype.wmts_to_tms = function (x, y, z) {\n            'Note this works both ways';\n            return [\n                x,\n                Math.pow(2, z) - 1 - y,\n                z\n            ];\n        };\n        MercatorTileSource.prototype.pixels_to_meters = function (px, py, level) {\n            var mx, my, res;\n            res = this.get_resolution(level);\n            mx = px * res - this.x_origin_offset;\n            my = py * res - this.y_origin_offset;\n            return [\n                mx,\n                my\n            ];\n        };\n        MercatorTileSource.prototype.meters_to_pixels = function (mx, my, level) {\n            var px, py, res;\n            res = this.get_resolution(level);\n            px = (mx + this.x_origin_offset) / res;\n            py = (my + this.y_origin_offset) / res;\n            return [\n                px,\n                py\n            ];\n        };\n        MercatorTileSource.prototype.pixels_to_tile = function (px, py) {\n            var tx, ty;\n            tx = Math.ceil(px / parseFloat(this.tile_size));\n            tx = tx === 0 ? tx : tx - 1;\n            ty = Math.max(Math.ceil(py / parseFloat(this.tile_size)) - 1, 0);\n            return [\n                tx,\n                ty\n            ];\n        };\n        MercatorTileSource.prototype.pixels_to_raster = function (px, py, level) {\n            var mapSize;\n            mapSize = this.tile_size << level;\n            return [\n                px,\n                mapSize - py\n            ];\n        };\n        MercatorTileSource.prototype.meters_to_tile = function (mx, my, level) {\n            var px, py;\n            _a = this.meters_to_pixels(mx, my, level), px = _a[0], py = _a[1];\n            return this.pixels_to_tile(px, py);\n            var _a;\n        };\n        MercatorTileSource.prototype.get_tile_meter_bounds = function (tx, ty, level) {\n            var xmax, xmin, ymax, ymin;\n            // expects tms styles coordinates (bottom-left origin)\n            _a = this.pixels_to_meters(tx * this.tile_size, ty * this.tile_size, level), xmin = _a[0], ymin = _a[1];\n            _b = this.pixels_to_meters((tx + 1) * this.tile_size, (ty + 1) * this.tile_size, level), xmax = _b[0], ymax = _b[1];\n            if (xmin != null && ymin != null && xmax != null && ymax != null) {\n                return [\n                    xmin,\n                    ymin,\n                    xmax,\n                    ymax\n                ];\n            } else {\n                return void 0;\n            }\n            var _a, _b;\n        };\n        MercatorTileSource.prototype.get_tile_geographic_bounds = function (tx, ty, level) {\n            var bounds, maxLat, maxLon, minLat, minLon;\n            bounds = this.get_tile_meter_bounds(tx, ty, level);\n            _a = this.utils.meters_extent_to_geographic(bounds), minLon = _a[0], minLat = _a[1], maxLon = _a[2], maxLat = _a[3];\n            return [\n                minLon,\n                minLat,\n                maxLon,\n                maxLat\n            ];\n            var _a;\n        };\n        MercatorTileSource.prototype.get_tiles_by_extent = function (extent, level, tile_border) {\n            if (tile_border === void 0) {\n                tile_border = 1;\n            }\n            var j, k, ref, ref1, ref2, ref3, tiles, tx, txmax, txmin, ty, tymax, tymin, xmax, xmin, ymax, ymin;\n            // unpack extent and convert to tile coordinates\n            xmin = extent[0], ymin = extent[1], xmax = extent[2], ymax = extent[3];\n            _a = this.meters_to_tile(xmin, ymin, level), txmin = _a[0], tymin = _a[1];\n            _b = this.meters_to_tile(xmax, ymax, level), txmax = _b[0], tymax = _b[1];\n            // add tiles which border\n            txmin -= tile_border;\n            tymin -= tile_border;\n            txmax += tile_border;\n            tymax += tile_border;\n            tiles = [];\n            for (ty = j = ref = tymax, ref1 = tymin; j >= ref1; ty = j += -1) {\n                for (tx = k = ref2 = txmin, ref3 = txmax; k <= ref3; tx = k += 1) {\n                    if (this.is_valid_tile(tx, ty, level)) {\n                        tiles.push([\n                            tx,\n                            ty,\n                            level,\n                            this.get_tile_meter_bounds(tx, ty, level)\n                        ]);\n                    }\n                }\n            }\n            tiles = this.sort_tiles_from_center(tiles, [\n                txmin,\n                tymin,\n                txmax,\n                tymax\n            ]);\n            return tiles;\n            var _a, _b;\n        };\n        MercatorTileSource.prototype.quadkey_to_tile_xyz = function (quadKey) {\n            'Computes tile x, y and z values based on quadKey.';\n            var i, j, mask, ref, tileX, tileY, tileZ, value;\n            tileX = 0;\n            tileY = 0;\n            tileZ = quadKey.length;\n            for (i = j = ref = tileZ; j > 0; i = j += -1) {\n                value = quadKey.charAt(tileZ - i);\n                mask = 1 << i - 1;\n                switch (value) {\n                case '0':\n                    continue;\n                case '1':\n                    tileX |= mask;\n                    break;\n                case '2':\n                    tileY |= mask;\n                    break;\n                case '3':\n                    tileX |= mask;\n                    tileY |= mask;\n                    break;\n                default:\n                    throw new TypeError('Invalid Quadkey: ' + quadKey);\n                }\n            }\n            return [\n                tileX,\n                tileY,\n                tileZ\n            ];\n        };\n        MercatorTileSource.prototype.tile_xyz_to_quadkey = function (x, y, z) {\n            'Computes quadkey value based on tile x, y and z values.';\n            var digit, i, j, mask, quadKey, ref;\n            quadKey = '';\n            for (i = j = ref = z; j > 0; i = j += -1) {\n                digit = 0;\n                mask = 1 << i - 1;\n                if ((x & mask) !== 0) {\n                    digit += 1;\n                }\n                if ((y & mask) !== 0) {\n                    digit += 2;\n                }\n                quadKey += digit.toString();\n            }\n            return quadKey;\n        };\n        MercatorTileSource.prototype.children_by_tile_xyz = function (x, y, z) {\n            var b, child_tile_xyz, i, j, quad_key;\n            quad_key = this.tile_xyz_to_quadkey(x, y, z);\n            child_tile_xyz = [];\n            for (i = j = 0; j <= 3; i = j += 1) {\n                _a = this.quadkey_to_tile_xyz(quad_key + i.toString()), x = _a[0], y = _a[1], z = _a[2];\n                b = this.get_tile_meter_bounds(x, y, z);\n                if (b != null) {\n                    child_tile_xyz.push([\n                        x,\n                        y,\n                        z,\n                        b\n                    ]);\n                }\n            }\n            return child_tile_xyz;\n            var _a;\n        };\n        MercatorTileSource.prototype.parent_by_tile_xyz = function (x, y, z) {\n            var parent_quad_key, quad_key;\n            quad_key = this.tile_xyz_to_quadkey(x, y, z);\n            parent_quad_key = quad_key.substring(0, quad_key.length - 1);\n            return this.quadkey_to_tile_xyz(parent_quad_key);\n        };\n        MercatorTileSource.prototype.get_closest_parent_by_tile_xyz = function (x, y, z) {\n            var quad_key, world_x;\n            world_x = this.calculate_world_x_by_tile_xyz(x, y, z);\n            _a = this.normalize_xyz(x, y, z), x = _a[0], y = _a[1], z = _a[2];\n            quad_key = this.tile_xyz_to_quadkey(x, y, z);\n            while (quad_key.length > 0) {\n                quad_key = quad_key.substring(0, quad_key.length - 1);\n                _b = this.quadkey_to_tile_xyz(quad_key), x = _b[0], y = _b[1], z = _b[2];\n                _c = this.denormalize_xyz(x, y, z, world_x), x = _c[0], y = _c[1], z = _c[2];\n                if (this.tile_xyz_to_key(x, y, z) in this.tiles) {\n                    return [\n                        x,\n                        y,\n                        z\n                    ];\n                }\n            }\n            return [\n                0,\n                0,\n                0\n            ];\n            var _a, _b, _c;\n        };\n        MercatorTileSource.prototype.normalize_xyz = function (x, y, z) {\n            var tile_count;\n            if (this.wrap_around) {\n                tile_count = Math.pow(2, z);\n                return [\n                    (x % tile_count + tile_count) % tile_count,\n                    y,\n                    z\n                ];\n            } else {\n                return [\n                    x,\n                    y,\n                    z\n                ];\n            }\n        };\n        MercatorTileSource.prototype.denormalize_xyz = function (x, y, z, world_x) {\n            return [\n                x + world_x * Math.pow(2, z),\n                y,\n                z\n            ];\n        };\n        MercatorTileSource.prototype.denormalize_meters = function (meters_x, meters_y, level, world_x) {\n            return [\n                meters_x + world_x * 2 * Math.PI * 6378137,\n                meters_y\n            ];\n        };\n        MercatorTileSource.prototype.calculate_world_x_by_tile_xyz = function (x, y, z) {\n            return Math.floor(x / Math.pow(2, z));\n        };\n        return MercatorTileSource;\n    }(tile_source_1.TileSource);\n    exports.MercatorTileSource = MercatorTileSource;\n    ;\n    MercatorTileSource.prototype.type = 'MercatorTileSource';\n    MercatorTileSource.define({\n        wrap_around: [\n            p.Bool,\n            true\n        ]\n    });\n    MercatorTileSource.override({\n        x_origin_offset: 20037508.34,\n        y_origin_offset: 20037508.34,\n        initial_resolution: 156543.03392804097\n    });    \n}","/*models/tiles/quadkey_tile_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var mercator_tile_source_1 = require(200    /* ./mercator_tile_source */);\n    var QUADKEYTileSource = function (_super) {\n        tslib_1.__extends(QUADKEYTileSource, _super);\n        function QUADKEYTileSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        QUADKEYTileSource.prototype.get_image_url = function (x, y, z) {\n            var image_url, quadKey;\n            image_url = this.string_lookup_replace(this.url, this.extra_url_vars);\n            _a = this.tms_to_wmts(x, y, z), x = _a[0], y = _a[1], z = _a[2];\n            quadKey = this.tile_xyz_to_quadkey(x, y, z);\n            return image_url.replace('{Q}', quadKey);\n            var _a;\n        };\n        return QUADKEYTileSource;\n    }(mercator_tile_source_1.MercatorTileSource);\n    exports.QUADKEYTileSource = QUADKEYTileSource;\n    ;\n    QUADKEYTileSource.prototype.type = 'QUADKEYTileSource';    \n}","/*models/tiles/tile_renderer*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var boundMethodCheck = function (instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n                throw new Error('Bound instance method accessed before binding');\n            }\n        }, indexOf = [].indexOf;\n    var image_pool_1 = require(197    /* ./image_pool */);\n    var wmts_tile_source_1 = require(206    /* ./wmts_tile_source */);\n    var renderer_1 = require(165    /* ../renderers/renderer */);\n    var dom_1 = require(5    /* core/dom */);\n    var p = require(15    /* core/properties */);\n    var types_1 = require(42    /* core/util/types */);\n    exports.TileRendererView = function (_super) {\n        tslib_1.__extends(TileRendererView, _super);\n        function TileRendererView() {\n            var _this = _super.apply(this, arguments) || this;\n            _this._add_attribution = _this._add_attribution.bind(_this);\n            _this._on_tile_load = _this._on_tile_load.bind(_this);\n            _this._on_tile_cache_load = _this._on_tile_cache_load.bind(_this);\n            _this._on_tile_error = _this._on_tile_error.bind(_this);\n            _this._prefetch_tiles = _this._prefetch_tiles.bind(_this);\n            _this._update = _this._update.bind(_this);\n            return _this;\n        }\n        TileRendererView.prototype.initialize = function (options) {\n            this.attributionEl = null;\n            this._tiles = [];\n            return _super.prototype.initialize.call(this, options);\n        };\n        TileRendererView.prototype.connect_signals = function () {\n            _super.prototype.connect_signals.call(this);\n            return this.connect(this.model.change, function () {\n                return this.request_render();\n            });\n        };\n        TileRendererView.prototype.get_extent = function () {\n            return [\n                this.x_range.start,\n                this.y_range.start,\n                this.x_range.end,\n                this.y_range.end\n            ];\n        };\n        TileRendererView.prototype._set_data = function () {\n            this.pool = new image_pool_1.ImagePool();\n            this.map_plot = this.plot_model.plot;\n            this.map_canvas = this.plot_view.canvas_view.ctx;\n            this.map_frame = this.plot_model.frame;\n            this.x_range = this.map_plot.x_range;\n            this.y_range = this.map_plot.y_range;\n            this.extent = this.get_extent();\n            this._last_height = void 0;\n            return this._last_width = void 0;\n        };\n        TileRendererView.prototype._add_attribution = function () {\n            var attribution, bottom, max_width, overlays, right;\n            boundMethodCheck(this, TileRendererView);\n            attribution = this.model.tile_source.attribution;\n            if (types_1.isString(attribution) && attribution.length > 0) {\n                if (this.attributionEl == null) {\n                    right = this.plot_model.canvas._right.value - this.plot_model.frame._right.value;\n                    bottom = this.plot_model.canvas._bottom.value - this.plot_model.frame._bottom.value;\n                    max_width = this.map_frame._width.value;\n                    this.attributionEl = dom_1.div({\n                        class: 'bk-tile-attribution',\n                        style: {\n                            position: 'absolute',\n                            bottom: bottom + 'px',\n                            right: right + 'px',\n                            'max-width': max_width + 'px',\n                            padding: '2px',\n                            'background-color': 'rgba(255,255,255,0.8)',\n                            'font-size': '9pt',\n                            'font-family': 'sans-serif'\n                        }\n                    });\n                    overlays = this.plot_view.canvas_view.events_el;\n                    overlays.appendChild(this.attributionEl);\n                }\n                return this.attributionEl.innerHTML = attribution;\n            }\n        };\n        TileRendererView.prototype._map_data = function () {\n            var new_extent, zoom_level;\n            this.initial_extent = this.get_extent();\n            zoom_level = this.model.tile_source.get_level_by_extent(this.initial_extent, this.map_frame._height.value, this.map_frame._width.value);\n            new_extent = this.model.tile_source.snap_to_zoom(this.initial_extent, this.map_frame._height.value, this.map_frame._width.value, zoom_level);\n            this.x_range.start = new_extent[0];\n            this.y_range.start = new_extent[1];\n            this.x_range.end = new_extent[2];\n            this.y_range.end = new_extent[3];\n            return this._add_attribution();\n        };\n        TileRendererView.prototype._on_tile_load = function (e) {\n            var tile_data;\n            boundMethodCheck(this, TileRendererView);\n            tile_data = e.target.tile_data;\n            tile_data.img = e.target;\n            tile_data.current = true;\n            tile_data.loaded = true;\n            return this.request_render();\n        };\n        TileRendererView.prototype._on_tile_cache_load = function (e) {\n            var tile_data;\n            boundMethodCheck(this, TileRendererView);\n            tile_data = e.target.tile_data;\n            tile_data.img = e.target;\n            tile_data.loaded = true;\n            tile_data.finished = true;\n            return this.notify_finished();\n        };\n        TileRendererView.prototype._on_tile_error = function (e) {\n            var tile_data;\n            boundMethodCheck(this, TileRendererView);\n            tile_data = e.target.tile_data;\n            return tile_data.finished = true;\n        };\n        TileRendererView.prototype._create_tile = function (x, y, z, bounds, cache_only) {\n            if (cache_only === void 0) {\n                cache_only = false;\n            }\n            var normalized_coords, tile;\n            normalized_coords = this.model.tile_source.normalize_xyz(x, y, z);\n            tile = this.pool.pop();\n            if (cache_only) {\n                tile.onload = this._on_tile_cache_load;\n            } else {\n                tile.onload = this._on_tile_load;\n            }\n            tile.onerror = this._on_tile_error;\n            tile.alt = '';\n            tile.tile_data = {\n                tile_coords: [\n                    x,\n                    y,\n                    z\n                ],\n                normalized_coords: normalized_coords,\n                quadkey: this.model.tile_source.tile_xyz_to_quadkey(x, y, z),\n                cache_key: this.model.tile_source.tile_xyz_to_key(x, y, z),\n                bounds: bounds,\n                loaded: false,\n                finished: false,\n                x_coord: bounds[0],\n                y_coord: bounds[3]\n            };\n            this.model.tile_source.tiles[tile.tile_data.cache_key] = tile.tile_data;\n            tile.src = (_a = this.model.tile_source).get_image_url.apply(_a, normalized_coords);\n            this._tiles.push(tile);\n            return tile;\n            var _a;\n        };\n        TileRendererView.prototype._enforce_aspect_ratio = function () {\n            var extent, new_extent, zoom_level;\n            // brute force way of handling resize or sizing_mode event -------------------------------------------------------------\n            if (this._last_height !== this.map_frame._height.value || this._last_width !== this.map_frame._width.value) {\n                extent = this.get_extent();\n                zoom_level = this.model.tile_source.get_level_by_extent(extent, this.map_frame._height.value, this.map_frame._width.value);\n                new_extent = this.model.tile_source.snap_to_zoom(extent, this.map_frame._height.value, this.map_frame._width.value, zoom_level);\n                this.x_range.setv({\n                    start: new_extent[0],\n                    end: new_extent[2]\n                });\n                this.y_range.setv({\n                    start: new_extent[1],\n                    end: new_extent[3]\n                });\n                this.extent = new_extent;\n                this._last_height = this.map_frame._height.value;\n                this._last_width = this.map_frame._width.value;\n                return true;\n            }\n            return false;\n        };\n        TileRendererView.prototype.has_finished = function () {\n            var i, len, ref, tile;\n            if (!_super.prototype.has_finished.call(this)) {\n                return false;\n            }\n            if (this._tiles.length === 0) {\n                return false;\n            }\n            ref = this._tiles;\n            for (i = 0, len = ref.length; i < len; i++) {\n                tile = ref[i];\n                if (!tile.tile_data.finished) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        TileRendererView.prototype.render = function (ctx, indices, args) {\n            if (this.map_initialized == null) {\n                this._set_data();\n                this._map_data();\n                this.map_initialized = true;\n            }\n            if (this._enforce_aspect_ratio()) {\n                return;\n            }\n            this._update();\n            if (this.prefetch_timer != null) {\n                clearTimeout(this.prefetch_timer);\n            }\n            this.prefetch_timer = setTimeout(this._prefetch_tiles, 500);\n            if (this.has_finished()) {\n                return this.notify_finished();\n            }\n        };\n        TileRendererView.prototype._draw_tile = function (tile_key) {\n            var sh, sw, sx, sxmax, sxmin, sy, symax, symin, tile_obj;\n            tile_obj = this.model.tile_source.tiles[tile_key];\n            if (tile_obj != null) {\n                _a = this.plot_view.map_to_screen([tile_obj.bounds[0]], [tile_obj.bounds[3]]), sxmin = _a[0], symin = _a[1];\n                _b = this.plot_view.map_to_screen([tile_obj.bounds[2]], [tile_obj.bounds[1]]), sxmax = _b[0], symax = _b[1];\n                sxmin = sxmin[0];\n                symin = symin[0];\n                sxmax = sxmax[0];\n                symax = symax[0];\n                sw = sxmax - sxmin;\n                sh = symax - symin;\n                sx = sxmin;\n                sy = symin;\n                return this.map_canvas.drawImage(tile_obj.img, sx, sy, sw, sh);\n            }\n            var _a, _b;\n        };\n        TileRendererView.prototype._set_rect = function () {\n            var h, l, outline_width, t, w;\n            outline_width = this.plot_model.plot.properties.outline_line_width.value();\n            l = this.map_frame._left.value + outline_width / 2;\n            t = this.map_frame._top.value + outline_width / 2;\n            w = this.map_frame._width.value - outline_width;\n            h = this.map_frame._height.value - outline_width;\n            this.map_canvas.rect(l, t, w, h);\n            return this.map_canvas.clip();\n        };\n        TileRendererView.prototype._render_tiles = function (tile_keys) {\n            var i, len, tile_key;\n            this.map_canvas.save();\n            this._set_rect();\n            this.map_canvas.globalAlpha = this.model.alpha;\n            for (i = 0, len = tile_keys.length; i < len; i++) {\n                tile_key = tile_keys[i];\n                this._draw_tile(tile_key);\n            }\n            return this.map_canvas.restore();\n        };\n        TileRendererView.prototype._prefetch_tiles = function () {\n            var bounds, c, cbounds, children, cx, cy, cz, extent, h, i, ref, results, t, tile_source, tiles, w, x, y, z, zoom_level;\n            boundMethodCheck(this, TileRendererView);\n            tile_source = this.model.tile_source;\n            extent = this.get_extent();\n            h = this.map_frame._height.value;\n            w = this.map_frame._width.value;\n            zoom_level = this.model.tile_source.get_level_by_extent(extent, h, w);\n            tiles = this.model.tile_source.get_tiles_by_extent(extent, zoom_level);\n            results = [];\n            for (t = i = 0, ref = Math.min(10, tiles.length); i <= ref; t = i += 1) {\n                x = t[0], y = t[1], z = t[2], bounds = t[3];\n                children = this.model.tile_source.children_by_tile_xyz(x, y, z);\n                results.push(function () {\n                    var j, len, results1;\n                    results1 = [];\n                    for (j = 0, len = children.length; j < len; j++) {\n                        c = children[j];\n                        cx = c[0], cy = c[1], cz = c[2], cbounds = c[3];\n                        if (tile_source.tile_xyz_to_key(cx, cy, cz) in tile_source.tiles) {\n                            continue;\n                        } else {\n                            results1.push(this._create_tile(cx, cy, cz, cbounds, true));\n                        }\n                    }\n                    return results1;\n                }.call(this));\n            }\n            return results;\n        };\n        TileRendererView.prototype._fetch_tiles = function (tiles) {\n            var bounds, i, len, results, t, x, y, z;\n            results = [];\n            for (i = 0, len = tiles.length; i < len; i++) {\n                t = tiles[i];\n                x = t[0], y = t[1], z = t[2], bounds = t[3];\n                results.push(this._create_tile(x, y, z, bounds));\n            }\n            return results;\n        };\n        TileRendererView.prototype._update = function () {\n            var _this = this;\n            var bounds, c, cached, cbounds, child_key, children, cx, cy, cz, extent, h, i, j, k, key, len, len1, len2, max_zoom, min_zoom, need_load, parent_key, parent_tile, parents, px, py, pz, snap_back, t, tile, tile_source, tiles, w, x, y, z, zoom_level, zooming_out;\n            boundMethodCheck(this, TileRendererView);\n            tile_source = this.model.tile_source;\n            min_zoom = tile_source.min_zoom;\n            max_zoom = tile_source.max_zoom;\n            tile_source.update();\n            extent = this.get_extent();\n            zooming_out = this.extent[2] - this.extent[0] < extent[2] - extent[0];\n            h = this.map_frame._height.value;\n            w = this.map_frame._width.value;\n            zoom_level = tile_source.get_level_by_extent(extent, h, w);\n            snap_back = false;\n            if (zoom_level < min_zoom) {\n                extent = this.extent;\n                zoom_level = min_zoom;\n                snap_back = true;\n            } else if (zoom_level > max_zoom) {\n                extent = this.extent;\n                zoom_level = max_zoom;\n                snap_back = true;\n            }\n            if (snap_back) {\n                this.x_range.setv({\n                    x_range: {\n                        start: extent[0],\n                        end: extent[2]\n                    }\n                });\n                this.y_range.setv({\n                    start: extent[1],\n                    end: extent[3]\n                });\n                this.extent = extent;\n            }\n            this.extent = extent;\n            tiles = tile_source.get_tiles_by_extent(extent, zoom_level);\n            parents = [];\n            need_load = [];\n            cached = [];\n            children = [];\n            for (i = 0, len = tiles.length; i < len; i++) {\n                t = tiles[i];\n                x = t[0], y = t[1], z = t[2], bounds = t[3];\n                key = tile_source.tile_xyz_to_key(x, y, z);\n                tile = tile_source.tiles[key];\n                if (tile != null && tile.loaded === true) {\n                    cached.push(key);\n                } else {\n                    if (this.model.render_parents) {\n                        _a = tile_source.get_closest_parent_by_tile_xyz(x, y, z), px = _a[0], py = _a[1], pz = _a[2];\n                        parent_key = tile_source.tile_xyz_to_key(px, py, pz);\n                        parent_tile = tile_source.tiles[parent_key];\n                        if (parent_tile != null && parent_tile.loaded && indexOf.call(parents, parent_key) < 0) {\n                            parents.push(parent_key);\n                        }\n                        if (zooming_out) {\n                            children = tile_source.children_by_tile_xyz(x, y, z);\n                            for (j = 0, len1 = children.length; j < len1; j++) {\n                                c = children[j];\n                                cx = c[0], cy = c[1], cz = c[2], cbounds = c[3];\n                                child_key = tile_source.tile_xyz_to_key(cx, cy, cz);\n                                if (child_key in tile_source.tiles) {\n                                    children.push(child_key);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (tile == null) {\n                    need_load.push(t);\n                }\n            }\n            // draw stand-in parents ----------\n            this._render_tiles(parents);\n            this._render_tiles(children);\n            // draw cached ----------\n            this._render_tiles(cached);\n            for (k = 0, len2 = cached.length; k < len2; k++) {\n                t = cached[k];\n                tile_source.tiles[t].current = true;\n            }\n            // fetch missing -------\n            if (this.render_timer != null) {\n                clearTimeout(this.render_timer);\n            }\n            return this.render_timer = setTimeout(function () {\n                return _this._fetch_tiles(need_load);\n            }, 65);\n            var _a;\n        };\n        return TileRendererView;\n    }(renderer_1.RendererView);\n    var TileRenderer = function (_super) {\n        tslib_1.__extends(TileRenderer, _super);\n        function TileRenderer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return TileRenderer;\n    }(renderer_1.Renderer);\n    exports.TileRenderer = TileRenderer;\n    ;\n    TileRenderer.prototype.default_view = exports.TileRendererView;\n    TileRenderer.prototype.type = 'TileRenderer';\n    TileRenderer.define({\n        alpha: [\n            p.Number,\n            1\n        ],\n        x_range_name: [\n            p.String,\n            'default'\n        ],\n        y_range_name: [\n            p.String,\n            'default'\n        ],\n        tile_source: [\n            p.Instance,\n            function () {\n                return new wmts_tile_source_1.WMTSTileSource();\n            }\n        ],\n        render_parents: [\n            p.Bool,\n            true\n        ]\n    });\n    TileRenderer.override({ level: 'underlay' });    \n}","/*models/tiles/tile_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var image_pool_1 = require(197    /* ./image_pool */);\n    var tile_utils_1 = require(204    /* ./tile_utils */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var model_1 = require(50    /* ../../model */);\n    var TileSource = function (_super) {\n        tslib_1.__extends(TileSource, _super);\n        function TileSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TileSource.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this.utils = new tile_utils_1.ProjectionUtils();\n            this.pool = new image_pool_1.ImagePool();\n            this.tiles = {};\n            return this.normalize_case();\n        };\n        TileSource.prototype.string_lookup_replace = function (str, lookup) {\n            var key, result_str, value;\n            result_str = str;\n            for (key in lookup) {\n                value = lookup[key];\n                result_str = result_str.replace('{' + key + '}', value.toString());\n            }\n            return result_str;\n        };\n        TileSource.prototype.normalize_case = function () {\n            'Note: should probably be refactored into subclasses.';\n            var url;\n            url = this.url;\n            url = url.replace('{x}', '{X}');\n            url = url.replace('{y}', '{Y}');\n            url = url.replace('{z}', '{Z}');\n            url = url.replace('{q}', '{Q}');\n            url = url.replace('{xmin}', '{XMIN}');\n            url = url.replace('{ymin}', '{YMIN}');\n            url = url.replace('{xmax}', '{XMAX}');\n            url = url.replace('{ymax}', '{YMAX}');\n            return this.url = url;\n        };\n        TileSource.prototype.update = function () {\n            var key, ref, results, tile;\n            logging_1.logger.debug('TileSource: tile cache count: ' + Object.keys(this.tiles).length);\n            ref = this.tiles;\n            results = [];\n            for (key in ref) {\n                tile = ref[key];\n                tile.current = false;\n                results.push(tile.retain = false);\n            }\n            return results;\n        };\n        TileSource.prototype.tile_xyz_to_key = function (x, y, z) {\n            var key;\n            key = x + ':' + y + ':' + z;\n            return key;\n        };\n        TileSource.prototype.key_to_tile_xyz = function (key) {\n            var c;\n            return function () {\n                var i, len, ref, results;\n                ref = key.split(':');\n                results = [];\n                for (i = 0, len = ref.length; i < len; i++) {\n                    c = ref[i];\n                    results.push(parseInt(c));\n                }\n                return results;\n            }();\n        };\n        TileSource.prototype.sort_tiles_from_center = function (tiles, tile_extent) {\n            var center_x, center_y, txmax, txmin, tymax, tymin;\n            txmin = tile_extent[0], tymin = tile_extent[1], txmax = tile_extent[2], tymax = tile_extent[3];\n            center_x = (txmax - txmin) / 2 + txmin;\n            center_y = (tymax - tymin) / 2 + tymin;\n            tiles.sort(function (a, b) {\n                var a_distance, b_distance;\n                a_distance = Math.sqrt(Math.pow(center_x - a[0], 2) + Math.pow(center_y - a[1], 2));\n                b_distance = Math.sqrt(Math.pow(center_x - b[0], 2) + Math.pow(center_y - b[1], 2));\n                return a_distance - b_distance;\n            });\n            return tiles;\n        };\n        TileSource.prototype.prune_tiles = function () {\n            var key, ref, ref1, results, tile;\n            ref = this.tiles;\n            for (key in ref) {\n                tile = ref[key];\n                tile.retain = tile.current || tile.tile_coords[2] < 3;\n                // save the parents...they are cheap\n                if (tile.current) {\n                    this.retain_neighbors(tile);\n                    this.retain_children(tile);\n                    this.retain_parents(tile);\n                }\n            }\n            ref1 = this.tiles;\n            results = [];\n            for (key in ref1) {\n                tile = ref1[key];\n                if (!tile.retain) {\n                    results.push(this.remove_tile(key));\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        TileSource.prototype.remove_tile = function (key) {\n            var tile;\n            tile = this.tiles[key];\n            if (tile != null) {\n                this.pool.push(tile.img);\n                return delete this.tiles[key];\n            }\n        };\n        TileSource.prototype.get_image_url = function (x, y, z) {\n            var image_url;\n            image_url = this.string_lookup_replace(this.url, this.extra_url_vars);\n            return image_url.replace('{X}', x).replace('{Y}', y).replace('{Z}', z);\n        };\n        TileSource.prototype.retain_neighbors = function (reference_tile) {\n            throw new Error('Not Implemented');\n        };\n        TileSource.prototype.retain_parents = function (reference_tile) {\n            throw new Error('Not Implemented');\n        };\n        TileSource.prototype.retain_children = function (reference_tile) {\n            throw new Error('Not Implemented');\n        };\n        TileSource.prototype.tile_xyz_to_quadkey = function (x, y, z) {\n            throw new Error('Not Implemented');\n        };\n        TileSource.prototype.quadkey_to_tile_xyz = function (quadkey) {\n            throw new Error('Not Implemented');\n        };\n        return TileSource;\n    }(model_1.Model);\n    exports.TileSource = TileSource;\n    ;\n    TileSource.prototype.type = 'TileSource';\n    TileSource.define({\n        url: [\n            p.String,\n            ''\n        ],\n        tile_size: [\n            p.Number,\n            256\n        ],\n        max_zoom: [\n            p.Number,\n            30\n        ],\n        min_zoom: [\n            p.Number,\n            0\n        ],\n        extra_url_vars: [\n            p.Any,\n            {}\n        ],\n        attribution: [\n            p.String,\n            ''\n        ],\n        x_origin_offset: [p.Number],\n        y_origin_offset: [p.Number],\n        initial_resolution: [p.Number]\n    });    \n}","/*models/tiles/tile_utils*/\nfunction _(require, module, exports) {\n    var proj4_1 = require(31    /* core/util/proj4 */);\n    exports.ProjectionUtils = function () {\n        function ProjectionUtils() {\n            this.origin_shift = 2 * Math.PI * 6378137 / 2;\n        }\n        ProjectionUtils.prototype.geographic_to_meters = function (xLon, yLat) {\n            return proj4_1.proj4(proj4_1.wgs84, proj4_1.mercator, [\n                xLon,\n                yLat\n            ]);\n        };\n        ProjectionUtils.prototype.meters_to_geographic = function (mx, my) {\n            return proj4_1.proj4(proj4_1.mercator, proj4_1.wgs84, [\n                mx,\n                my\n            ]);\n        };\n        ProjectionUtils.prototype.geographic_extent_to_meters = function (extent) {\n            var xmax, xmin, ymax, ymin;\n            xmin = extent[0], ymin = extent[1], xmax = extent[2], ymax = extent[3];\n            _a = this.geographic_to_meters(xmin, ymin), xmin = _a[0], ymin = _a[1];\n            _b = this.geographic_to_meters(xmax, ymax), xmax = _b[0], ymax = _b[1];\n            return [\n                xmin,\n                ymin,\n                xmax,\n                ymax\n            ];\n            var _a, _b;\n        };\n        ProjectionUtils.prototype.meters_extent_to_geographic = function (extent) {\n            var xmax, xmin, ymax, ymin;\n            xmin = extent[0], ymin = extent[1], xmax = extent[2], ymax = extent[3];\n            _a = this.meters_to_geographic(xmin, ymin), xmin = _a[0], ymin = _a[1];\n            _b = this.meters_to_geographic(xmax, ymax), xmax = _b[0], ymax = _b[1];\n            return [\n                xmin,\n                ymin,\n                xmax,\n                ymax\n            ];\n            var _a, _b;\n        };\n        return ProjectionUtils;\n    }();    \n}","/*models/tiles/tms_tile_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var mercator_tile_source_1 = require(200    /* ./mercator_tile_source */);\n    var TMSTileSource = function (_super) {\n        tslib_1.__extends(TMSTileSource, _super);\n        function TMSTileSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TMSTileSource.prototype.get_image_url = function (x, y, z) {\n            var image_url;\n            image_url = this.string_lookup_replace(this.url, this.extra_url_vars);\n            return image_url.replace('{X}', x).replace('{Y}', y).replace('{Z}', z);\n        };\n        return TMSTileSource;\n    }(mercator_tile_source_1.MercatorTileSource);\n    exports.TMSTileSource = TMSTileSource;\n    ;\n    TMSTileSource.prototype.type = 'TMSTileSource';    \n}","/*models/tiles/wmts_tile_source*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var mercator_tile_source_1 = require(200    /* ./mercator_tile_source */);\n    var WMTSTileSource = function (_super) {\n        tslib_1.__extends(WMTSTileSource, _super);\n        function WMTSTileSource() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        WMTSTileSource.prototype.get_image_url = function (x, y, z) {\n            var image_url;\n            image_url = this.string_lookup_replace(this.url, this.extra_url_vars);\n            _a = this.tms_to_wmts(x, y, z), x = _a[0], y = _a[1], z = _a[2];\n            return image_url.replace('{X}', x).replace('{Y}', y).replace('{Z}', z);\n            var _a;\n        };\n        return WMTSTileSource;\n    }(mercator_tile_source_1.MercatorTileSource);\n    exports.WMTSTileSource = WMTSTileSource;\n    ;\n    WMTSTileSource.prototype.type = 'WMTSTileSource';    \n}","/*models/tools/actions/action_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var button_tool_1 = require(215    /* ../button_tool */);\n    var signaling_1 = require(20    /* core/signaling */);\n    exports.ActionToolButtonView = function (_super) {\n        tslib_1.__extends(ActionToolButtonView, _super);\n        function ActionToolButtonView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ActionToolButtonView.prototype._clicked = function () {\n            return this.model.do.emit();\n        };\n        return ActionToolButtonView;\n    }(button_tool_1.ButtonToolButtonView);\n    exports.ActionToolView = function (_super) {\n        tslib_1.__extends(ActionToolView, _super);\n        function ActionToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ActionToolView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this.connect(this.model.do, function () {\n                return this.doit();\n            });\n        };\n        return ActionToolView;\n    }(button_tool_1.ButtonToolView);\n    var ActionTool = function (_super) {\n        tslib_1.__extends(ActionTool, _super);\n        function ActionTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ActionTool.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            return this.do = new signaling_1.Signal(this, 'do');\n        };\n        return ActionTool;\n    }(button_tool_1.ButtonTool);\n    exports.ActionTool = ActionTool;\n    ;\n    ActionTool.prototype.button_view = exports.ActionToolButtonView;    \n}","/*models/tools/actions/help_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var action_tool_1 = require(207    /* ./action_tool */);\n    var p = require(15    /* core/properties */);\n    exports.HelpToolView = function (_super) {\n        tslib_1.__extends(HelpToolView, _super);\n        function HelpToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        HelpToolView.prototype.doit = function () {\n            return window.open(this.model.redirect);\n        };\n        return HelpToolView;\n    }(action_tool_1.ActionToolView);\n    var HelpTool = function (_super) {\n        tslib_1.__extends(HelpTool, _super);\n        function HelpTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return HelpTool;\n    }(action_tool_1.ActionTool);\n    exports.HelpTool = HelpTool;\n    ;\n    HelpTool.prototype.default_view = exports.HelpToolView;\n    HelpTool.prototype.type = 'HelpTool';\n    HelpTool.prototype.tool_name = 'Help';\n    HelpTool.prototype.icon = 'bk-tool-icon-help';\n    HelpTool.define({\n        help_tooltip: [\n            p.String,\n            'Click the question mark to learn more about Bokeh plot tools.'\n        ],\n        redirect: [\n            p.String,\n            'https://bokeh.pydata.org/en/latest/docs/user_guide/tools.html#built-in-tools'\n        ]\n    });\n    HelpTool.getters({\n        tooltip: function () {\n            return this.help_tooltip;\n        }\n    });    \n}","/*models/tools/actions/redo_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var action_tool_1 = require(207    /* ./action_tool */);\n    exports.RedoToolView = function (_super) {\n        tslib_1.__extends(RedoToolView, _super);\n        function RedoToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        RedoToolView.prototype.initialize = function (options) {\n            var _this = this;\n            _super.prototype.initialize.call(this, options);\n            return this.connect(this.plot_view.state_changed, function () {\n                return _this.model.disabled = !_this.plot_view.can_redo();\n            });\n        };\n        RedoToolView.prototype.doit = function () {\n            return this.plot_view.redo();\n        };\n        return RedoToolView;\n    }(action_tool_1.ActionToolView);\n    var RedoTool = function (_super) {\n        tslib_1.__extends(RedoTool, _super);\n        function RedoTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return RedoTool;\n    }(action_tool_1.ActionTool);\n    exports.RedoTool = RedoTool;\n    ;\n    RedoTool.prototype.default_view = exports.RedoToolView;\n    RedoTool.prototype.type = 'RedoTool';\n    RedoTool.prototype.tool_name = 'Redo';\n    RedoTool.prototype.icon = 'bk-tool-icon-redo';\n    RedoTool.override({ disabled: true });    \n}","/*models/tools/actions/reset_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var action_tool_1 = require(207    /* ./action_tool */);\n    var bokeh_events_1 = require(3    /* core/bokeh_events */);\n    var p = require(15    /* core/properties */);\n    exports.ResetToolView = function (_super) {\n        tslib_1.__extends(ResetToolView, _super);\n        function ResetToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ResetToolView.prototype.doit = function () {\n            this.plot_view.clear_state();\n            this.plot_view.reset_range();\n            this.plot_view.reset_selection();\n            return this.plot_model.plot.trigger_event(new bokeh_events_1.Reset());\n        };\n        return ResetToolView;\n    }(action_tool_1.ActionToolView);\n    var ResetTool = function (_super) {\n        tslib_1.__extends(ResetTool, _super);\n        function ResetTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ResetTool;\n    }(action_tool_1.ActionTool);\n    exports.ResetTool = ResetTool;\n    ;\n    ResetTool.prototype.default_view = exports.ResetToolView;\n    ResetTool.prototype.type = 'ResetTool';\n    ResetTool.prototype.tool_name = 'Reset';\n    ResetTool.prototype.icon = 'bk-tool-icon-reset';\n    ResetTool.define({\n        reset_size: [\n            p.Bool,\n            true\n        ]\n    });    \n}","/*models/tools/actions/save_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var action_tool_1 = require(207    /* ./action_tool */);\n    exports.SaveToolView = function (_super) {\n        tslib_1.__extends(SaveToolView, _super);\n        function SaveToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SaveToolView.prototype.doit = function () {\n            return this.plot_view.save('bokeh_plot');\n        };\n        return SaveToolView;\n    }(action_tool_1.ActionToolView);\n    var SaveTool = function (_super) {\n        tslib_1.__extends(SaveTool, _super);\n        function SaveTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return SaveTool;\n    }(action_tool_1.ActionTool);\n    exports.SaveTool = SaveTool;\n    ;\n    SaveTool.prototype.default_view = exports.SaveToolView;\n    SaveTool.prototype.type = 'SaveTool';\n    SaveTool.prototype.tool_name = 'Save';\n    SaveTool.prototype.icon = 'bk-tool-icon-save';    \n}","/*models/tools/actions/undo_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var action_tool_1 = require(207    /* ./action_tool */);\n    exports.UndoToolView = function (_super) {\n        tslib_1.__extends(UndoToolView, _super);\n        function UndoToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        UndoToolView.prototype.initialize = function (options) {\n            var _this = this;\n            _super.prototype.initialize.call(this, options);\n            return this.connect(this.plot_view.state_changed, function () {\n                return _this.model.disabled = !_this.plot_view.can_undo();\n            });\n        };\n        UndoToolView.prototype.doit = function () {\n            return this.plot_view.undo();\n        };\n        return UndoToolView;\n    }(action_tool_1.ActionToolView);\n    var UndoTool = function (_super) {\n        tslib_1.__extends(UndoTool, _super);\n        function UndoTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return UndoTool;\n    }(action_tool_1.ActionTool);\n    exports.UndoTool = UndoTool;\n    ;\n    UndoTool.prototype.default_view = exports.UndoToolView;\n    UndoTool.prototype.type = 'UndoTool';\n    UndoTool.prototype.tool_name = 'Undo';\n    UndoTool.prototype.icon = 'bk-tool-icon-undo';\n    UndoTool.override({ disabled: true });    \n}","/*models/tools/actions/zoom_in_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var action_tool_1 = require(207    /* ./action_tool */);\n    var zoom_1 = require(44    /* core/util/zoom */);\n    var p = require(15    /* core/properties */);\n    exports.ZoomInToolView = function (_super) {\n        tslib_1.__extends(ZoomInToolView, _super);\n        function ZoomInToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ZoomInToolView.prototype.doit = function () {\n            var dims, frame, h_axis, ref, v_axis, zoom_info;\n            frame = this.plot_model.frame;\n            dims = this.model.dimensions;\n            // restrict to axis configured in tool's dimensions property\n            h_axis = dims === 'width' || dims === 'both';\n            v_axis = dims === 'height' || dims === 'both';\n            zoom_info = zoom_1.scale_range(frame, this.model.factor, h_axis, v_axis);\n            this.plot_view.push_state('zoom_out', { range: zoom_info });\n            this.plot_view.update_range(zoom_info, false, true);\n            if ((ref = this.model.document) != null) {\n                ref.interactive_start(this.plot_model.plot);\n            }\n            return null;\n        };\n        return ZoomInToolView;\n    }(action_tool_1.ActionToolView);\n    var ZoomInTool = function (_super) {\n        tslib_1.__extends(ZoomInTool, _super);\n        function ZoomInTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ZoomInTool;\n    }(action_tool_1.ActionTool);\n    exports.ZoomInTool = ZoomInTool;\n    ;\n    ZoomInTool.prototype.default_view = exports.ZoomInToolView;\n    ZoomInTool.prototype.type = 'ZoomInTool';\n    ZoomInTool.prototype.tool_name = 'Zoom In';\n    ZoomInTool.prototype.icon = 'bk-tool-icon-zoom-in';\n    ZoomInTool.getters({\n        tooltip: function () {\n            return this._get_dim_tooltip(this.tool_name, this.dimensions);\n        }\n    });\n    ZoomInTool.define({\n        factor: [\n            p.Percent,\n            0.1\n        ],\n        dimensions: [\n            p.Dimensions,\n            'both'\n        ]\n    });    \n}","/*models/tools/actions/zoom_out_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var action_tool_1 = require(207    /* ./action_tool */);\n    var zoom_1 = require(44    /* core/util/zoom */);\n    var p = require(15    /* core/properties */);\n    exports.ZoomOutToolView = function (_super) {\n        tslib_1.__extends(ZoomOutToolView, _super);\n        function ZoomOutToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ZoomOutToolView.prototype.doit = function () {\n            var dims, frame, h_axis, ref, v_axis, zoom_info;\n            frame = this.plot_model.frame;\n            dims = this.model.dimensions;\n            // restrict to axis configured in tool's dimensions property\n            h_axis = dims === 'width' || dims === 'both';\n            v_axis = dims === 'height' || dims === 'both';\n            // zooming out requires a negative factor to scale_range\n            zoom_info = zoom_1.scale_range(frame, -this.model.factor, h_axis, v_axis);\n            this.plot_view.push_state('zoom_out', { range: zoom_info });\n            this.plot_view.update_range(zoom_info, false, true);\n            if ((ref = this.model.document) != null) {\n                ref.interactive_start(this.plot_model.plot);\n            }\n            return null;\n        };\n        return ZoomOutToolView;\n    }(action_tool_1.ActionToolView);\n    var ZoomOutTool = function (_super) {\n        tslib_1.__extends(ZoomOutTool, _super);\n        function ZoomOutTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ZoomOutTool;\n    }(action_tool_1.ActionTool);\n    exports.ZoomOutTool = ZoomOutTool;\n    ;\n    ZoomOutTool.prototype.default_view = exports.ZoomOutToolView;\n    ZoomOutTool.prototype.type = 'ZoomOutTool';\n    ZoomOutTool.prototype.tool_name = 'Zoom Out';\n    ZoomOutTool.prototype.icon = 'bk-tool-icon-zoom-out';\n    ZoomOutTool.getters({\n        tooltip: function () {\n            return this._get_dim_tooltip(this.tool_name, this.dimensions);\n        }\n    });\n    ZoomOutTool.define({\n        factor: [\n            p.Percent,\n            0.1\n        ],\n        dimensions: [\n            p.Dimensions,\n            'both'\n        ]\n    });    \n}","/*models/tools/button_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var dom_view_1 = require(6    /* core/dom_view */);\n    var tool_1 = require(231    /* ./tool */);\n    var dom_1 = require(5    /* core/dom */);\n    var p = require(15    /* core/properties */);\n    var ButtonToolButtonView = function (_super) {\n        tslib_1.__extends(ButtonToolButtonView, _super);\n        function ButtonToolButtonView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ButtonToolButtonView.prototype.initialize = function (options) {\n            var _this = this;\n            _super.prototype.initialize.call(this, options);\n            this.connect(this.model.change, function () {\n                return _this.render();\n            });\n            this.el.addEventListener('click', function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n                return _this._clicked();\n            });\n            return this.render();\n        };\n        ButtonToolButtonView.prototype.render = function () {\n            dom_1.empty(this.el);\n            this.el.disabled = this.model.disabled;\n            this.el.classList.add(this.model.icon);\n            return this.el.title = this.model.tooltip;\n        };\n        ButtonToolButtonView.prototype._clicked = function () {\n        };\n        return ButtonToolButtonView;\n    }(dom_view_1.DOMView);\n    exports.ButtonToolButtonView = ButtonToolButtonView;\n    ;\n    ButtonToolButtonView.prototype.className = 'bk-toolbar-button';\n    exports.ButtonToolView = function (_super) {\n        tslib_1.__extends(ButtonToolView, _super);\n        function ButtonToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ButtonToolView;\n    }(tool_1.ToolView);\n    var ButtonTool = function (_super) {\n        tslib_1.__extends(ButtonTool, _super);\n        function ButtonTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ButtonTool;\n    }(tool_1.Tool);\n    exports.ButtonTool = ButtonTool;\n    ;\n    ButtonTool.prototype.button_view = ButtonToolButtonView;\n    ButtonTool.prototype.icon = null;\n    ButtonTool.getters({\n        tooltip: function () {\n            return this.tool_name;\n        }\n    });\n    ButtonTool.internal({\n        disabled: [\n            p.Boolean,\n            false\n        ]\n    });    \n}","/*models/tools/gestures/box_select_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var DEFAULT_BOX_OVERLAY;\n    var select_tool_1 = require(222    /* ./select_tool */);\n    var box_annotation_1 = require(55    /* ../../annotations/box_annotation */);\n    var p = require(15    /* core/properties */);\n    exports.BoxSelectToolView = function (_super) {\n        tslib_1.__extends(BoxSelectToolView, _super);\n        function BoxSelectToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoxSelectToolView.prototype._pan_start = function (e) {\n            var sx, sy;\n            _a = e.bokeh, sx = _a.sx, sy = _a.sy;\n            this._base_point = [\n                sx,\n                sy\n            ];\n            return null;\n            var _a;\n        };\n        BoxSelectToolView.prototype._pan = function (e) {\n            var append, curpoint, dims, frame, ref, sx, sxlim, sy, sylim;\n            _a = e.bokeh, sx = _a.sx, sy = _a.sy;\n            curpoint = [\n                sx,\n                sy\n            ];\n            frame = this.plot_model.frame;\n            dims = this.model.dimensions;\n            _b = this.model._get_dim_limits(this._base_point, curpoint, frame, dims), sxlim = _b[0], sylim = _b[1];\n            this.model.overlay.update({\n                left: sxlim[0],\n                right: sxlim[1],\n                top: sylim[0],\n                bottom: sylim[1]\n            });\n            if (this.model.select_every_mousemove) {\n                append = (ref = e.srcEvent.shiftKey) != null ? ref : false;\n                this._do_select(sxlim, sylim, false, append);\n            }\n            return null;\n            var _a, _b;\n        };\n        BoxSelectToolView.prototype._pan_end = function (e) {\n            var append, curpoint, dims, frame, ref, sx, sxlim, sy, sylim;\n            _a = e.bokeh, sx = _a.sx, sy = _a.sy;\n            curpoint = [\n                sx,\n                sy\n            ];\n            frame = this.plot_model.frame;\n            dims = this.model.dimensions;\n            _b = this.model._get_dim_limits(this._base_point, curpoint, frame, dims), sxlim = _b[0], sylim = _b[1];\n            append = (ref = e.srcEvent.shiftKey) != null ? ref : false;\n            this._do_select(sxlim, sylim, true, append);\n            this.model.overlay.update({\n                left: null,\n                right: null,\n                top: null,\n                bottom: null\n            });\n            this._base_point = null;\n            this.plot_view.push_state('box_select', { selection: this.plot_view.get_selection() });\n            return null;\n            var _a, _b;\n        };\n        BoxSelectToolView.prototype._do_select = function (_a, _b, final, append) {\n            var sx0 = _a[0], sx1 = _a[1];\n            var sy0 = _b[0], sy1 = _b[1];\n            if (append === void 0) {\n                append = false;\n            }\n            var geometry;\n            geometry = {\n                type: 'rect',\n                sx0: sx0,\n                sx1: sx1,\n                sy0: sy0,\n                sy1: sy1\n            };\n            return this._select(geometry, final, append);\n        };\n        BoxSelectToolView.prototype._emit_callback = function (geometry) {\n            var frame, r, sx0, sx1, sy0, sy1, xscale, yscale;\n            r = this.computed_renderers[0];\n            frame = this.plot_model.frame;\n            xscale = frame.xscales[r.x_range_name];\n            yscale = frame.yscales[r.y_range_name];\n            sx0 = geometry.sx0, sx1 = geometry.sx1, sy0 = geometry.sy0, sy1 = geometry.sy1;\n            _a = xscale.r_invert(sx0, sx1), geometry.x0 = _a[0], geometry.x1 = _a[1];\n            _b = yscale.r_invert(sy0, sy1), geometry.y0 = _b[0], geometry.y1 = _b[1];\n            this.model.callback.execute(this.model, { geometry: geometry });\n            var _a, _b;\n        };\n        return BoxSelectToolView;\n    }(select_tool_1.SelectToolView);\n    DEFAULT_BOX_OVERLAY = function () {\n        return new box_annotation_1.BoxAnnotation({\n            level: 'overlay',\n            render_mode: 'css',\n            top_units: 'screen',\n            left_units: 'screen',\n            bottom_units: 'screen',\n            right_units: 'screen',\n            fill_color: { value: 'lightgrey' },\n            fill_alpha: { value: 0.5 },\n            line_color: { value: 'black' },\n            line_alpha: { value: 1 },\n            line_width: { value: 2 },\n            line_dash: {\n                value: [\n                    4,\n                    4\n                ]\n            }\n        });\n    };\n    var BoxSelectTool = function (_super) {\n        tslib_1.__extends(BoxSelectTool, _super);\n        function BoxSelectTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return BoxSelectTool;\n    }(select_tool_1.SelectTool);\n    exports.BoxSelectTool = BoxSelectTool;\n    ;\n    BoxSelectTool.prototype.default_view = exports.BoxSelectToolView;\n    BoxSelectTool.prototype.type = 'BoxSelectTool';\n    BoxSelectTool.prototype.tool_name = 'Box Select';\n    BoxSelectTool.prototype.icon = 'bk-tool-icon-box-select';\n    BoxSelectTool.prototype.event_type = 'pan';\n    BoxSelectTool.prototype.default_order = 30;\n    BoxSelectTool.define({\n        dimensions: [\n            p.Dimensions,\n            'both'\n        ],\n        select_every_mousemove: [\n            p.Bool,\n            false\n        ],\n        callback: [p.Instance],\n        overlay: [\n            p.Instance,\n            DEFAULT_BOX_OVERLAY\n        ]\n    });\n    BoxSelectTool.getters({\n        tooltip: function () {\n            return this._get_dim_tooltip(this.tool_name, this.dimensions);\n        }\n    });    \n}","/*models/tools/gestures/box_zoom_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var DEFAULT_BOX_OVERLAY;\n    var gesture_tool_1 = require(218    /* ./gesture_tool */);\n    var box_annotation_1 = require(55    /* ../../annotations/box_annotation */);\n    var p = require(15    /* core/properties */);\n    exports.BoxZoomToolView = function (_super) {\n        tslib_1.__extends(BoxZoomToolView, _super);\n        function BoxZoomToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoxZoomToolView.prototype._match_aspect = function (base_point, curpoint, frame) {\n            var a, bottom, left, right, top, va, vh, vw, xmod, ymod;\n            // aspect ratio of plot frame\n            a = frame.bbox.aspect;\n            // current aspect of cursor-defined box\n            vw = Math.abs(base_point[0] - curpoint[0]);\n            vh = Math.abs(base_point[1] - curpoint[1]);\n            if (vh === 0) {\n                va = 0;\n            } else {\n                va = vw / vh;\n            }\n            if (va >= a) {\n                _a = [\n                    1,\n                    va / a\n                ], xmod = _a[0], ymod = _a[1];\n            } else {\n                _b = [\n                    a / va,\n                    1\n                ], xmod = _b[0], ymod = _b[1];\n            }\n            // OK the code blocks below merit some explanation. They do:\n            // compute left/right, pin to frame if necessary\n            // compute top/bottom (based on new left/right), pin to frame if necessary\n            // recompute left/right (based on top/bottom), in case top/bottom were pinned\n            // base_point[0] is left\n            if (base_point[0] <= curpoint[0]) {\n                left = base_point[0];\n                right = base_point[0] + vw * xmod;\n                if (right > hend) {\n                    right = hend;\n                }\n            } else {\n                // base_point[0] is right\n                right = base_point[0];\n                left = base_point[0] - vw * xmod;\n                if (left < hstart) {\n                    left = hstart;\n                }\n            }\n            vw = Math.abs(right - left);\n            // base_point[1] is bottom\n            if (base_point[1] <= curpoint[1]) {\n                bottom = base_point[1];\n                top = base_point[1] + vw / a;\n                if (top > vend) {\n                    top = vend;\n                }\n            } else {\n                // base_point[1] is top\n                top = base_point[1];\n                bottom = base_point[1] - vw / a;\n                if (bottom < vstart) {\n                    bottom = vstart;\n                }\n            }\n            vh = Math.abs(top - bottom);\n            // base_point[0] is left\n            if (base_point[0] <= curpoint[0]) {\n                right = base_point[0] + a * vh;\n            } else {\n                // base_point[0] is right\n                left = base_point[0] - a * vh;\n            }\n            return [\n                [\n                    left,\n                    right\n                ],\n                [\n                    bottom,\n                    top\n                ]\n            ];\n            var _a, _b;\n        };\n        BoxZoomToolView.prototype._pan_start = function (e) {\n            this._base_point = [\n                e.bokeh.sx,\n                e.bokeh.sy\n            ];\n            return null;\n        };\n        BoxZoomToolView.prototype._pan = function (e) {\n            var curpoint, dims, frame, sx, sy;\n            curpoint = [\n                e.bokeh.sx,\n                e.bokeh.sy\n            ];\n            frame = this.plot_model.frame;\n            dims = this.model.dimensions;\n            if (this.model.match_aspect && dims === 'both') {\n                _a = this._match_aspect(this._base_point, curpoint, frame), sx = _a[0], sy = _a[1];\n            } else {\n                _b = this.model._get_dim_limits(this._base_point, curpoint, frame, dims), sx = _b[0], sy = _b[1];\n            }\n            this.model.overlay.update({\n                left: sx[0],\n                right: sx[1],\n                top: sy[0],\n                bottom: sy[1]\n            });\n            return null;\n            var _a, _b;\n        };\n        BoxZoomToolView.prototype._pan_end = function (e) {\n            var curpoint, dims, frame, sx, sy;\n            curpoint = [\n                e.bokeh.sx,\n                e.bokeh.sy\n            ];\n            frame = this.plot_model.frame;\n            dims = this.model.dimensions;\n            if (this.model.match_aspect && dims === 'both') {\n                _a = this._match_aspect(this._base_point, curpoint, frame), sx = _a[0], sy = _a[1];\n            } else {\n                _b = this.model._get_dim_limits(this._base_point, curpoint, frame, dims), sx = _b[0], sy = _b[1];\n            }\n            this._update(sx, sy);\n            this.model.overlay.update({\n                left: null,\n                right: null,\n                top: null,\n                bottom: null\n            });\n            this._base_point = null;\n            return null;\n            var _a, _b;\n        };\n        BoxZoomToolView.prototype._update = function (_a, _b) {\n            var sx0 = _a[0], sx1 = _a[1];\n            var sy0 = _b[0], sy1 = _b[1];\n            var end, name, ref, ref1, scale, start, xrs, yrs, zoom_info;\n            // If the viewing window is too small, no-op: it is likely that the user did\n            // not intend to make this box zoom and instead was trying to cancel out of the\n            // zoom, a la matplotlib's ToolZoom. Like matplotlib, set the threshold at 5 pixels.\n            if (Math.abs(sx1 - sx0) <= 5 || Math.abs(sy1 - sy0) <= 5) {\n                return;\n            }\n            xrs = {};\n            ref = this.plot_view.frame.xscales;\n            for (name in ref) {\n                scale = ref[name];\n                _c = scale.r_invert(sx0, sx1), start = _c[0], end = _c[1];\n                xrs[name] = {\n                    start: start,\n                    end: end\n                };\n            }\n            yrs = {};\n            ref1 = this.plot_view.frame.yscales;\n            for (name in ref1) {\n                scale = ref1[name];\n                _d = scale.r_invert(sy0, sy1), start = _d[0], end = _d[1];\n                yrs[name] = {\n                    start: start,\n                    end: end\n                };\n            }\n            zoom_info = {\n                xrs: xrs,\n                yrs: yrs\n            };\n            this.plot_view.push_state('box_zoom', { range: zoom_info });\n            return this.plot_view.update_range(zoom_info);\n            var _c, _d;\n        };\n        return BoxZoomToolView;\n    }(gesture_tool_1.GestureToolView);\n    DEFAULT_BOX_OVERLAY = function () {\n        return new box_annotation_1.BoxAnnotation({\n            level: 'overlay',\n            render_mode: 'css',\n            top_units: 'screen',\n            left_units: 'screen',\n            bottom_units: 'screen',\n            right_units: 'screen',\n            fill_color: { value: 'lightgrey' },\n            fill_alpha: { value: 0.5 },\n            line_color: { value: 'black' },\n            line_alpha: { value: 1 },\n            line_width: { value: 2 },\n            line_dash: {\n                value: [\n                    4,\n                    4\n                ]\n            }\n        });\n    };\n    var BoxZoomTool = function (_super) {\n        tslib_1.__extends(BoxZoomTool, _super);\n        function BoxZoomTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return BoxZoomTool;\n    }(gesture_tool_1.GestureTool);\n    exports.BoxZoomTool = BoxZoomTool;\n    ;\n    BoxZoomTool.prototype.default_view = exports.BoxZoomToolView;\n    BoxZoomTool.prototype.type = 'BoxZoomTool';\n    BoxZoomTool.prototype.tool_name = 'Box Zoom';\n    BoxZoomTool.prototype.icon = 'bk-tool-icon-box-zoom';\n    BoxZoomTool.prototype.event_type = 'pan';\n    BoxZoomTool.prototype.default_order = 20;\n    BoxZoomTool.getters({\n        tooltip: function () {\n            return this._get_dim_tooltip(this.tool_name, this.dimensions);\n        }\n    });\n    BoxZoomTool.define({\n        dimensions: [\n            p.Dimensions,\n            'both'\n        ],\n        overlay: [\n            p.Instance,\n            DEFAULT_BOX_OVERLAY\n        ],\n        match_aspect: [\n            p.Bool,\n            false\n        ]\n    });    \n}","/*models/tools/gestures/gesture_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var button_tool_1 = require(215    /* ../button_tool */);\n    var on_off_button_1 = require(230    /* ../on_off_button */);\n    exports.GestureToolView = function (_super) {\n        tslib_1.__extends(GestureToolView, _super);\n        function GestureToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return GestureToolView;\n    }(button_tool_1.ButtonToolView);\n    var GestureTool = function (_super) {\n        tslib_1.__extends(GestureTool, _super);\n        function GestureTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return GestureTool;\n    }(button_tool_1.ButtonTool);\n    exports.GestureTool = GestureTool;\n    ;\n    GestureTool.prototype.button_view = on_off_button_1.OnOffButtonView;\n    GestureTool.prototype.event_type = null;\n    GestureTool.prototype.default_order = null;    \n}","/*models/tools/gestures/lasso_select_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var DEFAULT_POLY_OVERLAY;\n    var select_tool_1 = require(222    /* ./select_tool */);\n    var poly_annotation_1 = require(62    /* ../../annotations/poly_annotation */);\n    var p = require(15    /* core/properties */);\n    exports.LassoSelectToolView = function (_super) {\n        tslib_1.__extends(LassoSelectToolView, _super);\n        function LassoSelectToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LassoSelectToolView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this.connect(this.model.properties.active.change, function () {\n                return this._active_change();\n            });\n            return this.data = null;\n        };\n        LassoSelectToolView.prototype._active_change = function () {\n            if (!this.model.active) {\n                return this._clear_overlay();\n            }\n        };\n        LassoSelectToolView.prototype._keyup = function (e) {\n            if (e.keyCode === 13) {\n                return this._clear_overlay();\n            }\n        };\n        LassoSelectToolView.prototype._pan_start = function (e) {\n            var sx, sy;\n            _a = e.bokeh, sx = _a.sx, sy = _a.sy;\n            this.data = {\n                sx: [sx],\n                sy: [sy]\n            };\n            return null;\n            var _a;\n        };\n        LassoSelectToolView.prototype._pan = function (e) {\n            var append, overlay, ref, sx, sy;\n            _a = e.bokeh, sx = _a.sx, sy = _a.sy;\n            _b = this.plot_model.frame.bbox.clip(sx, sy), sx = _b[0], sy = _b[1];\n            this.data.sx.push(sx);\n            this.data.sy.push(sy);\n            overlay = this.model.overlay;\n            overlay.update({\n                xs: this.data.sx,\n                ys: this.data.sy\n            });\n            if (this.model.select_every_mousemove) {\n                append = (ref = e.srcEvent.shiftKey) != null ? ref : false;\n                return this._do_select(this.data.sx, this.data.sy, false, append);\n            }\n            var _a, _b;\n        };\n        LassoSelectToolView.prototype._pan_end = function (e) {\n            var append, ref;\n            this._clear_overlay();\n            append = (ref = e.srcEvent.shiftKey) != null ? ref : false;\n            this._do_select(this.data.sx, this.data.sy, true, append);\n            return this.plot_view.push_state('lasso_select', { selection: this.plot_view.get_selection() });\n        };\n        LassoSelectToolView.prototype._clear_overlay = function () {\n            return this.model.overlay.update({\n                xs: [],\n                ys: []\n            });\n        };\n        LassoSelectToolView.prototype._do_select = function (sx, sy, final, append) {\n            var geometry;\n            geometry = {\n                type: 'poly',\n                sx: sx,\n                sy: sy\n            };\n            return this._select(geometry, final, append);\n        };\n        LassoSelectToolView.prototype._emit_callback = function (geometry) {\n            var frame, r, xscale, yscale;\n            r = this.computed_renderers[0];\n            frame = this.plot_model.frame;\n            xscale = frame.xscales[r.x_range_name];\n            yscale = frame.yscales[r.y_range_name];\n            geometry.x = xscale.v_invert(geometry.sx);\n            geometry.y = yscale.v_invert(geometry.sy);\n            this.model.callback.execute(this.model, { geometry: geometry });\n        };\n        return LassoSelectToolView;\n    }(select_tool_1.SelectToolView);\n    DEFAULT_POLY_OVERLAY = function () {\n        return new poly_annotation_1.PolyAnnotation({\n            level: 'overlay',\n            xs_units: 'screen',\n            ys_units: 'screen',\n            fill_color: { value: 'lightgrey' },\n            fill_alpha: { value: 0.5 },\n            line_color: { value: 'black' },\n            line_alpha: { value: 1 },\n            line_width: { value: 2 },\n            line_dash: {\n                value: [\n                    4,\n                    4\n                ]\n            }\n        });\n    };\n    var LassoSelectTool = function (_super) {\n        tslib_1.__extends(LassoSelectTool, _super);\n        function LassoSelectTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return LassoSelectTool;\n    }(select_tool_1.SelectTool);\n    exports.LassoSelectTool = LassoSelectTool;\n    ;\n    LassoSelectTool.prototype.default_view = exports.LassoSelectToolView;\n    LassoSelectTool.prototype.type = 'LassoSelectTool';\n    LassoSelectTool.prototype.tool_name = 'Lasso Select';\n    LassoSelectTool.prototype.icon = 'bk-tool-icon-lasso-select';\n    LassoSelectTool.prototype.event_type = 'pan';\n    LassoSelectTool.prototype.default_order = 12;\n    LassoSelectTool.define({\n        select_every_mousemove: [\n            p.Bool,\n            true\n        ],\n        callback: [p.Instance],\n        overlay: [\n            p.Instance,\n            DEFAULT_POLY_OVERLAY\n        ]\n    });    \n}","/*models/tools/gestures/pan_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var gesture_tool_1 = require(218    /* ./gesture_tool */);\n    var p = require(15    /* core/properties */);\n    exports.PanToolView = function (_super) {\n        tslib_1.__extends(PanToolView, _super);\n        function PanToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PanToolView.prototype._pan_start = function (e) {\n            var bbox, hr, ref, sx, sy, vr;\n            this.last_dx = 0;\n            this.last_dy = 0;\n            _a = e.bokeh, sx = _a.sx, sy = _a.sy;\n            bbox = this.plot_view.frame.bbox;\n            if (!bbox.contains(sx, sy)) {\n                hr = bbox.h_range;\n                vr = bbox.v_range;\n                if (sx < hr.start || sx > hr.end) {\n                    this.v_axis_only = true;\n                }\n                if (sy < vr.start || sy > vr.end) {\n                    this.h_axis_only = true;\n                }\n            }\n            return (ref = this.model.document) != null ? ref.interactive_start(this.plot_model.plot) : void 0;\n            var _a;\n        };\n        PanToolView.prototype._pan = function (e) {\n            var ref;\n            this._update(e.deltaX, e.deltaY);\n            return (ref = this.model.document) != null ? ref.interactive_start(this.plot_model.plot) : void 0;\n        };\n        PanToolView.prototype._pan_end = function (e) {\n            this.h_axis_only = false;\n            this.v_axis_only = false;\n            if (this.pan_info != null) {\n                return this.plot_view.push_state('pan', { range: this.pan_info });\n            }\n        };\n        PanToolView.prototype._update = function (dx, dy) {\n            var dims, end, frame, hr, is_panning, name, new_dx, new_dy, ref, ref1, scale, sdx, sdy, start, sx0, sx1, sx_high, sx_low, sy0, sy1, sy_high, sy_low, vr, xrs, yrs;\n            frame = this.plot_view.frame;\n            new_dx = dx - this.last_dx;\n            new_dy = dy - this.last_dy;\n            hr = frame.bbox.h_range;\n            sx_low = hr.start - new_dx;\n            sx_high = hr.end - new_dx;\n            vr = frame.bbox.v_range;\n            sy_low = vr.start - new_dy;\n            sy_high = vr.end - new_dy;\n            dims = this.model.dimensions;\n            if ((dims === 'width' || dims === 'both') && !this.v_axis_only) {\n                sx0 = sx_low;\n                sx1 = sx_high;\n                sdx = -new_dx;\n            } else {\n                sx0 = hr.start;\n                sx1 = hr.end;\n                sdx = 0;\n            }\n            if ((dims === 'height' || dims === 'both') && !this.h_axis_only) {\n                sy0 = sy_low;\n                sy1 = sy_high;\n                sdy = -new_dy;\n            } else {\n                sy0 = vr.start;\n                sy1 = vr.end;\n                sdy = 0;\n            }\n            this.last_dx = dx;\n            this.last_dy = dy;\n            xrs = {};\n            ref = frame.xscales;\n            for (name in ref) {\n                scale = ref[name];\n                _a = scale.r_invert(sx0, sx1), start = _a[0], end = _a[1];\n                xrs[name] = {\n                    start: start,\n                    end: end\n                };\n            }\n            yrs = {};\n            ref1 = frame.yscales;\n            for (name in ref1) {\n                scale = ref1[name];\n                _b = scale.r_invert(sy0, sy1), start = _b[0], end = _b[1];\n                yrs[name] = {\n                    start: start,\n                    end: end\n                };\n            }\n            this.pan_info = {\n                xrs: xrs,\n                yrs: yrs,\n                sdx: sdx,\n                sdy: sdy\n            };\n            this.plot_view.update_range(this.pan_info, is_panning = true);\n            return null;\n            var _a, _b;\n        };\n        return PanToolView;\n    }(gesture_tool_1.GestureToolView);\n    var PanTool = function (_super) {\n        tslib_1.__extends(PanTool, _super);\n        function PanTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return PanTool;\n    }(gesture_tool_1.GestureTool);\n    exports.PanTool = PanTool;\n    ;\n    PanTool.prototype.default_view = exports.PanToolView;\n    PanTool.prototype.type = 'PanTool';\n    PanTool.prototype.tool_name = 'Pan';\n    PanTool.prototype.event_type = 'pan';\n    PanTool.prototype.default_order = 10;\n    PanTool.define({\n        dimensions: [\n            p.Dimensions,\n            'both'\n        ]\n    });\n    PanTool.getters({\n        tooltip: function () {\n            return this._get_dim_tooltip('Pan', this.dimensions);\n        },\n        icon: function () {\n            var suffix;\n            suffix = function () {\n                switch (this.dimensions) {\n                case 'both':\n                    return 'pan';\n                case 'width':\n                    return 'xpan';\n                case 'height':\n                    return 'ypan';\n                }\n            }.call(this);\n            return 'bk-tool-icon-' + suffix;\n        }\n    });    \n}","/*models/tools/gestures/poly_select_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var DEFAULT_POLY_OVERLAY;\n    var select_tool_1 = require(222    /* ./select_tool */);\n    var poly_annotation_1 = require(62    /* ../../annotations/poly_annotation */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    exports.PolySelectToolView = function (_super) {\n        tslib_1.__extends(PolySelectToolView, _super);\n        function PolySelectToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PolySelectToolView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this.connect(this.model.properties.active.change, function () {\n                return this._active_change();\n            });\n            return this.data = {\n                sx: [],\n                sy: []\n            };\n        };\n        PolySelectToolView.prototype._active_change = function () {\n            if (!this.model.active) {\n                return this._clear_data();\n            }\n        };\n        PolySelectToolView.prototype._keyup = function (e) {\n            if (e.keyCode === 13) {\n                return this._clear_data();\n            }\n        };\n        PolySelectToolView.prototype._doubletap = function (e) {\n            var append, ref;\n            append = (ref = e.srcEvent.shiftKey) != null ? ref : false;\n            this._do_select(this.data.sx, this.data.sy, true, append);\n            this.plot_view.push_state('poly_select', { selection: this.plot_view.get_selection() });\n            return this._clear_data();\n        };\n        PolySelectToolView.prototype._clear_data = function () {\n            this.data = {\n                sx: [],\n                sy: []\n            };\n            return this.model.overlay.update({\n                xs: [],\n                ys: []\n            });\n        };\n        PolySelectToolView.prototype._tap = function (e) {\n            var frame, sx, sy;\n            _a = e.bokeh, sx = _a.sx, sy = _a.sy;\n            frame = this.plot_model.frame;\n            if (!frame.bbox.contains(sx, sy)) {\n                return;\n            }\n            this.data.sx.push(sx);\n            this.data.sy.push(sy);\n            return this.model.overlay.update({\n                xs: array_1.copy(this.data.sx),\n                ys: array_1.copy(this.data.sy)\n            });\n            var _a;\n        };\n        PolySelectToolView.prototype._do_select = function (sx, sy, final, append) {\n            var geometry;\n            geometry = {\n                type: 'poly',\n                sx: sx,\n                sy: sy\n            };\n            return this._select(geometry, final, append);\n        };\n        PolySelectToolView.prototype._emit_callback = function (geometry) {\n            var frame, r, xscale, yscale;\n            r = this.computed_renderers[0];\n            frame = this.plot_model.frame;\n            xscale = frame.xscales[r.x_range_name];\n            yscale = frame.yscales[r.y_range_name];\n            geometry.x = xscale.v_invert(geometry.sx);\n            geometry.y = xscale.v_invert(geometry.sy);\n            this.model.callback.execute(this.model, { geometry: geometry });\n        };\n        return PolySelectToolView;\n    }(select_tool_1.SelectToolView);\n    DEFAULT_POLY_OVERLAY = function () {\n        return new poly_annotation_1.PolyAnnotation({\n            level: 'overlay',\n            xs_units: 'screen',\n            ys_units: 'screen',\n            fill_color: { value: 'lightgrey' },\n            fill_alpha: { value: 0.5 },\n            line_color: { value: 'black' },\n            line_alpha: { value: 1 },\n            line_width: { value: 2 },\n            line_dash: {\n                value: [\n                    4,\n                    4\n                ]\n            }\n        });\n    };\n    var PolySelectTool = function (_super) {\n        tslib_1.__extends(PolySelectTool, _super);\n        function PolySelectTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return PolySelectTool;\n    }(select_tool_1.SelectTool);\n    exports.PolySelectTool = PolySelectTool;\n    ;\n    PolySelectTool.prototype.default_view = exports.PolySelectToolView;\n    PolySelectTool.prototype.type = 'PolySelectTool';\n    PolySelectTool.prototype.tool_name = 'Poly Select';\n    PolySelectTool.prototype.icon = 'bk-tool-icon-polygon-select';\n    PolySelectTool.prototype.event_type = 'tap';\n    PolySelectTool.prototype.default_order = 11;\n    PolySelectTool.define({\n        callback: [p.Instance],\n        overlay: [\n            p.Instance,\n            DEFAULT_POLY_OVERLAY\n        ]\n    });    \n}","/*models/tools/gestures/select_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var gesture_tool_1 = require(218    /* ./gesture_tool */);\n    var glyph_renderer_1 = require(161    /* ../../renderers/glyph_renderer */);\n    var graph_renderer_1 = require(162    /* ../../renderers/graph_renderer */);\n    var logging_1 = require(14    /* core/logging */);\n    var p = require(15    /* core/properties */);\n    var object_1 = require(30    /* core/util/object */);\n    var bokeh_events_1 = require(3    /* core/bokeh_events */);\n    var SelectToolView = function (_super) {\n        tslib_1.__extends(SelectToolView, _super);\n        function SelectToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SelectToolView.prototype._computed_renderers_by_data_source = function () {\n            var j, len, r, ref, renderers_by_source, source;\n            renderers_by_source = {};\n            ref = this.computed_renderers;\n            for (j = 0, len = ref.length; j < len; j++) {\n                r = ref[j];\n                if (r instanceof graph_renderer_1.GraphRenderer) {\n                    source = r.node_renderer.data_source.id;\n                } else if (r instanceof glyph_renderer_1.GlyphRenderer) {\n                    source = r.data_source.id;\n                }\n                if (!(source in renderers_by_source)) {\n                    renderers_by_source[source] = [r];\n                } else {\n                    renderers_by_source[source] = renderers_by_source[source].concat([r]);\n                }\n            }\n            return renderers_by_source;\n        };\n        SelectToolView.prototype._keyup = function (e) {\n            var ds, j, len, r, ref, results, sm;\n            if (e.keyCode === 27) {\n                ref = this.computed_renderers;\n                results = [];\n                for (j = 0, len = ref.length; j < len; j++) {\n                    r = ref[j];\n                    ds = r.data_source;\n                    sm = ds.selection_manager;\n                    results.push(sm.clear());\n                }\n                return results;\n            }\n        };\n        SelectToolView.prototype._select = function (geometry, final, append) {\n            var _, j, len, r, r_views, renderers, renderers_by_source, sm;\n            renderers_by_source = this._computed_renderers_by_data_source();\n            for (_ in renderers_by_source) {\n                renderers = renderers_by_source[_];\n                sm = renderers[0].get_selection_manager();\n                r_views = [];\n                for (j = 0, len = renderers.length; j < len; j++) {\n                    r = renderers[j];\n                    if (r.id in this.plot_view.renderer_views) {\n                        r_views.push(this.plot_view.renderer_views[r.id]);\n                    }\n                }\n                sm.select(r_views, geometry, final, append);\n            }\n            if (this.model.callback != null) {\n                this._emit_callback(geometry);\n            }\n            this._emit_selection_event(geometry, final);\n            return null;\n        };\n        SelectToolView.prototype._emit_selection_event = function (geometry, final) {\n            if (final === void 0) {\n                final = true;\n            }\n            var g, i, j, ref, xm, ym;\n            g = object_1.clone(geometry);\n            xm = this.plot_view.frame.xscales['default'];\n            ym = this.plot_view.frame.yscales['default'];\n            switch (g.type) {\n            case 'point':\n                g.x = xm.invert(g.sx);\n                g.y = ym.invert(g.sy);\n                break;\n            case 'rect':\n                _a = xm.r_invert(g.sx0, g.sx1), g.x0 = _a[0], g.x1 = _a[1];\n                _b = ym.r_invert(g.sy0, g.sy1), g.y0 = _b[0], g.y1 = _b[1];\n                break;\n            case 'poly':\n                g.x = new Array(g.sx.length);\n                g.y = new Array(g.sy.length);\n                for (i = j = 0, ref = g.sx.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                    g.x[i] = xm.invert(g.sx[i]);\n                    g.y[i] = ym.invert(g.sy[i]);\n                }\n                break;\n            default:\n                logging_1.logger.debug('Unrecognized selection geometry type: \\'' + g.type + '\\'');\n            }\n            return this.plot_model.plot.trigger_event(new bokeh_events_1.SelectionGeometry({\n                geometry: g,\n                final: final\n            }));\n            var _a, _b;\n        };\n        return SelectToolView;\n    }(gesture_tool_1.GestureToolView);\n    exports.SelectToolView = SelectToolView;\n    ;\n    SelectToolView.getters({\n        computed_renderers: function () {\n            var all_renderers, names, r, renderers;\n            renderers = this.model.renderers;\n            names = this.model.names;\n            if (renderers.length === 0) {\n                all_renderers = this.plot_model.plot.renderers;\n                renderers = function () {\n                    var j, len, results;\n                    results = [];\n                    for (j = 0, len = all_renderers.length; j < len; j++) {\n                        r = all_renderers[j];\n                        if (r instanceof glyph_renderer_1.GlyphRenderer || r instanceof graph_renderer_1.GraphRenderer) {\n                            results.push(r);\n                        }\n                    }\n                    return results;\n                }();\n            }\n            if (names.length > 0) {\n                renderers = function () {\n                    var j, len, results;\n                    results = [];\n                    for (j = 0, len = renderers.length; j < len; j++) {\n                        r = renderers[j];\n                        if (names.indexOf(r.name) >= 0) {\n                            results.push(r);\n                        }\n                    }\n                    return results;\n                }();\n            }\n            return renderers;\n        }\n    });\n    var SelectTool = function (_super) {\n        tslib_1.__extends(SelectTool, _super);\n        function SelectTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return SelectTool;\n    }(gesture_tool_1.GestureTool);\n    exports.SelectTool = SelectTool;\n    ;\n    SelectTool.define({\n        renderers: [\n            p.Array,\n            []\n        ],\n        names: [\n            p.Array,\n            []\n        ]\n    });\n    SelectTool.internal({\n        multi_select_modifier: [\n            p.String,\n            'shift'\n        ]\n    });    \n}","/*models/tools/gestures/tap_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var select_tool_1 = require(222    /* ./select_tool */);\n    var p = require(15    /* core/properties */);\n    var types_1 = require(42    /* core/util/types */);\n    exports.TapToolView = function (_super) {\n        tslib_1.__extends(TapToolView, _super);\n        function TapToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TapToolView.prototype._tap = function (e) {\n            var append, ref, sx, sy;\n            _a = e.bokeh, sx = _a.sx, sy = _a.sy;\n            append = (ref = e.srcEvent.shiftKey) != null ? ref : false;\n            return this._select(sx, sy, true, append);\n            var _a;\n        };\n        TapToolView.prototype._select = function (sx, sy, final, append) {\n            var _, callback, cb_data, did_hit, geometry, i, len, r, r_views, ref, renderers, renderers_by_source, sm;\n            geometry = {\n                type: 'point',\n                sx: sx,\n                sy: sy\n            };\n            callback = this.model.callback;\n            cb_data = { geometries: geometry };\n            if (this.model.behavior === 'select') {\n                renderers_by_source = this._computed_renderers_by_data_source();\n                for (_ in renderers_by_source) {\n                    renderers = renderers_by_source[_];\n                    sm = renderers[0].get_selection_manager();\n                    r_views = function () {\n                        var i, len, results;\n                        results = [];\n                        for (i = 0, len = renderers.length; i < len; i++) {\n                            r = renderers[i];\n                            results.push(this.plot_view.renderer_views[r.id]);\n                        }\n                        return results;\n                    }.call(this);\n                    did_hit = sm.select(r_views, geometry, final, append);\n                    if (did_hit && callback != null) {\n                        cb_data.source = sm.source;\n                        if (types_1.isFunction(callback)) {\n                            callback(this, cb_data);\n                        } else {\n                            callback.execute(this, cb_data);\n                        }\n                    }\n                }\n                this._emit_selection_event(geometry);\n                this.plot_view.push_state('tap', {\n                    selection: this.plot_view.get_selection()    // @model.behavior == \"inspect\"\n                });\n            } else {\n                ref = this.computed_renderers;\n                for (i = 0, len = ref.length; i < len; i++) {\n                    r = ref[i];\n                    sm = r.get_selection_manager();\n                    did_hit = sm.inspect(this.plot_view.renderer_views[r.id], geometry);\n                    if (did_hit && callback != null) {\n                        cb_data.source = sm.source;\n                        if (types_1.isFunction(callback)) {\n                            callback(this, cb_data);\n                        } else {\n                            callback.execute(this, cb_data);\n                        }\n                    }\n                }\n            }\n            return null;\n        };\n        return TapToolView;\n    }(select_tool_1.SelectToolView);\n    var TapTool = function (_super) {\n        tslib_1.__extends(TapTool, _super);\n        function TapTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return TapTool;\n    }(select_tool_1.SelectTool);\n    exports.TapTool = TapTool;\n    ;\n    TapTool.prototype.default_view = exports.TapToolView;\n    TapTool.prototype.type = 'TapTool';\n    TapTool.prototype.tool_name = 'Tap';\n    TapTool.prototype.icon = 'bk-tool-icon-tap-select';\n    TapTool.prototype.event_type = 'tap';\n    TapTool.prototype.default_order = 10;\n    TapTool.define({\n        behavior: [\n            p.String,\n            'select'    // TODO: Enum(\"select\", \"inspect\")\n        ],\n        callback: [p.Any]    // TODO: p.Either(p.Instance(Callback), p.Function) ]\n    });    \n}","/*models/tools/gestures/wheel_pan_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var gesture_tool_1 = require(218    /* ./gesture_tool */);\n    var p = require(15    /* core/properties */);\n    exports.WheelPanToolView = function (_super) {\n        tslib_1.__extends(WheelPanToolView, _super);\n        function WheelPanToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        WheelPanToolView.prototype._scroll = function (e) {\n            var factor;\n            factor = this.model.speed * e.bokeh.delta;\n            // clamp the magnitude of factor, if it is > 1 bad things happen\n            if (factor > 0.9) {\n                factor = 0.9;\n            } else if (factor < -0.9) {\n                factor = -0.9;\n            }\n            return this._update_ranges(factor);\n        };\n        WheelPanToolView.prototype._update_ranges = function (factor) {\n            var end, frame, hr, name, pan_info, ref, ref1, ref2, scale, start, sx0, sx1, sx_high, sx_low, sx_range, sy0, sy1, sy_high, sy_low, sy_range, vr, xrs, yrs;\n            frame = this.plot_model.frame;\n            hr = frame.bbox.h_range;\n            vr = frame.bbox.v_range;\n            _a = [\n                hr.start,\n                hr.end\n            ], sx_low = _a[0], sx_high = _a[1];\n            _b = [\n                vr.start,\n                vr.end\n            ], sy_low = _b[0], sy_high = _b[1];\n            switch (this.model.dimension) {\n            case 'height':\n                sy_range = Math.abs(sy_high - sy_low);\n                sx0 = sx_low;\n                sx1 = sx_high;\n                sy0 = sy_low - sy_range * factor;\n                sy1 = sy_high - sy_range * factor;\n                break;\n            case 'width':\n                sx_range = Math.abs(sx_high - sx_low);\n                sx0 = sx_low - sx_range * factor;\n                sx1 = sx_high - sx_range * factor;\n                sy0 = sy_low;\n                sy1 = sy_high;\n            }\n            xrs = {};\n            ref = frame.xscales;\n            for (name in ref) {\n                scale = ref[name];\n                _c = scale.r_invert(sx0, sx1), start = _c[0], end = _c[1];\n                xrs[name] = {\n                    start: start,\n                    end: end\n                };\n            }\n            yrs = {};\n            ref1 = frame.yscales;\n            for (name in ref1) {\n                scale = ref1[name];\n                _d = scale.r_invert(sy0, sy1), start = _d[0], end = _d[1];\n                yrs[name] = {\n                    start: start,\n                    end: end\n                };\n            }\n            // OK this sucks we can't set factor independently in each direction. It is used\n            // for GMap plots, and GMap plots always preserve aspect, so effective the value\n            // of 'dimensions' is ignored.\n            pan_info = {\n                xrs: xrs,\n                yrs: yrs,\n                factor: factor\n            };\n            this.plot_view.push_state('wheel_pan', { range: pan_info });\n            this.plot_view.update_range(pan_info, false, true);\n            if ((ref2 = this.model.document) != null) {\n                ref2.interactive_start(this.plot_model.plot);\n            }\n            return null;\n            var _a, _b, _c, _d;\n        };\n        return WheelPanToolView;\n    }(gesture_tool_1.GestureToolView);\n    var WheelPanTool = function (_super) {\n        tslib_1.__extends(WheelPanTool, _super);\n        function WheelPanTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return WheelPanTool;\n    }(gesture_tool_1.GestureTool);\n    exports.WheelPanTool = WheelPanTool;\n    ;\n    WheelPanTool.prototype.type = 'WheelPanTool';\n    WheelPanTool.prototype.default_view = exports.WheelPanToolView;\n    WheelPanTool.prototype.tool_name = 'Wheel Pan';\n    WheelPanTool.prototype.icon = 'bk-tool-icon-wheel-pan';\n    WheelPanTool.prototype.event_type = 'scroll';\n    WheelPanTool.prototype.default_order = 12;\n    WheelPanTool.getters({\n        tooltip: function () {\n            return this._get_dim_tooltip(this.tool_name, this.dimension);\n        }\n    });\n    WheelPanTool.define({\n        dimension: [\n            p.Dimension,\n            'width'\n        ]\n    });\n    WheelPanTool.internal({\n        speed: [\n            p.Number,\n            1 / 1000\n        ]\n    });    \n}","/*models/tools/gestures/wheel_zoom_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var gesture_tool_1 = require(218    /* ./gesture_tool */);\n    var zoom_1 = require(44    /* core/util/zoom */);\n    var p = require(15    /* core/properties */);\n    exports.WheelZoomToolView = function (_super) {\n        tslib_1.__extends(WheelZoomToolView, _super);\n        function WheelZoomToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        WheelZoomToolView.prototype._pinch = function (e) {\n            var delta;\n            // TODO (bev) this can probably be done much better\n            if (e.scale >= 1) {\n                delta = (e.scale - 1) * 20;\n            } else {\n                delta = -20 / e.scale;\n            }\n            e.bokeh.delta = delta;\n            return this._scroll(e);\n        };\n        WheelZoomToolView.prototype._scroll = function (e) {\n            var dims, factor, frame, h_axis, hr, ref, sx, sy, v_axis, vr, zoom_info;\n            frame = this.plot_model.frame;\n            hr = frame.bbox.h_range;\n            vr = frame.bbox.v_range;\n            _a = e.bokeh, sx = _a.sx, sy = _a.sy;\n            dims = this.model.dimensions;\n            // restrict to axis configured in tool's dimensions property and if\n            // zoom origin is inside of frame range/domain\n            h_axis = (dims === 'width' || dims === 'both') && (hr.start < sx && sx < hr.end);\n            v_axis = (dims === 'height' || dims === 'both') && (vr.start < sy && sy < vr.end);\n            factor = this.model.speed * e.bokeh.delta;\n            zoom_info = zoom_1.scale_range(frame, factor, h_axis, v_axis, {\n                x: sx,\n                y: sy\n            });\n            this.plot_view.push_state('wheel_zoom', { range: zoom_info });\n            this.plot_view.update_range(zoom_info, false, true);\n            if ((ref = this.model.document) != null) {\n                ref.interactive_start(this.plot_model.plot);\n            }\n            return null;\n            var _a;\n        };\n        return WheelZoomToolView;\n    }(gesture_tool_1.GestureToolView);\n    var WheelZoomTool = function (_super) {\n        tslib_1.__extends(WheelZoomTool, _super);\n        function WheelZoomTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return WheelZoomTool;\n    }(gesture_tool_1.GestureTool);\n    exports.WheelZoomTool = WheelZoomTool;\n    ;\n    WheelZoomTool.prototype.default_view = exports.WheelZoomToolView;\n    WheelZoomTool.prototype.type = 'WheelZoomTool';\n    WheelZoomTool.prototype.tool_name = 'Wheel Zoom';\n    WheelZoomTool.prototype.icon = 'bk-tool-icon-wheel-zoom';\n    WheelZoomTool.prototype.event_type = 'ontouchstart' in window || navigator.maxTouchPoints > 0 ? 'pinch' : 'scroll';\n    WheelZoomTool.prototype.default_order = 10;\n    WheelZoomTool.getters({\n        tooltip: function () {\n            return this._get_dim_tooltip(this.tool_name, this.dimensions);\n        }\n    });\n    WheelZoomTool.define({\n        dimensions: [\n            p.Dimensions,\n            'both'\n        ]\n    });\n    WheelZoomTool.internal({\n        speed: [\n            p.Number,\n            1 / 600\n        ]\n    });    \n}","/*models/tools/index*/\nfunction _(require, module, exports) {\n    var action_tool_1 = require(207    /* ./actions/action_tool */);\n    exports.ActionTool = action_tool_1.ActionTool;\n    var help_tool_1 = require(208    /* ./actions/help_tool */);\n    exports.HelpTool = help_tool_1.HelpTool;\n    var redo_tool_1 = require(209    /* ./actions/redo_tool */);\n    exports.RedoTool = redo_tool_1.RedoTool;\n    var reset_tool_1 = require(210    /* ./actions/reset_tool */);\n    exports.ResetTool = reset_tool_1.ResetTool;\n    var save_tool_1 = require(211    /* ./actions/save_tool */);\n    exports.SaveTool = save_tool_1.SaveTool;\n    var undo_tool_1 = require(212    /* ./actions/undo_tool */);\n    exports.UndoTool = undo_tool_1.UndoTool;\n    var zoom_in_tool_1 = require(213    /* ./actions/zoom_in_tool */);\n    exports.ZoomInTool = zoom_in_tool_1.ZoomInTool;\n    var zoom_out_tool_1 = require(214    /* ./actions/zoom_out_tool */);\n    exports.ZoomOutTool = zoom_out_tool_1.ZoomOutTool;\n    var button_tool_1 = require(215    /* ./button_tool */);\n    exports.ButtonTool = button_tool_1.ButtonTool;\n    var box_select_tool_1 = require(216    /* ./gestures/box_select_tool */);\n    exports.BoxSelectTool = box_select_tool_1.BoxSelectTool;\n    var box_zoom_tool_1 = require(217    /* ./gestures/box_zoom_tool */);\n    exports.BoxZoomTool = box_zoom_tool_1.BoxZoomTool;\n    var gesture_tool_1 = require(218    /* ./gestures/gesture_tool */);\n    exports.GestureTool = gesture_tool_1.GestureTool;\n    var lasso_select_tool_1 = require(219    /* ./gestures/lasso_select_tool */);\n    exports.LassoSelectTool = lasso_select_tool_1.LassoSelectTool;\n    var pan_tool_1 = require(220    /* ./gestures/pan_tool */);\n    exports.PanTool = pan_tool_1.PanTool;\n    var poly_select_tool_1 = require(221    /* ./gestures/poly_select_tool */);\n    exports.PolySelectTool = poly_select_tool_1.PolySelectTool;\n    var select_tool_1 = require(222    /* ./gestures/select_tool */);\n    exports.SelectTool = select_tool_1.SelectTool;\n    var tap_tool_1 = require(223    /* ./gestures/tap_tool */);\n    exports.TapTool = tap_tool_1.TapTool;\n    var wheel_pan_tool_1 = require(224    /* ./gestures/wheel_pan_tool */);\n    exports.WheelPanTool = wheel_pan_tool_1.WheelPanTool;\n    var wheel_zoom_tool_1 = require(225    /* ./gestures/wheel_zoom_tool */);\n    exports.WheelZoomTool = wheel_zoom_tool_1.WheelZoomTool;\n    var crosshair_tool_1 = require(227    /* ./inspectors/crosshair_tool */);\n    exports.CrosshairTool = crosshair_tool_1.CrosshairTool;\n    var hover_tool_1 = require(228    /* ./inspectors/hover_tool */);\n    exports.HoverTool = hover_tool_1.HoverTool;\n    var inspect_tool_1 = require(229    /* ./inspectors/inspect_tool */);\n    exports.InspectTool = inspect_tool_1.InspectTool;\n    var tool_1 = require(231    /* ./tool */);\n    exports.Tool = tool_1.Tool;\n    var tool_proxy_1 = require(232    /* ./tool_proxy */);\n    exports.ToolProxy = tool_proxy_1.ToolProxy;\n    var toolbar_1 = require(233    /* ./toolbar */);\n    exports.Toolbar = toolbar_1.Toolbar;\n    var toolbar_base_1 = require(234    /* ./toolbar_base */);\n    exports.ToolbarBase = toolbar_base_1.ToolbarBase;\n    var toolbar_box_1 = require(235    /* ./toolbar_box */);\n    exports.ProxyToolbar = toolbar_box_1.ProxyToolbar;\n    var toolbar_box_2 = require(235    /* ./toolbar_box */);\n    exports.ToolbarBox = toolbar_box_2.ToolbarBox;    \n}","/*models/tools/inspectors/crosshair_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var inspect_tool_1 = require(229    /* ./inspect_tool */);\n    var span_1 = require(63    /* ../../annotations/span */);\n    var p = require(15    /* core/properties */);\n    var object_1 = require(30    /* core/util/object */);\n    exports.CrosshairToolView = function (_super) {\n        tslib_1.__extends(CrosshairToolView, _super);\n        function CrosshairToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CrosshairToolView.prototype._move = function (e) {\n            var sx, sy;\n            if (!this.model.active) {\n                return;\n            }\n            _a = e.bokeh, sx = _a.sx, sy = _a.sy;\n            if (!this.plot_model.frame.bbox.contains(sx, sy)) {\n                sx = sy = null;\n            }\n            return this._update_spans(sx, sy);\n            var _a;\n        };\n        CrosshairToolView.prototype._move_exit = function (e) {\n            return this._update_spans(null, null);\n        };\n        CrosshairToolView.prototype._update_spans = function (x, y) {\n            var dims;\n            dims = this.model.dimensions;\n            if (dims === 'width' || dims === 'both') {\n                this.model.spans.width.computed_location = y;\n            }\n            if (dims === 'height' || dims === 'both') {\n                return this.model.spans.height.computed_location = x;\n            }\n        };\n        return CrosshairToolView;\n    }(inspect_tool_1.InspectToolView);\n    var CrosshairTool = function (_super) {\n        tslib_1.__extends(CrosshairTool, _super);\n        function CrosshairTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CrosshairTool.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            return this.spans = {\n                width: new span_1.Span({\n                    for_hover: true,\n                    dimension: 'width',\n                    render_mode: this.render_mode,\n                    location_units: this.location_units,\n                    line_color: this.line_color,\n                    line_width: this.line_width,\n                    line_alpha: this.line_alpha\n                }),\n                height: new span_1.Span({\n                    for_hover: true,\n                    dimension: 'height',\n                    render_mode: this.render_mode,\n                    location_units: this.location_units,\n                    line_color: this.line_color,\n                    line_width: this.line_width,\n                    line_alpha: this.line_alpha\n                })\n            };\n        };\n        return CrosshairTool;\n    }(inspect_tool_1.InspectTool);\n    exports.CrosshairTool = CrosshairTool;\n    ;\n    CrosshairTool.prototype.default_view = exports.CrosshairToolView;\n    CrosshairTool.prototype.type = 'CrosshairTool';\n    CrosshairTool.prototype.tool_name = 'Crosshair';\n    CrosshairTool.prototype.icon = 'bk-tool-icon-crosshair';\n    CrosshairTool.define({\n        dimensions: [\n            p.Dimensions,\n            'both'\n        ],\n        line_color: [\n            p.Color,\n            'black'\n        ],\n        line_width: [\n            p.Number,\n            1\n        ],\n        line_alpha: [\n            p.Number,\n            1\n        ]\n    });\n    CrosshairTool.internal({\n        location_units: [\n            p.SpatialUnits,\n            'screen'\n        ],\n        render_mode: [\n            p.RenderMode,\n            'css'\n        ],\n        spans: [p.Any]\n    });\n    CrosshairTool.getters({\n        tooltip: function () {\n            return this._get_dim_tooltip('Crosshair', this.dimensions);\n        },\n        synthetic_renderers: function () {\n            return object_1.values(this.spans);\n        }\n    });    \n}","/*models/tools/inspectors/hover_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var inspect_tool_1 = require(229    /* ./inspect_tool */);\n    var tooltip_1 = require(67    /* ../../annotations/tooltip */);\n    var glyph_renderer_1 = require(161    /* ../../renderers/glyph_renderer */);\n    var graph_renderer_1 = require(162    /* ../../renderers/graph_renderer */);\n    var hittest = require(9    /* core/hittest */);\n    var templating_1 = require(39    /* core/util/templating */);\n    var dom_1 = require(5    /* core/dom */);\n    var p = require(15    /* core/properties */);\n    var color_1 = require(26    /* core/util/color */);\n    var object_1 = require(30    /* core/util/object */);\n    var types_1 = require(42    /* core/util/types */);\n    var build_views_1 = require(4    /* core/build_views */);\n    exports._nearest_line_hit = function (i, geometry, sx, sy, dx, dy) {\n        var d1x, d1y, d2x, d2y, dist1, dist2;\n        d1x = dx[i];\n        d1y = dy[i];\n        d2x = dx[i + 1];\n        d2y = dy[i + 1];\n        if (geometry.type === 'span') {\n            switch (geometry.direction) {\n            case 'h':\n                dist1 = Math.abs(d1x - sx);\n                dist2 = Math.abs(d2x - sx);\n                break;\n            case 'v':\n                dist1 = Math.abs(d1y - sy);\n                dist2 = Math.abs(d2y - sy);\n            }\n        } else {\n            dist1 = hittest.dist_2_pts(d1x, d1y, sx, sy);\n            dist2 = hittest.dist_2_pts(d2x, d2y, sx, sy);\n        }\n        if (dist1 < dist2) {\n            return [\n                [\n                    d1x,\n                    d1y\n                ],\n                i\n            ];\n        } else {\n            return [\n                [\n                    d2x,\n                    d2y\n                ],\n                i + 1\n            ];\n        }\n    };\n    exports._line_hit = function (xs, ys, ind) {\n        return [\n            [\n                xs[ind],\n                ys[ind]\n            ],\n            ind\n        ];\n    };\n    var HoverToolView = function (_super) {\n        tslib_1.__extends(HoverToolView, _super);\n        function HoverToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        HoverToolView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this.ttviews = {};\n        };\n        HoverToolView.prototype.remove = function () {\n            build_views_1.remove_views(this.ttviews);\n            return _super.prototype.remove.call(this);\n        };\n        HoverToolView.prototype.connect_signals = function () {\n            var k, len, r, ref;\n            _super.prototype.connect_signals.call(this);\n            ref = this.computed_renderers;\n            for (k = 0, len = ref.length; k < len; k++) {\n                r = ref[k];\n                if (r instanceof glyph_renderer_1.GlyphRenderer) {\n                    this.connect(r.data_source.inspect, this._update);\n                } else if (r instanceof graph_renderer_1.GraphRenderer) {\n                    this.connect(r.node_renderer.data_source.inspect, this._update);\n                    this.connect(r.edge_renderer.data_source.inspect, this._update);\n                }\n            }\n            // TODO: @connect(@plot_model.plot.properties.renderers.change, () -> @_computed_renderers = @_ttmodels = null)\n            this.connect(this.model.properties.renderers.change, function () {\n                return this._computed_renderers = this._ttmodels = null;\n            });\n            this.connect(this.model.properties.names.change, function () {\n                return this._computed_renderers = this._ttmodels = null;\n            });\n            return this.connect(this.model.properties.tooltips.change, function () {\n                return this._ttmodels = null;\n            });\n        };\n        HoverToolView.prototype._compute_renderers = function () {\n            var all_renderers, names, r, renderers;\n            renderers = this.model.renderers;\n            names = this.model.names;\n            if (renderers.length === 0) {\n                all_renderers = this.plot_model.plot.renderers;\n                renderers = function () {\n                    var k, len, results;\n                    results = [];\n                    for (k = 0, len = all_renderers.length; k < len; k++) {\n                        r = all_renderers[k];\n                        if (r instanceof glyph_renderer_1.GlyphRenderer || r instanceof graph_renderer_1.GraphRenderer) {\n                            results.push(r);\n                        }\n                    }\n                    return results;\n                }();\n            }\n            if (names.length > 0) {\n                renderers = function () {\n                    var k, len, results;\n                    results = [];\n                    for (k = 0, len = renderers.length; k < len; k++) {\n                        r = renderers[k];\n                        if (names.indexOf(r.name) >= 0) {\n                            results.push(r);\n                        }\n                    }\n                    return results;\n                }();\n            }\n            return renderers;\n        };\n        HoverToolView.prototype._compute_ttmodels = function () {\n            var k, len, r, ref, tooltip, tooltips, ttmodels;\n            ttmodels = {};\n            tooltips = this.model.tooltips;\n            if (tooltips != null) {\n                ref = this.computed_renderers;\n                for (k = 0, len = ref.length; k < len; k++) {\n                    r = ref[k];\n                    if (r instanceof glyph_renderer_1.GlyphRenderer) {\n                        tooltip = new tooltip_1.Tooltip({\n                            custom: types_1.isString(tooltips) || types_1.isFunction(tooltips),\n                            attachment: this.model.attachment,\n                            show_arrow: this.model.show_arrow\n                        });\n                        ttmodels[r.id] = tooltip;\n                    } else if (r instanceof graph_renderer_1.GraphRenderer) {\n                        tooltip = new tooltip_1.Tooltip({\n                            custom: types_1.isString(tooltips) || types_1.isFunction(tooltips),\n                            attachment: this.model.attachment,\n                            show_arrow: this.model.show_arrow\n                        });\n                        ttmodels[r.node_renderer.id] = tooltip;\n                        ttmodels[r.edge_renderer.id] = tooltip;\n                    }\n                }\n            }\n            build_views_1.build_views(this.ttviews, object_1.values(ttmodels), {\n                parent: this,\n                plot_view: this.plot_view\n            });\n            return ttmodels;\n        };\n        HoverToolView.prototype._clear = function () {\n            var ref, results, rid, tt;\n            this._inspect(1e+400, 1e+400);\n            ref = this.ttmodels;\n            results = [];\n            for (rid in ref) {\n                tt = ref[rid];\n                results.push(tt.clear());\n            }\n            return results;\n        };\n        HoverToolView.prototype._move = function (e) {\n            var sx, sy;\n            if (!this.model.active) {\n                return;\n            }\n            _a = e.bokeh, sx = _a.sx, sy = _a.sy;\n            if (!this.plot_view.frame.bbox.contains(sx, sy)) {\n                return this._clear();\n            } else {\n                return this._inspect(sx, sy);\n            }\n            var _a;\n        };\n        HoverToolView.prototype._move_exit = function () {\n            return this._clear();\n        };\n        HoverToolView.prototype._inspect = function (sx, sy) {\n            var geometry, k, len, r, ref, sm, type;\n            type = this.model.mode === 'mouse' ? 'point' : 'span';\n            geometry = {\n                type: type,\n                sx: sx,\n                sy: sy\n            };\n            if (type === 'span') {\n                geometry.direction = this.model.mode === 'vline' ? 'h' : 'v';\n            }\n            ref = this.computed_renderers;\n            for (k = 0, len = ref.length; k < len; k++) {\n                r = ref[k];\n                sm = r.get_selection_manager();\n                sm.inspect(this.plot_view.renderer_views[r.id], geometry);\n            }\n            if (this.model.callback != null) {\n                this._emit_callback(geometry);\n            }\n        };\n        HoverToolView.prototype._update = function (_a) {\n            var renderer_view = _a[0], geometry = _a[1].geometry;\n            var data_x, data_y, ds, frame, glyph, i, ii, index, indices, j, jj, k, l, len, len1, pt, ref, ref1, ref2, ref3, ref4, ref5, rx, ry, sx, sy, tooltip, vars, x, xscale, y, yscale;\n            if (!this.model.active) {\n                return;\n            }\n            tooltip = (ref = this.ttmodels[renderer_view.model.id]) != null ? ref : null;\n            if (tooltip == null) {\n                return;\n            }\n            tooltip.clear();\n            indices = renderer_view.model.get_selection_manager().inspectors[renderer_view.model.id].indices;\n            if (renderer_view.model instanceof glyph_renderer_1.GlyphRenderer) {\n                indices = renderer_view.model.view.convert_selection_to_subset(indices);\n            }\n            ds = renderer_view.model.get_selection_manager().source;\n            if (indices.is_empty()) {\n                return;\n            }\n            frame = this.plot_model.frame;\n            sx = geometry.sx, sy = geometry.sy;\n            xscale = frame.xscales[renderer_view.model.x_range_name];\n            yscale = frame.yscales[renderer_view.model.y_range_name];\n            x = xscale.invert(sx);\n            y = yscale.invert(sy);\n            glyph = renderer_view.glyph;\n            ref1 = indices['0d'].indices;\n            for (k = 0, len = ref1.length; k < len; k++) {\n                i = ref1[k];\n                data_x = glyph._x[i + 1];\n                data_y = glyph._y[i + 1];\n                ii = i;\n                switch (this.model.line_policy) {\n                case 'interp':\n                    // and renderer.get_interpolation_hit?\n                    _b = glyph.get_interpolation_hit(i, geometry), data_x = _b[0], data_y = _b[1];\n                    rx = xscale.compute(data_x);\n                    ry = yscale.compute(data_y);\n                    break;\n                case 'prev':\n                    _c = exports._line_hit(glyph.sx, glyph.sy, i), _d = _c[0], rx = _d[0], ry = _d[1], ii = _c[1];\n                    break;\n                case 'next':\n                    _e = exports._line_hit(glyph.sx, glyph.sy, i + 1), _f = _e[0], rx = _f[0], ry = _f[1], ii = _e[1];\n                    break;\n                case 'nearest':\n                    _g = exports._nearest_line_hit(i, geometry, sx, sy, glyph.sx, glyph.sy), _h = _g[0], rx = _h[0], ry = _h[1], ii = _g[1];\n                    data_x = glyph._x[ii];\n                    data_y = glyph._y[ii];\n                    break;\n                default:\n                    _j = [\n                        sx,\n                        sy\n                    ], rx = _j[0], ry = _j[1];\n                }\n                vars = {\n                    index: ii,\n                    x: x,\n                    y: y,\n                    sx: sx,\n                    sy: sy,\n                    data_x: data_x,\n                    data_y: data_y,\n                    rx: rx,\n                    ry: ry\n                };\n                tooltip.add(rx, ry, this._render_tooltips(ds, ii, vars));\n            }\n            ref2 = indices['1d'].indices;\n            for (l = 0, len1 = ref2.length; l < len1; l++) {\n                i = ref2[l];\n                // multiglyphs will set '1d' and '2d' results, but have different tooltips\n                if (!object_1.isEmpty(indices['2d'].indices)) {\n                    ref3 = indices['2d'].indices;\n                    for (i in ref3) {\n                        j = ref3[i][0];\n                        data_x = glyph._xs[i][j];\n                        data_y = glyph._ys[i][j];\n                        jj = j;\n                        switch (this.model.line_policy) {\n                        case 'interp':\n                            // and renderer.get_interpolation_hit?\n                            _k = glyph.get_interpolation_hit(i, j, geometry), data_x = _k[0], data_y = _k[1];\n                            rx = xscale.compute(data_x);\n                            ry = yscale.compute(data_y);\n                            break;\n                        case 'prev':\n                            _l = exports._line_hit(glyph.sxs[i], glyph.sys[i], j), _m = _l[0], rx = _m[0], ry = _m[1], jj = _l[1];\n                            break;\n                        case 'next':\n                            _o = exports._line_hit(glyph.sxs[i], glyph.sys[i], j + 1), _p = _o[0], rx = _p[0], ry = _p[1], jj = _o[1];\n                            break;\n                        case 'nearest':\n                            _q = exports._nearest_line_hit(j, geometry, sx, sy, glyph.sxs[i], glyph.sys[i]), _r = _q[0], rx = _r[0], ry = _r[1], jj = _q[1];\n                            data_x = glyph._xs[i][jj];\n                            data_y = glyph._ys[i][jj];\n                        }\n                        if (renderer_view.model instanceof glyph_renderer_1.GlyphRenderer) {\n                            index = renderer_view.model.view.convert_indices_from_subset([i])[0];\n                        } else {\n                            index = i;\n                        }\n                        vars = {\n                            index: index,\n                            segment_index: jj,\n                            x: x,\n                            y: y,\n                            sx: sx,\n                            sy: sy,\n                            data_x: data_x,\n                            data_y: data_y\n                        };\n                        tooltip.add(rx, ry, this._render_tooltips(ds, index, vars));\n                    }\n                } else {\n                    // handle non-multiglyphs\n                    data_x = (ref4 = glyph._x) != null ? ref4[i] : void 0;\n                    data_y = (ref5 = glyph._y) != null ? ref5[i] : void 0;\n                    if (this.model.point_policy === 'snap_to_data') {\n                        // Pass in our screen position so we can determine\n                        // which patch we're over if there are discontinuous\n                        // patches.\n                        pt = glyph.get_anchor_point(this.model.anchor, i, [\n                            sx,\n                            sy\n                        ]);\n                        if (pt == null) {\n                            pt = glyph.get_anchor_point('center', i, [\n                                sx,\n                                sy\n                            ]);\n                        }\n                        rx = pt.x;\n                        ry = pt.y;\n                    } else {\n                        _s = [\n                            sx,\n                            sy\n                        ], rx = _s[0], ry = _s[1];\n                    }\n                    if (renderer_view.model instanceof glyph_renderer_1.GlyphRenderer) {\n                        index = renderer_view.model.view.convert_indices_from_subset([i])[0];\n                    } else {\n                        index = i;\n                    }\n                    vars = {\n                        index: index,\n                        x: x,\n                        y: y,\n                        sx: sx,\n                        sy: sy,\n                        data_x: data_x,\n                        data_y: data_y\n                    };\n                    tooltip.add(rx, ry, this._render_tooltips(ds, index, vars));\n                }\n            }\n            return null;\n            var _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n        };\n        HoverToolView.prototype._emit_callback = function (geometry) {\n            var callback, data, frame, index, k, len, obj, r, ref, xscale, yscale;\n            ref = this.computed_renderers;\n            for (k = 0, len = ref.length; k < len; k++) {\n                r = ref[k];\n                index = r.data_source.inspected;\n                frame = this.plot_model.frame;\n                xscale = frame.xscales[r.x_range_name];\n                yscale = frame.yscales[r.y_range_name];\n                geometry.x = xscale.invert(geometry.sx);\n                geometry.y = yscale.invert(geometry.sy);\n                callback = this.model.callback;\n                _a = [\n                    callback,\n                    {\n                        index: index,\n                        geometry: geometry,\n                        renderer: r\n                    }\n                ], obj = _a[0], data = _a[1];\n                if (types_1.isFunction(callback)) {\n                    callback(obj, data);\n                } else {\n                    callback.execute(obj, data);\n                }\n            }\n            var _a;\n        };\n        HoverToolView.prototype._render_tooltips = function (ds, i, vars) {\n            var cell, colname, color, column, el, hex, k, label, len, match, opts, row, rows, swatch, tooltips, value;\n            tooltips = this.model.tooltips;\n            if (types_1.isString(tooltips)) {\n                el = dom_1.div();\n                el.innerHTML = templating_1.replace_placeholders(tooltips, ds, i, this.model.formatters, vars);\n                return el;\n            } else if (types_1.isFunction(tooltips)) {\n                return tooltips(ds, vars);\n            } else {\n                rows = dom_1.div({\n                    style: {\n                        display: 'table',\n                        borderSpacing: '2px'\n                    }\n                });\n                for (k = 0, len = tooltips.length; k < len; k++) {\n                    _a = tooltips[k], label = _a[0], value = _a[1];\n                    row = dom_1.div({ style: { display: 'table-row' } });\n                    rows.appendChild(row);\n                    cell = dom_1.div({\n                        style: { display: 'table-cell' },\n                        class: 'bk-tooltip-row-label'\n                    }, label + ': ');\n                    row.appendChild(cell);\n                    cell = dom_1.div({\n                        style: { display: 'table-cell' },\n                        class: 'bk-tooltip-row-value'\n                    });\n                    row.appendChild(cell);\n                    if (value.indexOf('$color') >= 0) {\n                        _b = value.match(/\\$color(\\[.*\\])?:(\\w*)/), match = _b[0], opts = _b[1], colname = _b[2];\n                        column = ds.get_column(colname);\n                        if (column == null) {\n                            el = dom_1.span({}, colname + ' unknown');\n                            cell.appendChild(el);\n                            continue;\n                        }\n                        hex = (opts != null ? opts.indexOf('hex') : void 0) >= 0;\n                        swatch = (opts != null ? opts.indexOf('swatch') : void 0) >= 0;\n                        color = column[i];\n                        if (color == null) {\n                            el = dom_1.span({}, '(null)');\n                            cell.appendChild(el);\n                            continue;\n                        }\n                        if (hex) {\n                            color = color_1.color2hex(color);\n                        }\n                        el = dom_1.span({}, color);\n                        cell.appendChild(el);\n                        if (swatch) {\n                            el = dom_1.span({\n                                class: 'bk-tooltip-color-block',\n                                style: { backgroundColor: color }\n                            }, ' ');\n                            cell.appendChild(el);\n                        }\n                    } else {\n                        value = value.replace('$~', '$data_');\n                        el = dom_1.span();\n                        el.innerHTML = templating_1.replace_placeholders(value, ds, i, this.model.formatters, vars);\n                        cell.appendChild(el);\n                    }\n                }\n                return rows;\n            }\n            var _a, _b;\n        };\n        return HoverToolView;\n    }(inspect_tool_1.InspectToolView);\n    exports.HoverToolView = HoverToolView;\n    ;\n    HoverToolView.getters({\n        computed_renderers: function () {\n            if (this._computed_renderers == null) {\n                this._computed_renderers = this._compute_renderers();\n            }\n            return this._computed_renderers;\n        },\n        ttmodels: function () {\n            if (this._ttmodels == null) {\n                this._ttmodels = this._compute_ttmodels();\n            }\n            return this._ttmodels;\n        }\n    });\n    var HoverTool = function (_super) {\n        tslib_1.__extends(HoverTool, _super);\n        function HoverTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return HoverTool;\n    }(inspect_tool_1.InspectTool);\n    exports.HoverTool = HoverTool;\n    ;\n    HoverTool.prototype.default_view = HoverToolView;\n    HoverTool.prototype.type = 'HoverTool';\n    HoverTool.prototype.tool_name = 'Hover';\n    HoverTool.prototype.icon = 'bk-tool-icon-hover';\n    HoverTool.define({\n        tooltips: [\n            p.Any,\n            [\n                [\n                    'index',\n                    '$index'\n                ],\n                [\n                    'data (x, y)',\n                    '($x, $y)'\n                ],\n                [\n                    'screen (x, y)',\n                    '($sx, $sy)'\n                ]\n            ]\n        ],\n        formatters: [\n            p.Any,\n            {}\n        ],\n        renderers: [\n            p.Array,\n            []\n        ],\n        names: [\n            p.Array,\n            []\n        ],\n        mode: [\n            p.String,\n            'mouse'    // TODO (bev)\n        ],\n        point_policy: [\n            p.String,\n            'snap_to_data'    // TODO (bev) \"follow_mouse\", \"none\"\n        ],\n        line_policy: [\n            p.String,\n            'nearest'    // TODO (bev) \"next\", \"nearest\", \"interp\", \"none\"\n        ],\n        show_arrow: [\n            p.Boolean,\n            true\n        ],\n        anchor: [\n            p.String,\n            'center'    // TODO: enum\n        ],\n        attachment: [\n            p.String,\n            'horizontal'    // TODO: enum\n        ],\n        callback: [p.Any]    // TODO: p.Either(p.Instance(Callback), p.Function) ]\n    });    \n}","/*models/tools/inspectors/inspect_tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var p = require(15    /* core/properties */);\n    var button_tool_1 = require(215    /* ../button_tool */);\n    var on_off_button_1 = require(230    /* ../on_off_button */);\n    exports.InspectToolView = function (_super) {\n        tslib_1.__extends(InspectToolView, _super);\n        function InspectToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return InspectToolView;\n    }(button_tool_1.ButtonToolView);\n    var InspectTool = function (_super) {\n        tslib_1.__extends(InspectTool, _super);\n        function InspectTool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return InspectTool;\n    }(button_tool_1.ButtonTool);\n    exports.InspectTool = InspectTool;\n    ;\n    InspectTool.prototype.button_view = on_off_button_1.OnOffButtonView;\n    InspectTool.prototype.event_type = 'move';\n    InspectTool.define({\n        toggleable: [\n            p.Bool,\n            true\n        ]\n    });\n    InspectTool.override({ active: true });    \n}","/*models/tools/on_off_button*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var button_tool_1 = require(215    /* ./button_tool */);\n    exports.OnOffButtonView = function (_super) {\n        tslib_1.__extends(OnOffButtonView, _super);\n        function OnOffButtonView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        OnOffButtonView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            if (this.model.active) {\n                return this.el.classList.add('bk-active');\n            } else {\n                return this.el.classList.remove('bk-active');\n            }\n        };\n        OnOffButtonView.prototype._clicked = function () {\n            var active;\n            active = this.model.active;\n            return this.model.active = !active;\n        };\n        return OnOffButtonView;\n    }(button_tool_1.ButtonToolButtonView);    \n}","/*models/tools/tool*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var p = require(15    /* core/properties */);\n    var view_1 = require(45    /* core/view */);\n    var array_1 = require(22    /* core/util/array */);\n    var model_1 = require(50    /* ../../model */);\n    var ToolView = function (_super) {\n        tslib_1.__extends(ToolView, _super);\n        function ToolView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ToolView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            return this.plot_view = options.plot_view;\n        };\n        ToolView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            return this.connect(this.model.properties.active.change, function () {\n                if (_this.model.active) {\n                    return _this.activate();\n                } else {\n                    return _this.deactivate();\n                }\n            });\n        };\n        // activate is triggered by toolbar ui actions\n        ToolView.prototype.activate = function () {\n        };\n        // deactivate is triggered by toolbar ui actions\n        ToolView.prototype.deactivate = function () {\n        };\n        return ToolView;\n    }(view_1.View);\n    exports.ToolView = ToolView;\n    ;\n    ToolView.getters({\n        plot_model: function () {\n            return this.plot_view.model;\n        }\n    });\n    var Tool = function (_super) {\n        tslib_1.__extends(Tool, _super);\n        function Tool() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        // utility function to return a tool name, modified\n        // by the active dimenions. Used by tools that have dimensions\n        Tool.prototype._get_dim_tooltip = function (name, dims) {\n            switch (dims) {\n            case 'width':\n                return name + ' (x-axis)';\n            case 'height':\n                return name + ' (y-axis)';\n            case 'both':\n                return name;\n            }\n        };\n        // utility function to get limits along both dimensions, given\n        // optional dimensional constraints\n        Tool.prototype._get_dim_limits = function (_a, _b, frame, dims) {\n            var sx0 = _a[0], sy0 = _a[1];\n            var sx1 = _b[0], sy1 = _b[1];\n            var hr, sxlim, sylim, vr;\n            hr = frame.bbox.h_range;\n            if (dims === 'width' || dims === 'both') {\n                sxlim = [\n                    array_1.min([\n                        sx0,\n                        sx1\n                    ]),\n                    array_1.max([\n                        sx0,\n                        sx1\n                    ])\n                ];\n                sxlim = [\n                    array_1.max([\n                        sxlim[0],\n                        hr.start\n                    ]),\n                    array_1.min([\n                        sxlim[1],\n                        hr.end\n                    ])\n                ];\n            } else {\n                sxlim = [\n                    hr.start,\n                    hr.end\n                ];\n            }\n            vr = frame.bbox.v_range;\n            if (dims === 'height' || dims === 'both') {\n                sylim = [\n                    array_1.min([\n                        sy0,\n                        sy1\n                    ]),\n                    array_1.max([\n                        sy0,\n                        sy1\n                    ])\n                ];\n                sylim = [\n                    array_1.max([\n                        sylim[0],\n                        vr.start\n                    ]),\n                    array_1.min([\n                        sylim[1],\n                        vr.end\n                    ])\n                ];\n            } else {\n                sylim = [\n                    vr.start,\n                    vr.end\n                ];\n            }\n            return [\n                sxlim,\n                sylim\n            ];\n        };\n        return Tool;\n    }(model_1.Model);\n    exports.Tool = Tool;\n    ;\n    Tool.getters({\n        synthetic_renderers: function () {\n            return [];\n        }\n    });\n    Tool.internal({\n        active: [\n            p.Boolean,\n            false\n        ]\n    });    \n}","/*models/tools/tool_proxy*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var p = require(15    /* core/properties */);\n    var signaling_1 = require(20    /* core/signaling */);\n    var model_1 = require(50    /* ../../model */);\n    var ToolProxy = function (_super) {\n        tslib_1.__extends(ToolProxy, _super);\n        function ToolProxy() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        // Operates all the tools given only one button\n        ToolProxy.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this.do = new signaling_1.Signal(this, 'do');\n            this.connect(this.do, function () {\n                return this.doit();\n            });\n            return this.connect(this.properties.active.change, function () {\n                return this.set_active();\n            });\n        };\n        ToolProxy.prototype.doit = function () {\n            var i, len, ref, tool;\n            ref = this.tools;\n            for (i = 0, len = ref.length; i < len; i++) {\n                tool = ref[i];\n                tool.do.emit();\n            }\n            return null;\n        };\n        ToolProxy.prototype.set_active = function () {\n            var i, len, ref, tool;\n            ref = this.tools;\n            for (i = 0, len = ref.length; i < len; i++) {\n                tool = ref[i];\n                tool.active = this.active;\n            }\n            return null;\n        };\n        ToolProxy.prototype._clicked = function () {\n            var active;\n            active = this.model.active;\n            return this.model.active = !active;\n        };\n        return ToolProxy;\n    }(model_1.Model);\n    exports.ToolProxy = ToolProxy;\n    ;\n    ToolProxy.getters({\n        button_view: function () {\n            return this.tools[0].button_view;\n        },\n        event_type: function () {\n            return this.tools[0].event_type;\n        },\n        tooltip: function () {\n            return this.tools[0].tool_name;\n        },\n        tool_name: function () {\n            return this.tools[0].tool_name;\n        },\n        icon: function () {\n            return this.tools[0].icon;\n        }\n    });\n    ToolProxy.define({\n        tools: [\n            p.Array,\n            []\n        ],\n        active: [\n            p.Bool,\n            false\n        ],\n        disabled: [\n            p.Bool,\n            false\n        ]\n    });    \n}","/*models/tools/toolbar*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var indexOf = [].indexOf;\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var logging_1 = require(14    /* core/logging */);\n    var action_tool_1 = require(207    /* ./actions/action_tool */);\n    var help_tool_1 = require(208    /* ./actions/help_tool */);\n    var gesture_tool_1 = require(218    /* ./gestures/gesture_tool */);\n    var inspect_tool_1 = require(229    /* ./inspectors/inspect_tool */);\n    var toolbar_base_1 = require(234    /* ./toolbar_base */);\n    var Toolbar = function (_super) {\n        tslib_1.__extends(Toolbar, _super);\n        function Toolbar() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Toolbar.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this.connect(this.properties.tools.change, function () {\n                return this._init_tools();\n            });\n            return this._init_tools();\n        };\n        Toolbar.prototype._init_tools = function () {\n            var _this = this;\n            var _activate_gesture, et, event_types, i, j, len, len1, multi, ref, tool, tools;\n            ref = this.tools;\n            for (i = 0, len = ref.length; i < len; i++) {\n                tool = ref[i];\n                if (tool instanceof inspect_tool_1.InspectTool) {\n                    if (!array_1.any(this.inspectors, function (t) {\n                            return t.id === tool.id;\n                        })) {\n                        this.inspectors = this.inspectors.concat([tool]);\n                    }\n                } else if (tool instanceof help_tool_1.HelpTool) {\n                    if (!array_1.any(this.help, function (t) {\n                            return t.id === tool.id;\n                        })) {\n                        this.help = this.help.concat([tool]);\n                    }\n                } else if (tool instanceof action_tool_1.ActionTool) {\n                    if (!array_1.any(this.actions, function (t) {\n                            return t.id === tool.id;\n                        })) {\n                        this.actions = this.actions.concat([tool]);\n                    }\n                } else if (tool instanceof gesture_tool_1.GestureTool) {\n                    event_types = tool.event_type;\n                    multi = true;\n                    if (typeof event_types === 'string') {\n                        event_types = [event_types];\n                        multi = false;\n                    }\n                    for (j = 0, len1 = event_types.length; j < len1; j++) {\n                        et = event_types[j];\n                        if (!(et in this.gestures)) {\n                            logging_1.logger.warn('Toolbar: unknown event type \\'' + et + '\\' for tool: ' + tool.type + ' (' + tool.id + ')');\n                            continue;\n                        }\n                        if (multi) {\n                            if (!array_1.any(this.gestures['multi'].tools, function (t) {\n                                    return t.id === tool.id;\n                                })) {\n                                this.gestures['multi'].tools = this.gestures['multi'].tools.concat([tool]);\n                            }\n                        } else if (!array_1.any(this.gestures[et].tools, function (t) {\n                                return t.id === tool.id;\n                            })) {\n                            this.gestures[et].tools = this.gestures[et].tools.concat([tool]);\n                        }\n                        this.connect(tool.properties.active.change, this._active_change.bind(this, tool));\n                    }\n                }\n            }\n            if (this.active_inspect === 'auto') {\n            } else if (this.active_inspect instanceof inspect_tool_1.InspectTool) {\n                this.inspectors.map(function (inspector) {\n                    if (inspector !== _this.active_inspect) {\n                        return inspector.active = false;\n                    }\n                });\n            } else if (this.active_inspect instanceof Array) {\n                this.inspectors.map(function (inspector) {\n                    if (indexOf.call(_this.active_inspect, inspector) < 0) {\n                        return inspector.active = false;\n                    }\n                });\n            } else if (this.active_inspect === null) {\n                this.inspectors.map(function (inspector) {\n                    return inspector.active = false;\n                });\n            }\n            _activate_gesture = function (tool) {\n                if (tool.active) {\n                    // tool was activated by a proxy, but we need to finish configuration manually\n                    return _this._active_change(tool);\n                } else {\n                    return tool.active = true;\n                }\n            };\n            for (et in this.gestures) {\n                tools = this.gestures[et].tools;\n                if (tools.length === 0) {\n                    continue;\n                }\n                this.gestures[et].tools = array_1.sortBy(tools, function (tool) {\n                    return tool.default_order;\n                });\n                if (et === 'tap') {\n                    if (this.active_tap === null) {\n                        continue;\n                    }\n                    if (this.active_tap === 'auto') {\n                        _activate_gesture(this.gestures[et].tools[0]);\n                    } else {\n                        _activate_gesture(this.active_tap);\n                    }\n                }\n                if (et === 'pan') {\n                    if (this.active_drag === null) {\n                        continue;\n                    }\n                    if (this.active_drag === 'auto') {\n                        _activate_gesture(this.gestures[et].tools[0]);\n                    } else {\n                        _activate_gesture(this.active_drag);\n                    }\n                }\n                if (et === 'pinch' || et === 'scroll') {\n                    if (this.active_scroll === null || this.active_scroll === 'auto') {\n                        continue;\n                    }\n                    _activate_gesture(this.active_scroll);\n                }\n            }\n            return null;    // XXX\n        };\n        return Toolbar;\n    }(toolbar_base_1.ToolbarBase);\n    exports.Toolbar = Toolbar;\n    ;\n    Toolbar.prototype.type = 'Toolbar';\n    Toolbar.prototype.default_view = toolbar_base_1.ToolbarBaseView;\n    Toolbar.define({\n        active_drag: [\n            p.Any,\n            'auto'\n        ],\n        active_inspect: [\n            p.Any,\n            'auto'\n        ],\n        active_scroll: [\n            p.Any,\n            'auto'\n        ],\n        active_tap: [\n            p.Any,\n            'auto'\n        ]\n    });    \n}","/*models/tools/toolbar_base*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var logging_1 = require(14    /* core/logging */);\n    var dom_1 = require(5    /* core/dom */);\n    var build_views_1 = require(4    /* core/build_views */);\n    var p = require(15    /* core/properties */);\n    var dom_view_1 = require(6    /* core/dom_view */);\n    var model_1 = require(50    /* model */);\n    exports.ToolbarBaseView = function (_super) {\n        tslib_1.__extends(ToolbarBaseView, _super);\n        function ToolbarBaseView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ToolbarBaseView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this._tool_button_views = {};\n            return this._build_tool_button_views();\n        };\n        ToolbarBaseView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            return this.connect(this.model.properties.tools.change, function () {\n                return _this._build_tool_button_views();\n            });\n        };\n        ToolbarBaseView.prototype.remove = function () {\n            build_views_1.remove_views(this._tool_button_views);\n            return _super.prototype.remove.call(this);\n        };\n        ToolbarBaseView.prototype._build_tool_button_views = function () {\n            var ref, tools;\n            tools = (ref = this.model._proxied_tools) != null ? ref : this.model.tools;\n            // XXX\n            return build_views_1.build_views(this._tool_button_views, tools, { parent: this }, function (tool) {\n                return tool.button_view;\n            });\n        };\n        ToolbarBaseView.prototype.render = function () {\n            var bar, bars, buttons, cls, et, gestures, i, j, k, l, len, len1, len2, len3, len4, logo, m, ref, ref1, ref2, ref3, tool;\n            dom_1.empty(this.el);\n            this.el.classList.add('bk-toolbar');\n            this.el.classList.add('bk-toolbar-' + this.model.toolbar_location);\n            if (this.model.logo != null) {\n                cls = this.model.logo === 'grey' ? 'bk-grey' : null;\n                logo = dom_1.a({\n                    href: 'https://bokeh.pydata.org/',\n                    target: '_blank',\n                    class: [\n                        'bk-logo',\n                        'bk-logo-small',\n                        cls\n                    ]\n                });\n                this.el.appendChild(logo);\n            }\n            bars = [];\n            gestures = this.model.gestures;\n            for (et in gestures) {\n                buttons = [];\n                ref = gestures[et].tools;\n                for (i = 0, len = ref.length; i < len; i++) {\n                    tool = ref[i];\n                    buttons.push(this._tool_button_views[tool.id].el);\n                }\n                bars.push(buttons);\n            }\n            buttons = [];\n            ref1 = this.model.actions;\n            for (j = 0, len1 = ref1.length; j < len1; j++) {\n                tool = ref1[j];\n                buttons.push(this._tool_button_views[tool.id].el);\n            }\n            bars.push(buttons);\n            buttons = [];\n            ref2 = this.model.inspectors;\n            for (k = 0, len2 = ref2.length; k < len2; k++) {\n                tool = ref2[k];\n                if (tool.toggleable) {\n                    buttons.push(this._tool_button_views[tool.id].el);\n                }\n            }\n            bars.push(buttons);\n            buttons = [];\n            ref3 = this.model.help;\n            for (l = 0, len3 = ref3.length; l < len3; l++) {\n                tool = ref3[l];\n                buttons.push(this._tool_button_views[tool.id].el);\n            }\n            bars.push(buttons);\n            for (m = 0, len4 = bars.length; m < len4; m++) {\n                buttons = bars[m];\n                if (buttons.length !== 0) {\n                    bar = dom_1.div({ class: 'bk-button-bar' }, buttons);\n                    this.el.appendChild(bar);\n                }\n            }\n            return this;\n        };\n        return ToolbarBaseView;\n    }(dom_view_1.DOMView);\n    var ToolbarBase = function (_super) {\n        tslib_1.__extends(ToolbarBase, _super);\n        function ToolbarBase() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ToolbarBase.prototype._active_change = function (tool) {\n            var currently_active_tool, et, event_types, i, len;\n            event_types = tool.event_type;\n            if (typeof event_types === 'string') {\n                event_types = [event_types];\n            }\n            for (i = 0, len = event_types.length; i < len; i++) {\n                et = event_types[i];\n                if (tool.active) {\n                    currently_active_tool = this.gestures[et].active;\n                    if (currently_active_tool != null && tool !== currently_active_tool) {\n                        logging_1.logger.debug('Toolbar: deactivating tool: ' + currently_active_tool.type + ' (' + currently_active_tool.id + ') for event type \\'' + et + '\\'');\n                        currently_active_tool.active = false;\n                    }\n                    this.gestures[et].active = tool;\n                    logging_1.logger.debug('Toolbar: activating tool: ' + tool.type + ' (' + tool.id + ') for event type \\'' + et + '\\'');\n                } else {\n                    this.gestures[et].active = null;\n                }\n            }\n            return null;\n        };\n        return ToolbarBase;\n    }(model_1.Model);\n    exports.ToolbarBase = ToolbarBase;\n    ;\n    ToolbarBase.prototype.type = 'ToolbarBase';\n    ToolbarBase.prototype.default_view = exports.ToolbarBaseView;\n    ToolbarBase.getters({\n        horizontal: function () {\n            return this.toolbar_location === 'above' || this.toolbar_location === 'below';\n        },\n        vertical: function () {\n            return this.toolbar_location === 'left' || this.toolbar_location === 'right';\n        }\n    });\n    ToolbarBase.define({\n        tools: [\n            p.Array,\n            []\n        ],\n        logo: [\n            p.String,\n            'normal'    // TODO (bev)\n        ]\n    });\n    ToolbarBase.internal({\n        gestures: [\n            p.Any,\n            function () {\n                return {\n                    pan: {\n                        tools: [],\n                        active: null\n                    },\n                    scroll: {\n                        tools: [],\n                        active: null\n                    },\n                    pinch: {\n                        tools: [],\n                        active: null\n                    },\n                    tap: {\n                        tools: [],\n                        active: null\n                    },\n                    doubletap: {\n                        tools: [],\n                        active: null\n                    },\n                    press: {\n                        tools: [],\n                        active: null\n                    },\n                    rotate: {\n                        tools: [],\n                        active: null\n                    },\n                    multi: {\n                        tools: [],\n                        active: null\n                    }\n                };\n            }\n        ],\n        actions: [\n            p.Array,\n            []\n        ],\n        inspectors: [\n            p.Array,\n            []\n        ],\n        help: [\n            p.Array,\n            []\n        ],\n        toolbar_location: [\n            p.Location,\n            'right'\n        ]\n    });    \n}","/*models/tools/toolbar_box*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var indexOf = [].indexOf;\n    var p = require(15    /* core/properties */);\n    var dom_1 = require(5    /* core/dom */);\n    var array_1 = require(22    /* core/util/array */);\n    var action_tool_1 = require(207    /* ./actions/action_tool */);\n    var help_tool_1 = require(208    /* ./actions/help_tool */);\n    var gesture_tool_1 = require(218    /* ./gestures/gesture_tool */);\n    var inspect_tool_1 = require(229    /* ./inspectors/inspect_tool */);\n    var toolbar_base_1 = require(234    /* ./toolbar_base */);\n    var tool_proxy_1 = require(232    /* ./tool_proxy */);\n    var layout_dom_1 = require(139    /* ../layouts/layout_dom */);\n    var build_views_1 = require(4    /* core/build_views */);\n    var ProxyToolbar = function (_super) {\n        tslib_1.__extends(ProxyToolbar, _super);\n        function ProxyToolbar() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ProxyToolbar.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this._init_tools();\n            return this._merge_tools();\n        };\n        ProxyToolbar.prototype._init_tools = function () {\n            var et, i, len, ref, results, tool;\n            ref = this.tools;\n            results = [];\n            for (i = 0, len = ref.length; i < len; i++) {\n                tool = ref[i];\n                if (tool instanceof inspect_tool_1.InspectTool) {\n                    if (!array_1.any(this.inspectors, function (t) {\n                            return t.id === tool.id;\n                        })) {\n                        results.push(this.inspectors = this.inspectors.concat([tool]));\n                    } else {\n                        results.push(void 0);\n                    }\n                } else if (tool instanceof help_tool_1.HelpTool) {\n                    if (!array_1.any(this.help, function (t) {\n                            return t.id === tool.id;\n                        })) {\n                        results.push(this.help = this.help.concat([tool]));\n                    } else {\n                        results.push(void 0);\n                    }\n                } else if (tool instanceof action_tool_1.ActionTool) {\n                    if (!array_1.any(this.actions, function (t) {\n                            return t.id === tool.id;\n                        })) {\n                        results.push(this.actions = this.actions.concat([tool]));\n                    } else {\n                        results.push(void 0);\n                    }\n                } else if (tool instanceof gesture_tool_1.GestureTool) {\n                    et = tool.event_type;\n                    if (!array_1.any(this.gestures[et].tools, function (t) {\n                            return t.id === tool.id;\n                        })) {\n                        results.push(this.gestures[et].tools = this.gestures[et].tools.concat([tool]));\n                    } else {\n                        results.push(void 0);\n                    }\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n        };\n        ProxyToolbar.prototype._merge_tools = function () {\n            var _this = this;\n            var actions, active, et, event_type, gestures, helptool, i, info, inspectors, j, k, l, len, len1, len2, len3, make_proxy, new_help_tools, new_help_urls, proxy, ref, ref1, ref2, ref3, ref4, ref5, ref6, results, tool, tool_type, tools;\n            // Go through all the tools on the toolbar and replace them with\n            // a proxy e.g. PanTool, BoxSelectTool, etc.\n            this._proxied_tools = [];\n            inspectors = {};\n            actions = {};\n            gestures = {};\n            new_help_tools = [];\n            new_help_urls = [];\n            ref = this.help;\n            for (i = 0, len = ref.length; i < len; i++) {\n                helptool = ref[i];\n                if (ref1 = helptool.redirect, indexOf.call(new_help_urls, ref1) < 0) {\n                    new_help_tools.push(helptool);\n                    new_help_urls.push(helptool.redirect);\n                }\n            }\n            (_a = this._proxied_tools).push.apply(_a, new_help_tools);\n            this.help = new_help_tools;\n            ref2 = this.gestures;\n            for (event_type in ref2) {\n                info = ref2[event_type];\n                if (!(event_type in gestures)) {\n                    gestures[event_type] = {};\n                }\n                ref3 = info.tools;\n                for (j = 0, len1 = ref3.length; j < len1; j++) {\n                    tool = ref3[j];\n                    if (!(tool.type in gestures[event_type])) {\n                        gestures[event_type][tool.type] = [];\n                    }\n                    gestures[event_type][tool.type].push(tool);\n                }\n            }\n            ref4 = this.inspectors;\n            for (k = 0, len2 = ref4.length; k < len2; k++) {\n                tool = ref4[k];\n                if (!(tool.type in inspectors)) {\n                    inspectors[tool.type] = [];\n                }\n                inspectors[tool.type].push(tool);\n            }\n            ref5 = this.actions;\n            for (l = 0, len3 = ref5.length; l < len3; l++) {\n                tool = ref5[l];\n                if (!(tool.type in actions)) {\n                    actions[tool.type] = [];\n                }\n                actions[tool.type].push(tool);\n            }\n            // Add a proxy for each of the groups of tools.\n            make_proxy = function (tools, active) {\n                if (active === void 0) {\n                    active = false;\n                }\n                var proxy;\n                proxy = new tool_proxy_1.ToolProxy({\n                    tools: tools,\n                    active: active\n                });\n                _this._proxied_tools.push(proxy);\n                return proxy;\n            };\n            for (event_type in gestures) {\n                this.gestures[event_type].tools = [];\n                ref6 = gestures[event_type];\n                for (tool_type in ref6) {\n                    tools = ref6[tool_type];\n                    if (tools.length > 0) {\n                        proxy = make_proxy(tools);\n                        this.gestures[event_type].tools.push(proxy);\n                        this.connect(proxy.properties.active.change, this._active_change.bind(this, proxy));\n                    }\n                }\n            }\n            this.actions = [];\n            for (tool_type in actions) {\n                tools = actions[tool_type];\n                if (tools.length > 0) {\n                    this.actions.push(make_proxy(tools));\n                }\n            }\n            this.inspectors = [];\n            for (tool_type in inspectors) {\n                tools = inspectors[tool_type];\n                if (tools.length > 0) {\n                    this.inspectors.push(make_proxy(tools, active = true));\n                }\n            }\n            results = [];\n            for (et in this.gestures) {\n                tools = this.gestures[et].tools;\n                if (tools.length === 0) {\n                    continue;\n                }\n                this.gestures[et].tools = array_1.sortBy(tools, function (tool) {\n                    return tool.default_order;\n                });\n                if (et !== 'pinch' && et !== 'scroll') {\n                    results.push(this.gestures[et].tools[0].active = true);\n                } else {\n                    results.push(void 0);\n                }\n            }\n            return results;\n            var _a;\n        };\n        return ProxyToolbar;\n    }(toolbar_base_1.ToolbarBase);\n    exports.ProxyToolbar = ProxyToolbar;\n    ;\n    ProxyToolbar.prototype.type = 'ProxyToolbar';\n    var ToolbarBoxView = function (_super) {\n        tslib_1.__extends(ToolbarBoxView, _super);\n        function ToolbarBoxView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ToolbarBoxView.prototype.initialize = function (options) {\n            _super.prototype.initialize.call(this, options);\n            this.model.toolbar.toolbar_location = this.model.toolbar_location;\n            this._toolbar_views = {};\n            return build_views_1.build_views(this._toolbar_views, [this.model.toolbar], { parent: this });\n        };\n        ToolbarBoxView.prototype.remove = function () {\n            build_views_1.remove_views(this._toolbar_views);\n            return _super.prototype.remove.call(this);\n        };\n        ToolbarBoxView.prototype.render = function () {\n            var toolbar;\n            _super.prototype.render.call(this);\n            toolbar = this._toolbar_views[this.model.toolbar.id];\n            toolbar.render();\n            dom_1.empty(this.el);\n            return this.el.appendChild(toolbar.el);\n        };\n        ToolbarBoxView.prototype.get_width = function () {\n            if (this.model.toolbar.vertical) {\n                return 30;\n            } else {\n                return null;\n            }\n        };\n        ToolbarBoxView.prototype.get_height = function () {\n            if (this.model.toolbar.horizontal) {\n                return 30;\n            } else {\n                return null;\n            }\n        };\n        return ToolbarBoxView;\n    }(layout_dom_1.LayoutDOMView);\n    exports.ToolbarBoxView = ToolbarBoxView;\n    ;\n    ToolbarBoxView.prototype.className = 'bk-toolbar-box';\n    var ToolbarBox = function (_super) {\n        tslib_1.__extends(ToolbarBox, _super);\n        function ToolbarBox() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ToolbarBox;\n    }(layout_dom_1.LayoutDOM);\n    exports.ToolbarBox = ToolbarBox;\n    ;\n    ToolbarBox.prototype.type = 'ToolbarBox';\n    ToolbarBox.prototype.default_view = ToolbarBoxView;\n    ToolbarBox.define({\n        toolbar: [p.Instance],\n        toolbar_location: [\n            p.Location,\n            'right'\n        ]\n    });\n    ToolbarBox.getters({\n        // XXX: we are overriding LayoutDOM.sizing_mode here. That's a bad\n        // hack, but currently every layoutable is allowed to have its\n        // sizing mode configured, which is wrong. Another example of this\n        // is PlotCanvas which only works with strech_both sizing mode.\n        sizing_mode: function () {\n            switch (this.toolbar_location) {\n            case 'above':\n            case 'below':\n                return 'scale_width';\n            case 'left':\n            case 'right':\n                return 'scale_height';\n            }\n        }\n    });    \n}","/*models/transforms/customjs_transform*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var transform_1 = require(243    /* ./transform */);\n    var p = require(15    /* core/properties */);\n    var object_1 = require(30    /* core/util/object */);\n    var CustomJSTransform = function (_super) {\n        tslib_1.__extends(CustomJSTransform, _super);\n        function CustomJSTransform() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CustomJSTransform.prototype.compute = function (x) {\n            return this.scalar_transform.apply(this, this.values.concat([\n                x,\n                require,\n                exports\n            ]));\n        };\n        CustomJSTransform.prototype.v_compute = function (xs) {\n            return this.vector_transform.apply(this, this.values.concat([\n                xs,\n                require,\n                exports\n            ]));\n        };\n        CustomJSTransform.prototype._make_transform = function (val, fn) {\n            // this relies on Object.keys(args) and values(args) returning keys and values\n            // in the same order\n            return new (Function.bind.apply(Function, [void 0].concat(Object.keys(this.args), [\n                val,\n                'require',\n                'exports',\n                fn\n            ])))();\n        };\n        CustomJSTransform.prototype._make_values = function () {\n            return object_1.values(this.args);\n        };\n        return CustomJSTransform;\n    }(transform_1.Transform);\n    exports.CustomJSTransform = CustomJSTransform;\n    ;\n    CustomJSTransform.prototype.type = 'CustomJSTransform';\n    CustomJSTransform.define({\n        args: [\n            p.Any,\n            {}\n        ],\n        func: [\n            p.String,\n            ''\n        ],\n        v_func: [\n            p.String,\n            ''\n        ]\n    });\n    CustomJSTransform.getters({\n        values: function () {\n            return this._make_values();\n        },\n        scalar_transform: function () {\n            return this._make_transform('x', this.func);\n        },\n        vector_transform: function () {\n            return this._make_transform('xs', this.v_func);\n        }\n    });    \n}","/*models/transforms/dodge*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var transform_1 = require(243    /* ./transform */);\n    var p = require(15    /* core/properties */);\n    var Dodge = function (_super) {\n        tslib_1.__extends(Dodge, _super);\n        function Dodge() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Dodge.prototype.compute = function (x, use_synthetic) {\n            if (use_synthetic === void 0) {\n                use_synthetic = true;\n            }\n            var ref;\n            if (((ref = this.range) != null ? ref.synthetic : void 0) != null && use_synthetic) {\n                x = this.range.synthetic(x);\n            }\n            return x + this.value;\n        };\n        return Dodge;\n    }(transform_1.Transform);\n    exports.Dodge = Dodge;\n    ;\n    Dodge.define({\n        value: [\n            p.Number,\n            0\n        ],\n        range: [p.Instance]\n    });    \n}","/*models/transforms/index*/\nfunction _(require, module, exports) {\n    var customjs_transform_1 = require(236    /* ./customjs_transform */);\n    exports.CustomJSTransform = customjs_transform_1.CustomJSTransform;\n    var dodge_1 = require(237    /* ./dodge */);\n    exports.Dodge = dodge_1.Dodge;\n    var interpolator_1 = require(239    /* ./interpolator */);\n    exports.Interpolator = interpolator_1.Interpolator;\n    var jitter_1 = require(240    /* ./jitter */);\n    exports.Jitter = jitter_1.Jitter;\n    var linear_interpolator_1 = require(241    /* ./linear_interpolator */);\n    exports.LinearInterpolator = linear_interpolator_1.LinearInterpolator;\n    var step_interpolator_1 = require(242    /* ./step_interpolator */);\n    exports.StepInterpolator = step_interpolator_1.StepInterpolator;\n    var transform_1 = require(243    /* ./transform */);\n    exports.Transform = transform_1.Transform;    \n}","/*models/transforms/interpolator*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var indexOf = [].indexOf;\n    var transform_1 = require(243    /* ./transform */);\n    var p = require(15    /* core/properties */);\n    var Interpolator = function (_super) {\n        tslib_1.__extends(Interpolator, _super);\n        function Interpolator() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Interpolator.prototype.initialize = function (attrs, options) {\n            _super.prototype.initialize.call(this, attrs, options);\n            this._x_sorted = [];\n            this._y_sorted = [];\n            this._sorted_dirty = true;\n            return this.connect(this.change, function () {\n                return this._sorted_dirty = true;\n            });\n        };\n        Interpolator.prototype.sort = function (descending) {\n            if (descending === void 0) {\n                descending = false;\n            }\n            var column_names, data, i, j, k, list, ref, ref1, ref2, tsx, tsy;\n            // Verify that all necessary objects exist...\n            if (typeof this.x !== typeof this.y) {\n                throw new Error('The parameters for x and y must be of the same type, either both strings which define a column in the data source or both arrays of the same length');\n                return;\n            } else {\n                if (typeof this.x === 'string' && this.data === null) {\n                    throw new Error('If the x and y parameters are not specified as an array, the data parameter is reqired.');\n                    return;\n                }\n            }\n            // Stop processing this if the dirty flag is not set\n            if (this._sorted_dirty === false) {\n                return;\n            }\n            tsx = [];\n            tsy = [];\n            // Populate the tsx and tsy variables correctly depending on the method by which the user populated the interpolation\n            // data.\n            if (typeof this.x === 'string') {\n                data = this.data;\n                column_names = data.columns();\n                if (ref = this.x, indexOf.call(column_names, ref) < 0) {\n                    throw new Error('The x parameter does not correspond to a valid column name defined in the data parameter');\n                }\n                if (ref1 = this.y, indexOf.call(column_names, ref1) < 0) {\n                    throw new Error('The x parameter does not correspond to a valid column name defined in the data parameter');\n                }\n                tsx = data.get_column(this.x);\n                tsy = data.get_column(this.y);\n            } else {\n                tsx = this.x;\n                tsy = this.y;\n            }\n            if (tsx.length !== tsy.length) {\n                throw new Error('The length for x and y do not match');\n            }\n            if (tsx.length < 2) {\n                throw new Error('x and y must have at least two elements to support interpolation');\n            }\n            // The following sorting code is referenced from:\n            // http://stackoverflow.com/questions/11499268/sort-two-arrays-the-same-way\n            list = [];\n            for (j in tsx) {\n                list.push({\n                    'x': tsx[j],\n                    'y': tsy[j]\n                });\n            }\n            if (descending === true) {\n                list.sort(function (a, b) {\n                    var ref2, ref3;\n                    return (ref2 = a.x < b.x) != null ? ref2 : -{ 1: (ref3 = a.x === b.x) != null ? ref3 : { 0: 1 } };\n                });\n            } else {\n                list.sort(function (a, b) {\n                    var ref2, ref3;\n                    return (ref2 = a.x > b.x) != null ? ref2 : -{ 1: (ref3 = a.x === b.x) != null ? ref3 : { 0: 1 } };\n                });\n            }\n            for (k = i = 0, ref2 = list.length; 0 <= ref2 ? i < ref2 : i > ref2; k = 0 <= ref2 ? ++i : --i) {\n                this._x_sorted[k] = list[k].x;\n                this._y_sorted[k] = list[k].y;\n            }\n            return this._sorted_dirty = false;\n        };\n        return Interpolator;\n    }(transform_1.Transform);\n    exports.Interpolator = Interpolator;\n    ;\n    Interpolator.define({\n        x: [p.Any],\n        y: [p.Any],\n        data: [p.Any],\n        clip: [\n            p.Bool,\n            true\n        ]\n    });    \n}","/*models/transforms/jitter*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var transform_1 = require(243    /* ./transform */);\n    var p = require(15    /* core/properties */);\n    var bokeh_math = require(29    /* core/util/math */);\n    var Jitter = function (_super) {\n        tslib_1.__extends(Jitter, _super);\n        function Jitter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Jitter.prototype.compute = function (x, use_synthetic) {\n            if (use_synthetic === void 0) {\n                use_synthetic = true;\n            }\n            var ref;\n            if (((ref = this.range) != null ? ref.synthetic : void 0) != null && use_synthetic) {\n                x = this.range.synthetic(x);\n            }\n            if (this.distribution === 'uniform') {\n                return x + this.mean + (bokeh_math.random() - 0.5) * this.width;\n            }\n            if (this.distribution === 'normal') {\n                return x + bokeh_math.rnorm(this.mean, this.width);\n            }\n        };\n        return Jitter;\n    }(transform_1.Transform);\n    exports.Jitter = Jitter;\n    ;\n    Jitter.define({\n        mean: [\n            p.Number,\n            0\n        ],\n        width: [\n            p.Number,\n            1\n        ],\n        distribution: [\n            p.Distribution,\n            'uniform'\n        ],\n        range: [p.Instance]\n    });    \n}","/*models/transforms/linear_interpolator*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var array_1 = require(22    /* core/util/array */);\n    var interpolator_1 = require(239    /* ./interpolator */);\n    exports.LinearInterpolator = function (_super) {\n        tslib_1.__extends(LinearInterpolator, _super);\n        function LinearInterpolator() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LinearInterpolator.prototype.compute = function (x) {\n            var descending, ind, ret, x1, x2, y1, y2;\n            // Apply the transform to a single value\n            this.sort(descending = false);\n            if (this.clip === true) {\n                if (x < this._x_sorted[0] || x > this._x_sorted[this._x_sorted.length - 1]) {\n                    return null;\n                }\n            } else {\n                if (x < this._x_sorted[0]) {\n                    return this._y_sorted[0];\n                }\n                if (x > this._x_sorted[this._x_sorted.length - 1]) {\n                    return this._y_sorted[this._y_sorted.length - 1];\n                }\n            }\n            if (x === this._x_sorted[0]) {\n                return this._y_sorted[0];\n            }\n            ind = array_1.findLastIndex(this._x_sorted, function (num) {\n                return num < x;\n            });\n            x1 = this._x_sorted[ind];\n            x2 = this._x_sorted[ind + 1];\n            y1 = this._y_sorted[ind];\n            y2 = this._y_sorted[ind + 1];\n            ret = y1 + (x - x1) / (x2 - x1) * (y2 - y1);\n            return ret;\n        };\n        LinearInterpolator.prototype.v_compute = function (xs) {\n            var i, idx, len, result, x;\n            // Apply the tranform to a vector of values\n            result = new Float64Array(xs.length);\n            for (idx = i = 0, len = xs.length; i < len; idx = ++i) {\n                x = xs[idx];\n                result[idx] = this.compute(x);\n            }\n            return result;\n        };\n        return LinearInterpolator;\n    }(interpolator_1.Interpolator);    \n}","/*models/transforms/step_interpolator*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var interpolator_1 = require(239    /* ./interpolator */);\n    var p = require(15    /* core/properties */);\n    var array_1 = require(22    /* core/util/array */);\n    var StepInterpolator = function (_super) {\n        tslib_1.__extends(StepInterpolator, _super);\n        function StepInterpolator() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        StepInterpolator.prototype.compute = function (x) {\n            var descending, diffs, ind, mdiff, ret, tx;\n            // Apply the transform to a single value\n            this.sort(descending = false);\n            if (this.clip === true) {\n                if (x < this._x_sorted[0] || x > this._x_sorted[this._x_sorted.length - 1]) {\n                    return null;\n                }\n            } else {\n                if (x < this._x_sorted[0]) {\n                    return this._y_sorted[0];\n                }\n                if (x > this._x_sorted[this._x_sorted.length - 1]) {\n                    return this._y_sorted[this._y_sorted.length - 1];\n                }\n            }\n            ind = -1;\n            if (this.mode === 'after') {\n                ind = array_1.findLastIndex(this._x_sorted, function (num) {\n                    return x >= num;\n                });\n            }\n            if (this.mode === 'before') {\n                ind = array_1.findIndex(this._x_sorted, function (num) {\n                    return x <= num;\n                });\n            }\n            if (this.mode === 'center') {\n                diffs = function () {\n                    var i, len, ref, results;\n                    ref = this._x_sorted;\n                    results = [];\n                    for (i = 0, len = ref.length; i < len; i++) {\n                        tx = ref[i];\n                        results.push(Math.abs(tx - x));\n                    }\n                    return results;\n                }.call(this);\n                mdiff = array_1.min(diffs);\n                ind = array_1.findIndex(diffs, function (num) {\n                    return mdiff === num;\n                });\n            }\n            if (ind !== -1) {\n                ret = this._y_sorted[ind];\n            } else {\n                ret = null;\n            }\n            return ret;\n        };\n        StepInterpolator.prototype.v_compute = function (xs) {\n            var i, idx, len, result, x;\n            // Apply the tranform to a vector of values\n            result = new Float64Array(xs.length);\n            for (idx = i = 0, len = xs.length; i < len; idx = ++i) {\n                x = xs[idx];\n                result[idx] = this.compute(x);\n            }\n            return result;\n        };\n        return StepInterpolator;\n    }(interpolator_1.Interpolator);\n    exports.StepInterpolator = StepInterpolator;\n    ;\n    StepInterpolator.define({\n        mode: [\n            p.StepMode,\n            'after'\n        ]\n    });    \n}","/*models/transforms/transform*/\nfunction _(require, module, exports) {\n    var tslib_1 = require(364    /* tslib */);\n    var model_1 = require(50    /* ../../model */);\n    exports.Transform = function (_super) {\n        tslib_1.__extends(Transform, _super);\n        function Transform() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        // default implementation based on compute\n        Transform.prototype.v_compute = function (xs) {\n            var i, idx, len, ref, result, x;\n            if (((ref = this.range) != null ? ref.v_synthetic : void 0) != null) {\n                xs = this.range.v_synthetic(xs);\n            }\n            result = new Float64Array(xs.length);\n            for (idx = i = 0, len = xs.length; i < len; idx = ++i) {\n                x = xs[idx];\n                result[idx] = this.compute(x, false);\n            }\n            return result;\n        };\n        return Transform;\n    }(model_1.Model);    \n}","/*polyfill*/\nfunction _(require, module, exports) {\n    if (typeof WeakMap !== 'function') {\n        require(313    /* es6-weak-map/implement */);\n    }\n    if (typeof Set !== 'function') {\n        require(303    /* es6-set/implement */);\n    }\n    var proto = String.prototype;\n    if (!proto.repeat) {\n        proto.repeat = function (count) {\n            if (this == null) {\n                throw new TypeError('can\\'t convert ' + this + ' to object');\n            }\n            var str = '' + this;\n            count = +count;\n            if (count != count) {\n                count = 0;\n            }\n            if (count < 0) {\n                throw new RangeError('repeat count must be non-negative');\n            }\n            if (count == Infinity) {\n                throw new RangeError('repeat count must be less than infinity');\n            }\n            count = Math.floor(count);\n            if (str.length == 0 || count == 0) {\n                return '';\n            }\n            // Ensuring count is a 31-bit integer allows us to heavily optimize the\n            // main part. But anyway, most current (August 2014) browsers can't handle\n            // strings 1 << 28 chars or longer, so:\n            if (str.length * count >= 1 << 28) {\n                throw new RangeError('repeat count must not overflow maximum string size');\n            }\n            var rpt = '';\n            for (;;) {\n                if ((count & 1) == 1) {\n                    rpt += str;\n                }\n                count >>>= 1;\n                if (count == 0) {\n                    break;\n                }\n                str += str;\n            }\n            // Could we try:\n            // return Array(count + 1).join(this);\n            return rpt;\n        };\n    }    \n}","/*protocol/message*/\nfunction _(require, module, exports) {\n    var string_1 = require(37    /* core/util/string */);\n    var Message = function () {\n        function Message(header, metadata, content) {\n            this.header = header;\n            this.metadata = metadata;\n            this.content = content;\n            this.buffers = [];\n        }\n        Message.assemble = function (header_json, metadata_json, content_json) {\n            var header = JSON.parse(header_json);\n            var metadata = JSON.parse(metadata_json);\n            var content = JSON.parse(content_json);\n            return new Message(header, metadata, content);\n        };\n        Message.prototype.assemble_buffer = function (buf_header, buf_payload) {\n            var nb = this.header.num_buffers != null ? this.header.num_buffers : 0;\n            if (nb <= this.buffers.length)\n                throw new Error('too many buffers received, expecting #{nb}');\n            this.buffers.push([\n                buf_header,\n                buf_payload\n            ]);\n        };\n        // not defined for BokehJS, only *receiving* buffers is supported\n        // add_buffer: (buf_header, buf_payload) ->\n        // write_buffers: (socket)\n        Message.create = function (msgtype, metadata, content) {\n            if (content === void 0) {\n                content = {};\n            }\n            var header = Message.create_header(msgtype);\n            return new Message(header, metadata, content);\n        };\n        Message.create_header = function (msgtype) {\n            return {\n                msgid: string_1.uniqueId(),\n                msgtype: msgtype\n            };\n        };\n        Message.prototype.complete = function () {\n            if (this.header != null && this.metadata != null && this.content != null) {\n                if ('num_buffers' in this.header)\n                    return this.buffers.length === this.header.num_buffers;\n                else\n                    return true;\n            } else\n                return false;\n        };\n        Message.prototype.send = function (socket) {\n            var nb = this.header.num_buffers != null ? this.header.num_buffers : 0;\n            if (nb > 0)\n                throw new Error('BokehJS only supports receiving buffers, not sending');\n            var header_json = JSON.stringify(this.header);\n            var metadata_json = JSON.stringify(this.metadata);\n            var content_json = JSON.stringify(this.content);\n            socket.send(header_json);\n            socket.send(metadata_json);\n            socket.send(content_json);\n        };\n        Message.prototype.msgid = function () {\n            return this.header.msgid;\n        };\n        Message.prototype.msgtype = function () {\n            return this.header.msgtype;\n        };\n        Message.prototype.reqid = function () {\n            return this.header.reqid;\n        };\n        // return the reason we should close on bad protocol, if there is one\n        Message.prototype.problem = function () {\n            if (!('msgid' in this.header))\n                return 'No msgid in header';\n            else if (!('msgtype' in this.header))\n                return 'No msgtype in header';\n            else\n                return null;\n        };\n        return Message;\n    }();\n    exports.Message = Message;    \n}","/*protocol/receiver*/\nfunction _(require, module, exports) {\n    var message_1 = require(245    /* protocol/message */);\n    var Receiver = function () {\n        function Receiver() {\n            this.message = null;\n            this._partial = null;\n            this._fragments = [];\n            this._buf_header = null;\n            this._current_consumer = this._HEADER;\n        }\n        Receiver.prototype.consume = function (fragment) {\n            this._current_consumer(fragment);\n        };\n        Receiver.prototype._HEADER = function (fragment) {\n            this._assume_text(fragment);\n            this.message = null;\n            this._partial = null;\n            this._fragments = [fragment];\n            this._buf_header = null;\n            this._current_consumer = this._METADATA;\n        };\n        Receiver.prototype._METADATA = function (fragment) {\n            this._assume_text(fragment);\n            this._fragments.push(fragment);\n            this._current_consumer = this._CONTENT;\n        };\n        Receiver.prototype._CONTENT = function (fragment) {\n            this._assume_text(fragment);\n            this._fragments.push(fragment);\n            var _a = this._fragments.slice(0, 3), header_json = _a[0], metadata_json = _a[1], content_json = _a[2];\n            this._partial = message_1.Message.assemble(header_json, metadata_json, content_json);\n            this._check_complete();\n        };\n        Receiver.prototype._BUFFER_HEADER = function (fragment) {\n            this._assume_text(fragment);\n            this._buf_header = fragment;\n            this._current_consumer = this._BUFFER_PAYLOAD;\n        };\n        Receiver.prototype._BUFFER_PAYLOAD = function (fragment) {\n            this._assume_binary(fragment);\n            this._partial.assemble_buffer(this._buf_header, fragment);\n            this._check_complete();\n        };\n        Receiver.prototype._assume_text = function (fragment) {\n            if (fragment instanceof ArrayBuffer)\n                throw new Error('Expected text fragment but received binary fragment');\n        };\n        Receiver.prototype._assume_binary = function (fragment) {\n            if (!(fragment instanceof ArrayBuffer))\n                throw new Error('Expected binary fragment but received text fragment');\n        };\n        Receiver.prototype._check_complete = function () {\n            if (this._partial.complete()) {\n                this.message = this._partial;\n                this._current_consumer = this._HEADER;\n            } else\n                this._current_consumer = this._BUFFER_HEADER;\n        };\n        return Receiver;\n    }();\n    exports.Receiver = Receiver;    \n}","/*safely*/\nfunction _(require, module, exports) {\n    function _burst_into_flames(error) {\n        // Make box\n        var box = document.createElement('div');\n        box.style.backgroundColor = '#f2dede';\n        box.style.border = '1px solid #a94442';\n        box.style.borderRadius = '4px';\n        box.style.display = 'inline-block';\n        box.style.fontFamily = 'sans-serif';\n        box.style.marginTop = '5px';\n        box.style.minWidth = '200px';\n        box.style.padding = '5px 5px 5px 10px';\n        // Make button\n        var button = document.createElement('span');\n        button.style.backgroundColor = '#a94442';\n        button.style.borderRadius = '0px 4px 0px 0px';\n        button.style.color = 'white';\n        button.style.cursor = 'pointer';\n        button.style.cssFloat = 'right';\n        button.style.fontSize = '0.8em';\n        button.style.margin = '-6px -6px 0px 0px';\n        button.style.padding = '2px 5px 4px 5px';\n        button.title = 'close';\n        button.setAttribute('aria-label', 'close');\n        button.appendChild(document.createTextNode('x'));\n        button.addEventListener('click', function () {\n            return body.removeChild(box);\n        });\n        // Make title\n        var title = document.createElement('h3');\n        title.style.color = '#a94442';\n        title.style.margin = '8px 0px 0px 0px';\n        title.style.padding = '0px';\n        title.appendChild(document.createTextNode('Bokeh Error'));\n        // Make message\n        var message = document.createElement('pre');\n        message.style.whiteSpace = 'unset';\n        message.style.overflowX = 'auto';\n        message.appendChild(document.createTextNode(error.message || error));\n        // Add pieces to box\n        box.appendChild(button);\n        box.appendChild(title);\n        box.appendChild(message);\n        // Put box in doc\n        var body = document.getElementsByTagName('body')[0];\n        body.insertBefore(box, body.firstChild);\n    }\n    function safely(fn, silent) {\n        if (silent === void 0) {\n            silent = false;\n        }\n        try {\n            return fn();\n        } catch (error) {\n            _burst_into_flames(error);\n            if (!silent)\n                throw error;\n            else\n                return;\n        }\n    }\n    exports.safely = safely;    \n}","/*version*/\nfunction _(require, module, exports) {\n    exports.version = '0.12.13';    \n}","/*!!\n *  Canvas 2 Svg v1.0.21\n *  A low level canvas to SVG converter. Uses a mock canvas context to build an SVG document.\n *\n *  Licensed under the MIT license:\n *  http://www.opensource.org/licenses/mit-license.php\n *\n *  Author:\n *  Kerry Liu\n *\n *  Copyright (c) 2014 Gliffy Inc.\n */\n/*canvas2svg/canvas2svg*/\nfunction _(require, module, exports) {\n    ;\n    (function () {\n        'use strict';\n        var STYLES, ctx, CanvasGradient, CanvasPattern, namedEntities;\n        //helper function to format a string\n        function format(str, args) {\n            var keys = Object.keys(args), i;\n            for (i = 0; i < keys.length; i++) {\n                str = str.replace(new RegExp('\\\\{' + keys[i] + '\\\\}', 'gi'), args[keys[i]]);\n            }\n            return str;\n        }\n        //helper function that generates a random string\n        function randomString(holder) {\n            var chars, randomstring, i;\n            if (!holder) {\n                throw new Error('cannot create a random attribute name for an undefined object');\n            }\n            chars = 'ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n            randomstring = '';\n            do {\n                randomstring = '';\n                for (i = 0; i < 12; i++) {\n                    randomstring += chars[Math.floor(Math.random() * chars.length)];\n                }\n            } while (holder[randomstring]);\n            return randomstring;\n        }\n        //helper function to map named to numbered entities\n        function createNamedToNumberedLookup(items, radix) {\n            var i, entity, lookup = {}, base10, base16;\n            items = items.split(',');\n            radix = radix || 10;\n            // Map from named to numbered entities.\n            for (i = 0; i < items.length; i += 2) {\n                entity = '&' + items[i + 1] + ';';\n                base10 = parseInt(items[i], radix);\n                lookup[entity] = '&#' + base10 + ';';\n            }\n            //FF and IE need to create a regex from hex values ie &nbsp; == \\xa0\n            lookup['\\\\xa0'] = '&#160;';\n            return lookup;\n        }\n        //helper function to map canvas-textAlign to svg-textAnchor\n        function getTextAnchor(textAlign) {\n            //TODO: support rtl languages\n            var mapping = {\n                'left': 'start',\n                'right': 'end',\n                'center': 'middle',\n                'start': 'start',\n                'end': 'end'\n            };\n            return mapping[textAlign] || mapping.start;\n        }\n        //helper function to map canvas-textBaseline to svg-dominantBaseline\n        function getDominantBaseline(textBaseline) {\n            //INFO: not supported in all browsers\n            var mapping = {\n                'alphabetic': 'alphabetic',\n                'hanging': 'hanging',\n                'top': 'text-before-edge',\n                'bottom': 'text-after-edge',\n                'middle': 'central'\n            };\n            return mapping[textBaseline] || mapping.alphabetic;\n        }\n        // Unpack entities lookup where the numbers are in radix 32 to reduce the size\n        // entity mapping courtesy of tinymce\n        namedEntities = createNamedToNumberedLookup('50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,' + '5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,' + '5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,' + '5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,' + '68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,' + '6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,' + '6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,' + '75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,' + '7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,' + '7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,' + 'sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,' + 'st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,' + 't9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,' + 'tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,' + 'u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,' + '81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,' + '8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,' + '8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,' + '8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,' + '8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,' + 'nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,' + 'rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,' + 'Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,' + '80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,' + '811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro', 32);\n        //Some basic mappings for attributes and default values.\n        STYLES = {\n            'strokeStyle': {\n                svgAttr: 'stroke',\n                //corresponding svg attribute\n                canvas: '#000000',\n                //canvas default\n                svg: 'none',\n                //svg default\n                apply: 'stroke'    //apply on stroke() or fill()\n            },\n            'fillStyle': {\n                svgAttr: 'fill',\n                canvas: '#000000',\n                svg: null,\n                //svg default is black, but we need to special case this to handle canvas stroke without fill\n                apply: 'fill'\n            },\n            'lineCap': {\n                svgAttr: 'stroke-linecap',\n                canvas: 'butt',\n                svg: 'butt',\n                apply: 'stroke'\n            },\n            'lineJoin': {\n                svgAttr: 'stroke-linejoin',\n                canvas: 'miter',\n                svg: 'miter',\n                apply: 'stroke'\n            },\n            'miterLimit': {\n                svgAttr: 'stroke-miterlimit',\n                canvas: 10,\n                svg: 4,\n                apply: 'stroke'\n            },\n            'lineWidth': {\n                svgAttr: 'stroke-width',\n                canvas: 1,\n                svg: 1,\n                apply: 'stroke'\n            },\n            'globalAlpha': {\n                svgAttr: 'opacity',\n                canvas: 1,\n                svg: 1,\n                apply: 'fill stroke'\n            },\n            'font': {\n                //font converts to multiple svg attributes, there is custom logic for this\n                canvas: '10px sans-serif'\n            },\n            'shadowColor': { canvas: '#000000' },\n            'shadowOffsetX': { canvas: 0 },\n            'shadowOffsetY': { canvas: 0 },\n            'shadowBlur': { canvas: 0 },\n            'textAlign': { canvas: 'start' },\n            'textBaseline': { canvas: 'alphabetic' },\n            'lineDash': {\n                svgAttr: 'stroke-dasharray',\n                canvas: [],\n                svg: null,\n                apply: 'stroke'\n            }\n        };\n        /**\n     *\n     * @param gradientNode - reference to the gradient\n     * @constructor\n     */\n        CanvasGradient = function (gradientNode, ctx) {\n            this.__root = gradientNode;\n            this.__ctx = ctx;\n        };\n        /**\n     * Adds a color stop to the gradient root\n     */\n        CanvasGradient.prototype.addColorStop = function (offset, color) {\n            var stop = this.__ctx.__createElement('stop'), regex, matches;\n            stop.setAttribute('offset', offset);\n            if (color.indexOf('rgba') !== -1) {\n                //separate alpha value, since webkit can't handle it\n                regex = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\n                matches = regex.exec(color);\n                stop.setAttribute('stop-color', format('rgb({r},{g},{b})', {\n                    r: matches[1],\n                    g: matches[2],\n                    b: matches[3]\n                }));\n                stop.setAttribute('stop-opacity', matches[4]);\n            } else {\n                stop.setAttribute('stop-color', color);\n            }\n            this.__root.appendChild(stop);\n        };\n        CanvasPattern = function (pattern, ctx) {\n            this.__root = pattern;\n            this.__ctx = ctx;\n        };\n        /**\n     * The mock canvas context\n     * @param o - options include:\n     * ctx - existing Context2D to wrap around\n     * width - width of your canvas (defaults to 500)\n     * height - height of your canvas (defaults to 500)\n     * enableMirroring - enables canvas mirroring (get image data) (defaults to false)\n     * document - the document object (defaults to the current document)\n     */\n        ctx = function (o) {\n            var defaultOptions = {\n                    width: 500,\n                    height: 500,\n                    enableMirroring: false\n                }, options;\n            //keep support for this way of calling C2S: new C2S(width,height)\n            if (arguments.length > 1) {\n                options = defaultOptions;\n                options.width = arguments[0];\n                options.height = arguments[1];\n            } else if (!o) {\n                options = defaultOptions;\n            } else {\n                options = o;\n            }\n            if (!(this instanceof ctx)) {\n                //did someone call this without new?\n                return new ctx(options);\n            }\n            //setup options\n            this.width = options.width || defaultOptions.width;\n            this.height = options.height || defaultOptions.height;\n            this.enableMirroring = options.enableMirroring !== undefined ? options.enableMirroring : defaultOptions.enableMirroring;\n            this.canvas = this;\n            ///point back to this instance!\n            this.__document = options.document || document;\n            // allow passing in an existing context to wrap around\n            // if a context is passed in, we know a canvas already exist\n            if (options.ctx) {\n                this.__ctx = options.ctx;\n            } else {\n                this.__canvas = this.__document.createElement('canvas');\n                this.__ctx = this.__canvas.getContext('2d');\n            }\n            this.__setDefaultStyles();\n            this.__stack = [this.__getStyleState()];\n            this.__groupStack = [];\n            //the root svg element\n            this.__root = this.__document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            this.__root.setAttribute('version', 1.1);\n            this.__root.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n            this.__root.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\n            this.__root.setAttribute('width', this.width);\n            this.__root.setAttribute('height', this.height);\n            //make sure we don't generate the same ids in defs\n            this.__ids = {};\n            //defs tag\n            this.__defs = this.__document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n            this.__root.appendChild(this.__defs);\n            //also add a group child. the svg element can't use the transform attribute\n            this.__currentElement = this.__document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            this.__root.appendChild(this.__currentElement);\n        };\n        /**\n     * Creates the specified svg element\n     * @private\n     */\n        ctx.prototype.__createElement = function (elementName, properties, resetFill) {\n            if (typeof properties === 'undefined') {\n                properties = {};\n            }\n            var element = this.__document.createElementNS('http://www.w3.org/2000/svg', elementName), keys = Object.keys(properties), i, key;\n            if (resetFill) {\n                //if fill or stroke is not specified, the svg element should not display. By default SVG's fill is black.\n                element.setAttribute('fill', 'none');\n                element.setAttribute('stroke', 'none');\n            }\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                element.setAttribute(key, properties[key]);\n            }\n            return element;\n        };\n        /**\n     * Applies default canvas styles to the context\n     * @private\n     */\n        ctx.prototype.__setDefaultStyles = function () {\n            //default 2d canvas context properties see:http://www.w3.org/TR/2dcontext/\n            var keys = Object.keys(STYLES), i, key;\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                this[key] = STYLES[key].canvas;\n            }\n        };\n        /**\n     * Applies styles on restore\n     * @param styleState\n     * @private\n     */\n        ctx.prototype.__applyStyleState = function (styleState) {\n            var keys = Object.keys(styleState), i, key;\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                this[key] = styleState[key];\n            }\n        };\n        /**\n     * Gets the current style state\n     * @return {Object}\n     * @private\n     */\n        ctx.prototype.__getStyleState = function () {\n            var i, styleState = {}, keys = Object.keys(STYLES), key;\n            for (i = 0; i < keys.length; i++) {\n                key = keys[i];\n                styleState[key] = this[key];\n            }\n            return styleState;\n        };\n        /**\n     * Apples the current styles to the current SVG element. On \"ctx.fill\" or \"ctx.stroke\"\n     * @param type\n     * @private\n     */\n        ctx.prototype.__applyStyleToCurrentElement = function (type) {\n            var currentElement = this.__currentElement;\n            var currentStyleGroup = this.__currentElementsToStyle;\n            if (currentStyleGroup) {\n                currentElement.setAttribute(type, '');\n                currentElement = currentStyleGroup.element;\n                currentStyleGroup.children.forEach(function (node) {\n                    node.setAttribute(type, '');\n                });\n            }\n            var keys = Object.keys(STYLES), i, style, value, id, regex, matches;\n            for (i = 0; i < keys.length; i++) {\n                style = STYLES[keys[i]];\n                value = this[keys[i]];\n                if (style.apply) {\n                    //is this a gradient or pattern?\n                    if (value instanceof CanvasPattern) {\n                        //pattern\n                        if (value.__ctx) {\n                            //copy over defs\n                            while (value.__ctx.__defs.childNodes.length) {\n                                id = value.__ctx.__defs.childNodes[0].getAttribute('id');\n                                this.__ids[id] = id;\n                                this.__defs.appendChild(value.__ctx.__defs.childNodes[0]);\n                            }\n                        }\n                        currentElement.setAttribute(style.apply, format('url(#{id})', { id: value.__root.getAttribute('id') }));\n                    } else if (value instanceof CanvasGradient) {\n                        //gradient\n                        currentElement.setAttribute(style.apply, format('url(#{id})', { id: value.__root.getAttribute('id') }));\n                    } else if (style.apply.indexOf(type) !== -1 && style.svg !== value) {\n                        if ((style.svgAttr === 'stroke' || style.svgAttr === 'fill') && value.indexOf('rgba') !== -1) {\n                            //separate alpha value, since illustrator can't handle it\n                            regex = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\n                            matches = regex.exec(value);\n                            currentElement.setAttribute(style.svgAttr, format('rgb({r},{g},{b})', {\n                                r: matches[1],\n                                g: matches[2],\n                                b: matches[3]\n                            }));\n                            //should take globalAlpha here\n                            var opacity = matches[4];\n                            var globalAlpha = this.globalAlpha;\n                            if (globalAlpha != null) {\n                                opacity *= globalAlpha;\n                            }\n                            currentElement.setAttribute(style.svgAttr + '-opacity', opacity);\n                        } else {\n                            var attr = style.svgAttr;\n                            if (keys[i] === 'globalAlpha') {\n                                attr = type + '-' + style.svgAttr;\n                                if (currentElement.getAttribute(attr)) {\n                                    //fill-opacity or stroke-opacity has already been set by stroke or fill.\n                                    continue;\n                                }\n                            }\n                            //otherwise only update attribute if right type, and not svg default\n                            currentElement.setAttribute(attr, value);\n                        }\n                    }\n                }\n            }\n        };\n        /**\n     * Will return the closest group or svg node. May return the current element.\n     * @private\n     */\n        ctx.prototype.__closestGroupOrSvg = function (node) {\n            node = node || this.__currentElement;\n            if (node.nodeName === 'g' || node.nodeName === 'svg') {\n                return node;\n            } else {\n                return this.__closestGroupOrSvg(node.parentNode);\n            }\n        };\n        /**\n     * Returns the serialized value of the svg so far\n     * @param fixNamedEntities - Standalone SVG doesn't support named entities, which document.createTextNode encodes.\n     *                           If true, we attempt to find all named entities and encode it as a numeric entity.\n     * @return serialized svg\n     */\n        ctx.prototype.getSerializedSvg = function (fixNamedEntities) {\n            var serialized = new XMLSerializer().serializeToString(this.__root), keys, i, key, value, regexp, xmlns;\n            //IE search for a duplicate xmnls because they didn't implement setAttributeNS correctly\n            xmlns = /xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\".+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg/gi;\n            if (xmlns.test(serialized)) {\n                serialized = serialized.replace('xmlns=\"http://www.w3.org/2000/svg', 'xmlns:xlink=\"http://www.w3.org/1999/xlink');\n            }\n            if (fixNamedEntities) {\n                keys = Object.keys(namedEntities);\n                //loop over each named entity and replace with the proper equivalent.\n                for (i = 0; i < keys.length; i++) {\n                    key = keys[i];\n                    value = namedEntities[key];\n                    regexp = new RegExp(key, 'gi');\n                    if (regexp.test(serialized)) {\n                        serialized = serialized.replace(regexp, value);\n                    }\n                }\n            }\n            return serialized;\n        };\n        /**\n     * Returns the root svg\n     * @return\n     */\n        ctx.prototype.getSvg = function () {\n            return this.__root;\n        };\n        /**\n     * Will generate a group tag.\n     */\n        ctx.prototype.save = function () {\n            var group = this.__createElement('g');\n            var parent = this.__closestGroupOrSvg();\n            this.__groupStack.push(parent);\n            parent.appendChild(group);\n            this.__currentElement = group;\n            this.__stack.push(this.__getStyleState());\n        };\n        /**\n     * Sets current element to parent, or just root if already root\n     */\n        ctx.prototype.restore = function () {\n            this.__currentElement = this.__groupStack.pop();\n            this.__currentElementsToStyle = null;\n            //Clearing canvas will make the poped group invalid, currentElement is set to the root group node.\n            if (!this.__currentElement) {\n                this.__currentElement = this.__root.childNodes[1];\n            }\n            var state = this.__stack.pop();\n            this.__applyStyleState(state);\n        };\n        /**\n     * Helper method to add transform\n     * @private\n     */\n        ctx.prototype.__addTransform = function (t) {\n            //if the current element has siblings, add another group\n            var parent = this.__closestGroupOrSvg();\n            if (parent.childNodes.length > 0) {\n                if (this.__currentElement.nodeName === 'path') {\n                    if (!this.__currentElementsToStyle)\n                        this.__currentElementsToStyle = {\n                            element: parent,\n                            children: []\n                        };\n                    this.__currentElementsToStyle.children.push(this.__currentElement);\n                    this.__applyCurrentDefaultPath();\n                }\n                var group = this.__createElement('g');\n                parent.appendChild(group);\n                this.__currentElement = group;\n            }\n            var transform = this.__currentElement.getAttribute('transform');\n            if (transform) {\n                transform += ' ';\n            } else {\n                transform = '';\n            }\n            transform += t;\n            this.__currentElement.setAttribute('transform', transform);\n        };\n        /**\n     *  scales the current element\n     */\n        ctx.prototype.scale = function (x, y) {\n            if (y === undefined) {\n                y = x;\n            }\n            this.__addTransform(format('scale({x},{y})', {\n                x: x,\n                y: y\n            }));\n        };\n        /**\n     * rotates the current element\n     */\n        ctx.prototype.rotate = function (angle) {\n            var degrees = angle * 180 / Math.PI;\n            this.__addTransform(format('rotate({angle},{cx},{cy})', {\n                angle: degrees,\n                cx: 0,\n                cy: 0\n            }));\n        };\n        /**\n     * translates the current element\n     */\n        ctx.prototype.translate = function (x, y) {\n            this.__addTransform(format('translate({x},{y})', {\n                x: x,\n                y: y\n            }));\n        };\n        /**\n     * applies a transform to the current element\n     */\n        ctx.prototype.transform = function (a, b, c, d, e, f) {\n            this.__addTransform(format('matrix({a},{b},{c},{d},{e},{f})', {\n                a: a,\n                b: b,\n                c: c,\n                d: d,\n                e: e,\n                f: f\n            }));\n        };\n        /**\n     * Create a new Path Element\n     */\n        ctx.prototype.beginPath = function () {\n            var path, parent;\n            // Note that there is only one current default path, it is not part of the drawing state.\n            // See also: https://html.spec.whatwg.org/multipage/scripting.html#current-default-path\n            this.__currentDefaultPath = '';\n            this.__currentPosition = {};\n            path = this.__createElement('path', {}, true);\n            parent = this.__closestGroupOrSvg();\n            parent.appendChild(path);\n            this.__currentElement = path;\n        };\n        /**\n     * Helper function to apply currentDefaultPath to current path element\n     * @private\n     */\n        ctx.prototype.__applyCurrentDefaultPath = function () {\n            var currentElement = this.__currentElement;\n            if (currentElement.nodeName === 'path') {\n                currentElement.setAttribute('d', this.__currentDefaultPath);\n            } else {\n                console.error('Attempted to apply path command to node', currentElement.nodeName);\n            }\n        };\n        /**\n     * Helper function to add path command\n     * @private\n     */\n        ctx.prototype.__addPathCommand = function (command) {\n            this.__currentDefaultPath += ' ';\n            this.__currentDefaultPath += command;\n        };\n        /**\n     * Adds the move command to the current path element,\n     * if the currentPathElement is not empty create a new path element\n     */\n        ctx.prototype.moveTo = function (x, y) {\n            if (this.__currentElement.nodeName !== 'path') {\n                this.beginPath();\n            }\n            // creates a new subpath with the given point\n            this.__currentPosition = {\n                x: x,\n                y: y\n            };\n            this.__addPathCommand(format('M {x} {y}', {\n                x: x,\n                y: y\n            }));\n        };\n        /**\n     * Closes the current path\n     */\n        ctx.prototype.closePath = function () {\n            if (this.__currentDefaultPath) {\n                this.__addPathCommand('Z');\n            }\n        };\n        /**\n     * Adds a line to command\n     */\n        ctx.prototype.lineTo = function (x, y) {\n            this.__currentPosition = {\n                x: x,\n                y: y\n            };\n            if (this.__currentDefaultPath.indexOf('M') > -1) {\n                this.__addPathCommand(format('L {x} {y}', {\n                    x: x,\n                    y: y\n                }));\n            } else {\n                this.__addPathCommand(format('M {x} {y}', {\n                    x: x,\n                    y: y\n                }));\n            }\n        };\n        /**\n     * Add a bezier command\n     */\n        ctx.prototype.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n            this.__currentPosition = {\n                x: x,\n                y: y\n            };\n            this.__addPathCommand(format('C {cp1x} {cp1y} {cp2x} {cp2y} {x} {y}', {\n                cp1x: cp1x,\n                cp1y: cp1y,\n                cp2x: cp2x,\n                cp2y: cp2y,\n                x: x,\n                y: y\n            }));\n        };\n        /**\n     * Adds a quadratic curve to command\n     */\n        ctx.prototype.quadraticCurveTo = function (cpx, cpy, x, y) {\n            this.__currentPosition = {\n                x: x,\n                y: y\n            };\n            this.__addPathCommand(format('Q {cpx} {cpy} {x} {y}', {\n                cpx: cpx,\n                cpy: cpy,\n                x: x,\n                y: y\n            }));\n        };\n        /**\n     * Return a new normalized vector of given vector\n     */\n        var normalize = function (vector) {\n            var len = Math.sqrt(vector[0] * vector[0] + vector[1] * vector[1]);\n            return [\n                vector[0] / len,\n                vector[1] / len\n            ];\n        };\n        /**\n     * Adds the arcTo to the current path\n     *\n     * @see http://www.w3.org/TR/2015/WD-2dcontext-20150514/#dom-context-2d-arcto\n     */\n        ctx.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n            // Let the point (x0, y0) be the last point in the subpath.\n            var x0 = this.__currentPosition && this.__currentPosition.x;\n            var y0 = this.__currentPosition && this.__currentPosition.y;\n            // First ensure there is a subpath for (x1, y1).\n            if (typeof x0 == 'undefined' || typeof y0 == 'undefined') {\n                return;\n            }\n            // Negative values for radius must cause the implementation to throw an IndexSizeError exception.\n            if (radius < 0) {\n                throw new Error('IndexSizeError: The radius provided (' + radius + ') is negative.');\n            }\n            // If the point (x0, y0) is equal to the point (x1, y1),\n            // or if the point (x1, y1) is equal to the point (x2, y2),\n            // or if the radius radius is zero,\n            // then the method must add the point (x1, y1) to the subpath,\n            // and connect that point to the previous point (x0, y0) by a straight line.\n            if (x0 === x1 && y0 === y1 || x1 === x2 && y1 === y2 || radius === 0) {\n                this.lineTo(x1, y1);\n                return;\n            }\n            // Otherwise, if the points (x0, y0), (x1, y1), and (x2, y2) all lie on a single straight line,\n            // then the method must add the point (x1, y1) to the subpath,\n            // and connect that point to the previous point (x0, y0) by a straight line.\n            var unit_vec_p1_p0 = normalize([\n                x0 - x1,\n                y0 - y1\n            ]);\n            var unit_vec_p1_p2 = normalize([\n                x2 - x1,\n                y2 - y1\n            ]);\n            if (unit_vec_p1_p0[0] * unit_vec_p1_p2[1] === unit_vec_p1_p0[1] * unit_vec_p1_p2[0]) {\n                this.lineTo(x1, y1);\n                return;\n            }\n            // Otherwise, let The Arc be the shortest arc given by circumference of the circle that has radius radius,\n            // and that has one point tangent to the half-infinite line that crosses the point (x0, y0) and ends at the point (x1, y1),\n            // and that has a different point tangent to the half-infinite line that ends at the point (x1, y1), and crosses the point (x2, y2).\n            // The points at which this circle touches these two lines are called the start and end tangent points respectively.\n            // note that both vectors are unit vectors, so the length is 1\n            var cos = unit_vec_p1_p0[0] * unit_vec_p1_p2[0] + unit_vec_p1_p0[1] * unit_vec_p1_p2[1];\n            var theta = Math.acos(Math.abs(cos));\n            // Calculate origin\n            var unit_vec_p1_origin = normalize([\n                unit_vec_p1_p0[0] + unit_vec_p1_p2[0],\n                unit_vec_p1_p0[1] + unit_vec_p1_p2[1]\n            ]);\n            var len_p1_origin = radius / Math.sin(theta / 2);\n            var x = x1 + len_p1_origin * unit_vec_p1_origin[0];\n            var y = y1 + len_p1_origin * unit_vec_p1_origin[1];\n            // Calculate start angle and end angle\n            // rotate 90deg clockwise (note that y axis points to its down)\n            var unit_vec_origin_start_tangent = [\n                -unit_vec_p1_p0[1],\n                unit_vec_p1_p0[0]\n            ];\n            // rotate 90deg counter clockwise (note that y axis points to its down)\n            var unit_vec_origin_end_tangent = [\n                unit_vec_p1_p2[1],\n                -unit_vec_p1_p2[0]\n            ];\n            var getAngle = function (vector) {\n                // get angle (clockwise) between vector and (1, 0)\n                var x = vector[0];\n                var y = vector[1];\n                if (y >= 0) {\n                    // note that y axis points to its down\n                    return Math.acos(x);\n                } else {\n                    return -Math.acos(x);\n                }\n            };\n            var startAngle = getAngle(unit_vec_origin_start_tangent);\n            var endAngle = getAngle(unit_vec_origin_end_tangent);\n            // Connect the point (x0, y0) to the start tangent point by a straight line\n            this.lineTo(x + unit_vec_origin_start_tangent[0] * radius, y + unit_vec_origin_start_tangent[1] * radius);\n            // Connect the start tangent point to the end tangent point by arc\n            // and adding the end tangent point to the subpath.\n            this.arc(x, y, radius, startAngle, endAngle);\n        };\n        /**\n     * Sets the stroke property on the current element\n     */\n        ctx.prototype.stroke = function () {\n            if (this.__currentElement.nodeName === 'path') {\n                this.__currentElement.setAttribute('paint-order', 'fill stroke markers');\n            }\n            this.__applyCurrentDefaultPath();\n            this.__applyStyleToCurrentElement('stroke');\n        };\n        /**\n     * Sets fill properties on the current element\n     */\n        ctx.prototype.fill = function () {\n            if (this.__currentElement.nodeName === 'path') {\n                this.__currentElement.setAttribute('paint-order', 'stroke fill markers');\n            }\n            this.__applyCurrentDefaultPath();\n            this.__applyStyleToCurrentElement('fill');\n        };\n        /**\n     *  Adds a rectangle to the path.\n     */\n        ctx.prototype.rect = function (x, y, width, height) {\n            if (this.__currentElement.nodeName !== 'path') {\n                this.beginPath();\n            }\n            this.moveTo(x, y);\n            this.lineTo(x + width, y);\n            this.lineTo(x + width, y + height);\n            this.lineTo(x, y + height);\n            this.lineTo(x, y);\n            this.closePath();\n        };\n        /**\n     * adds a rectangle element\n     */\n        ctx.prototype.fillRect = function (x, y, width, height) {\n            var rect, parent;\n            rect = this.__createElement('rect', {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }, true);\n            parent = this.__closestGroupOrSvg();\n            parent.appendChild(rect);\n            this.__currentElement = rect;\n            this.__applyStyleToCurrentElement('fill');\n        };\n        /**\n     * Draws a rectangle with no fill\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     */\n        ctx.prototype.strokeRect = function (x, y, width, height) {\n            var rect, parent;\n            rect = this.__createElement('rect', {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }, true);\n            parent = this.__closestGroupOrSvg();\n            parent.appendChild(rect);\n            this.__currentElement = rect;\n            this.__applyStyleToCurrentElement('stroke');\n        };\n        /**\n     * Clear entire canvas:\n     * 1. save current transforms\n     * 2. remove all the childNodes of the root g element\n     */\n        ctx.prototype.__clearCanvas = function () {\n            var current = this.__closestGroupOrSvg(), transform = current.getAttribute('transform');\n            var rootGroup = this.__root.childNodes[1];\n            var childNodes = rootGroup.childNodes;\n            for (var i = childNodes.length - 1; i >= 0; i--) {\n                if (childNodes[i]) {\n                    rootGroup.removeChild(childNodes[i]);\n                }\n            }\n            this.__currentElement = rootGroup;\n            //reset __groupStack as all the child group nodes are all removed.\n            this.__groupStack = [];\n            if (transform) {\n                this.__addTransform(transform);\n            }\n        };\n        /**\n     * \"Clears\" a canvas by just drawing a white rectangle in the current group.\n     */\n        ctx.prototype.clearRect = function (x, y, width, height) {\n            //clear entire canvas\n            if (x === 0 && y === 0 && width === this.width && height === this.height) {\n                this.__clearCanvas();\n                return;\n            }\n            var rect, parent = this.__closestGroupOrSvg();\n            rect = this.__createElement('rect', {\n                x: x,\n                y: y,\n                width: width,\n                height: height,\n                fill: '#FFFFFF'\n            }, true);\n            parent.appendChild(rect);\n        };\n        /**\n     * Adds a linear gradient to a defs tag.\n     * Returns a canvas gradient object that has a reference to it's parent def\n     */\n        ctx.prototype.createLinearGradient = function (x1, y1, x2, y2) {\n            var grad = this.__createElement('linearGradient', {\n                id: randomString(this.__ids),\n                x1: x1 + 'px',\n                x2: x2 + 'px',\n                y1: y1 + 'px',\n                y2: y2 + 'px',\n                'gradientUnits': 'userSpaceOnUse'\n            }, false);\n            this.__defs.appendChild(grad);\n            return new CanvasGradient(grad, this);\n        };\n        /**\n     * Adds a radial gradient to a defs tag.\n     * Returns a canvas gradient object that has a reference to it's parent def\n     */\n        ctx.prototype.createRadialGradient = function (x0, y0, r0, x1, y1, r1) {\n            var grad = this.__createElement('radialGradient', {\n                id: randomString(this.__ids),\n                cx: x1 + 'px',\n                cy: y1 + 'px',\n                r: r1 + 'px',\n                fx: x0 + 'px',\n                fy: y0 + 'px',\n                'gradientUnits': 'userSpaceOnUse'\n            }, false);\n            this.__defs.appendChild(grad);\n            return new CanvasGradient(grad, this);\n        };\n        /**\n     * Parses the font string and returns svg mapping\n     * @private\n     */\n        ctx.prototype.__parseFont = function () {\n            var regex = /^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-,\\'\\\"\\sa-z0-9]+?)\\s*$/i;\n            var fontPart = regex.exec(this.font);\n            var data = {\n                style: fontPart[1] || 'normal',\n                size: fontPart[4] || '10px',\n                family: fontPart[6] || 'sans-serif',\n                weight: fontPart[3] || 'normal',\n                decoration: fontPart[2] || 'normal',\n                href: null\n            };\n            //canvas doesn't support underline natively, but we can pass this attribute\n            if (this.__fontUnderline === 'underline') {\n                data.decoration = 'underline';\n            }\n            //canvas also doesn't support linking, but we can pass this as well\n            if (this.__fontHref) {\n                data.href = this.__fontHref;\n            }\n            return data;\n        };\n        /**\n     * Helper to link text fragments\n     * @param font\n     * @param element\n     * @return {*}\n     * @private\n     */\n        ctx.prototype.__wrapTextLink = function (font, element) {\n            if (font.href) {\n                var a = this.__createElement('a');\n                a.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', font.href);\n                a.appendChild(element);\n                return a;\n            }\n            return element;\n        };\n        /**\n     * Fills or strokes text\n     * @param text\n     * @param x\n     * @param y\n     * @param action - stroke or fill\n     * @private\n     */\n        ctx.prototype.__applyText = function (text, x, y, action) {\n            var font = this.__parseFont(), parent = this.__closestGroupOrSvg(), textElement = this.__createElement('text', {\n                    'font-family': font.family,\n                    'font-size': font.size,\n                    'font-style': font.style,\n                    'font-weight': font.weight,\n                    'text-decoration': font.decoration,\n                    'x': x,\n                    'y': y,\n                    'text-anchor': getTextAnchor(this.textAlign),\n                    'dominant-baseline': getDominantBaseline(this.textBaseline)\n                }, true);\n            textElement.appendChild(this.__document.createTextNode(text));\n            this.__currentElement = textElement;\n            this.__applyStyleToCurrentElement(action);\n            parent.appendChild(this.__wrapTextLink(font, textElement));\n        };\n        /**\n     * Creates a text element\n     * @param text\n     * @param x\n     * @param y\n     */\n        ctx.prototype.fillText = function (text, x, y) {\n            this.__applyText(text, x, y, 'fill');\n        };\n        /**\n     * Strokes text\n     * @param text\n     * @param x\n     * @param y\n     */\n        ctx.prototype.strokeText = function (text, x, y) {\n            this.__applyText(text, x, y, 'stroke');\n        };\n        /**\n     * No need to implement this for svg.\n     * @param text\n     * @return {TextMetrics}\n     */\n        ctx.prototype.measureText = function (text) {\n            this.__ctx.font = this.font;\n            return this.__ctx.measureText(text);\n        };\n        /**\n     *  Arc command!\n     */\n        ctx.prototype.arc = function (x, y, radius, startAngle, endAngle, counterClockwise) {\n            // in canvas no circle is drawn if no angle is provided.\n            if (startAngle === endAngle) {\n                return;\n            }\n            startAngle = startAngle % (2 * Math.PI);\n            endAngle = endAngle % (2 * Math.PI);\n            if (startAngle === endAngle) {\n                //circle time! subtract some of the angle so svg is happy (svg elliptical arc can't draw a full circle)\n                endAngle = (endAngle + 2 * Math.PI - 0.001 * (counterClockwise ? -1 : 1)) % (2 * Math.PI);\n            }\n            var endX = x + radius * Math.cos(endAngle), endY = y + radius * Math.sin(endAngle), startX = x + radius * Math.cos(startAngle), startY = y + radius * Math.sin(startAngle), sweepFlag = counterClockwise ? 0 : 1, largeArcFlag = 0, diff = endAngle - startAngle;\n            // https://github.com/gliffy/canvas2svg/issues/4\n            if (diff < 0) {\n                diff += 2 * Math.PI;\n            }\n            if (counterClockwise) {\n                largeArcFlag = diff > Math.PI ? 0 : 1;\n            } else {\n                largeArcFlag = diff > Math.PI ? 1 : 0;\n            }\n            this.lineTo(startX, startY);\n            this.__addPathCommand(format('A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}', {\n                rx: radius,\n                ry: radius,\n                xAxisRotation: 0,\n                largeArcFlag: largeArcFlag,\n                sweepFlag: sweepFlag,\n                endX: endX,\n                endY: endY\n            }));\n            this.__currentPosition = {\n                x: endX,\n                y: endY\n            };\n        };\n        /**\n     * Generates a ClipPath from the clip command.\n     */\n        ctx.prototype.clip = function () {\n            var group = this.__closestGroupOrSvg(), clipPath = this.__createElement('clipPath'), id = randomString(this.__ids), newGroup = this.__createElement('g');\n            this.__applyCurrentDefaultPath();\n            group.removeChild(this.__currentElement);\n            clipPath.setAttribute('id', id);\n            clipPath.appendChild(this.__currentElement);\n            this.__defs.appendChild(clipPath);\n            //set the clip path to this group\n            group.setAttribute('clip-path', format('url(#{id})', { id: id }));\n            //clip paths can be scaled and transformed, we need to add another wrapper group to avoid later transformations\n            // to this path\n            group.appendChild(newGroup);\n            this.__currentElement = newGroup;\n        };\n        /**\n     * Draws a canvas, image or mock context to this canvas.\n     * Note that all svg dom manipulation uses node.childNodes rather than node.children for IE support.\n     * http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-drawimage\n     */\n        ctx.prototype.drawImage = function () {\n            //convert arguments to a real array\n            var args = Array.prototype.slice.call(arguments), image = args[0], dx, dy, dw, dh, sx = 0, sy = 0, sw, sh, parent, svg, defs, group, currentElement, svgImage, canvas, context, id;\n            if (args.length === 3) {\n                dx = args[1];\n                dy = args[2];\n                sw = image.width;\n                sh = image.height;\n                dw = sw;\n                dh = sh;\n            } else if (args.length === 5) {\n                dx = args[1];\n                dy = args[2];\n                dw = args[3];\n                dh = args[4];\n                sw = image.width;\n                sh = image.height;\n            } else if (args.length === 9) {\n                sx = args[1];\n                sy = args[2];\n                sw = args[3];\n                sh = args[4];\n                dx = args[5];\n                dy = args[6];\n                dw = args[7];\n                dh = args[8];\n            } else {\n                throw new Error('Inavlid number of arguments passed to drawImage: ' + arguments.length);\n            }\n            parent = this.__closestGroupOrSvg();\n            currentElement = this.__currentElement;\n            var translateDirective = 'translate(' + dx + ', ' + dy + ')';\n            if (image instanceof ctx) {\n                //canvas2svg mock canvas context. In the future we may want to clone nodes instead.\n                //also I'm currently ignoring dw, dh, sw, sh, sx, sy for a mock context.\n                svg = image.getSvg().cloneNode(true);\n                if (svg.childNodes && svg.childNodes.length > 1) {\n                    defs = svg.childNodes[0];\n                    while (defs.childNodes.length) {\n                        id = defs.childNodes[0].getAttribute('id');\n                        this.__ids[id] = id;\n                        this.__defs.appendChild(defs.childNodes[0]);\n                    }\n                    group = svg.childNodes[1];\n                    if (group) {\n                        //save original transform\n                        var originTransform = group.getAttribute('transform');\n                        var transformDirective;\n                        if (originTransform) {\n                            transformDirective = originTransform + ' ' + translateDirective;\n                        } else {\n                            transformDirective = translateDirective;\n                        }\n                        group.setAttribute('transform', transformDirective);\n                        parent.appendChild(group);\n                    }\n                }\n            } else if (image.nodeName === 'IMG') {\n                svgImage = this.__createElement('image');\n                svgImage.setAttribute('width', dw);\n                svgImage.setAttribute('height', dh);\n                svgImage.setAttribute('preserveAspectRatio', 'none');\n                if (sx || sy || sw !== image.width || sh !== image.height) {\n                    //crop the image using a temporary canvas\n                    canvas = this.__document.createElement('canvas');\n                    canvas.width = dw;\n                    canvas.height = dh;\n                    context = canvas.getContext('2d');\n                    context.drawImage(image, sx, sy, sw, sh, 0, 0, dw, dh);\n                    image = canvas;\n                }\n                svgImage.setAttribute('transform', translateDirective);\n                svgImage.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', image.nodeName === 'CANVAS' ? image.toDataURL() : image.getAttribute('src'));\n                parent.appendChild(svgImage);\n            } else if (image.nodeName === 'CANVAS') {\n                svgImage = this.__createElement('image');\n                svgImage.setAttribute('width', dw);\n                svgImage.setAttribute('height', dh);\n                svgImage.setAttribute('preserveAspectRatio', 'none');\n                // draw canvas onto temporary canvas so that smoothing can be handled\n                canvas = this.__document.createElement('canvas');\n                canvas.width = dw;\n                canvas.height = dh;\n                context = canvas.getContext('2d');\n                context.imageSmoothingEnabled = false;\n                context.mozImageSmoothingEnabled = false;\n                context.oImageSmoothingEnabled = false;\n                context.webkitImageSmoothingEnabled = false;\n                context.drawImage(image, sx, sy, sw, sh, 0, 0, dw, dh);\n                image = canvas;\n                svgImage.setAttribute('transform', translateDirective);\n                svgImage.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', image.toDataURL());\n                parent.appendChild(svgImage);\n            }\n        };\n        /**\n     * Generates a pattern tag\n     */\n        ctx.prototype.createPattern = function (image, repetition) {\n            var pattern = this.__document.createElementNS('http://www.w3.org/2000/svg', 'pattern'), id = randomString(this.__ids), img;\n            pattern.setAttribute('id', id);\n            pattern.setAttribute('width', image.width);\n            pattern.setAttribute('height', image.height);\n            if (image.nodeName === 'CANVAS' || image.nodeName === 'IMG') {\n                img = this.__document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                img.setAttribute('width', image.width);\n                img.setAttribute('height', image.height);\n                img.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', image.nodeName === 'CANVAS' ? image.toDataURL() : image.getAttribute('src'));\n                pattern.appendChild(img);\n                this.__defs.appendChild(pattern);\n            } else if (image instanceof ctx) {\n                pattern.appendChild(image.__root.childNodes[1]);\n                this.__defs.appendChild(pattern);\n            }\n            return new CanvasPattern(pattern, this);\n        };\n        ctx.prototype.setLineDash = function (dashArray) {\n            if (dashArray && dashArray.length > 0) {\n                this.lineDash = dashArray.join(',');\n            } else {\n                this.lineDash = null;\n            }\n        };\n        /**\n     * Not yet implemented\n     */\n        ctx.prototype.drawFocusRing = function () {\n        };\n        ctx.prototype.createImageData = function () {\n        };\n        ctx.prototype.getImageData = function () {\n        };\n        ctx.prototype.putImageData = function () {\n        };\n        ctx.prototype.globalCompositeOperation = function () {\n        };\n        ctx.prototype.setTransform = function () {\n        };\n        //add options for alternative namespace\n        if (typeof window === 'object') {\n            window.C2S = ctx;\n        }\n        // CommonJS/Browserify\n        if (typeof module === 'object' && typeof module.exports === 'object') {\n            module.exports = ctx;\n        }\n    }());\n}","/*d/auto-bind*/\nfunction _(require, module, exports) {\n    var copy = require(273    /* es5-ext/object/copy */), normalizeOptions = require(283    /* es5-ext/object/normalize-options */), ensureCallable = require(287    /* es5-ext/object/valid-callable */), map = require(282    /* es5-ext/object/map */), callable = require(287    /* es5-ext/object/valid-callable */), validValue = require(289    /* es5-ext/object/valid-value */), bind = Function.prototype.bind, defineProperty = Object.defineProperty, hasOwnProperty = Object.prototype.hasOwnProperty, define;\n    define = function (name, desc, options) {\n        var value = validValue(desc) && callable(desc.value), dgs;\n        dgs = copy(desc);\n        delete dgs.writable;\n        delete dgs.value;\n        dgs.get = function () {\n            if (!options.overwriteDefinition && hasOwnProperty.call(this, name))\n                return value;\n            desc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n            defineProperty(this, name, desc);\n            return this[name];\n        };\n        return dgs;\n    };\n    module.exports = function (props) {\n        var options = normalizeOptions(arguments[1]);\n        if (options.resolveContext != null)\n            ensureCallable(options.resolveContext);\n        return map(props, function (desc, name) {\n            return define(name, desc, options);\n        });\n    };\n}","/*d/index*/\nfunction _(require, module, exports) {\n    var assign = require(270    /* es5-ext/object/assign */), normalizeOpts = require(283    /* es5-ext/object/normalize-options */), isCallable = require(276    /* es5-ext/object/is-callable */), contains = require(290    /* es5-ext/string/#/contains */), d;\n    d = module.exports = function (dscr, value) {\n        var c, e, w, options, desc;\n        if (arguments.length < 2 || typeof dscr !== 'string') {\n            options = value;\n            value = dscr;\n            dscr = null;\n        } else {\n            options = arguments[2];\n        }\n        if (dscr == null) {\n            c = w = true;\n            e = false;\n        } else {\n            c = contains.call(dscr, 'c');\n            e = contains.call(dscr, 'e');\n            w = contains.call(dscr, 'w');\n        }\n        desc = {\n            value: value,\n            configurable: c,\n            enumerable: e,\n            writable: w\n        };\n        return !options ? desc : assign(normalizeOpts(options), desc);\n    };\n    d.gs = function (dscr, get, set) {\n        var c, e, options, desc;\n        if (typeof dscr !== 'string') {\n            options = set;\n            set = get;\n            get = dscr;\n            dscr = null;\n        } else {\n            options = arguments[3];\n        }\n        if (get == null) {\n            get = undefined;\n        } else if (!isCallable(get)) {\n            options = get;\n            get = set = undefined;\n        } else if (set == null) {\n            set = undefined;\n        } else if (!isCallable(set)) {\n            options = set;\n            set = undefined;\n        }\n        if (dscr == null) {\n            c = true;\n            e = false;\n        } else {\n            c = contains.call(dscr, 'c');\n            e = contains.call(dscr, 'e');\n        }\n        desc = {\n            get: get,\n            set: set,\n            configurable: c,\n            enumerable: e\n        };\n        return !options ? desc : assign(normalizeOpts(options), desc);\n    };\n}","// Inspired by Google Closure:\n// http://closure-library.googlecode.com/svn/docs/\n// closure_goog_array_array.js.html#goog.array.clear\n/*es5-ext/array/#/clear*/\nfunction _(require, module, exports) {\n    var value = require(289    /* ../../object/valid-value */);\n    module.exports = function () {\n        value(this).length = 0;\n        return this;\n    };\n}","/*es5-ext/array/#/e-index-of*/\nfunction _(require, module, exports) {\n    var numberIsNaN = require(264    /* ../../number/is-nan */), toPosInt = require(268    /* ../../number/to-pos-integer */), value = require(289    /* ../../object/valid-value */), indexOf = Array.prototype.indexOf, objHasOwnProperty = Object.prototype.hasOwnProperty, abs = Math.abs, floor = Math.floor;\n    module.exports = function (searchElement) {\n        var i, length, fromIndex, val;\n        if (!numberIsNaN(searchElement))\n            return indexOf.apply(this, arguments);\n        length = toPosInt(value(this).length);\n        fromIndex = arguments[1];\n        if (isNaN(fromIndex))\n            fromIndex = 0;\n        else if (fromIndex >= 0)\n            fromIndex = floor(fromIndex);\n        else\n            fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n        for (i = fromIndex; i < length; ++i) {\n            if (objHasOwnProperty.call(this, i)) {\n                val = this[i];\n                if (numberIsNaN(val))\n                    return i;    // Jslint: ignore\n            }\n        }\n        return -1;\n    };\n}","/*es5-ext/array/from/index*/\nfunction _(require, module, exports) {\n    module.exports = require(255    /* ./is-implemented */)() ? Array.from : require(256    /* ./shim */);\n}","/*es5-ext/array/from/is-implemented*/\nfunction _(require, module, exports) {\n    module.exports = function () {\n        var from = Array.from, arr, result;\n        if (typeof from !== 'function')\n            return false;\n        arr = [\n            'raz',\n            'dwa'\n        ];\n        result = from(arr);\n        return Boolean(result && result !== arr && result[1] === 'dwa');\n    };\n}","/*es5-ext/array/from/shim*/\nfunction _(require, module, exports) {\n    var iteratorSymbol = require(308    /* es6-symbol */).iterator, isArguments = require(257    /* ../../function/is-arguments */), isFunction = require(258    /* ../../function/is-function */), toPosInt = require(268    /* ../../number/to-pos-integer */), callable = require(287    /* ../../object/valid-callable */), validValue = require(289    /* ../../object/valid-value */), isValue = require(278    /* ../../object/is-value */), isString = require(293    /* ../../string/is-string */), isArray = Array.isArray, call = Function.prototype.call, desc = {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: null\n        }, defineProperty = Object.defineProperty;\n    // eslint-disable-next-line complexity\n    module.exports = function (arrayLike) {\n        var mapFn = arguments[1], thisArg = arguments[2], Context, i, j, arr, length, code, iterator, result, getIterator, value;\n        arrayLike = Object(validValue(arrayLike));\n        if (isValue(mapFn))\n            callable(mapFn);\n        if (!this || this === Array || !isFunction(this)) {\n            // Result: Plain array\n            if (!mapFn) {\n                if (isArguments(arrayLike)) {\n                    // Source: Arguments\n                    length = arrayLike.length;\n                    if (length !== 1)\n                        return Array.apply(null, arrayLike);\n                    arr = new Array(1);\n                    arr[0] = arrayLike[0];\n                    return arr;\n                }\n                if (isArray(arrayLike)) {\n                    // Source: Array\n                    arr = new Array(length = arrayLike.length);\n                    for (i = 0; i < length; ++i)\n                        arr[i] = arrayLike[i];\n                    return arr;\n                }\n            }\n            arr = [];\n        } else {\n            // Result: Non plain array\n            Context = this;\n        }\n        if (!isArray(arrayLike)) {\n            if ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n                // Source: Iterator\n                iterator = callable(getIterator).call(arrayLike);\n                if (Context)\n                    arr = new Context();\n                result = iterator.next();\n                i = 0;\n                while (!result.done) {\n                    value = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n                    if (Context) {\n                        desc.value = value;\n                        defineProperty(arr, i, desc);\n                    } else {\n                        arr[i] = value;\n                    }\n                    result = iterator.next();\n                    ++i;\n                }\n                length = i;\n            } else if (isString(arrayLike)) {\n                // Source: String\n                length = arrayLike.length;\n                if (Context)\n                    arr = new Context();\n                for (i = 0, j = 0; i < length; ++i) {\n                    value = arrayLike[i];\n                    if (i + 1 < length) {\n                        code = value.charCodeAt(0);\n                        // eslint-disable-next-line max-depth\n                        if (code >= 55296 && code <= 56319)\n                            value += arrayLike[++i];\n                    }\n                    value = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n                    if (Context) {\n                        desc.value = value;\n                        defineProperty(arr, j, desc);\n                    } else {\n                        arr[j] = value;\n                    }\n                    ++j;\n                }\n                length = j;\n            }\n        }\n        if (length === undefined) {\n            // Source: array or array-like\n            length = toPosInt(arrayLike.length);\n            if (Context)\n                arr = new Context(length);\n            for (i = 0; i < length; ++i) {\n                value = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n                if (Context) {\n                    desc.value = value;\n                    defineProperty(arr, i, desc);\n                } else {\n                    arr[i] = value;\n                }\n            }\n        }\n        if (Context) {\n            desc.value = null;\n            arr.length = length;\n        }\n        return arr;\n    };\n}","/*es5-ext/function/is-arguments*/\nfunction _(require, module, exports) {\n    var objToString = Object.prototype.toString, id = objToString.call(function () {\n            return arguments;\n        }());\n    module.exports = function (value) {\n        return objToString.call(value) === id;\n    };\n}","/*es5-ext/function/is-function*/\nfunction _(require, module, exports) {\n    var objToString = Object.prototype.toString, id = objToString.call(require(259    /* ./noop */));\n    module.exports = function (value) {\n        return typeof value === 'function' && objToString.call(value) === id;\n    };\n}","/*es5-ext/function/noop*/\nfunction _(require, module, exports) {\n    // eslint-disable-next-line no-empty-function\n    module.exports = function () {\n    };\n}","/* eslint strict: \"off\" */\n/*es5-ext/global*/\nfunction _(require, module, exports) {\n    module.exports = function () {\n        return this;\n    }();\n}","/*es5-ext/math/sign/index*/\nfunction _(require, module, exports) {\n    module.exports = require(262    /* ./is-implemented */)() ? Math.sign : require(263    /* ./shim */);\n}","/*es5-ext/math/sign/is-implemented*/\nfunction _(require, module, exports) {\n    module.exports = function () {\n        var sign = Math.sign;\n        if (typeof sign !== 'function')\n            return false;\n        return sign(10) === 1 && sign(-20) === -1;\n    };\n}","/*es5-ext/math/sign/shim*/\nfunction _(require, module, exports) {\n    module.exports = function (value) {\n        value = Number(value);\n        if (isNaN(value) || value === 0)\n            return value;\n        return value > 0 ? 1 : -1;\n    };\n}","/*es5-ext/number/is-nan/index*/\nfunction _(require, module, exports) {\n    module.exports = require(265    /* ./is-implemented */)() ? Number.isNaN : require(266    /* ./shim */);\n}","/*es5-ext/number/is-nan/is-implemented*/\nfunction _(require, module, exports) {\n    module.exports = function () {\n        var numberIsNaN = Number.isNaN;\n        if (typeof numberIsNaN !== 'function')\n            return false;\n        return !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);\n    };\n}","/*es5-ext/number/is-nan/shim*/\nfunction _(require, module, exports) {\n    module.exports = function (value) {\n        // eslint-disable-next-line no-self-compare\n        return value !== value;\n    };\n}","/*es5-ext/number/to-integer*/\nfunction _(require, module, exports) {\n    var sign = require(261    /* ../math/sign */), abs = Math.abs, floor = Math.floor;\n    module.exports = function (value) {\n        if (isNaN(value))\n            return 0;\n        value = Number(value);\n        if (value === 0 || !isFinite(value))\n            return value;\n        return sign(value) * floor(abs(value));\n    };\n}","/*es5-ext/number/to-pos-integer*/\nfunction _(require, module, exports) {\n    var toInteger = require(267    /* ./to-integer */), max = Math.max;\n    module.exports = function (value) {\n        return max(0, toInteger(value));\n    };\n}","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n/*es5-ext/object/_iterate*/\nfunction _(require, module, exports) {\n    var callable = require(287    /* ./valid-callable */), value = require(289    /* ./valid-value */), bind = Function.prototype.bind, call = Function.prototype.call, keys = Object.keys, objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n    module.exports = function (method, defVal) {\n        return function (obj, cb) {\n            var list, thisArg = arguments[2], compareFn = arguments[3];\n            obj = Object(value(obj));\n            callable(cb);\n            list = keys(obj);\n            if (compareFn) {\n                list.sort(typeof compareFn === 'function' ? bind.call(compareFn, obj) : undefined);\n            }\n            if (typeof method !== 'function')\n                method = list[method];\n            return call.call(method, list, function (key, index) {\n                if (!objPropertyIsEnumerable.call(obj, key))\n                    return defVal;\n                return call.call(cb, thisArg, obj[key], key, obj, index);\n            });\n        };\n    };\n}","/*es5-ext/object/assign/index*/\nfunction _(require, module, exports) {\n    module.exports = require(271    /* ./is-implemented */)() ? Object.assign : require(272    /* ./shim */);\n}","/*es5-ext/object/assign/is-implemented*/\nfunction _(require, module, exports) {\n    module.exports = function () {\n        var assign = Object.assign, obj;\n        if (typeof assign !== 'function')\n            return false;\n        obj = { foo: 'raz' };\n        assign(obj, { bar: 'dwa' }, { trzy: 'trzy' });\n        return obj.foo + obj.bar + obj.trzy === 'razdwatrzy';\n    };\n}","/*es5-ext/object/assign/shim*/\nfunction _(require, module, exports) {\n    var keys = require(279    /* ../keys */), value = require(289    /* ../valid-value */), max = Math.max;\n    module.exports = function (dest, src) {\n        var error, i, length = max(arguments.length, 2), assign;\n        dest = Object(value(dest));\n        assign = function (key) {\n            try {\n                dest[key] = src[key];\n            } catch (e) {\n                if (!error)\n                    error = e;\n            }\n        };\n        for (i = 1; i < length; ++i) {\n            src = arguments[i];\n            keys(src).forEach(assign);\n        }\n        if (error !== undefined)\n            throw error;\n        return dest;\n    };\n}","/*es5-ext/object/copy*/\nfunction _(require, module, exports) {\n    var aFrom = require(254    /* ../array/from */), assign = require(270    /* ./assign */), value = require(289    /* ./valid-value */);\n    module.exports = function (obj) {\n        var copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);\n        if (copy !== obj && !propertyNames)\n            return copy;\n        var result = {};\n        if (propertyNames) {\n            aFrom(propertyNames, function (propertyName) {\n                if (options.ensure || propertyName in obj)\n                    result[propertyName] = obj[propertyName];\n            });\n        } else {\n            assign(result, obj);\n        }\n        return result;\n    };\n}","// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n/*es5-ext/object/create*/\nfunction _(require, module, exports) {\n    var create = Object.create, shim;\n    if (!require(285    /* ./set-prototype-of/is-implemented */)()) {\n        shim = require(286    /* ./set-prototype-of/shim */);\n    }\n    module.exports = function () {\n        var nullObject, polyProps, desc;\n        if (!shim)\n            return create;\n        if (shim.level !== 1)\n            return create;\n        nullObject = {};\n        polyProps = {};\n        desc = {\n            configurable: false,\n            enumerable: false,\n            writable: true,\n            value: undefined\n        };\n        Object.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n            if (name === '__proto__') {\n                polyProps[name] = {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: undefined\n                };\n                return;\n            }\n            polyProps[name] = desc;\n        });\n        Object.defineProperties(nullObject, polyProps);\n        Object.defineProperty(shim, 'nullPolyfill', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: nullObject\n        });\n        return function (prototype, props) {\n            return create(prototype === null ? nullObject : prototype, props);\n        };\n    }();\n}","/*es5-ext/object/for-each*/\nfunction _(require, module, exports) {\n    module.exports = require(269    /* ./_iterate */)('forEach');\n}","// Deprecated\n/*es5-ext/object/is-callable*/\nfunction _(require, module, exports) {\n    module.exports = function (obj) {\n        return typeof obj === 'function';\n    };\n}","/*es5-ext/object/is-object*/\nfunction _(require, module, exports) {\n    var isValue = require(278    /* ./is-value */);\n    var map = {\n        function: true,\n        object: true\n    };\n    module.exports = function (value) {\n        return isValue(value) && map[typeof value] || false;\n    };\n}","/*es5-ext/object/is-value*/\nfunction _(require, module, exports) {\n    var _undefined = require(259    /* ../function/noop */)();\n    // Support ES3 engines\n    module.exports = function (val) {\n        return val !== _undefined && val !== null;\n    };\n}","/*es5-ext/object/keys/index*/\nfunction _(require, module, exports) {\n    module.exports = require(280    /* ./is-implemented */)() ? Object.keys : require(281    /* ./shim */);\n}","/*es5-ext/object/keys/is-implemented*/\nfunction _(require, module, exports) {\n    module.exports = function () {\n        try {\n            Object.keys('primitive');\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n}","/*es5-ext/object/keys/shim*/\nfunction _(require, module, exports) {\n    var isValue = require(278    /* ../is-value */);\n    var keys = Object.keys;\n    module.exports = function (object) {\n        return keys(isValue(object) ? Object(object) : object);\n    };\n}","/*es5-ext/object/map*/\nfunction _(require, module, exports) {\n    var callable = require(287    /* ./valid-callable */), forEach = require(275    /* ./for-each */), call = Function.prototype.call;\n    module.exports = function (obj, cb) {\n        var result = {}, thisArg = arguments[2];\n        callable(cb);\n        forEach(obj, function (value, key, targetObj, index) {\n            result[key] = call.call(cb, thisArg, value, key, targetObj, index);\n        });\n        return result;\n    };\n}","/*es5-ext/object/normalize-options*/\nfunction _(require, module, exports) {\n    var isValue = require(278    /* ./is-value */);\n    var forEach = Array.prototype.forEach, create = Object.create;\n    var process = function (src, obj) {\n        var key;\n        for (key in src)\n            obj[key] = src[key];\n    };\n    // eslint-disable-next-line no-unused-vars\n    module.exports = function (opts1) {\n        var result = create(null);\n        forEach.call(arguments, function (options) {\n            if (!isValue(options))\n                return;\n            process(Object(options), result);\n        });\n        return result;\n    };\n}","/*es5-ext/object/set-prototype-of/index*/\nfunction _(require, module, exports) {\n    module.exports = require(285    /* ./is-implemented */)() ? Object.setPrototypeOf : require(286    /* ./shim */);\n}","/*es5-ext/object/set-prototype-of/is-implemented*/\nfunction _(require, module, exports) {\n    var create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n    module.exports = function () {\n        var setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n        if (typeof setPrototypeOf !== 'function')\n            return false;\n        return getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n    };\n}","/* eslint no-proto: \"off\" */\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n/*es5-ext/object/set-prototype-of/shim*/\nfunction _(require, module, exports) {\n    var isObject = require(277    /* ../is-object */), value = require(289    /* ../valid-value */), objIsPrototypeOf = Object.prototype.isPrototypeOf, defineProperty = Object.defineProperty, nullDesc = {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: undefined\n        }, validate;\n    validate = function (obj, prototype) {\n        value(obj);\n        if (prototype === null || isObject(prototype))\n            return obj;\n        throw new TypeError('Prototype must be null or an object');\n    };\n    module.exports = function (status) {\n        var fn, set;\n        if (!status)\n            return null;\n        if (status.level === 2) {\n            if (status.set) {\n                set = status.set;\n                fn = function (obj, prototype) {\n                    set.call(validate(obj, prototype), prototype);\n                    return obj;\n                };\n            } else {\n                fn = function (obj, prototype) {\n                    validate(obj, prototype).__proto__ = prototype;\n                    return obj;\n                };\n            }\n        } else {\n            fn = function self(obj, prototype) {\n                var isNullBase;\n                validate(obj, prototype);\n                isNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);\n                if (isNullBase)\n                    delete self.nullPolyfill.__proto__;\n                if (prototype === null)\n                    prototype = self.nullPolyfill;\n                obj.__proto__ = prototype;\n                if (isNullBase)\n                    defineProperty(self.nullPolyfill, '__proto__', nullDesc);\n                return obj;\n            };\n        }\n        return Object.defineProperty(fn, 'level', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: status.level\n        });\n    }(function () {\n        var tmpObj1 = Object.create(null), tmpObj2 = {}, set, desc = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__');\n        if (desc) {\n            try {\n                set = desc.set;\n                // Opera crashes at this point\n                set.call(tmpObj1, tmpObj2);\n            } catch (ignore) {\n            }\n            if (Object.getPrototypeOf(tmpObj1) === tmpObj2)\n                return {\n                    set: set,\n                    level: 2\n                };\n        }\n        tmpObj1.__proto__ = tmpObj2;\n        if (Object.getPrototypeOf(tmpObj1) === tmpObj2)\n            return { level: 2 };\n        tmpObj1 = {};\n        tmpObj1.__proto__ = tmpObj2;\n        if (Object.getPrototypeOf(tmpObj1) === tmpObj2)\n            return { level: 1 };\n        return false;\n    }());\n    require(274    /* ../create */);\n}","/*es5-ext/object/valid-callable*/\nfunction _(require, module, exports) {\n    module.exports = function (fn) {\n        if (typeof fn !== 'function')\n            throw new TypeError(fn + ' is not a function');\n        return fn;\n    };\n}","/*es5-ext/object/valid-object*/\nfunction _(require, module, exports) {\n    var isObject = require(277    /* ./is-object */);\n    module.exports = function (value) {\n        if (!isObject(value))\n            throw new TypeError(value + ' is not an Object');\n        return value;\n    };\n}","/*es5-ext/object/valid-value*/\nfunction _(require, module, exports) {\n    var isValue = require(278    /* ./is-value */);\n    module.exports = function (value) {\n        if (!isValue(value))\n            throw new TypeError('Cannot use null or undefined');\n        return value;\n    };\n}","/*es5-ext/string/#/contains/index*/\nfunction _(require, module, exports) {\n    module.exports = require(291    /* ./is-implemented */)() ? String.prototype.contains : require(292    /* ./shim */);\n}","/*es5-ext/string/#/contains/is-implemented*/\nfunction _(require, module, exports) {\n    var str = 'razdwatrzy';\n    module.exports = function () {\n        if (typeof str.contains !== 'function')\n            return false;\n        return str.contains('dwa') === true && str.contains('foo') === false;\n    };\n}","/*es5-ext/string/#/contains/shim*/\nfunction _(require, module, exports) {\n    var indexOf = String.prototype.indexOf;\n    module.exports = function (searchString) {\n        return indexOf.call(this, searchString, arguments[1]) > -1;\n    };\n}","/*es5-ext/string/is-string*/\nfunction _(require, module, exports) {\n    var objToString = Object.prototype.toString, id = objToString.call('');\n    module.exports = function (value) {\n        return typeof value === 'string' || value && typeof value === 'object' && (value instanceof String || objToString.call(value) === id) || false;\n    };\n}","/*es5-ext/string/random-uniq*/\nfunction _(require, module, exports) {\n    var generated = Object.create(null), random = Math.random;\n    module.exports = function () {\n        var str;\n        do {\n            str = random().toString(36).slice(2);\n        } while (generated[str]);\n        return str;\n    };\n}","/*es6-iterator/array*/\nfunction _(require, module, exports) {\n    var setPrototypeOf = require(284    /* es5-ext/object/set-prototype-of */), contains = require(290    /* es5-ext/string/#/contains */), d = require(251    /* d */), Symbol = require(308    /* es6-symbol */), Iterator = require(298    /* ./ */);\n    var defineProperty = Object.defineProperty, ArrayIterator;\n    ArrayIterator = module.exports = function (arr, kind) {\n        if (!(this instanceof ArrayIterator))\n            throw new TypeError('Constructor requires \\'new\\'');\n        Iterator.call(this, arr);\n        if (!kind)\n            kind = 'value';\n        else if (contains.call(kind, 'key+value'))\n            kind = 'key+value';\n        else if (contains.call(kind, 'key'))\n            kind = 'key';\n        else\n            kind = 'value';\n        defineProperty(this, '__kind__', d('', kind));\n    };\n    if (setPrototypeOf)\n        setPrototypeOf(ArrayIterator, Iterator);\n    // Internal %ArrayIteratorPrototype% doesn't expose its constructor\n    delete ArrayIterator.prototype.constructor;\n    ArrayIterator.prototype = Object.create(Iterator.prototype, {\n        _resolve: d(function (i) {\n            if (this.__kind__ === 'value')\n                return this.__list__[i];\n            if (this.__kind__ === 'key+value')\n                return [\n                    i,\n                    this.__list__[i]\n                ];\n            return i;\n        })\n    });\n    defineProperty(ArrayIterator.prototype, Symbol.toStringTag, d('c', 'Array Iterator'));\n}","/*es6-iterator/for-of*/\nfunction _(require, module, exports) {\n    var isArguments = require(257    /* es5-ext/function/is-arguments */), callable = require(287    /* es5-ext/object/valid-callable */), isString = require(293    /* es5-ext/string/is-string */), get = require(297    /* ./get */);\n    var isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n    module.exports = function (iterable, cb) {\n        var mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n        if (isArray(iterable) || isArguments(iterable))\n            mode = 'array';\n        else if (isString(iterable))\n            mode = 'string';\n        else\n            iterable = get(iterable);\n        callable(cb);\n        doBreak = function () {\n            broken = true;\n        };\n        if (mode === 'array') {\n            some.call(iterable, function (value) {\n                call.call(cb, thisArg, value, doBreak);\n                return broken;\n            });\n            return;\n        }\n        if (mode === 'string') {\n            length = iterable.length;\n            for (i = 0; i < length; ++i) {\n                char = iterable[i];\n                if (i + 1 < length) {\n                    code = char.charCodeAt(0);\n                    if (code >= 55296 && code <= 56319)\n                        char += iterable[++i];\n                }\n                call.call(cb, thisArg, char, doBreak);\n                if (broken)\n                    break;\n            }\n            return;\n        }\n        result = iterable.next();\n        while (!result.done) {\n            call.call(cb, thisArg, result.value, doBreak);\n            if (broken)\n                return;\n            result = iterable.next();\n        }\n    };\n}","/*es6-iterator/get*/\nfunction _(require, module, exports) {\n    var isArguments = require(257    /* es5-ext/function/is-arguments */), isString = require(293    /* es5-ext/string/is-string */), ArrayIterator = require(295    /* ./array */), StringIterator = require(300    /* ./string */), iterable = require(301    /* ./valid-iterable */), iteratorSymbol = require(308    /* es6-symbol */).iterator;\n    module.exports = function (obj) {\n        if (typeof iterable(obj)[iteratorSymbol] === 'function')\n            return obj[iteratorSymbol]();\n        if (isArguments(obj))\n            return new ArrayIterator(obj);\n        if (isString(obj))\n            return new StringIterator(obj);\n        return new ArrayIterator(obj);\n    };\n}","/*es6-iterator/index*/\nfunction _(require, module, exports) {\n    var clear = require(252    /* es5-ext/array/#/clear */), assign = require(270    /* es5-ext/object/assign */), callable = require(287    /* es5-ext/object/valid-callable */), value = require(289    /* es5-ext/object/valid-value */), d = require(251    /* d */), autoBind = require(250    /* d/auto-bind */), Symbol = require(308    /* es6-symbol */);\n    var defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;\n    module.exports = Iterator = function (list, context) {\n        if (!(this instanceof Iterator))\n            throw new TypeError('Constructor requires \\'new\\'');\n        defineProperties(this, {\n            __list__: d('w', value(list)),\n            __context__: d('w', context),\n            __nextIndex__: d('w', 0)\n        });\n        if (!context)\n            return;\n        callable(context.on);\n        context.on('_add', this._onAdd);\n        context.on('_delete', this._onDelete);\n        context.on('_clear', this._onClear);\n    };\n    // Internal %IteratorPrototype% doesn't expose its constructor\n    delete Iterator.prototype.constructor;\n    defineProperties(Iterator.prototype, assign({\n        _next: d(function () {\n            var i;\n            if (!this.__list__)\n                return undefined;\n            if (this.__redo__) {\n                i = this.__redo__.shift();\n                if (i !== undefined)\n                    return i;\n            }\n            if (this.__nextIndex__ < this.__list__.length)\n                return this.__nextIndex__++;\n            this._unBind();\n            return undefined;\n        }),\n        next: d(function () {\n            return this._createResult(this._next());\n        }),\n        _createResult: d(function (i) {\n            if (i === undefined)\n                return {\n                    done: true,\n                    value: undefined\n                };\n            return {\n                done: false,\n                value: this._resolve(i)\n            };\n        }),\n        _resolve: d(function (i) {\n            return this.__list__[i];\n        }),\n        _unBind: d(function () {\n            this.__list__ = null;\n            delete this.__redo__;\n            if (!this.__context__)\n                return;\n            this.__context__.off('_add', this._onAdd);\n            this.__context__.off('_delete', this._onDelete);\n            this.__context__.off('_clear', this._onClear);\n            this.__context__ = null;\n        }),\n        toString: d(function () {\n            return '[object ' + (this[Symbol.toStringTag] || 'Object') + ']';\n        })\n    }, autoBind({\n        _onAdd: d(function (index) {\n            if (index >= this.__nextIndex__)\n                return;\n            ++this.__nextIndex__;\n            if (!this.__redo__) {\n                defineProperty(this, '__redo__', d('c', [index]));\n                return;\n            }\n            this.__redo__.forEach(function (redo, i) {\n                if (redo >= index)\n                    this.__redo__[i] = ++redo;\n            }, this);\n            this.__redo__.push(index);\n        }),\n        _onDelete: d(function (index) {\n            var i;\n            if (index >= this.__nextIndex__)\n                return;\n            --this.__nextIndex__;\n            if (!this.__redo__)\n                return;\n            i = this.__redo__.indexOf(index);\n            if (i !== -1)\n                this.__redo__.splice(i, 1);\n            this.__redo__.forEach(function (redo, j) {\n                if (redo > index)\n                    this.__redo__[j] = --redo;\n            }, this);\n        }),\n        _onClear: d(function () {\n            if (this.__redo__)\n                clear.call(this.__redo__);\n            this.__nextIndex__ = 0;\n        })\n    })));\n    defineProperty(Iterator.prototype, Symbol.iterator, d(function () {\n        return this;\n    }));\n}","/*es6-iterator/is-iterable*/\nfunction _(require, module, exports) {\n    var isArguments = require(257    /* es5-ext/function/is-arguments */), isValue = require(278    /* es5-ext/object/is-value */), isString = require(293    /* es5-ext/string/is-string */);\n    var iteratorSymbol = require(308    /* es6-symbol */).iterator, isArray = Array.isArray;\n    module.exports = function (value) {\n        if (!isValue(value))\n            return false;\n        if (isArray(value))\n            return true;\n        if (isString(value))\n            return true;\n        if (isArguments(value))\n            return true;\n        return typeof value[iteratorSymbol] === 'function';\n    };\n}","// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n/*es6-iterator/string*/\nfunction _(require, module, exports) {\n    var setPrototypeOf = require(284    /* es5-ext/object/set-prototype-of */), d = require(251    /* d */), Symbol = require(308    /* es6-symbol */), Iterator = require(298    /* ./ */);\n    var defineProperty = Object.defineProperty, StringIterator;\n    StringIterator = module.exports = function (str) {\n        if (!(this instanceof StringIterator))\n            throw new TypeError('Constructor requires \\'new\\'');\n        str = String(str);\n        Iterator.call(this, str);\n        defineProperty(this, '__length__', d('', str.length));\n    };\n    if (setPrototypeOf)\n        setPrototypeOf(StringIterator, Iterator);\n    // Internal %ArrayIteratorPrototype% doesn't expose its constructor\n    delete StringIterator.prototype.constructor;\n    StringIterator.prototype = Object.create(Iterator.prototype, {\n        _next: d(function () {\n            if (!this.__list__)\n                return undefined;\n            if (this.__nextIndex__ < this.__length__)\n                return this.__nextIndex__++;\n            this._unBind();\n            return undefined;\n        }),\n        _resolve: d(function (i) {\n            var char = this.__list__[i], code;\n            if (this.__nextIndex__ === this.__length__)\n                return char;\n            code = char.charCodeAt(0);\n            if (code >= 55296 && code <= 56319)\n                return char + this.__list__[this.__nextIndex__++];\n            return char;\n        })\n    });\n    defineProperty(StringIterator.prototype, Symbol.toStringTag, d('c', 'String Iterator'));\n}","/*es6-iterator/valid-iterable*/\nfunction _(require, module, exports) {\n    var isIterable = require(299    /* ./is-iterable */);\n    module.exports = function (value) {\n        if (!isIterable(value))\n            throw new TypeError(value + ' is not iterable');\n        return value;\n    };\n}","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   3.0.2\n */\n/*es6-promise/dist/es6-promise*/\nfunction _(require, module, exports) {\n    (function () {\n        'use strict';\n        function lib$es6$promise$utils$$objectOrFunction(x) {\n            return typeof x === 'function' || typeof x === 'object' && x !== null;\n        }\n        function lib$es6$promise$utils$$isFunction(x) {\n            return typeof x === 'function';\n        }\n        function lib$es6$promise$utils$$isMaybeThenable(x) {\n            return typeof x === 'object' && x !== null;\n        }\n        var lib$es6$promise$utils$$_isArray;\n        if (!Array.isArray) {\n            lib$es6$promise$utils$$_isArray = function (x) {\n                return Object.prototype.toString.call(x) === '[object Array]';\n            };\n        } else {\n            lib$es6$promise$utils$$_isArray = Array.isArray;\n        }\n        var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n        var lib$es6$promise$asap$$len = 0;\n        var lib$es6$promise$asap$$toString = {}.toString;\n        var lib$es6$promise$asap$$vertxNext;\n        var lib$es6$promise$asap$$customSchedulerFn;\n        var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n            lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n            lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n            lib$es6$promise$asap$$len += 2;\n            if (lib$es6$promise$asap$$len === 2) {\n                // If len is 2, that means that we need to schedule an async flush.\n                // If additional callbacks are queued before the queue is flushed, they\n                // will be processed by this flush that we are scheduling.\n                if (lib$es6$promise$asap$$customSchedulerFn) {\n                    lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n                } else {\n                    lib$es6$promise$asap$$scheduleFlush();\n                }\n            }\n        };\n        function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n            lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n        }\n        function lib$es6$promise$asap$$setAsap(asapFn) {\n            lib$es6$promise$asap$$asap = asapFn;\n        }\n        var lib$es6$promise$asap$$browserWindow = typeof window !== 'undefined' ? window : undefined;\n        var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n        var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n        var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n        // test for web worker but not in IE10\n        var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n        // node\n        function lib$es6$promise$asap$$useNextTick() {\n            // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n            // see https://github.com/cujojs/when/issues/410 for details\n            return function () {\n                process.nextTick(lib$es6$promise$asap$$flush);\n            };\n        }\n        // vertx\n        function lib$es6$promise$asap$$useVertxTimer() {\n            return function () {\n                lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n            };\n        }\n        function lib$es6$promise$asap$$useMutationObserver() {\n            var iterations = 0;\n            var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n            var node = document.createTextNode('');\n            observer.observe(node, { characterData: true });\n            return function () {\n                node.data = iterations = ++iterations % 2;\n            };\n        }\n        // web worker\n        function lib$es6$promise$asap$$useMessageChannel() {\n            var channel = new MessageChannel();\n            channel.port1.onmessage = lib$es6$promise$asap$$flush;\n            return function () {\n                channel.port2.postMessage(0);\n            };\n        }\n        function lib$es6$promise$asap$$useSetTimeout() {\n            return function () {\n                setTimeout(lib$es6$promise$asap$$flush, 1);\n            };\n        }\n        var lib$es6$promise$asap$$queue = new Array(1000);\n        function lib$es6$promise$asap$$flush() {\n            for (var i = 0; i < lib$es6$promise$asap$$len; i += 2) {\n                var callback = lib$es6$promise$asap$$queue[i];\n                var arg = lib$es6$promise$asap$$queue[i + 1];\n                callback(arg);\n                lib$es6$promise$asap$$queue[i] = undefined;\n                lib$es6$promise$asap$$queue[i + 1] = undefined;\n            }\n            lib$es6$promise$asap$$len = 0;\n        }\n        function lib$es6$promise$asap$$attemptVertx() {\n            try {\n                var r = require;\n                var vertx = r('vertx');\n                lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n                return lib$es6$promise$asap$$useVertxTimer();\n            } catch (e) {\n                return lib$es6$promise$asap$$useSetTimeout();\n            }\n        }\n        var lib$es6$promise$asap$$scheduleFlush;\n        // Decide what async method to use to triggering processing of queued callbacks:\n        if (lib$es6$promise$asap$$isNode) {\n            lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n        } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n            lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n        } else if (lib$es6$promise$asap$$isWorker) {\n            lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n        } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n            lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n        } else {\n            lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n        }\n        function lib$es6$promise$$internal$$noop() {\n        }\n        var lib$es6$promise$$internal$$PENDING = void 0;\n        var lib$es6$promise$$internal$$FULFILLED = 1;\n        var lib$es6$promise$$internal$$REJECTED = 2;\n        var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n        function lib$es6$promise$$internal$$selfFulfillment() {\n            return new TypeError('You cannot resolve a promise with itself');\n        }\n        function lib$es6$promise$$internal$$cannotReturnOwn() {\n            return new TypeError('A promises callback cannot return that same promise.');\n        }\n        function lib$es6$promise$$internal$$getThen(promise) {\n            try {\n                return promise.then;\n            } catch (error) {\n                lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n                return lib$es6$promise$$internal$$GET_THEN_ERROR;\n            }\n        }\n        function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n            try {\n                then.call(value, fulfillmentHandler, rejectionHandler);\n            } catch (e) {\n                return e;\n            }\n        }\n        function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n            lib$es6$promise$asap$$asap(function (promise) {\n                var sealed = false;\n                var error = lib$es6$promise$$internal$$tryThen(then, thenable, function (value) {\n                    if (sealed) {\n                        return;\n                    }\n                    sealed = true;\n                    if (thenable !== value) {\n                        lib$es6$promise$$internal$$resolve(promise, value);\n                    } else {\n                        lib$es6$promise$$internal$$fulfill(promise, value);\n                    }\n                }, function (reason) {\n                    if (sealed) {\n                        return;\n                    }\n                    sealed = true;\n                    lib$es6$promise$$internal$$reject(promise, reason);\n                }, 'Settle: ' + (promise._label || ' unknown promise'));\n                if (!sealed && error) {\n                    sealed = true;\n                    lib$es6$promise$$internal$$reject(promise, error);\n                }\n            }, promise);\n        }\n        function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n            if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n                lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n            } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n                lib$es6$promise$$internal$$reject(promise, thenable._result);\n            } else {\n                lib$es6$promise$$internal$$subscribe(thenable, undefined, function (value) {\n                    lib$es6$promise$$internal$$resolve(promise, value);\n                }, function (reason) {\n                    lib$es6$promise$$internal$$reject(promise, reason);\n                });\n            }\n        }\n        function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n            if (maybeThenable.constructor === promise.constructor) {\n                lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n            } else {\n                var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n                if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n                    lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n                } else if (then === undefined) {\n                    lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n                } else if (lib$es6$promise$utils$$isFunction(then)) {\n                    lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n                } else {\n                    lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n                }\n            }\n        }\n        function lib$es6$promise$$internal$$resolve(promise, value) {\n            if (promise === value) {\n                lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n            } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n                lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n            } else {\n                lib$es6$promise$$internal$$fulfill(promise, value);\n            }\n        }\n        function lib$es6$promise$$internal$$publishRejection(promise) {\n            if (promise._onerror) {\n                promise._onerror(promise._result);\n            }\n            lib$es6$promise$$internal$$publish(promise);\n        }\n        function lib$es6$promise$$internal$$fulfill(promise, value) {\n            if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n                return;\n            }\n            promise._result = value;\n            promise._state = lib$es6$promise$$internal$$FULFILLED;\n            if (promise._subscribers.length !== 0) {\n                lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n            }\n        }\n        function lib$es6$promise$$internal$$reject(promise, reason) {\n            if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n                return;\n            }\n            promise._state = lib$es6$promise$$internal$$REJECTED;\n            promise._result = reason;\n            lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n        }\n        function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n            var subscribers = parent._subscribers;\n            var length = subscribers.length;\n            parent._onerror = null;\n            subscribers[length] = child;\n            subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n            subscribers[length + lib$es6$promise$$internal$$REJECTED] = onRejection;\n            if (length === 0 && parent._state) {\n                lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n            }\n        }\n        function lib$es6$promise$$internal$$publish(promise) {\n            var subscribers = promise._subscribers;\n            var settled = promise._state;\n            if (subscribers.length === 0) {\n                return;\n            }\n            var child, callback, detail = promise._result;\n            for (var i = 0; i < subscribers.length; i += 3) {\n                child = subscribers[i];\n                callback = subscribers[i + settled];\n                if (child) {\n                    lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n                } else {\n                    callback(detail);\n                }\n            }\n            promise._subscribers.length = 0;\n        }\n        function lib$es6$promise$$internal$$ErrorObject() {\n            this.error = null;\n        }\n        var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n        function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n            try {\n                return callback(detail);\n            } catch (e) {\n                lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n                return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n            }\n        }\n        function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n            var hasCallback = lib$es6$promise$utils$$isFunction(callback), value, error, succeeded, failed;\n            if (hasCallback) {\n                value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n                if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n                    failed = true;\n                    error = value.error;\n                    value = null;\n                } else {\n                    succeeded = true;\n                }\n                if (promise === value) {\n                    lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n                    return;\n                }\n            } else {\n                value = detail;\n                succeeded = true;\n            }\n            if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n            } else if (hasCallback && succeeded) {\n                lib$es6$promise$$internal$$resolve(promise, value);\n            } else if (failed) {\n                lib$es6$promise$$internal$$reject(promise, error);\n            } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n                lib$es6$promise$$internal$$fulfill(promise, value);\n            } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n                lib$es6$promise$$internal$$reject(promise, value);\n            }\n        }\n        function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n            try {\n                resolver(function resolvePromise(value) {\n                    lib$es6$promise$$internal$$resolve(promise, value);\n                }, function rejectPromise(reason) {\n                    lib$es6$promise$$internal$$reject(promise, reason);\n                });\n            } catch (e) {\n                lib$es6$promise$$internal$$reject(promise, e);\n            }\n        }\n        function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n            var enumerator = this;\n            enumerator._instanceConstructor = Constructor;\n            enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n            if (enumerator._validateInput(input)) {\n                enumerator._input = input;\n                enumerator.length = input.length;\n                enumerator._remaining = input.length;\n                enumerator._init();\n                if (enumerator.length === 0) {\n                    lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n                } else {\n                    enumerator.length = enumerator.length || 0;\n                    enumerator._enumerate();\n                    if (enumerator._remaining === 0) {\n                        lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n                    }\n                }\n            } else {\n                lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n            }\n        }\n        lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function (input) {\n            return lib$es6$promise$utils$$isArray(input);\n        };\n        lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function () {\n            return new Error('Array Methods must be provided an Array');\n        };\n        lib$es6$promise$enumerator$$Enumerator.prototype._init = function () {\n            this._result = new Array(this.length);\n        };\n        var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n        lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function () {\n            var enumerator = this;\n            var length = enumerator.length;\n            var promise = enumerator.promise;\n            var input = enumerator._input;\n            for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n                enumerator._eachEntry(input[i], i);\n            }\n        };\n        lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function (entry, i) {\n            var enumerator = this;\n            var c = enumerator._instanceConstructor;\n            if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n                if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n                    entry._onerror = null;\n                    enumerator._settledAt(entry._state, i, entry._result);\n                } else {\n                    enumerator._willSettleAt(c.resolve(entry), i);\n                }\n            } else {\n                enumerator._remaining--;\n                enumerator._result[i] = entry;\n            }\n        };\n        lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function (state, i, value) {\n            var enumerator = this;\n            var promise = enumerator.promise;\n            if (promise._state === lib$es6$promise$$internal$$PENDING) {\n                enumerator._remaining--;\n                if (state === lib$es6$promise$$internal$$REJECTED) {\n                    lib$es6$promise$$internal$$reject(promise, value);\n                } else {\n                    enumerator._result[i] = value;\n                }\n            }\n            if (enumerator._remaining === 0) {\n                lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n            }\n        };\n        lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function (promise, i) {\n            var enumerator = this;\n            lib$es6$promise$$internal$$subscribe(promise, undefined, function (value) {\n                enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n            }, function (reason) {\n                enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n            });\n        };\n        function lib$es6$promise$promise$all$$all(entries) {\n            return new lib$es6$promise$enumerator$$default(this, entries).promise;\n        }\n        var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n        function lib$es6$promise$promise$race$$race(entries) {\n            /*jshint validthis:true */\n            var Constructor = this;\n            var promise = new Constructor(lib$es6$promise$$internal$$noop);\n            if (!lib$es6$promise$utils$$isArray(entries)) {\n                lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n                return promise;\n            }\n            var length = entries.length;\n            function onFulfillment(value) {\n                lib$es6$promise$$internal$$resolve(promise, value);\n            }\n            function onRejection(reason) {\n                lib$es6$promise$$internal$$reject(promise, reason);\n            }\n            for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n                lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n            }\n            return promise;\n        }\n        var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n        function lib$es6$promise$promise$resolve$$resolve(object) {\n            /*jshint validthis:true */\n            var Constructor = this;\n            if (object && typeof object === 'object' && object.constructor === Constructor) {\n                return object;\n            }\n            var promise = new Constructor(lib$es6$promise$$internal$$noop);\n            lib$es6$promise$$internal$$resolve(promise, object);\n            return promise;\n        }\n        var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n        function lib$es6$promise$promise$reject$$reject(reason) {\n            /*jshint validthis:true */\n            var Constructor = this;\n            var promise = new Constructor(lib$es6$promise$$internal$$noop);\n            lib$es6$promise$$internal$$reject(promise, reason);\n            return promise;\n        }\n        var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n        var lib$es6$promise$promise$$counter = 0;\n        function lib$es6$promise$promise$$needsResolver() {\n            throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n        }\n        function lib$es6$promise$promise$$needsNew() {\n            throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n        }\n        var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n        /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n        function lib$es6$promise$promise$$Promise(resolver) {\n            this._id = lib$es6$promise$promise$$counter++;\n            this._state = undefined;\n            this._result = undefined;\n            this._subscribers = [];\n            if (lib$es6$promise$$internal$$noop !== resolver) {\n                if (!lib$es6$promise$utils$$isFunction(resolver)) {\n                    lib$es6$promise$promise$$needsResolver();\n                }\n                if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n                    lib$es6$promise$promise$$needsNew();\n                }\n                lib$es6$promise$$internal$$initializePromise(this, resolver);\n            }\n        }\n        lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n        lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n        lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n        lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n        lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n        lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n        lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n        lib$es6$promise$promise$$Promise.prototype = {\n            constructor: lib$es6$promise$promise$$Promise,\n            /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n            then: function (onFulfillment, onRejection) {\n                var parent = this;\n                var state = parent._state;\n                if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n                    return this;\n                }\n                var child = new this.constructor(lib$es6$promise$$internal$$noop);\n                var result = parent._result;\n                if (state) {\n                    var callback = arguments[state - 1];\n                    lib$es6$promise$asap$$asap(function () {\n                        lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n                    });\n                } else {\n                    lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n                }\n                return child;\n            },\n            /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n            'catch': function (onRejection) {\n                return this.then(null, onRejection);\n            }\n        };\n        function lib$es6$promise$polyfill$$polyfill() {\n            var local;\n            if (typeof global !== 'undefined') {\n                local = global;\n            } else if (typeof self !== 'undefined') {\n                local = self;\n            } else {\n                try {\n                    local = Function('return this')();\n                } catch (e) {\n                    throw new Error('polyfill failed because global object is unavailable in this environment');\n                }\n            }\n            var P = local.Promise;\n            if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n                return;\n            }\n            local.Promise = lib$es6$promise$promise$$default;\n        }\n        var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n        var lib$es6$promise$umd$$ES6Promise = {\n            'Promise': lib$es6$promise$promise$$default,\n            'polyfill': lib$es6$promise$polyfill$$default\n        };\n        /* global define:true module:true window: true */\n        if (typeof define === 'function' && define['amd']) {\n            define(function () {\n                return lib$es6$promise$umd$$ES6Promise;\n            });\n        } else if (typeof module !== 'undefined' && module['exports']) {\n            module['exports'] = lib$es6$promise$umd$$ES6Promise;\n        } else if (typeof this !== 'undefined') {\n            this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n        }\n        lib$es6$promise$polyfill$$default();\n    }.call(this));\n}","/*es6-set/implement*/\nfunction _(require, module, exports) {\n    if (!require(304    /* ./is-implemented */)()) {\n        Object.defineProperty(require(260    /* es5-ext/global */), 'Set', {\n            value: require(307    /* ./polyfill */),\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n}","/*es6-set/is-implemented*/\nfunction _(require, module, exports) {\n    module.exports = function () {\n        var set, iterator, result;\n        if (typeof Set !== 'function')\n            return false;\n        set = new Set([\n            'raz',\n            'dwa',\n            'trzy'\n        ]);\n        if (String(set) !== '[object Set]')\n            return false;\n        if (set.size !== 3)\n            return false;\n        if (typeof set.add !== 'function')\n            return false;\n        if (typeof set.clear !== 'function')\n            return false;\n        if (typeof set.delete !== 'function')\n            return false;\n        if (typeof set.entries !== 'function')\n            return false;\n        if (typeof set.forEach !== 'function')\n            return false;\n        if (typeof set.has !== 'function')\n            return false;\n        if (typeof set.keys !== 'function')\n            return false;\n        if (typeof set.values !== 'function')\n            return false;\n        iterator = set.values();\n        result = iterator.next();\n        if (result.done !== false)\n            return false;\n        if (result.value !== 'raz')\n            return false;\n        return true;\n    };\n}","// Exports true if environment provides native `Set` implementation,\n// whatever that is.\n/*es6-set/is-native-implemented*/\nfunction _(require, module, exports) {\n    module.exports = function () {\n        if (typeof Set === 'undefined')\n            return false;\n        return Object.prototype.toString.call(Set.prototype) === '[object Set]';\n    }();\n}","/*es6-set/lib/iterator*/\nfunction _(require, module, exports) {\n    var setPrototypeOf = require(284    /* es5-ext/object/set-prototype-of */), contains = require(290    /* es5-ext/string/#/contains */), d = require(251    /* d */), Iterator = require(298    /* es6-iterator */), toStringTagSymbol = require(308    /* es6-symbol */).toStringTag, defineProperty = Object.defineProperty, SetIterator;\n    SetIterator = module.exports = function (set, kind) {\n        if (!(this instanceof SetIterator))\n            return new SetIterator(set, kind);\n        Iterator.call(this, set.__setData__, set);\n        if (!kind)\n            kind = 'value';\n        else if (contains.call(kind, 'key+value'))\n            kind = 'key+value';\n        else\n            kind = 'value';\n        defineProperty(this, '__kind__', d('', kind));\n    };\n    if (setPrototypeOf)\n        setPrototypeOf(SetIterator, Iterator);\n    SetIterator.prototype = Object.create(Iterator.prototype, {\n        constructor: d(SetIterator),\n        _resolve: d(function (i) {\n            if (this.__kind__ === 'value')\n                return this.__list__[i];\n            return [\n                this.__list__[i],\n                this.__list__[i]\n            ];\n        }),\n        toString: d(function () {\n            return '[object Set Iterator]';\n        })\n    });\n    defineProperty(SetIterator.prototype, toStringTagSymbol, d('c', 'Set Iterator'));\n}","/*es6-set/polyfill*/\nfunction _(require, module, exports) {\n    var clear = require(252    /* es5-ext/array/#/clear */), eIndexOf = require(253    /* es5-ext/array/#/e-index-of */), setPrototypeOf = require(284    /* es5-ext/object/set-prototype-of */), callable = require(287    /* es5-ext/object/valid-callable */), d = require(251    /* d */), ee = require(317    /* event-emitter */), Symbol = require(308    /* es6-symbol */), iterator = require(301    /* es6-iterator/valid-iterable */), forOf = require(296    /* es6-iterator/for-of */), Iterator = require(306    /* ./lib/iterator */), isNative = require(305    /* ./is-native-implemented */), call = Function.prototype.call, defineProperty = Object.defineProperty, getPrototypeOf = Object.getPrototypeOf, SetPoly, getValues, NativeSet;\n    if (isNative)\n        NativeSet = Set;\n    module.exports = SetPoly = function Set() {\n        var iterable = arguments[0], self;\n        if (!(this instanceof SetPoly))\n            throw new TypeError('Constructor requires \\'new\\'');\n        if (isNative && setPrototypeOf)\n            self = setPrototypeOf(new NativeSet(), getPrototypeOf(this));\n        else\n            self = this;\n        if (iterable != null)\n            iterator(iterable);\n        defineProperty(self, '__setData__', d('c', []));\n        if (!iterable)\n            return self;\n        forOf(iterable, function (value) {\n            if (eIndexOf.call(this, value) !== -1)\n                return;\n            this.push(value);\n        }, self.__setData__);\n        return self;\n    };\n    if (isNative) {\n        if (setPrototypeOf)\n            setPrototypeOf(SetPoly, NativeSet);\n        SetPoly.prototype = Object.create(NativeSet.prototype, { constructor: d(SetPoly) });\n    }\n    ee(Object.defineProperties(SetPoly.prototype, {\n        add: d(function (value) {\n            if (this.has(value))\n                return this;\n            this.emit('_add', this.__setData__.push(value) - 1, value);\n            return this;\n        }),\n        clear: d(function () {\n            if (!this.__setData__.length)\n                return;\n            clear.call(this.__setData__);\n            this.emit('_clear');\n        }),\n        delete: d(function (value) {\n            var index = eIndexOf.call(this.__setData__, value);\n            if (index === -1)\n                return false;\n            this.__setData__.splice(index, 1);\n            this.emit('_delete', index, value);\n            return true;\n        }),\n        entries: d(function () {\n            return new Iterator(this, 'key+value');\n        }),\n        forEach: d(function (cb) {\n            var thisArg = arguments[1], iterator, result, value;\n            callable(cb);\n            iterator = this.values();\n            result = iterator._next();\n            while (result !== undefined) {\n                value = iterator._resolve(result);\n                call.call(cb, thisArg, value, value, this);\n                result = iterator._next();\n            }\n        }),\n        has: d(function (value) {\n            return eIndexOf.call(this.__setData__, value) !== -1;\n        }),\n        keys: d(getValues = function () {\n            return this.values();\n        }),\n        size: d.gs(function () {\n            return this.__setData__.length;\n        }),\n        values: d(function () {\n            return new Iterator(this);\n        }),\n        toString: d(function () {\n            return '[object Set]';\n        })\n    }));\n    defineProperty(SetPoly.prototype, Symbol.iterator, d(getValues));\n    defineProperty(SetPoly.prototype, Symbol.toStringTag, d('c', 'Set'));\n}","/*es6-symbol/index*/\nfunction _(require, module, exports) {\n    module.exports = require(309    /* ./is-implemented */)() ? Symbol : require(311    /* ./polyfill */);\n}","/*es6-symbol/is-implemented*/\nfunction _(require, module, exports) {\n    var validTypes = {\n        object: true,\n        symbol: true\n    };\n    module.exports = function () {\n        var symbol;\n        if (typeof Symbol !== 'function')\n            return false;\n        symbol = Symbol('test symbol');\n        try {\n            String(symbol);\n        } catch (e) {\n            return false;\n        }\n        // Return 'true' also for polyfills\n        if (!validTypes[typeof Symbol.iterator])\n            return false;\n        if (!validTypes[typeof Symbol.toPrimitive])\n            return false;\n        if (!validTypes[typeof Symbol.toStringTag])\n            return false;\n        return true;\n    };\n}","/*es6-symbol/is-symbol*/\nfunction _(require, module, exports) {\n    module.exports = function (x) {\n        if (!x)\n            return false;\n        if (typeof x === 'symbol')\n            return true;\n        if (!x.constructor)\n            return false;\n        if (x.constructor.name !== 'Symbol')\n            return false;\n        return x[x.constructor.toStringTag] === 'Symbol';\n    };\n}","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n/*es6-symbol/polyfill*/\nfunction _(require, module, exports) {\n    var d = require(251    /* d */), validateSymbol = require(312    /* ./validate-symbol */), create = Object.create, defineProperties = Object.defineProperties, defineProperty = Object.defineProperty, objPrototype = Object.prototype, NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null), isNativeSafe;\n    if (typeof Symbol === 'function') {\n        NativeSymbol = Symbol;\n        try {\n            String(NativeSymbol());\n            isNativeSafe = true;\n        } catch (ignore) {\n        }\n    }\n    var generateName = function () {\n        var created = create(null);\n        return function (desc) {\n            var postfix = 0, name, ie11BugWorkaround;\n            while (created[desc + (postfix || '')])\n                ++postfix;\n            desc += postfix || '';\n            created[desc] = true;\n            name = '@@' + desc;\n            defineProperty(objPrototype, name, d.gs(null, function (value) {\n                // For IE11 issue see:\n                // https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n                //    ie11-broken-getters-on-dom-objects\n                // https://github.com/medikoo/es6-symbol/issues/12\n                if (ie11BugWorkaround)\n                    return;\n                ie11BugWorkaround = true;\n                defineProperty(this, name, d(value));\n                ie11BugWorkaround = false;\n            }));\n            return name;\n        };\n    }();\n    // Internal constructor (not one exposed) for creating Symbol instances.\n    // This one is used to ensure that `someSymbol instanceof Symbol` always return false\n    HiddenSymbol = function Symbol(description) {\n        if (this instanceof HiddenSymbol)\n            throw new TypeError('Symbol is not a constructor');\n        return SymbolPolyfill(description);\n    };\n    // Exposed `Symbol` constructor\n    // (returns instances of HiddenSymbol)\n    module.exports = SymbolPolyfill = function Symbol(description) {\n        var symbol;\n        if (this instanceof Symbol)\n            throw new TypeError('Symbol is not a constructor');\n        if (isNativeSafe)\n            return NativeSymbol(description);\n        symbol = create(HiddenSymbol.prototype);\n        description = description === undefined ? '' : String(description);\n        return defineProperties(symbol, {\n            __description__: d('', description),\n            __name__: d('', generateName(description))\n        });\n    };\n    defineProperties(SymbolPolyfill, {\n        for: d(function (key) {\n            if (globalSymbols[key])\n                return globalSymbols[key];\n            return globalSymbols[key] = SymbolPolyfill(String(key));\n        }),\n        keyFor: d(function (s) {\n            var key;\n            validateSymbol(s);\n            for (key in globalSymbols)\n                if (globalSymbols[key] === s)\n                    return key;\n        }),\n        // To ensure proper interoperability with other native functions (e.g. Array.from)\n        // fallback to eventual native implementation of given symbol\n        hasInstance: d('', NativeSymbol && NativeSymbol.hasInstance || SymbolPolyfill('hasInstance')),\n        isConcatSpreadable: d('', NativeSymbol && NativeSymbol.isConcatSpreadable || SymbolPolyfill('isConcatSpreadable')),\n        iterator: d('', NativeSymbol && NativeSymbol.iterator || SymbolPolyfill('iterator')),\n        match: d('', NativeSymbol && NativeSymbol.match || SymbolPolyfill('match')),\n        replace: d('', NativeSymbol && NativeSymbol.replace || SymbolPolyfill('replace')),\n        search: d('', NativeSymbol && NativeSymbol.search || SymbolPolyfill('search')),\n        species: d('', NativeSymbol && NativeSymbol.species || SymbolPolyfill('species')),\n        split: d('', NativeSymbol && NativeSymbol.split || SymbolPolyfill('split')),\n        toPrimitive: d('', NativeSymbol && NativeSymbol.toPrimitive || SymbolPolyfill('toPrimitive')),\n        toStringTag: d('', NativeSymbol && NativeSymbol.toStringTag || SymbolPolyfill('toStringTag')),\n        unscopables: d('', NativeSymbol && NativeSymbol.unscopables || SymbolPolyfill('unscopables'))\n    });\n    // Internal tweaks for real symbol producer\n    defineProperties(HiddenSymbol.prototype, {\n        constructor: d(SymbolPolyfill),\n        toString: d('', function () {\n            return this.__name__;\n        })\n    });\n    // Proper implementation of methods exposed on Symbol.prototype\n    // They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\n    defineProperties(SymbolPolyfill.prototype, {\n        toString: d(function () {\n            return 'Symbol (' + validateSymbol(this).__description__ + ')';\n        }),\n        valueOf: d(function () {\n            return validateSymbol(this);\n        })\n    });\n    defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n        var symbol = validateSymbol(this);\n        if (typeof symbol === 'symbol')\n            return symbol;\n        return symbol.toString();\n    }));\n    defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n    // Proper implementaton of toPrimitive and toStringTag for returned symbol instances\n    defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag, d('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n    // Note: It's important to define `toPrimitive` as last one, as some implementations\n    // implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n    // And that may invoke error in definition flow:\n    // See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\n    defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive, d('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n}","/*es6-symbol/validate-symbol*/\nfunction _(require, module, exports) {\n    var isSymbol = require(310    /* ./is-symbol */);\n    module.exports = function (value) {\n        if (!isSymbol(value))\n            throw new TypeError(value + ' is not a symbol');\n        return value;\n    };\n}","/*es6-weak-map/implement*/\nfunction _(require, module, exports) {\n    if (!require(314    /* ./is-implemented */)()) {\n        Object.defineProperty(require(260    /* es5-ext/global */), 'WeakMap', {\n            value: require(316    /* ./polyfill */),\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n}","/*es6-weak-map/is-implemented*/\nfunction _(require, module, exports) {\n    module.exports = function () {\n        var weakMap, x;\n        if (typeof WeakMap !== 'function')\n            return false;\n        try {\n            // WebKit doesn't support arguments and crashes\n            weakMap = new WeakMap([\n                [\n                    x = {},\n                    'one'\n                ],\n                [\n                    {},\n                    'two'\n                ],\n                [\n                    {},\n                    'three'\n                ]\n            ]);\n        } catch (e) {\n            return false;\n        }\n        if (String(weakMap) !== '[object WeakMap]')\n            return false;\n        if (typeof weakMap.set !== 'function')\n            return false;\n        if (weakMap.set({}, 1) !== weakMap)\n            return false;\n        if (typeof weakMap.delete !== 'function')\n            return false;\n        if (typeof weakMap.has !== 'function')\n            return false;\n        if (weakMap.get(x) !== 'one')\n            return false;\n        return true;\n    };\n}","// Exports true if environment provides native `WeakMap` implementation, whatever that is.\n/*es6-weak-map/is-native-implemented*/\nfunction _(require, module, exports) {\n    module.exports = function () {\n        if (typeof WeakMap !== 'function')\n            return false;\n        return Object.prototype.toString.call(new WeakMap()) === '[object WeakMap]';\n    }();\n}","/*es6-weak-map/polyfill*/\nfunction _(require, module, exports) {\n    var setPrototypeOf = require(284    /* es5-ext/object/set-prototype-of */), object = require(288    /* es5-ext/object/valid-object */), value = require(289    /* es5-ext/object/valid-value */), randomUniq = require(294    /* es5-ext/string/random-uniq */), d = require(251    /* d */), getIterator = require(297    /* es6-iterator/get */), forOf = require(296    /* es6-iterator/for-of */), toStringTagSymbol = require(308    /* es6-symbol */).toStringTag, isNative = require(315    /* ./is-native-implemented */), isArray = Array.isArray, defineProperty = Object.defineProperty, hasOwnProperty = Object.prototype.hasOwnProperty, getPrototypeOf = Object.getPrototypeOf, WeakMapPoly;\n    module.exports = WeakMapPoly = function () {\n        var iterable = arguments[0], self;\n        if (!(this instanceof WeakMapPoly))\n            throw new TypeError('Constructor requires \\'new\\'');\n        if (isNative && setPrototypeOf && WeakMap !== WeakMapPoly) {\n            self = setPrototypeOf(new WeakMap(), getPrototypeOf(this));\n        } else {\n            self = this;\n        }\n        if (iterable != null) {\n            if (!isArray(iterable))\n                iterable = getIterator(iterable);\n        }\n        defineProperty(self, '__weakMapData__', d('c', '$weakMap$' + randomUniq()));\n        if (!iterable)\n            return self;\n        forOf(iterable, function (val) {\n            value(val);\n            self.set(val[0], val[1]);\n        });\n        return self;\n    };\n    if (isNative) {\n        if (setPrototypeOf)\n            setPrototypeOf(WeakMapPoly, WeakMap);\n        WeakMapPoly.prototype = Object.create(WeakMap.prototype, { constructor: d(WeakMapPoly) });\n    }\n    Object.defineProperties(WeakMapPoly.prototype, {\n        delete: d(function (key) {\n            if (hasOwnProperty.call(object(key), this.__weakMapData__)) {\n                delete key[this.__weakMapData__];\n                return true;\n            }\n            return false;\n        }),\n        get: d(function (key) {\n            if (hasOwnProperty.call(object(key), this.__weakMapData__)) {\n                return key[this.__weakMapData__];\n            }\n        }),\n        has: d(function (key) {\n            return hasOwnProperty.call(object(key), this.__weakMapData__);\n        }),\n        set: d(function (key, value) {\n            defineProperty(object(key), this.__weakMapData__, d('c', value));\n            return this;\n        }),\n        toString: d(function () {\n            return '[object WeakMap]';\n        })\n    });\n    defineProperty(WeakMapPoly.prototype, toStringTagSymbol, d('c', 'WeakMap'));\n}","/*event-emitter/index*/\nfunction _(require, module, exports) {\n    var d = require(251    /* d */), callable = require(287    /* es5-ext/object/valid-callable */), apply = Function.prototype.apply, call = Function.prototype.call, create = Object.create, defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, hasOwnProperty = Object.prototype.hasOwnProperty, descriptor = {\n            configurable: true,\n            enumerable: false,\n            writable: true\n        }, on, once, off, emit, methods, descriptors, base;\n    on = function (type, listener) {\n        var data;\n        callable(listener);\n        if (!hasOwnProperty.call(this, '__ee__')) {\n            data = descriptor.value = create(null);\n            defineProperty(this, '__ee__', descriptor);\n            descriptor.value = null;\n        } else {\n            data = this.__ee__;\n        }\n        if (!data[type])\n            data[type] = listener;\n        else if (typeof data[type] === 'object')\n            data[type].push(listener);\n        else\n            data[type] = [\n                data[type],\n                listener\n            ];\n        return this;\n    };\n    once = function (type, listener) {\n        var once, self;\n        callable(listener);\n        self = this;\n        on.call(this, type, once = function () {\n            off.call(self, type, once);\n            apply.call(listener, this, arguments);\n        });\n        once.__eeOnceListener__ = listener;\n        return this;\n    };\n    off = function (type, listener) {\n        var data, listeners, candidate, i;\n        callable(listener);\n        if (!hasOwnProperty.call(this, '__ee__'))\n            return this;\n        data = this.__ee__;\n        if (!data[type])\n            return this;\n        listeners = data[type];\n        if (typeof listeners === 'object') {\n            for (i = 0; candidate = listeners[i]; ++i) {\n                if (candidate === listener || candidate.__eeOnceListener__ === listener) {\n                    if (listeners.length === 2)\n                        data[type] = listeners[i ? 0 : 1];\n                    else\n                        listeners.splice(i, 1);\n                }\n            }\n        } else {\n            if (listeners === listener || listeners.__eeOnceListener__ === listener) {\n                delete data[type];\n            }\n        }\n        return this;\n    };\n    emit = function (type) {\n        var i, l, listener, listeners, args;\n        if (!hasOwnProperty.call(this, '__ee__'))\n            return;\n        listeners = this.__ee__[type];\n        if (!listeners)\n            return;\n        if (typeof listeners === 'object') {\n            l = arguments.length;\n            args = new Array(l - 1);\n            for (i = 1; i < l; ++i)\n                args[i - 1] = arguments[i];\n            listeners = listeners.slice();\n            for (i = 0; listener = listeners[i]; ++i) {\n                apply.call(listener, this, args);\n            }\n        } else {\n            switch (arguments.length) {\n            case 1:\n                call.call(listeners, this);\n                break;\n            case 2:\n                call.call(listeners, this, arguments[1]);\n                break;\n            case 3:\n                call.call(listeners, this, arguments[1], arguments[2]);\n                break;\n            default:\n                l = arguments.length;\n                args = new Array(l - 1);\n                for (i = 1; i < l; ++i) {\n                    args[i - 1] = arguments[i];\n                }\n                apply.call(listeners, this, args);\n            }\n        }\n    };\n    methods = {\n        on: on,\n        once: once,\n        off: off,\n        emit: emit\n    };\n    descriptors = {\n        on: d(on),\n        once: d(once),\n        off: d(off),\n        emit: d(emit)\n    };\n    base = defineProperties({}, descriptors);\n    module.exports = exports = function (o) {\n        return o == null ? create(base) : defineProperties(Object(o), descriptors);\n    };\n    exports.methods = methods;\n}","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n/*hammerjs/hammer*/\nfunction _(require, module, exports) {\n    (function (window, document, exportName, undefined) {\n        'use strict';\n        var VENDOR_PREFIXES = [\n            '',\n            'webkit',\n            'Moz',\n            'MS',\n            'ms',\n            'o'\n        ];\n        var TEST_ELEMENT = document.createElement('div');\n        var TYPE_FUNCTION = 'function';\n        var round = Math.round;\n        var abs = Math.abs;\n        var now = Date.now;\n        /**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\n        function setTimeoutContext(fn, timeout, context) {\n            return setTimeout(bindFn(fn, context), timeout);\n        }\n        /**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\n        function invokeArrayArg(arg, fn, context) {\n            if (Array.isArray(arg)) {\n                each(arg, context[fn], context);\n                return true;\n            }\n            return false;\n        }\n        /**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\n        function each(obj, iterator, context) {\n            var i;\n            if (!obj) {\n                return;\n            }\n            if (obj.forEach) {\n                obj.forEach(iterator, context);\n            } else if (obj.length !== undefined) {\n                i = 0;\n                while (i < obj.length) {\n                    iterator.call(context, obj[i], i, obj);\n                    i++;\n                }\n            } else {\n                for (i in obj) {\n                    obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n                }\n            }\n        }\n        /**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\n        function deprecate(method, name, message) {\n            var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n            return function () {\n                var e = new Error('get-stack-trace');\n                var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n                var log = window.console && (window.console.warn || window.console.log);\n                if (log) {\n                    log.call(window.console, deprecationMessage, stack);\n                }\n                return method.apply(this, arguments);\n            };\n        }\n        /**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\n        var assign;\n        if (typeof Object.assign !== 'function') {\n            assign = function assign(target) {\n                if (target === undefined || target === null) {\n                    throw new TypeError('Cannot convert undefined or null to object');\n                }\n                var output = Object(target);\n                for (var index = 1; index < arguments.length; index++) {\n                    var source = arguments[index];\n                    if (source !== undefined && source !== null) {\n                        for (var nextKey in source) {\n                            if (source.hasOwnProperty(nextKey)) {\n                                output[nextKey] = source[nextKey];\n                            }\n                        }\n                    }\n                }\n                return output;\n            };\n        } else {\n            assign = Object.assign;\n        }\n        /**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\n        var extend = deprecate(function extend(dest, src, merge) {\n            var keys = Object.keys(src);\n            var i = 0;\n            while (i < keys.length) {\n                if (!merge || merge && dest[keys[i]] === undefined) {\n                    dest[keys[i]] = src[keys[i]];\n                }\n                i++;\n            }\n            return dest;\n        }, 'extend', 'Use `assign`.');\n        /**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\n        var merge = deprecate(function merge(dest, src) {\n            return extend(dest, src, true);\n        }, 'merge', 'Use `assign`.');\n        /**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\n        function inherit(child, base, properties) {\n            var baseP = base.prototype, childP;\n            childP = child.prototype = Object.create(baseP);\n            childP.constructor = child;\n            childP._super = baseP;\n            if (properties) {\n                assign(childP, properties);\n            }\n        }\n        /**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\n        function bindFn(fn, context) {\n            return function boundFn() {\n                return fn.apply(context, arguments);\n            };\n        }\n        /**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\n        function boolOrFn(val, args) {\n            if (typeof val == TYPE_FUNCTION) {\n                return val.apply(args ? args[0] || undefined : undefined, args);\n            }\n            return val;\n        }\n        /**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\n        function ifUndefined(val1, val2) {\n            return val1 === undefined ? val2 : val1;\n        }\n        /**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\n        function addEventListeners(target, types, handler) {\n            each(splitStr(types), function (type) {\n                target.addEventListener(type, handler, false);\n            });\n        }\n        /**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\n        function removeEventListeners(target, types, handler) {\n            each(splitStr(types), function (type) {\n                target.removeEventListener(type, handler, false);\n            });\n        }\n        /**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\n        function hasParent(node, parent) {\n            while (node) {\n                if (node == parent) {\n                    return true;\n                }\n                node = node.parentNode;\n            }\n            return false;\n        }\n        /**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\n        function inStr(str, find) {\n            return str.indexOf(find) > -1;\n        }\n        /**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\n        function splitStr(str) {\n            return str.trim().split(/\\s+/g);\n        }\n        /**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\n        function inArray(src, find, findByKey) {\n            if (src.indexOf && !findByKey) {\n                return src.indexOf(find);\n            } else {\n                var i = 0;\n                while (i < src.length) {\n                    if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n                        return i;\n                    }\n                    i++;\n                }\n                return -1;\n            }\n        }\n        /**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\n        function toArray(obj) {\n            return Array.prototype.slice.call(obj, 0);\n        }\n        /**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\n        function uniqueArray(src, key, sort) {\n            var results = [];\n            var values = [];\n            var i = 0;\n            while (i < src.length) {\n                var val = key ? src[i][key] : src[i];\n                if (inArray(values, val) < 0) {\n                    results.push(src[i]);\n                }\n                values[i] = val;\n                i++;\n            }\n            if (sort) {\n                if (!key) {\n                    results = results.sort();\n                } else {\n                    results = results.sort(function sortUniqueArray(a, b) {\n                        return a[key] > b[key];\n                    });\n                }\n            }\n            return results;\n        }\n        /**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\n        function prefixed(obj, property) {\n            var prefix, prop;\n            var camelProp = property[0].toUpperCase() + property.slice(1);\n            var i = 0;\n            while (i < VENDOR_PREFIXES.length) {\n                prefix = VENDOR_PREFIXES[i];\n                prop = prefix ? prefix + camelProp : property;\n                if (prop in obj) {\n                    return prop;\n                }\n                i++;\n            }\n            return undefined;\n        }\n        /**\n * get a unique id\n * @returns {number} uniqueId\n */\n        var _uniqueId = 1;\n        function uniqueId() {\n            return _uniqueId++;\n        }\n        /**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\n        function getWindowForElement(element) {\n            var doc = element.ownerDocument || element;\n            return doc.defaultView || doc.parentWindow || window;\n        }\n        var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n        var SUPPORT_TOUCH = 'ontouchstart' in window;\n        var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n        var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n        var INPUT_TYPE_TOUCH = 'touch';\n        var INPUT_TYPE_PEN = 'pen';\n        var INPUT_TYPE_MOUSE = 'mouse';\n        var INPUT_TYPE_KINECT = 'kinect';\n        var COMPUTE_INTERVAL = 25;\n        var INPUT_START = 1;\n        var INPUT_MOVE = 2;\n        var INPUT_END = 4;\n        var INPUT_CANCEL = 8;\n        var DIRECTION_NONE = 1;\n        var DIRECTION_LEFT = 2;\n        var DIRECTION_RIGHT = 4;\n        var DIRECTION_UP = 8;\n        var DIRECTION_DOWN = 16;\n        var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n        var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n        var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n        var PROPS_XY = [\n            'x',\n            'y'\n        ];\n        var PROPS_CLIENT_XY = [\n            'clientX',\n            'clientY'\n        ];\n        /**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\n        function Input(manager, callback) {\n            var self = this;\n            this.manager = manager;\n            this.callback = callback;\n            this.element = manager.element;\n            this.target = manager.options.inputTarget;\n            // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n            // so when disabled the input events are completely bypassed.\n            this.domHandler = function (ev) {\n                if (boolOrFn(manager.options.enable, [manager])) {\n                    self.handler(ev);\n                }\n            };\n            this.init();\n        }\n        Input.prototype = {\n            /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n            handler: function () {\n            },\n            /**\n     * bind the events\n     */\n            init: function () {\n                this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n                this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n                this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n            },\n            /**\n     * unbind the events\n     */\n            destroy: function () {\n                this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n                this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n                this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n            }\n        };\n        /**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\n        function createInputInstance(manager) {\n            var Type;\n            var inputClass = manager.options.inputClass;\n            if (inputClass) {\n                Type = inputClass;\n            } else if (SUPPORT_POINTER_EVENTS) {\n                Type = PointerEventInput;\n            } else if (SUPPORT_ONLY_TOUCH) {\n                Type = TouchInput;\n            } else if (!SUPPORT_TOUCH) {\n                Type = MouseInput;\n            } else {\n                Type = TouchMouseInput;\n            }\n            return new Type(manager, inputHandler);\n        }\n        /**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\n        function inputHandler(manager, eventType, input) {\n            var pointersLen = input.pointers.length;\n            var changedPointersLen = input.changedPointers.length;\n            var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n            var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n            input.isFirst = !!isFirst;\n            input.isFinal = !!isFinal;\n            if (isFirst) {\n                manager.session = {};\n            }\n            // source event is the normalized value of the domEvents\n            // like 'touchstart, mouseup, pointerdown'\n            input.eventType = eventType;\n            // compute scale, rotation etc\n            computeInputData(manager, input);\n            // emit secret event\n            manager.emit('hammer.input', input);\n            manager.recognize(input);\n            manager.session.prevInput = input;\n        }\n        /**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\n        function computeInputData(manager, input) {\n            var session = manager.session;\n            var pointers = input.pointers;\n            var pointersLength = pointers.length;\n            // store the first input to calculate the distance and direction\n            if (!session.firstInput) {\n                session.firstInput = simpleCloneInputData(input);\n            }\n            // to compute scale and rotation we need to store the multiple touches\n            if (pointersLength > 1 && !session.firstMultiple) {\n                session.firstMultiple = simpleCloneInputData(input);\n            } else if (pointersLength === 1) {\n                session.firstMultiple = false;\n            }\n            var firstInput = session.firstInput;\n            var firstMultiple = session.firstMultiple;\n            var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n            var center = input.center = getCenter(pointers);\n            input.timeStamp = now();\n            input.deltaTime = input.timeStamp - firstInput.timeStamp;\n            input.angle = getAngle(offsetCenter, center);\n            input.distance = getDistance(offsetCenter, center);\n            computeDeltaXY(session, input);\n            input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n            var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n            input.overallVelocityX = overallVelocity.x;\n            input.overallVelocityY = overallVelocity.y;\n            input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n            input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n            input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n            input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n            computeIntervalInputData(session, input);\n            // find the correct target\n            var target = manager.element;\n            if (hasParent(input.srcEvent.target, target)) {\n                target = input.srcEvent.target;\n            }\n            input.target = target;\n        }\n        function computeDeltaXY(session, input) {\n            var center = input.center;\n            var offset = session.offsetDelta || {};\n            var prevDelta = session.prevDelta || {};\n            var prevInput = session.prevInput || {};\n            if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n                prevDelta = session.prevDelta = {\n                    x: prevInput.deltaX || 0,\n                    y: prevInput.deltaY || 0\n                };\n                offset = session.offsetDelta = {\n                    x: center.x,\n                    y: center.y\n                };\n            }\n            input.deltaX = prevDelta.x + (center.x - offset.x);\n            input.deltaY = prevDelta.y + (center.y - offset.y);\n        }\n        /**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\n        function computeIntervalInputData(session, input) {\n            var last = session.lastInterval || input, deltaTime = input.timeStamp - last.timeStamp, velocity, velocityX, velocityY, direction;\n            if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n                var deltaX = input.deltaX - last.deltaX;\n                var deltaY = input.deltaY - last.deltaY;\n                var v = getVelocity(deltaTime, deltaX, deltaY);\n                velocityX = v.x;\n                velocityY = v.y;\n                velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n                direction = getDirection(deltaX, deltaY);\n                session.lastInterval = input;\n            } else {\n                // use latest velocity info if it doesn't overtake a minimum period\n                velocity = last.velocity;\n                velocityX = last.velocityX;\n                velocityY = last.velocityY;\n                direction = last.direction;\n            }\n            input.velocity = velocity;\n            input.velocityX = velocityX;\n            input.velocityY = velocityY;\n            input.direction = direction;\n        }\n        /**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\n        function simpleCloneInputData(input) {\n            // make a simple copy of the pointers because we will get a reference if we don't\n            // we only need clientXY for the calculations\n            var pointers = [];\n            var i = 0;\n            while (i < input.pointers.length) {\n                pointers[i] = {\n                    clientX: round(input.pointers[i].clientX),\n                    clientY: round(input.pointers[i].clientY)\n                };\n                i++;\n            }\n            return {\n                timeStamp: now(),\n                pointers: pointers,\n                center: getCenter(pointers),\n                deltaX: input.deltaX,\n                deltaY: input.deltaY\n            };\n        }\n        /**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\n        function getCenter(pointers) {\n            var pointersLength = pointers.length;\n            // no need to loop when only one touch\n            if (pointersLength === 1) {\n                return {\n                    x: round(pointers[0].clientX),\n                    y: round(pointers[0].clientY)\n                };\n            }\n            var x = 0, y = 0, i = 0;\n            while (i < pointersLength) {\n                x += pointers[i].clientX;\n                y += pointers[i].clientY;\n                i++;\n            }\n            return {\n                x: round(x / pointersLength),\n                y: round(y / pointersLength)\n            };\n        }\n        /**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\n        function getVelocity(deltaTime, x, y) {\n            return {\n                x: x / deltaTime || 0,\n                y: y / deltaTime || 0\n            };\n        }\n        /**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\n        function getDirection(x, y) {\n            if (x === y) {\n                return DIRECTION_NONE;\n            }\n            if (abs(x) >= abs(y)) {\n                return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n            }\n            return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n        }\n        /**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\n        function getDistance(p1, p2, props) {\n            if (!props) {\n                props = PROPS_XY;\n            }\n            var x = p2[props[0]] - p1[props[0]], y = p2[props[1]] - p1[props[1]];\n            return Math.sqrt(x * x + y * y);\n        }\n        /**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\n        function getAngle(p1, p2, props) {\n            if (!props) {\n                props = PROPS_XY;\n            }\n            var x = p2[props[0]] - p1[props[0]], y = p2[props[1]] - p1[props[1]];\n            return Math.atan2(y, x) * 180 / Math.PI;\n        }\n        /**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\n        function getRotation(start, end) {\n            return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n        }\n        /**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\n        function getScale(start, end) {\n            return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n        }\n        var MOUSE_INPUT_MAP = {\n            mousedown: INPUT_START,\n            mousemove: INPUT_MOVE,\n            mouseup: INPUT_END\n        };\n        var MOUSE_ELEMENT_EVENTS = 'mousedown';\n        var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n        /**\n * Mouse events input\n * @constructor\n * @extends Input\n */\n        function MouseInput() {\n            this.evEl = MOUSE_ELEMENT_EVENTS;\n            this.evWin = MOUSE_WINDOW_EVENTS;\n            this.pressed = false;\n            // mousedown state\n            Input.apply(this, arguments);\n        }\n        inherit(MouseInput, Input, {\n            /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n            handler: function MEhandler(ev) {\n                var eventType = MOUSE_INPUT_MAP[ev.type];\n                // on start we want to have the left mouse button down\n                if (eventType & INPUT_START && ev.button === 0) {\n                    this.pressed = true;\n                }\n                if (eventType & INPUT_MOVE && ev.which !== 1) {\n                    eventType = INPUT_END;\n                }\n                // mouse must be down\n                if (!this.pressed) {\n                    return;\n                }\n                if (eventType & INPUT_END) {\n                    this.pressed = false;\n                }\n                this.callback(this.manager, eventType, {\n                    pointers: [ev],\n                    changedPointers: [ev],\n                    pointerType: INPUT_TYPE_MOUSE,\n                    srcEvent: ev\n                });\n            }\n        });\n        var POINTER_INPUT_MAP = {\n            pointerdown: INPUT_START,\n            pointermove: INPUT_MOVE,\n            pointerup: INPUT_END,\n            pointercancel: INPUT_CANCEL,\n            pointerout: INPUT_CANCEL\n        };\n        // in IE10 the pointer types is defined as an enum\n        var IE10_POINTER_TYPE_ENUM = {\n            2: INPUT_TYPE_TOUCH,\n            3: INPUT_TYPE_PEN,\n            4: INPUT_TYPE_MOUSE,\n            5: INPUT_TYPE_KINECT    // see https://twitter.com/jacobrossi/status/480596438489890816\n        };\n        var POINTER_ELEMENT_EVENTS = 'pointerdown';\n        var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n        // IE10 has prefixed support, and case-sensitive\n        if (window.MSPointerEvent && !window.PointerEvent) {\n            POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n            POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n        }\n        /**\n * Pointer events input\n * @constructor\n * @extends Input\n */\n        function PointerEventInput() {\n            this.evEl = POINTER_ELEMENT_EVENTS;\n            this.evWin = POINTER_WINDOW_EVENTS;\n            Input.apply(this, arguments);\n            this.store = this.manager.session.pointerEvents = [];\n        }\n        inherit(PointerEventInput, Input, {\n            /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n            handler: function PEhandler(ev) {\n                var store = this.store;\n                var removePointer = false;\n                var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n                var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n                var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n                var isTouch = pointerType == INPUT_TYPE_TOUCH;\n                // get index of the event in the store\n                var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n                // start and mouse must be down\n                if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n                    if (storeIndex < 0) {\n                        store.push(ev);\n                        storeIndex = store.length - 1;\n                    }\n                } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n                    removePointer = true;\n                }\n                // it not found, so the pointer hasn't been down (so it's probably a hover)\n                if (storeIndex < 0) {\n                    return;\n                }\n                // update the event in the store\n                store[storeIndex] = ev;\n                this.callback(this.manager, eventType, {\n                    pointers: store,\n                    changedPointers: [ev],\n                    pointerType: pointerType,\n                    srcEvent: ev\n                });\n                if (removePointer) {\n                    // remove from the store\n                    store.splice(storeIndex, 1);\n                }\n            }\n        });\n        var SINGLE_TOUCH_INPUT_MAP = {\n            touchstart: INPUT_START,\n            touchmove: INPUT_MOVE,\n            touchend: INPUT_END,\n            touchcancel: INPUT_CANCEL\n        };\n        var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n        var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n        /**\n * Touch events input\n * @constructor\n * @extends Input\n */\n        function SingleTouchInput() {\n            this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n            this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n            this.started = false;\n            Input.apply(this, arguments);\n        }\n        inherit(SingleTouchInput, Input, {\n            handler: function TEhandler(ev) {\n                var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n                // should we handle the touch events?\n                if (type === INPUT_START) {\n                    this.started = true;\n                }\n                if (!this.started) {\n                    return;\n                }\n                var touches = normalizeSingleTouches.call(this, ev, type);\n                // when done, reset the started state\n                if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n                    this.started = false;\n                }\n                this.callback(this.manager, type, {\n                    pointers: touches[0],\n                    changedPointers: touches[1],\n                    pointerType: INPUT_TYPE_TOUCH,\n                    srcEvent: ev\n                });\n            }\n        });\n        /**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\n        function normalizeSingleTouches(ev, type) {\n            var all = toArray(ev.touches);\n            var changed = toArray(ev.changedTouches);\n            if (type & (INPUT_END | INPUT_CANCEL)) {\n                all = uniqueArray(all.concat(changed), 'identifier', true);\n            }\n            return [\n                all,\n                changed\n            ];\n        }\n        var TOUCH_INPUT_MAP = {\n            touchstart: INPUT_START,\n            touchmove: INPUT_MOVE,\n            touchend: INPUT_END,\n            touchcancel: INPUT_CANCEL\n        };\n        var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n        /**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\n        function TouchInput() {\n            this.evTarget = TOUCH_TARGET_EVENTS;\n            this.targetIds = {};\n            Input.apply(this, arguments);\n        }\n        inherit(TouchInput, Input, {\n            handler: function MTEhandler(ev) {\n                var type = TOUCH_INPUT_MAP[ev.type];\n                var touches = getTouches.call(this, ev, type);\n                if (!touches) {\n                    return;\n                }\n                this.callback(this.manager, type, {\n                    pointers: touches[0],\n                    changedPointers: touches[1],\n                    pointerType: INPUT_TYPE_TOUCH,\n                    srcEvent: ev\n                });\n            }\n        });\n        /**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\n        function getTouches(ev, type) {\n            var allTouches = toArray(ev.touches);\n            var targetIds = this.targetIds;\n            // when there is only one touch, the process can be simplified\n            if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n                targetIds[allTouches[0].identifier] = true;\n                return [\n                    allTouches,\n                    allTouches\n                ];\n            }\n            var i, targetTouches, changedTouches = toArray(ev.changedTouches), changedTargetTouches = [], target = this.target;\n            // get target touches from touches\n            targetTouches = allTouches.filter(function (touch) {\n                return hasParent(touch.target, target);\n            });\n            // collect touches\n            if (type === INPUT_START) {\n                i = 0;\n                while (i < targetTouches.length) {\n                    targetIds[targetTouches[i].identifier] = true;\n                    i++;\n                }\n            }\n            // filter changed touches to only contain touches that exist in the collected target ids\n            i = 0;\n            while (i < changedTouches.length) {\n                if (targetIds[changedTouches[i].identifier]) {\n                    changedTargetTouches.push(changedTouches[i]);\n                }\n                // cleanup removed touches\n                if (type & (INPUT_END | INPUT_CANCEL)) {\n                    delete targetIds[changedTouches[i].identifier];\n                }\n                i++;\n            }\n            if (!changedTargetTouches.length) {\n                return;\n            }\n            return [\n                // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n                uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n                changedTargetTouches\n            ];\n        }\n        /**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n        var DEDUP_TIMEOUT = 2500;\n        var DEDUP_DISTANCE = 25;\n        function TouchMouseInput() {\n            Input.apply(this, arguments);\n            var handler = bindFn(this.handler, this);\n            this.touch = new TouchInput(this.manager, handler);\n            this.mouse = new MouseInput(this.manager, handler);\n            this.primaryTouch = null;\n            this.lastTouches = [];\n        }\n        inherit(TouchMouseInput, Input, {\n            /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n            handler: function TMEhandler(manager, inputEvent, inputData) {\n                var isTouch = inputData.pointerType == INPUT_TYPE_TOUCH, isMouse = inputData.pointerType == INPUT_TYPE_MOUSE;\n                if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n                    return;\n                }\n                // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n                if (isTouch) {\n                    recordTouches.call(this, inputEvent, inputData);\n                } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n                    return;\n                }\n                this.callback(manager, inputEvent, inputData);\n            },\n            /**\n     * remove the event listeners\n     */\n            destroy: function destroy() {\n                this.touch.destroy();\n                this.mouse.destroy();\n            }\n        });\n        function recordTouches(eventType, eventData) {\n            if (eventType & INPUT_START) {\n                this.primaryTouch = eventData.changedPointers[0].identifier;\n                setLastTouch.call(this, eventData);\n            } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n                setLastTouch.call(this, eventData);\n            }\n        }\n        function setLastTouch(eventData) {\n            var touch = eventData.changedPointers[0];\n            if (touch.identifier === this.primaryTouch) {\n                var lastTouch = {\n                    x: touch.clientX,\n                    y: touch.clientY\n                };\n                this.lastTouches.push(lastTouch);\n                var lts = this.lastTouches;\n                var removeLastTouch = function () {\n                    var i = lts.indexOf(lastTouch);\n                    if (i > -1) {\n                        lts.splice(i, 1);\n                    }\n                };\n                setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n            }\n        }\n        function isSyntheticEvent(eventData) {\n            var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n            for (var i = 0; i < this.lastTouches.length; i++) {\n                var t = this.lastTouches[i];\n                var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n                if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n        var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n        // magical touchAction value\n        var TOUCH_ACTION_COMPUTE = 'compute';\n        var TOUCH_ACTION_AUTO = 'auto';\n        var TOUCH_ACTION_MANIPULATION = 'manipulation';\n        // not implemented\n        var TOUCH_ACTION_NONE = 'none';\n        var TOUCH_ACTION_PAN_X = 'pan-x';\n        var TOUCH_ACTION_PAN_Y = 'pan-y';\n        var TOUCH_ACTION_MAP = getTouchActionProps();\n        /**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\n        function TouchAction(manager, value) {\n            this.manager = manager;\n            this.set(value);\n        }\n        TouchAction.prototype = {\n            /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n            set: function (value) {\n                // find out the touch-action by the event handlers\n                if (value == TOUCH_ACTION_COMPUTE) {\n                    value = this.compute();\n                }\n                if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n                    this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n                }\n                this.actions = value.toLowerCase().trim();\n            },\n            /**\n     * just re-set the touchAction value\n     */\n            update: function () {\n                this.set(this.manager.options.touchAction);\n            },\n            /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n            compute: function () {\n                var actions = [];\n                each(this.manager.recognizers, function (recognizer) {\n                    if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                        actions = actions.concat(recognizer.getTouchAction());\n                    }\n                });\n                return cleanTouchActions(actions.join(' '));\n            },\n            /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n            preventDefaults: function (input) {\n                var srcEvent = input.srcEvent;\n                var direction = input.offsetDirection;\n                // if the touch action did prevented once this session\n                if (this.manager.session.prevented) {\n                    srcEvent.preventDefault();\n                    return;\n                }\n                var actions = this.actions;\n                var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n                var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n                var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n                if (hasNone) {\n                    //do not prevent defaults if this is a tap gesture\n                    var isTapPointer = input.pointers.length === 1;\n                    var isTapMovement = input.distance < 2;\n                    var isTapTouchTime = input.deltaTime < 250;\n                    if (isTapPointer && isTapMovement && isTapTouchTime) {\n                        return;\n                    }\n                }\n                if (hasPanX && hasPanY) {\n                    // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n                    return;\n                }\n                if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n                    return this.preventSrc(srcEvent);\n                }\n            },\n            /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n            preventSrc: function (srcEvent) {\n                this.manager.session.prevented = true;\n                srcEvent.preventDefault();\n            }\n        };\n        /**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\n        function cleanTouchActions(actions) {\n            // none\n            if (inStr(actions, TOUCH_ACTION_NONE)) {\n                return TOUCH_ACTION_NONE;\n            }\n            var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n            var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n            // if both pan-x and pan-y are set (different recognizers\n            // for different directions, e.g. horizontal pan but vertical swipe?)\n            // we need none (as otherwise with pan-x pan-y combined none of these\n            // recognizers will work, since the browser would handle all panning\n            if (hasPanX && hasPanY) {\n                return TOUCH_ACTION_NONE;\n            }\n            // pan-x OR pan-y\n            if (hasPanX || hasPanY) {\n                return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n            }\n            // manipulation\n            if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n                return TOUCH_ACTION_MANIPULATION;\n            }\n            return TOUCH_ACTION_AUTO;\n        }\n        function getTouchActionProps() {\n            if (!NATIVE_TOUCH_ACTION) {\n                return false;\n            }\n            var touchMap = {};\n            var cssSupports = window.CSS && window.CSS.supports;\n            [\n                'auto',\n                'manipulation',\n                'pan-y',\n                'pan-x',\n                'pan-x pan-y',\n                'none'\n            ].forEach(function (val) {\n                // If css.supports is not supported but there is native touch-action assume it supports\n                // all values. This is the case for IE 10 and 11.\n                touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n            });\n            return touchMap;\n        }\n        /**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\n        var STATE_POSSIBLE = 1;\n        var STATE_BEGAN = 2;\n        var STATE_CHANGED = 4;\n        var STATE_ENDED = 8;\n        var STATE_RECOGNIZED = STATE_ENDED;\n        var STATE_CANCELLED = 16;\n        var STATE_FAILED = 32;\n        /**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\n        function Recognizer(options) {\n            this.options = assign({}, this.defaults, options || {});\n            this.id = uniqueId();\n            this.manager = null;\n            // default is enable true\n            this.options.enable = ifUndefined(this.options.enable, true);\n            this.state = STATE_POSSIBLE;\n            this.simultaneous = {};\n            this.requireFail = [];\n        }\n        Recognizer.prototype = {\n            /**\n     * @virtual\n     * @type {Object}\n     */\n            defaults: {},\n            /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n            set: function (options) {\n                assign(this.options, options);\n                // also update the touchAction, in case something changed about the directions/enabled state\n                this.manager && this.manager.touchAction.update();\n                return this;\n            },\n            /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n            recognizeWith: function (otherRecognizer) {\n                if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n                    return this;\n                }\n                var simultaneous = this.simultaneous;\n                otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n                if (!simultaneous[otherRecognizer.id]) {\n                    simultaneous[otherRecognizer.id] = otherRecognizer;\n                    otherRecognizer.recognizeWith(this);\n                }\n                return this;\n            },\n            /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n            dropRecognizeWith: function (otherRecognizer) {\n                if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n                    return this;\n                }\n                otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n                delete this.simultaneous[otherRecognizer.id];\n                return this;\n            },\n            /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n            requireFailure: function (otherRecognizer) {\n                if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n                    return this;\n                }\n                var requireFail = this.requireFail;\n                otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n                if (inArray(requireFail, otherRecognizer) === -1) {\n                    requireFail.push(otherRecognizer);\n                    otherRecognizer.requireFailure(this);\n                }\n                return this;\n            },\n            /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n            dropRequireFailure: function (otherRecognizer) {\n                if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n                    return this;\n                }\n                otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n                var index = inArray(this.requireFail, otherRecognizer);\n                if (index > -1) {\n                    this.requireFail.splice(index, 1);\n                }\n                return this;\n            },\n            /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n            hasRequireFailures: function () {\n                return this.requireFail.length > 0;\n            },\n            /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n            canRecognizeWith: function (otherRecognizer) {\n                return !!this.simultaneous[otherRecognizer.id];\n            },\n            /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n            emit: function (input) {\n                var self = this;\n                var state = this.state;\n                function emit(event) {\n                    self.manager.emit(event, input);\n                }\n                // 'panstart' and 'panmove'\n                if (state < STATE_ENDED) {\n                    emit(self.options.event + stateStr(state));\n                }\n                emit(self.options.event);\n                // simple 'eventName' events\n                if (input.additionalEvent) {\n                    // additional event(panleft, panright, pinchin, pinchout...)\n                    emit(input.additionalEvent);\n                }\n                // panend and pancancel\n                if (state >= STATE_ENDED) {\n                    emit(self.options.event + stateStr(state));\n                }\n            },\n            /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n            tryEmit: function (input) {\n                if (this.canEmit()) {\n                    return this.emit(input);\n                }\n                // it's failing anyway\n                this.state = STATE_FAILED;\n            },\n            /**\n     * can we emit?\n     * @returns {boolean}\n     */\n            canEmit: function () {\n                var i = 0;\n                while (i < this.requireFail.length) {\n                    if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                        return false;\n                    }\n                    i++;\n                }\n                return true;\n            },\n            /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n            recognize: function (inputData) {\n                // make a new copy of the inputData\n                // so we can change the inputData without messing up the other recognizers\n                var inputDataClone = assign({}, inputData);\n                // is is enabled and allow recognizing?\n                if (!boolOrFn(this.options.enable, [\n                        this,\n                        inputDataClone\n                    ])) {\n                    this.reset();\n                    this.state = STATE_FAILED;\n                    return;\n                }\n                // reset when we've reached the end\n                if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n                    this.state = STATE_POSSIBLE;\n                }\n                this.state = this.process(inputDataClone);\n                // the recognizer has recognized a gesture\n                // so trigger an event\n                if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n                    this.tryEmit(inputDataClone);\n                }\n            },\n            /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n            process: function (inputData) {\n            },\n            // jshint ignore:line\n            /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n            getTouchAction: function () {\n            },\n            /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n            reset: function () {\n            }\n        };\n        /**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\n        function stateStr(state) {\n            if (state & STATE_CANCELLED) {\n                return 'cancel';\n            } else if (state & STATE_ENDED) {\n                return 'end';\n            } else if (state & STATE_CHANGED) {\n                return 'move';\n            } else if (state & STATE_BEGAN) {\n                return 'start';\n            }\n            return '';\n        }\n        /**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\n        function directionStr(direction) {\n            if (direction == DIRECTION_DOWN) {\n                return 'down';\n            } else if (direction == DIRECTION_UP) {\n                return 'up';\n            } else if (direction == DIRECTION_LEFT) {\n                return 'left';\n            } else if (direction == DIRECTION_RIGHT) {\n                return 'right';\n            }\n            return '';\n        }\n        /**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\n        function getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n            var manager = recognizer.manager;\n            if (manager) {\n                return manager.get(otherRecognizer);\n            }\n            return otherRecognizer;\n        }\n        /**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\n        function AttrRecognizer() {\n            Recognizer.apply(this, arguments);\n        }\n        inherit(AttrRecognizer, Recognizer, {\n            /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n            defaults: {\n                /**\n         * @type {Number}\n         * @default 1\n         */\n                pointers: 1\n            },\n            /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n            attrTest: function (input) {\n                var optionPointers = this.options.pointers;\n                return optionPointers === 0 || input.pointers.length === optionPointers;\n            },\n            /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n            process: function (input) {\n                var state = this.state;\n                var eventType = input.eventType;\n                var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n                var isValid = this.attrTest(input);\n                // on cancel input and we've recognized before, return STATE_CANCELLED\n                if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n                    return state | STATE_CANCELLED;\n                } else if (isRecognized || isValid) {\n                    if (eventType & INPUT_END) {\n                        return state | STATE_ENDED;\n                    } else if (!(state & STATE_BEGAN)) {\n                        return STATE_BEGAN;\n                    }\n                    return state | STATE_CHANGED;\n                }\n                return STATE_FAILED;\n            }\n        });\n        /**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n        function PanRecognizer() {\n            AttrRecognizer.apply(this, arguments);\n            this.pX = null;\n            this.pY = null;\n        }\n        inherit(PanRecognizer, AttrRecognizer, {\n            /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n            defaults: {\n                event: 'pan',\n                threshold: 10,\n                pointers: 1,\n                direction: DIRECTION_ALL\n            },\n            getTouchAction: function () {\n                var direction = this.options.direction;\n                var actions = [];\n                if (direction & DIRECTION_HORIZONTAL) {\n                    actions.push(TOUCH_ACTION_PAN_Y);\n                }\n                if (direction & DIRECTION_VERTICAL) {\n                    actions.push(TOUCH_ACTION_PAN_X);\n                }\n                return actions;\n            },\n            directionTest: function (input) {\n                var options = this.options;\n                var hasMoved = true;\n                var distance = input.distance;\n                var direction = input.direction;\n                var x = input.deltaX;\n                var y = input.deltaY;\n                // lock to axis?\n                if (!(direction & options.direction)) {\n                    if (options.direction & DIRECTION_HORIZONTAL) {\n                        direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                        hasMoved = x != this.pX;\n                        distance = Math.abs(input.deltaX);\n                    } else {\n                        direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n                        hasMoved = y != this.pY;\n                        distance = Math.abs(input.deltaY);\n                    }\n                }\n                input.direction = direction;\n                return hasMoved && distance > options.threshold && direction & options.direction;\n            },\n            attrTest: function (input) {\n                return AttrRecognizer.prototype.attrTest.call(this, input) && (this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n            },\n            emit: function (input) {\n                this.pX = input.deltaX;\n                this.pY = input.deltaY;\n                var direction = directionStr(input.direction);\n                if (direction) {\n                    input.additionalEvent = this.options.event + direction;\n                }\n                this._super.emit.call(this, input);\n            }\n        });\n        /**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\n        function PinchRecognizer() {\n            AttrRecognizer.apply(this, arguments);\n        }\n        inherit(PinchRecognizer, AttrRecognizer, {\n            /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n            defaults: {\n                event: 'pinch',\n                threshold: 0,\n                pointers: 2\n            },\n            getTouchAction: function () {\n                return [TOUCH_ACTION_NONE];\n            },\n            attrTest: function (input) {\n                return this._super.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n            },\n            emit: function (input) {\n                if (input.scale !== 1) {\n                    var inOut = input.scale < 1 ? 'in' : 'out';\n                    input.additionalEvent = this.options.event + inOut;\n                }\n                this._super.emit.call(this, input);\n            }\n        });\n        /**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\n        function PressRecognizer() {\n            Recognizer.apply(this, arguments);\n            this._timer = null;\n            this._input = null;\n        }\n        inherit(PressRecognizer, Recognizer, {\n            /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n            defaults: {\n                event: 'press',\n                pointers: 1,\n                time: 251,\n                // minimal time of the pointer to be pressed\n                threshold: 9    // a minimal movement is ok, but keep it low\n            },\n            getTouchAction: function () {\n                return [TOUCH_ACTION_AUTO];\n            },\n            process: function (input) {\n                var options = this.options;\n                var validPointers = input.pointers.length === options.pointers;\n                var validMovement = input.distance < options.threshold;\n                var validTime = input.deltaTime > options.time;\n                this._input = input;\n                // we only allow little movement\n                // and we've reached an end event, so a tap is possible\n                if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n                    this.reset();\n                } else if (input.eventType & INPUT_START) {\n                    this.reset();\n                    this._timer = setTimeoutContext(function () {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.time, this);\n                } else if (input.eventType & INPUT_END) {\n                    return STATE_RECOGNIZED;\n                }\n                return STATE_FAILED;\n            },\n            reset: function () {\n                clearTimeout(this._timer);\n            },\n            emit: function (input) {\n                if (this.state !== STATE_RECOGNIZED) {\n                    return;\n                }\n                if (input && input.eventType & INPUT_END) {\n                    this.manager.emit(this.options.event + 'up', input);\n                } else {\n                    this._input.timeStamp = now();\n                    this.manager.emit(this.options.event, this._input);\n                }\n            }\n        });\n        /**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\n        function RotateRecognizer() {\n            AttrRecognizer.apply(this, arguments);\n        }\n        inherit(RotateRecognizer, AttrRecognizer, {\n            /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n            defaults: {\n                event: 'rotate',\n                threshold: 0,\n                pointers: 2\n            },\n            getTouchAction: function () {\n                return [TOUCH_ACTION_NONE];\n            },\n            attrTest: function (input) {\n                return this._super.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n            }\n        });\n        /**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n        function SwipeRecognizer() {\n            AttrRecognizer.apply(this, arguments);\n        }\n        inherit(SwipeRecognizer, AttrRecognizer, {\n            /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n            defaults: {\n                event: 'swipe',\n                threshold: 10,\n                velocity: 0.3,\n                direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n                pointers: 1\n            },\n            getTouchAction: function () {\n                return PanRecognizer.prototype.getTouchAction.call(this);\n            },\n            attrTest: function (input) {\n                var direction = this.options.direction;\n                var velocity;\n                if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n                    velocity = input.overallVelocity;\n                } else if (direction & DIRECTION_HORIZONTAL) {\n                    velocity = input.overallVelocityX;\n                } else if (direction & DIRECTION_VERTICAL) {\n                    velocity = input.overallVelocityY;\n                }\n                return this._super.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers == this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n            },\n            emit: function (input) {\n                var direction = directionStr(input.offsetDirection);\n                if (direction) {\n                    this.manager.emit(this.options.event + direction, input);\n                }\n                this.manager.emit(this.options.event, input);\n            }\n        });\n        /**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\n        function TapRecognizer() {\n            Recognizer.apply(this, arguments);\n            // previous time and center,\n            // used for tap counting\n            this.pTime = false;\n            this.pCenter = false;\n            this._timer = null;\n            this._input = null;\n            this.count = 0;\n        }\n        inherit(TapRecognizer, Recognizer, {\n            /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n            defaults: {\n                event: 'tap',\n                pointers: 1,\n                taps: 1,\n                interval: 300,\n                // max time between the multi-tap taps\n                time: 250,\n                // max time of the pointer to be down (like finger on the screen)\n                threshold: 9,\n                // a minimal movement is ok, but keep it low\n                posThreshold: 10    // a multi-tap can be a bit off the initial position\n            },\n            getTouchAction: function () {\n                return [TOUCH_ACTION_MANIPULATION];\n            },\n            process: function (input) {\n                var options = this.options;\n                var validPointers = input.pointers.length === options.pointers;\n                var validMovement = input.distance < options.threshold;\n                var validTouchTime = input.deltaTime < options.time;\n                this.reset();\n                if (input.eventType & INPUT_START && this.count === 0) {\n                    return this.failTimeout();\n                }\n                // we only allow little movement\n                // and we've reached an end event, so a tap is possible\n                if (validMovement && validTouchTime && validPointers) {\n                    if (input.eventType != INPUT_END) {\n                        return this.failTimeout();\n                    }\n                    var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n                    var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n                    this.pTime = input.timeStamp;\n                    this.pCenter = input.center;\n                    if (!validMultiTap || !validInterval) {\n                        this.count = 1;\n                    } else {\n                        this.count += 1;\n                    }\n                    this._input = input;\n                    // if tap count matches we have recognized it,\n                    // else it has began recognizing...\n                    var tapCount = this.count % options.taps;\n                    if (tapCount === 0) {\n                        // no failing requirements, immediately trigger the tap event\n                        // or wait as long as the multitap interval to trigger\n                        if (!this.hasRequireFailures()) {\n                            return STATE_RECOGNIZED;\n                        } else {\n                            this._timer = setTimeoutContext(function () {\n                                this.state = STATE_RECOGNIZED;\n                                this.tryEmit();\n                            }, options.interval, this);\n                            return STATE_BEGAN;\n                        }\n                    }\n                }\n                return STATE_FAILED;\n            },\n            failTimeout: function () {\n                this._timer = setTimeoutContext(function () {\n                    this.state = STATE_FAILED;\n                }, this.options.interval, this);\n                return STATE_FAILED;\n            },\n            reset: function () {\n                clearTimeout(this._timer);\n            },\n            emit: function () {\n                if (this.state == STATE_RECOGNIZED) {\n                    this._input.tapCount = this.count;\n                    this.manager.emit(this.options.event, this._input);\n                }\n            }\n        });\n        /**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n        function Hammer(element, options) {\n            options = options || {};\n            options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n            return new Manager(element, options);\n        }\n        /**\n * @const {string}\n */\n        Hammer.VERSION = '2.0.7';\n        /**\n * default settings\n * @namespace\n */\n        Hammer.defaults = {\n            /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n            domEvents: false,\n            /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n            touchAction: TOUCH_ACTION_COMPUTE,\n            /**\n     * @type {Boolean}\n     * @default true\n     */\n            enable: true,\n            /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n            inputTarget: null,\n            /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n            inputClass: null,\n            /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n            preset: [\n                // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n                [\n                    RotateRecognizer,\n                    { enable: false }\n                ],\n                [\n                    PinchRecognizer,\n                    { enable: false },\n                    ['rotate']\n                ],\n                [\n                    SwipeRecognizer,\n                    { direction: DIRECTION_HORIZONTAL }\n                ],\n                [\n                    PanRecognizer,\n                    { direction: DIRECTION_HORIZONTAL },\n                    ['swipe']\n                ],\n                [TapRecognizer],\n                [\n                    TapRecognizer,\n                    {\n                        event: 'doubletap',\n                        taps: 2\n                    },\n                    ['tap']\n                ],\n                [PressRecognizer]\n            ],\n            /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n            cssProps: {\n                /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n                userSelect: 'none',\n                /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n                touchSelect: 'none',\n                /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n                touchCallout: 'none',\n                /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n                contentZooming: 'none',\n                /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n                userDrag: 'none',\n                /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n                tapHighlightColor: 'rgba(0,0,0,0)'\n            }\n        };\n        var STOP = 1;\n        var FORCED_STOP = 2;\n        /**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n        function Manager(element, options) {\n            this.options = assign({}, Hammer.defaults, options || {});\n            this.options.inputTarget = this.options.inputTarget || element;\n            this.handlers = {};\n            this.session = {};\n            this.recognizers = [];\n            this.oldCssProps = {};\n            this.element = element;\n            this.input = createInputInstance(this);\n            this.touchAction = new TouchAction(this, this.options.touchAction);\n            toggleCssProps(this, true);\n            each(this.options.recognizers, function (item) {\n                var recognizer = this.add(new item[0](item[1]));\n                item[2] && recognizer.recognizeWith(item[2]);\n                item[3] && recognizer.requireFailure(item[3]);\n            }, this);\n        }\n        Manager.prototype = {\n            /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n            set: function (options) {\n                assign(this.options, options);\n                // Options that need a little more setup\n                if (options.touchAction) {\n                    this.touchAction.update();\n                }\n                if (options.inputTarget) {\n                    // Clean up existing event listeners and reinitialize\n                    this.input.destroy();\n                    this.input.target = options.inputTarget;\n                    this.input.init();\n                }\n                return this;\n            },\n            /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n            stop: function (force) {\n                this.session.stopped = force ? FORCED_STOP : STOP;\n            },\n            /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n            recognize: function (inputData) {\n                var session = this.session;\n                if (session.stopped) {\n                    return;\n                }\n                // run the touch-action polyfill\n                this.touchAction.preventDefaults(inputData);\n                var recognizer;\n                var recognizers = this.recognizers;\n                // this holds the recognizer that is being recognized.\n                // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n                // if no recognizer is detecting a thing, it is set to `null`\n                var curRecognizer = session.curRecognizer;\n                // reset when the last recognizer is recognized\n                // or when we're in a new session\n                if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n                    curRecognizer = session.curRecognizer = null;\n                }\n                var i = 0;\n                while (i < recognizers.length) {\n                    recognizer = recognizers[i];\n                    // find out if we are allowed try to recognize the input for this one.\n                    // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n                    // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n                    //      that is being recognized.\n                    // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n                    //      this can be setup with the `recognizeWith()` method on the recognizer.\n                    if (session.stopped !== FORCED_STOP && // 1\n                        (!curRecognizer || recognizer == curRecognizer || // 2\n                        recognizer.canRecognizeWith(curRecognizer))) {\n                        // 3\n                        recognizer.recognize(inputData);\n                    } else {\n                        recognizer.reset();\n                    }\n                    // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n                    // current active recognizer. but only if we don't already have an active recognizer\n                    if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                        curRecognizer = session.curRecognizer = recognizer;\n                    }\n                    i++;\n                }\n            },\n            /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n            get: function (recognizer) {\n                if (recognizer instanceof Recognizer) {\n                    return recognizer;\n                }\n                var recognizers = this.recognizers;\n                for (var i = 0; i < recognizers.length; i++) {\n                    if (recognizers[i].options.event == recognizer) {\n                        return recognizers[i];\n                    }\n                }\n                return null;\n            },\n            /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n            add: function (recognizer) {\n                if (invokeArrayArg(recognizer, 'add', this)) {\n                    return this;\n                }\n                // remove existing\n                var existing = this.get(recognizer.options.event);\n                if (existing) {\n                    this.remove(existing);\n                }\n                this.recognizers.push(recognizer);\n                recognizer.manager = this;\n                this.touchAction.update();\n                return recognizer;\n            },\n            /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n            remove: function (recognizer) {\n                if (invokeArrayArg(recognizer, 'remove', this)) {\n                    return this;\n                }\n                recognizer = this.get(recognizer);\n                // let's make sure this recognizer exists\n                if (recognizer) {\n                    var recognizers = this.recognizers;\n                    var index = inArray(recognizers, recognizer);\n                    if (index !== -1) {\n                        recognizers.splice(index, 1);\n                        this.touchAction.update();\n                    }\n                }\n                return this;\n            },\n            /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n            on: function (events, handler) {\n                if (events === undefined) {\n                    return;\n                }\n                if (handler === undefined) {\n                    return;\n                }\n                var handlers = this.handlers;\n                each(splitStr(events), function (event) {\n                    handlers[event] = handlers[event] || [];\n                    handlers[event].push(handler);\n                });\n                return this;\n            },\n            /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n            off: function (events, handler) {\n                if (events === undefined) {\n                    return;\n                }\n                var handlers = this.handlers;\n                each(splitStr(events), function (event) {\n                    if (!handler) {\n                        delete handlers[event];\n                    } else {\n                        handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n                    }\n                });\n                return this;\n            },\n            /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n            emit: function (event, data) {\n                // we also want to trigger dom events\n                if (this.options.domEvents) {\n                    triggerDomEvent(event, data);\n                }\n                // no handlers, so skip it all\n                var handlers = this.handlers[event] && this.handlers[event].slice();\n                if (!handlers || !handlers.length) {\n                    return;\n                }\n                data.type = event;\n                data.preventDefault = function () {\n                    data.srcEvent.preventDefault();\n                };\n                var i = 0;\n                while (i < handlers.length) {\n                    handlers[i](data);\n                    i++;\n                }\n            },\n            /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n            destroy: function () {\n                this.element && toggleCssProps(this, false);\n                this.handlers = {};\n                this.session = {};\n                this.input.destroy();\n                this.element = null;\n            }\n        };\n        /**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\n        function toggleCssProps(manager, add) {\n            var element = manager.element;\n            if (!element.style) {\n                return;\n            }\n            var prop;\n            each(manager.options.cssProps, function (value, name) {\n                prop = prefixed(element.style, name);\n                if (add) {\n                    manager.oldCssProps[prop] = element.style[prop];\n                    element.style[prop] = value;\n                } else {\n                    element.style[prop] = manager.oldCssProps[prop] || '';\n                }\n            });\n            if (!add) {\n                manager.oldCssProps = {};\n            }\n        }\n        /**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\n        function triggerDomEvent(event, data) {\n            var gestureEvent = document.createEvent('Event');\n            gestureEvent.initEvent(event, true, true);\n            gestureEvent.gesture = data;\n            data.target.dispatchEvent(gestureEvent);\n        }\n        assign(Hammer, {\n            INPUT_START: INPUT_START,\n            INPUT_MOVE: INPUT_MOVE,\n            INPUT_END: INPUT_END,\n            INPUT_CANCEL: INPUT_CANCEL,\n            STATE_POSSIBLE: STATE_POSSIBLE,\n            STATE_BEGAN: STATE_BEGAN,\n            STATE_CHANGED: STATE_CHANGED,\n            STATE_ENDED: STATE_ENDED,\n            STATE_RECOGNIZED: STATE_RECOGNIZED,\n            STATE_CANCELLED: STATE_CANCELLED,\n            STATE_FAILED: STATE_FAILED,\n            DIRECTION_NONE: DIRECTION_NONE,\n            DIRECTION_LEFT: DIRECTION_LEFT,\n            DIRECTION_RIGHT: DIRECTION_RIGHT,\n            DIRECTION_UP: DIRECTION_UP,\n            DIRECTION_DOWN: DIRECTION_DOWN,\n            DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n            DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n            DIRECTION_ALL: DIRECTION_ALL,\n            Manager: Manager,\n            Input: Input,\n            TouchAction: TouchAction,\n            TouchInput: TouchInput,\n            MouseInput: MouseInput,\n            PointerEventInput: PointerEventInput,\n            TouchMouseInput: TouchMouseInput,\n            SingleTouchInput: SingleTouchInput,\n            Recognizer: Recognizer,\n            AttrRecognizer: AttrRecognizer,\n            Tap: TapRecognizer,\n            Pan: PanRecognizer,\n            Swipe: SwipeRecognizer,\n            Pinch: PinchRecognizer,\n            Rotate: RotateRecognizer,\n            Press: PressRecognizer,\n            on: addEventListeners,\n            off: removeEventListeners,\n            each: each,\n            merge: merge,\n            extend: extend,\n            assign: assign,\n            inherit: inherit,\n            bindFn: bindFn,\n            prefixed: prefixed\n        });\n        // this prevents errors when Hammer is loaded in the presence of an AMD\n        //  style loader but by script tag, not by the loader.\n        var freeGlobal = typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {};\n        // jshint ignore:line\n        freeGlobal.Hammer = Hammer;\n        if (typeof define === 'function' && define.amd) {\n            define(function () {\n                return Hammer;\n            });\n        } else if (typeof module != 'undefined' && module.exports) {\n            module.exports = Hammer;\n        } else {\n            window[exportName] = Hammer;\n        }\n    }(window, document, 'Hammer'));\n}","/*kiwi/build/constraint*/\nfunction _(require, module, exports) {\n    var strength_1 = require(324    /* ./strength */);\n    /**\n * An enum defining the linear constraint operators.\n */\n    var Operator;\n    (function (Operator) {\n        Operator[Operator['Le'] = 0] = 'Le';\n        Operator[Operator['Ge'] = 1] = 'Ge';\n        Operator[Operator['Eq'] = 2] = 'Eq';    // ==\n    }(Operator = exports.Operator || (exports.Operator = {})));\n    /**\n * A linear constraint equation.\n *\n * A constraint equation is composed of an expression, an operator,\n * and a strength. The RHS of the equation is implicitly zero.\n *\n * @class\n */\n    var Constraint = function () {\n        /**\n     * Construct a new Constraint.\n     *\n     * @param expression The constraint expression.\n     * @param operator The equation operator.\n     * @param strength The strength of the constraint.\n     */\n        function Constraint(expression, operator, strength) {\n            if (strength === void 0) {\n                strength = strength_1.Strength.required;\n            }\n            this._id = CnId++;\n            this._operator = operator;\n            this._expression = expression;\n            this._strength = strength_1.Strength.clip(strength);\n        }\n        /**\n     * A static constraint comparison function.\n     */\n        Constraint.Compare = function (a, b) {\n            return a.id - b.id;\n        };\n        Constraint.prototype.toString = function () {\n            var _this = this;\n            var op = function () {\n                switch (_this._operator) {\n                case Operator.Le:\n                    return '<=';\n                case Operator.Ge:\n                    return '>=';\n                case Operator.Eq:\n                    return '==';\n                }\n            };\n            return this._expression + ' ' + op() + ' 0';\n        };\n        Object.defineProperty(Constraint.prototype, 'id', {\n            /**\n         * Returns the unique id number of the constraint.\n         */\n            get: function () {\n                return this._id;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constraint.prototype, 'expression', {\n            /**\n         * Returns the expression of the constraint.\n         */\n            get: function () {\n                return this._expression;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constraint.prototype, 'op', {\n            /**\n         * Returns the relational operator of the constraint.\n         */\n            get: function () {\n                return this._operator;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constraint.prototype, 'strength', {\n            /**\n         * Returns the strength of the constraint.\n         */\n            get: function () {\n                return this._strength;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Constraint;\n    }();\n    exports.Constraint = Constraint;\n    /**\n * The internal constraint id counter.\n */\n    var CnId = 0;\n}","/*kiwi/build/expression*/\nfunction _(require, module, exports) {\n    var tsu_1 = require(328    /* ./tsu */);\n    var variable_1 = require(331    /* ./variable */);\n    var maptype_1 = require(322    /* ./maptype */);\n    /**\n * An expression of variable terms and a constant.\n *\n * @class\n */\n    var Expression = function () {\n        function Expression() {\n            var parsed = parseArgs(arguments);\n            this._terms = parsed.terms;\n            this._constant = parsed.constant;\n        }\n        Expression.prototype.toString = function () {\n            var terms = [];\n            tsu_1.forEach(this._terms, function (pair) {\n                terms.push([\n                    pair.first,\n                    pair.second\n                ]);\n            });\n            var first = true;\n            var s = '';\n            for (var _i = 0, terms_1 = terms; _i < terms_1.length; _i++) {\n                var _a = terms_1[_i], v = _a[0], c_1 = _a[1];\n                if (first) {\n                    first = false;\n                    if (c_1 == 1)\n                        s += '' + v;\n                    else if (c_1 == -1)\n                        s += '-' + v;\n                    else\n                        s += c_1 + '*' + v;\n                } else {\n                    if (c_1 == 1)\n                        s += ' + ' + v;\n                    else if (c_1 == -1)\n                        s += ' - ' + v;\n                    else if (c_1 >= 0)\n                        s += ' + ' + c_1 + v;\n                    else\n                        s += ' - ' + -c_1 + v;\n                }\n            }\n            var c = this.constant;\n            if (c < 0)\n                s += ' - ' + -c;\n            else if (c > 0)\n                s += ' + ' + c;\n            return s;\n        };\n        Object.defineProperty(Expression.prototype, 'terms', {\n            /**\n         * Returns the mapping of terms in the expression.\n         *\n         * This *must* be treated as const.\n         */\n            get: function () {\n                return this._terms;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Expression.prototype, 'constant', {\n            /**\n         * Returns the constant of the expression.\n         */\n            get: function () {\n                return this._constant;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Expression.prototype, 'value', {\n            /**\n         * Returns the computed value of the expression.\n         */\n            get: function () {\n                var result = this._constant;\n                tsu_1.forEach(this._terms, function (pair) {\n                    result += pair.first.value * pair.second;\n                });\n                return result;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Expression;\n    }();\n    exports.Expression = Expression;\n    /**\n * An internal argument parsing function.\n */\n    function parseArgs(args) {\n        var constant = 0;\n        var factory = function () {\n            return 0;\n        };\n        var terms = maptype_1.createMap(variable_1.Variable.Compare);\n        for (var i = 0, n = args.length; i < n; ++i) {\n            var item = args[i];\n            if (typeof item === 'number') {\n                constant += item;\n            } else if (item instanceof variable_1.Variable) {\n                terms.setDefault(item, factory).second += 1;\n            } else if (item instanceof Array) {\n                if (item.length !== 2) {\n                    throw new Error('array must have length 2');\n                }\n                var value = item[0];\n                var variable = item[1];\n                if (typeof value !== 'number') {\n                    throw new Error('array item 0 must be a number');\n                }\n                if (!(variable instanceof variable_1.Variable)) {\n                    throw new Error('array item 1 must be a variable');\n                }\n                terms.setDefault(variable, factory).second += value;\n            } else {\n                throw new Error('invalid Expression argument: ' + JSON.stringify(item));\n            }\n        }\n        return {\n            terms: terms,\n            constant: constant\n        };\n    }\n}","/*kiwi/build/index*/\nfunction _(require, module, exports) {\n    /*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n    function __export(m) {\n        for (var p in m)\n            if (!exports.hasOwnProperty(p))\n                exports[p] = m[p];\n    }\n    __export(require(331    /* ./variable */));\n    __export(require(320    /* ./expression */));\n    __export(require(319    /* ./constraint */));\n    __export(require(324    /* ./strength */));\n    __export(require(323    /* ./solver */));\n}","/*kiwi/build/maptype*/\nfunction _(require, module, exports) {\n    var tsu_1 = require(328    /* ./tsu */);\n    function createMap(compare) {\n        return new tsu_1.AssociativeArray(compare);\n    }\n    exports.createMap = createMap;\n}","/*kiwi/build/solver*/\nfunction _(require, module, exports) {\n    var variable_1 = require(331    /* ./variable */);\n    var expression_1 = require(320    /* ./expression */);\n    var constraint_1 = require(319    /* ./constraint */);\n    var strength_1 = require(324    /* ./strength */);\n    var maptype_1 = require(322    /* ./maptype */);\n    var tsu_1 = require(328    /* ./tsu */);\n    /**\n * The constraint solver class.\n *\n * @class\n */\n    var Solver = function () {\n        /**\n     * Construct a new Solver.\n     */\n        function Solver() {\n            this._cnMap = createCnMap();\n            this._rowMap = createRowMap();\n            this._varMap = createVarMap();\n            this._editMap = createEditMap();\n            this._infeasibleRows = [];\n            this._objective = new Row();\n            this._artificial = null;\n            this._idTick = 0;\n        }\n        /**\n     * Add a constraint to the solver.\n     */\n        Solver.prototype.addConstraint = function (constraint) {\n            var cnPair = this._cnMap.find(constraint);\n            if (cnPair !== undefined) {\n                throw new Error('duplicate constraint');\n            }\n            // Creating a row causes symbols to be reserved for the variables\n            // in the constraint. If this method exits with an exception,\n            // then its possible those variables will linger in the var map.\n            // Since its likely that those variables will be used in other\n            // constraints and since exceptional conditions are uncommon,\n            // i'm not too worried about aggressive cleanup of the var map.\n            var data = this._createRow(constraint);\n            var row = data.row;\n            var tag = data.tag;\n            var subject = this._chooseSubject(row, tag);\n            // If chooseSubject couldnt find a valid entering symbol, one\n            // last option is available if the entire row is composed of\n            // dummy variables. If the constant of the row is zero, then\n            // this represents redundant constraints and the new dummy\n            // marker can enter the basis. If the constant is non-zero,\n            // then it represents an unsatisfiable constraint.\n            if (subject.type() === SymbolType.Invalid && row.allDummies()) {\n                if (!nearZero(row.constant())) {\n                    var names = [];\n                    for (var _i = 0, _a = constraint.expression.terms._array; _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        names.push(item.first.name);\n                    }\n                    var op = [\n                        'LE',\n                        'GE',\n                        'EQ'\n                    ][constraint.op];\n                    throw new Error('unsatisfiable constraint [' + names.join(',') + '] operator: ' + op);\n                } else {\n                    subject = tag.marker;\n                }\n            }\n            // If an entering symbol still isn't found, then the row must\n            // be added using an artificial variable. If that fails, then\n            // the row represents an unsatisfiable constraint.\n            if (subject.type() === SymbolType.Invalid) {\n                if (!this._addWithArtificialVariable(row)) {\n                    throw new Error('unsatisfiable constraint');\n                }\n            } else {\n                row.solveFor(subject);\n                this._substitute(subject, row);\n                this._rowMap.insert(subject, row);\n            }\n            this._cnMap.insert(constraint, tag);\n            // Optimizing after each constraint is added performs less\n            // aggregate work due to a smaller average system size. It\n            // also ensures the solver remains in a consistent state.\n            this._optimize(this._objective);\n        };\n        /**\n     * Remove a constraint from the solver.\n     */\n        Solver.prototype.removeConstraint = function (constraint, silent) {\n            if (silent === void 0) {\n                silent = false;\n            }\n            var cnPair = this._cnMap.erase(constraint);\n            if (cnPair === undefined) {\n                if (silent)\n                    return;\n                else\n                    throw new Error('unknown constraint');\n            }\n            // Remove the error effects from the objective function\n            // *before* pivoting, or substitutions into the objective\n            // will lead to incorrect solver results.\n            this._removeConstraintEffects(constraint, cnPair.second);\n            // If the marker is basic, simply drop the row. Otherwise,\n            // pivot the marker into the basis and then drop the row.\n            var marker = cnPair.second.marker;\n            var rowPair = this._rowMap.erase(marker);\n            if (rowPair === undefined) {\n                var leaving = this._getMarkerLeavingSymbol(marker);\n                if (leaving.type() === SymbolType.Invalid) {\n                    throw new Error('failed to find leaving row');\n                }\n                rowPair = this._rowMap.erase(leaving);\n                rowPair.second.solveForEx(leaving, marker);\n                this._substitute(marker, rowPair.second);\n            }\n            // Optimizing after each constraint is removed ensures that the\n            // solver remains consistent. It makes the solver api easier to\n            // use at a small tradeoff for speed.\n            this._optimize(this._objective);\n        };\n        /**\n     * Test whether the solver contains the constraint.\n     */\n        Solver.prototype.hasConstraint = function (constraint) {\n            return this._cnMap.contains(constraint);\n        };\n        /**\n     * Add an edit variable to the solver.\n     */\n        Solver.prototype.addEditVariable = function (variable, strength) {\n            var editPair = this._editMap.find(variable);\n            if (editPair !== undefined) {\n                throw new Error('duplicate edit variable: ' + variable.name);\n            }\n            strength = strength_1.Strength.clip(strength);\n            if (strength === strength_1.Strength.required) {\n                throw new Error('bad required strength');\n            }\n            var expr = new expression_1.Expression(variable);\n            var cn = new constraint_1.Constraint(expr, constraint_1.Operator.Eq, strength);\n            this.addConstraint(cn);\n            var tag = this._cnMap.find(cn).second;\n            var info = {\n                tag: tag,\n                constraint: cn,\n                constant: 0\n            };\n            this._editMap.insert(variable, info);\n        };\n        /**\n     * Remove an edit variable from the solver.\n     */\n        Solver.prototype.removeEditVariable = function (variable, silent) {\n            if (silent === void 0) {\n                silent = false;\n            }\n            var editPair = this._editMap.erase(variable);\n            if (editPair === undefined) {\n                if (silent)\n                    return;\n                else\n                    throw new Error('unknown edit variable: ' + variable.name);\n            }\n            this.removeConstraint(editPair.second.constraint, silent);\n        };\n        /**\n     * Test whether the solver contains the edit variable.\n     */\n        Solver.prototype.hasEditVariable = function (variable) {\n            return this._editMap.contains(variable);\n        };\n        /**\n     * Suggest the value of an edit variable.\n     */\n        Solver.prototype.suggestValue = function (variable, value) {\n            var editPair = this._editMap.find(variable);\n            if (editPair === undefined) {\n                throw new Error('unknown edit variable: ' + variable.name);\n            }\n            var rows = this._rowMap;\n            var info = editPair.second;\n            var delta = value - info.constant;\n            info.constant = value;\n            // Check first if the positive error variable is basic.\n            var marker = info.tag.marker;\n            var rowPair = rows.find(marker);\n            if (rowPair !== undefined) {\n                if (rowPair.second.add(-delta) < 0) {\n                    this._infeasibleRows.push(marker);\n                }\n                this._dualOptimize();\n                return;\n            }\n            // Check next if the negative error variable is basic.\n            var other = info.tag.other;\n            rowPair = rows.find(other);\n            if (rowPair !== undefined) {\n                if (rowPair.second.add(delta) < 0) {\n                    this._infeasibleRows.push(other);\n                }\n                this._dualOptimize();\n                return;\n            }\n            // Otherwise update each row where the error variables exist.\n            for (var i = 0, n = rows.size(); i < n; ++i) {\n                var rowPair_1 = rows.itemAt(i);\n                var row = rowPair_1.second;\n                var coeff = row.coefficientFor(marker);\n                if (coeff !== 0 && row.add(delta * coeff) < 0 && rowPair_1.first.type() !== SymbolType.External) {\n                    this._infeasibleRows.push(rowPair_1.first);\n                }\n            }\n            this._dualOptimize();\n        };\n        /**\n     * Update the values of the variables.\n     */\n        Solver.prototype.updateVariables = function () {\n            var vars = this._varMap;\n            var rows = this._rowMap;\n            for (var i = 0, n = vars.size(); i < n; ++i) {\n                var pair = vars.itemAt(i);\n                var rowPair = rows.find(pair.second);\n                var c = 0;\n                if (rowPair !== undefined) {\n                    c = rowPair.second.constant();\n                    // Normalize -0 to 0. Note that c === -0 is the same as c === 0, so we set c to zero\n                    // for both kinds of zeros. One would preferably use Object.is(c, -0), but that's not\n                    // widely supported yet.\n                    if (c === -0)\n                        c = 0;\n                }\n                pair.first.setValue(c);\n            }\n        };\n        Solver.prototype.getConstraints = function () {\n            var constraints = [];\n            tsu_1.forEach(this._cnMap, function (pair) {\n                constraints.push(pair.first);\n            });\n            return constraints;\n        };\n        Object.defineProperty(Solver.prototype, 'numConstraints', {\n            get: function () {\n                return this._cnMap.size();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Solver.prototype, 'numEditVariables', {\n            get: function () {\n                return this._editMap.size();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n     * Get the symbol for the given variable.\n     *\n     * If a symbol does not exist for the variable, one will be created.\n     */\n        Solver.prototype._getVarSymbol = function (variable) {\n            var _this = this;\n            var factory = function () {\n                return _this._makeSymbol(SymbolType.External);\n            };\n            return this._varMap.setDefault(variable, factory).second;\n        };\n        /**\n     * Create a new Row object for the given constraint.\n     *\n     * The terms in the constraint will be converted to cells in the row.\n     * Any term in the constraint with a coefficient of zero is ignored.\n     * This method uses the `_getVarSymbol` method to get the symbol for\n     * the variables added to the row. If the symbol for a given cell\n     * variable is basic, the cell variable will be substituted with the\n     * basic row.\n     *\n     * The necessary slack and error variables will be added to the row.\n     * If the constant for the row is negative, the sign for the row\n     * will be inverted so the constant becomes positive.\n     *\n     * Returns the created Row and the tag for tracking the constraint.\n     */\n        Solver.prototype._createRow = function (constraint) {\n            var expr = constraint.expression;\n            var row = new Row(expr.constant);\n            // Substitute the current basic variables into the row.\n            var terms = expr.terms;\n            for (var i = 0, n = terms.size(); i < n; ++i) {\n                var termPair = terms.itemAt(i);\n                if (!nearZero(termPair.second)) {\n                    var symbol = this._getVarSymbol(termPair.first);\n                    var basicPair = this._rowMap.find(symbol);\n                    if (basicPair !== undefined) {\n                        row.insertRow(basicPair.second, termPair.second);\n                    } else {\n                        row.insertSymbol(symbol, termPair.second);\n                    }\n                }\n            }\n            // Add the necessary slack, error, and dummy variables.\n            var objective = this._objective;\n            var strength = constraint.strength;\n            var tag = {\n                marker: INVALID_SYMBOL,\n                other: INVALID_SYMBOL\n            };\n            switch (constraint.op) {\n            case constraint_1.Operator.Le:\n            case constraint_1.Operator.Ge: {\n                    var coeff = constraint.op === constraint_1.Operator.Le ? 1 : -1;\n                    var slack = this._makeSymbol(SymbolType.Slack);\n                    tag.marker = slack;\n                    row.insertSymbol(slack, coeff);\n                    if (strength < strength_1.Strength.required) {\n                        var error = this._makeSymbol(SymbolType.Error);\n                        tag.other = error;\n                        row.insertSymbol(error, -coeff);\n                        objective.insertSymbol(error, strength);\n                    }\n                    break;\n                }\n            case constraint_1.Operator.Eq: {\n                    if (strength < strength_1.Strength.required) {\n                        var errplus = this._makeSymbol(SymbolType.Error);\n                        var errminus = this._makeSymbol(SymbolType.Error);\n                        tag.marker = errplus;\n                        tag.other = errminus;\n                        row.insertSymbol(errplus, -1);\n                        // v = eplus - eminus\n                        row.insertSymbol(errminus, 1);\n                        // v - eplus + eminus = 0\n                        objective.insertSymbol(errplus, strength);\n                        objective.insertSymbol(errminus, strength);\n                    } else {\n                        var dummy = this._makeSymbol(SymbolType.Dummy);\n                        tag.marker = dummy;\n                        row.insertSymbol(dummy);\n                    }\n                    break;\n                }\n            }\n            // Ensure the row has a positive constant.\n            if (row.constant() < 0) {\n                row.reverseSign();\n            }\n            return {\n                row: row,\n                tag: tag\n            };\n        };\n        /**\n     * Choose the subject for solving for the row.\n     *\n     * This method will choose the best subject for using as the solve\n     * target for the row. An invalid symbol will be returned if there\n     * is no valid target.\n     *\n     * The symbols are chosen according to the following precedence:\n     *\n     * 1) The first symbol representing an external variable.\n     * 2) A negative slack or error tag variable.\n     *\n     * If a subject cannot be found, an invalid symbol will be returned.\n     */\n        Solver.prototype._chooseSubject = function (row, tag) {\n            var cells = row.cells();\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                if (pair.first.type() === SymbolType.External) {\n                    return pair.first;\n                }\n            }\n            var type = tag.marker.type();\n            if (type === SymbolType.Slack || type === SymbolType.Error) {\n                if (row.coefficientFor(tag.marker) < 0) {\n                    return tag.marker;\n                }\n            }\n            type = tag.other.type();\n            if (type === SymbolType.Slack || type === SymbolType.Error) {\n                if (row.coefficientFor(tag.other) < 0) {\n                    return tag.other;\n                }\n            }\n            return INVALID_SYMBOL;\n        };\n        /**\n     * Add the row to the tableau using an artificial variable.\n     *\n     * This will return false if the constraint cannot be satisfied.\n     */\n        Solver.prototype._addWithArtificialVariable = function (row) {\n            // Create and add the artificial variable to the tableau.\n            var art = this._makeSymbol(SymbolType.Slack);\n            this._rowMap.insert(art, row.copy());\n            this._artificial = row.copy();\n            // Optimize the artificial objective. This is successful\n            // only if the artificial objective is optimized to zero.\n            this._optimize(this._artificial);\n            var success = nearZero(this._artificial.constant());\n            this._artificial = null;\n            // If the artificial variable is basic, pivot the row so that\n            // it becomes non-basic. If the row is constant, exit early.\n            var pair = this._rowMap.erase(art);\n            if (pair !== undefined) {\n                var basicRow = pair.second;\n                if (basicRow.isConstant()) {\n                    return success;\n                }\n                var entering = this._anyPivotableSymbol(basicRow);\n                if (entering.type() === SymbolType.Invalid) {\n                    return false;    // unsatisfiable (will this ever happen?)\n                }\n                basicRow.solveForEx(art, entering);\n                this._substitute(entering, basicRow);\n                this._rowMap.insert(entering, basicRow);\n            }\n            // Remove the artificial variable from the tableau.\n            var rows = this._rowMap;\n            for (var i = 0, n = rows.size(); i < n; ++i) {\n                rows.itemAt(i).second.removeSymbol(art);\n            }\n            this._objective.removeSymbol(art);\n            return success;\n        };\n        /**\n     * Substitute the parametric symbol with the given row.\n     *\n     * This method will substitute all instances of the parametric symbol\n     * in the tableau and the objective function with the given row.\n     */\n        Solver.prototype._substitute = function (symbol, row) {\n            var rows = this._rowMap;\n            for (var i = 0, n = rows.size(); i < n; ++i) {\n                var pair = rows.itemAt(i);\n                pair.second.substitute(symbol, row);\n                if (pair.second.constant() < 0 && pair.first.type() !== SymbolType.External) {\n                    this._infeasibleRows.push(pair.first);\n                }\n            }\n            this._objective.substitute(symbol, row);\n            if (this._artificial) {\n                this._artificial.substitute(symbol, row);\n            }\n        };\n        /**\n     * Optimize the system for the given objective function.\n     *\n     * This method performs iterations of Phase 2 of the simplex method\n     * until the objective function reaches a minimum.\n     */\n        Solver.prototype._optimize = function (objective) {\n            while (true) {\n                var entering = this._getEnteringSymbol(objective);\n                if (entering.type() === SymbolType.Invalid) {\n                    return;\n                }\n                var leaving = this._getLeavingSymbol(entering);\n                if (leaving.type() === SymbolType.Invalid) {\n                    throw new Error('the objective is unbounded');\n                }\n                // pivot the entering symbol into the basis\n                var row = this._rowMap.erase(leaving).second;\n                row.solveForEx(leaving, entering);\n                this._substitute(entering, row);\n                this._rowMap.insert(entering, row);\n            }\n        };\n        /**\n     * Optimize the system using the dual of the simplex method.\n     *\n     * The current state of the system should be such that the objective\n     * function is optimal, but not feasible. This method will perform\n     * an iteration of the dual simplex method to make the solution both\n     * optimal and feasible.\n     */\n        Solver.prototype._dualOptimize = function () {\n            var rows = this._rowMap;\n            var infeasible = this._infeasibleRows;\n            while (infeasible.length !== 0) {\n                var leaving = infeasible.pop();\n                var pair = rows.find(leaving);\n                if (pair !== undefined && pair.second.constant() < 0) {\n                    var entering = this._getDualEnteringSymbol(pair.second);\n                    if (entering.type() === SymbolType.Invalid) {\n                        throw new Error('dual optimize failed');\n                    }\n                    // pivot the entering symbol into the basis\n                    var row = pair.second;\n                    rows.erase(leaving);\n                    row.solveForEx(leaving, entering);\n                    this._substitute(entering, row);\n                    rows.insert(entering, row);\n                }\n            }\n        };\n        /**\n     * Compute the entering variable for a pivot operation.\n     *\n     * This method will return first symbol in the objective function which\n     * is non-dummy and has a coefficient less than zero. If no symbol meets\n     * the criteria, it means the objective function is at a minimum, and an\n     * invalid symbol is returned.\n     */\n        Solver.prototype._getEnteringSymbol = function (objective) {\n            var cells = objective.cells();\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                var symbol = pair.first;\n                if (pair.second < 0 && symbol.type() !== SymbolType.Dummy) {\n                    return symbol;\n                }\n            }\n            return INVALID_SYMBOL;\n        };\n        /**\n     * Compute the entering symbol for the dual optimize operation.\n     *\n     * This method will return the symbol in the row which has a positive\n     * coefficient and yields the minimum ratio for its respective symbol\n     * in the objective function. The provided row *must* be infeasible.\n     * If no symbol is found which meats the criteria, an invalid symbol\n     * is returned.\n     */\n        Solver.prototype._getDualEnteringSymbol = function (row) {\n            var ratio = Number.MAX_VALUE;\n            var entering = INVALID_SYMBOL;\n            var cells = row.cells();\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                var symbol = pair.first;\n                var c = pair.second;\n                if (c > 0 && symbol.type() !== SymbolType.Dummy) {\n                    var coeff = this._objective.coefficientFor(symbol);\n                    var r = coeff / c;\n                    if (r < ratio) {\n                        ratio = r;\n                        entering = symbol;\n                    }\n                }\n            }\n            return entering;\n        };\n        /**\n     * Compute the symbol for pivot exit row.\n     *\n     * This method will return the symbol for the exit row in the row\n     * map. If no appropriate exit symbol is found, an invalid symbol\n     * will be returned. This indicates that the objective function is\n     * unbounded.\n     */\n        Solver.prototype._getLeavingSymbol = function (entering) {\n            var ratio = Number.MAX_VALUE;\n            var found = INVALID_SYMBOL;\n            var rows = this._rowMap;\n            for (var i = 0, n = rows.size(); i < n; ++i) {\n                var pair = rows.itemAt(i);\n                var symbol = pair.first;\n                if (symbol.type() !== SymbolType.External) {\n                    var row = pair.second;\n                    var temp = row.coefficientFor(entering);\n                    if (temp < 0) {\n                        var temp_ratio = -row.constant() / temp;\n                        if (temp_ratio < ratio) {\n                            ratio = temp_ratio;\n                            found = symbol;\n                        }\n                    }\n                }\n            }\n            return found;\n        };\n        /**\n     * Compute the leaving symbol for a marker variable.\n     *\n     * This method will return a symbol corresponding to a basic row\n     * which holds the given marker variable. The row will be chosen\n     * according to the following precedence:\n     *\n     * 1) The row with a restricted basic varible and a negative coefficient\n     *    for the marker with the smallest ratio of -constant / coefficient.\n     *\n     * 2) The row with a restricted basic variable and the smallest ratio\n     *    of constant / coefficient.\n     *\n     * 3) The last unrestricted row which contains the marker.\n     *\n     * If the marker does not exist in any row, an invalid symbol will be\n     * returned. This indicates an internal solver error since the marker\n     * *should* exist somewhere in the tableau.\n     */\n        Solver.prototype._getMarkerLeavingSymbol = function (marker) {\n            var dmax = Number.MAX_VALUE;\n            var r1 = dmax;\n            var r2 = dmax;\n            var invalid = INVALID_SYMBOL;\n            var first = invalid;\n            var second = invalid;\n            var third = invalid;\n            var rows = this._rowMap;\n            for (var i = 0, n = rows.size(); i < n; ++i) {\n                var pair = rows.itemAt(i);\n                var row = pair.second;\n                var c = row.coefficientFor(marker);\n                if (c === 0) {\n                    continue;\n                }\n                var symbol = pair.first;\n                if (symbol.type() === SymbolType.External) {\n                    third = symbol;\n                } else if (c < 0) {\n                    var r = -row.constant() / c;\n                    if (r < r1) {\n                        r1 = r;\n                        first = symbol;\n                    }\n                } else {\n                    var r = row.constant() / c;\n                    if (r < r2) {\n                        r2 = r;\n                        second = symbol;\n                    }\n                }\n            }\n            if (first !== invalid) {\n                return first;\n            }\n            if (second !== invalid) {\n                return second;\n            }\n            return third;\n        };\n        /**\n     * Remove the effects of a constraint on the objective function.\n     */\n        Solver.prototype._removeConstraintEffects = function (cn, tag) {\n            if (tag.marker.type() === SymbolType.Error) {\n                this._removeMarkerEffects(tag.marker, cn.strength);\n            }\n            if (tag.other.type() === SymbolType.Error) {\n                this._removeMarkerEffects(tag.other, cn.strength);\n            }\n        };\n        /**\n     * Remove the effects of an error marker on the objective function.\n     */\n        Solver.prototype._removeMarkerEffects = function (marker, strength) {\n            var pair = this._rowMap.find(marker);\n            if (pair !== undefined) {\n                this._objective.insertRow(pair.second, -strength);\n            } else {\n                this._objective.insertSymbol(marker, -strength);\n            }\n        };\n        /**\n     * Get the first Slack or Error symbol in the row.\n     *\n     * If no such symbol is present, an invalid symbol will be returned.\n     */\n        Solver.prototype._anyPivotableSymbol = function (row) {\n            var cells = row.cells();\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                var type = pair.first.type();\n                if (type === SymbolType.Slack || type === SymbolType.Error) {\n                    return pair.first;\n                }\n            }\n            return INVALID_SYMBOL;\n        };\n        /**\n     * Returns a new Symbol of the given type.\n     */\n        Solver.prototype._makeSymbol = function (type) {\n            return new Symbol(type, this._idTick++);\n        };\n        return Solver;\n    }();\n    exports.Solver = Solver;\n    /**\n * Test whether a value is approximately zero.\n */\n    function nearZero(value) {\n        var eps = 1e-8;\n        return value < 0 ? -value < eps : value < eps;\n    }\n    /**\n * An internal function for creating a constraint map.\n */\n    function createCnMap() {\n        return maptype_1.createMap(constraint_1.Constraint.Compare);\n    }\n    /**\n * An internal function for creating a row map.\n */\n    function createRowMap() {\n        return maptype_1.createMap(Symbol.Compare);\n    }\n    /**\n * An internal function for creating a variable map.\n */\n    function createVarMap() {\n        return maptype_1.createMap(variable_1.Variable.Compare);\n    }\n    /**\n * An internal function for creating an edit map.\n */\n    function createEditMap() {\n        return maptype_1.createMap(variable_1.Variable.Compare);\n    }\n    /**\n * An enum defining the available symbol types.\n */\n    var SymbolType;\n    (function (SymbolType) {\n        SymbolType[SymbolType['Invalid'] = 0] = 'Invalid';\n        SymbolType[SymbolType['External'] = 1] = 'External';\n        SymbolType[SymbolType['Slack'] = 2] = 'Slack';\n        SymbolType[SymbolType['Error'] = 3] = 'Error';\n        SymbolType[SymbolType['Dummy'] = 4] = 'Dummy';\n    }(SymbolType || (SymbolType = {})));\n    /**\n * An internal class representing a symbol in the solver.\n */\n    var Symbol = function () {\n        /**\n     * Construct a new Symbol\n     *\n     * @param [type] The type of the symbol.\n     * @param [id] The unique id number of the symbol.\n     */\n        function Symbol(type, id) {\n            this._id = id;\n            this._type = type;\n        }\n        /**\n     * The static Symbol comparison function.\n     */\n        Symbol.Compare = function (a, b) {\n            return a.id() - b.id();\n        };\n        /**\n     * Returns the unique id number of the symbol.\n     */\n        Symbol.prototype.id = function () {\n            return this._id;\n        };\n        /**\n     * Returns the type of the symbol.\n     */\n        Symbol.prototype.type = function () {\n            return this._type;\n        };\n        return Symbol;\n    }();\n    /**\n * A static invalid symbol\n */\n    var INVALID_SYMBOL = new Symbol(SymbolType.Invalid, -1);\n    /**\n * An internal row class used by the solver.\n */\n    var Row = function () {\n        /**\n     * Construct a new Row.\n     */\n        function Row(constant) {\n            if (constant === void 0) {\n                constant = 0;\n            }\n            this._cellMap = maptype_1.createMap(Symbol.Compare);\n            this._constant = constant;\n        }\n        /**\n     * Returns the mapping of symbols to coefficients.\n     */\n        Row.prototype.cells = function () {\n            return this._cellMap;\n        };\n        /**\n     * Returns the constant for the row.\n     */\n        Row.prototype.constant = function () {\n            return this._constant;\n        };\n        /**\n     * Returns true if the row is a constant value.\n     */\n        Row.prototype.isConstant = function () {\n            return this._cellMap.empty();\n        };\n        /**\n     * Returns true if the Row has all dummy symbols.\n     */\n        Row.prototype.allDummies = function () {\n            var cells = this._cellMap;\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                if (pair.first.type() !== SymbolType.Dummy) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        /**\n     * Create a copy of the row.\n     */\n        Row.prototype.copy = function () {\n            var theCopy = new Row(this._constant);\n            theCopy._cellMap = this._cellMap.copy();\n            return theCopy;\n        };\n        /**\n     * Add a constant value to the row constant.\n     *\n     * Returns the new value of the constant.\n     */\n        Row.prototype.add = function (value) {\n            return this._constant += value;\n        };\n        /**\n     * Insert the symbol into the row with the given coefficient.\n     *\n     * If the symbol already exists in the row, the coefficient\n     * will be added to the existing coefficient. If the resulting\n     * coefficient is zero, the symbol will be removed from the row.\n     */\n        Row.prototype.insertSymbol = function (symbol, coefficient) {\n            if (coefficient === void 0) {\n                coefficient = 1;\n            }\n            var pair = this._cellMap.setDefault(symbol, function () {\n                return 0;\n            });\n            if (nearZero(pair.second += coefficient)) {\n                this._cellMap.erase(symbol);\n            }\n        };\n        /**\n     * Insert a row into this row with a given coefficient.\n     *\n     * The constant and the cells of the other row will be\n     * multiplied by the coefficient and added to this row. Any\n     * cell with a resulting coefficient of zero will be removed\n     * from the row.\n     */\n        Row.prototype.insertRow = function (other, coefficient) {\n            if (coefficient === void 0) {\n                coefficient = 1;\n            }\n            this._constant += other._constant * coefficient;\n            var cells = other._cellMap;\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                this.insertSymbol(pair.first, pair.second * coefficient);\n            }\n        };\n        /**\n     * Remove a symbol from the row.\n     */\n        Row.prototype.removeSymbol = function (symbol) {\n            this._cellMap.erase(symbol);\n        };\n        /**\n     * Reverse the sign of the constant and cells in the row.\n     */\n        Row.prototype.reverseSign = function () {\n            this._constant = -this._constant;\n            var cells = this._cellMap;\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                pair.second = -pair.second;\n            }\n        };\n        /**\n     * Solve the row for the given symbol.\n     *\n     * This method assumes the row is of the form\n     * a * x + b * y + c = 0 and (assuming solve for x) will modify\n     * the row to represent the right hand side of\n     * x = -b/a * y - c / a. The target symbol will be removed from\n     * the row, and the constant and other cells will be multiplied\n     * by the negative inverse of the target coefficient.\n     *\n     * The given symbol *must* exist in the row.\n     */\n        Row.prototype.solveFor = function (symbol) {\n            var cells = this._cellMap;\n            var pair = cells.erase(symbol);\n            var coeff = -1 / pair.second;\n            this._constant *= coeff;\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                cells.itemAt(i).second *= coeff;\n            }\n        };\n        /**\n     * Solve the row for the given symbols.\n     *\n     * This method assumes the row is of the form\n     * x = b * y + c and will solve the row such that\n     * y = x / b - c / b. The rhs symbol will be removed from the\n     * row, the lhs added, and the result divided by the negative\n     * inverse of the rhs coefficient.\n     *\n     * The lhs symbol *must not* exist in the row, and the rhs\n     * symbol must* exist in the row.\n     */\n        Row.prototype.solveForEx = function (lhs, rhs) {\n            this.insertSymbol(lhs, -1);\n            this.solveFor(rhs);\n        };\n        /**\n     * Returns the coefficient for the given symbol.\n     */\n        Row.prototype.coefficientFor = function (symbol) {\n            var pair = this._cellMap.find(symbol);\n            return pair !== undefined ? pair.second : 0;\n        };\n        /**\n     * Substitute a symbol with the data from another row.\n     *\n     * Given a row of the form a * x + b and a substitution of the\n     * form x = 3 * y + c the row will be updated to reflect the\n     * expression 3 * a * y + a * c + b.\n     *\n     * If the symbol does not exist in the row, this is a no-op.\n     */\n        Row.prototype.substitute = function (symbol, row) {\n            var pair = this._cellMap.erase(symbol);\n            if (pair !== undefined) {\n                this.insertRow(row, pair.second);\n            }\n        };\n        return Row;\n    }();\n}","/*kiwi/build/strength*/\nfunction _(require, module, exports) {\n    var Strength;\n    (function (Strength) {\n        /**\n     * Create a new symbolic strength.\n     */\n        function create(a, b, c, w) {\n            if (w === void 0) {\n                w = 1;\n            }\n            var result = 0;\n            result += Math.max(0, Math.min(1000, a * w)) * 1000000;\n            result += Math.max(0, Math.min(1000, b * w)) * 1000;\n            result += Math.max(0, Math.min(1000, c * w));\n            return result;\n        }\n        Strength.create = create;\n        /**\n     * The 'required' symbolic strength.\n     */\n        Strength.required = create(1000, 1000, 1000);\n        /**\n     * The 'strong' symbolic strength.\n     */\n        Strength.strong = create(1, 0, 0);\n        /**\n     * The 'medium' symbolic strength.\n     */\n        Strength.medium = create(0, 1, 0);\n        /**\n     * The 'weak' symbolic strength.\n     */\n        Strength.weak = create(0, 0, 1);\n        /**\n     * Clip a symbolic strength to the allowed min and max.\n     */\n        function clip(value) {\n            return Math.max(0, Math.min(Strength.required, value));\n        }\n        Strength.clip = clip;\n    }(Strength = exports.Strength || (exports.Strength = {})));\n}","/*kiwi/build/tsu/algorithm*/\nfunction _(require, module, exports) {\n    var iterator_1 = require(329    /* ./iterator */);\n    /**\n* Perform a lower bound search on a sorted array.\n*\n* @param array The array of sorted items to search.\n* @param value The value to located in the array.\n* @param compare The value comparison function.\n* @returns The index of the first element in the array which\n*          compares greater than or equal to the given value.\n*/\n    function lowerBound(array, value, compare) {\n        var begin = 0;\n        var n = array.length;\n        var half;\n        var middle;\n        while (n > 0) {\n            half = n >> 1;\n            middle = begin + half;\n            if (compare(array[middle], value) < 0) {\n                begin = middle + 1;\n                n -= half + 1;\n            } else {\n                n = half;\n            }\n        }\n        return begin;\n    }\n    exports.lowerBound = lowerBound;\n    /**\n* Perform a binary search on a sorted array.\n*\n* @param array The array of sorted items to search.\n* @param value The value to located in the array.\n* @param compare The value comparison function.\n* @returns The index of the found item, or -1.\n*/\n    function binarySearch(array, value, compare) {\n        var index = lowerBound(array, value, compare);\n        if (index === array.length) {\n            return -1;\n        }\n        var item = array[index];\n        if (compare(item, value) !== 0) {\n            return -1;\n        }\n        return index;\n    }\n    exports.binarySearch = binarySearch;\n    /**\n* Perform a binary find on a sorted array.\n*\n* @param array The array of sorted items to search.\n* @param value The value to located in the array.\n* @param compare The value comparison function.\n* @returns The found item in the array, or undefined.\n*/\n    function binaryFind(array, value, compare) {\n        var index = lowerBound(array, value, compare);\n        if (index === array.length) {\n            return undefined;\n        }\n        var item = array[index];\n        if (compare(item, value) !== 0) {\n            return undefined;\n        }\n        return item;\n    }\n    exports.binaryFind = binaryFind;\n    function asSet(items, compare) {\n        var array = iterator_1.asArray(items);\n        var n = array.length;\n        if (n <= 1) {\n            return array;\n        }\n        array.sort(compare);\n        var result = [array[0]];\n        for (var i = 1, j = 0; i < n; ++i) {\n            var item = array[i];\n            if (compare(result[j], item) !== 0) {\n                result.push(item);\n                ++j;\n            }\n        }\n        return result;\n    }\n    exports.asSet = asSet;\n    /**\n* Test whether a two sorted arrays sets are disjoint.\n*\n* @param first The first sorted array set.\n* @param second The second sorted array set.\n* @param compare The value comparison function.\n* @returns true if the sets are disjoint, false otherwise.\n*/\n    function setIsDisjoint(first, second, compare) {\n        var i = 0, j = 0;\n        var len1 = first.length;\n        var len2 = second.length;\n        while (i < len1 && j < len2) {\n            var v = compare(first[i], second[j]);\n            if (v < 0) {\n                ++i;\n            } else if (v > 0) {\n                ++j;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n    exports.setIsDisjoint = setIsDisjoint;\n    /**\n* Test whether one sorted array set is the subset of another.\n*\n* @param first The potential subset.\n* @param second The potential superset.\n* @param compare The value comparison function.\n* @returns true if the first set is a subset of the second.\n*/\n    function setIsSubset(first, second, compare) {\n        var len1 = first.length;\n        var len2 = second.length;\n        if (len1 > len2) {\n            return false;\n        }\n        var i = 0, j = 0;\n        while (i < len1 && j < len2) {\n            var v = compare(first[i], second[j]);\n            if (v < 0) {\n                return false;\n            } else if (v > 0) {\n                ++j;\n            } else {\n                ++i;\n                ++j;\n            }\n        }\n        if (i < len1) {\n            return false;\n        }\n        return true;\n    }\n    exports.setIsSubset = setIsSubset;\n    /**\n* Create the set union of two sorted set arrays.\nvar j = 0;\n*\n* @param first The first sorted array set.\n* @param second The second sorted array set.\n* @param compare The value comparison function.\n* @returns The set union of the two arrays.\n*/\n    function setUnion(first, second, compare) {\n        var i = 0, j = 0;\n        var len1 = first.length;\n        var len2 = second.length;\n        var merged = [];\n        while (i < len1 && j < len2) {\n            var a = first[i];\n            var b = second[j];\n            var v = compare(a, b);\n            if (v < 0) {\n                merged.push(a);\n                ++i;\n            } else if (v > 0) {\n                merged.push(b);\n                ++j;\n            } else {\n                merged.push(a);\n                ++i;\n                ++j;\n            }\n        }\n        while (i < len1) {\n            merged.push(first[i]);\n            ++i;\n        }\n        while (j < len2) {\n            merged.push(second[j]);\n            ++j;\n        }\n        return merged;\n    }\n    exports.setUnion = setUnion;\n    /**\n* Create a set intersection of two sorted set arrays.\n*\n* @param first The first sorted array set.\n* @param second The second sorted array set.\n* @param compare The value comparison function.\n* @returns The set intersection of the two arrays.\n*/\n    function setIntersection(first, second, compare) {\n        var i = 0, j = 0;\n        var len1 = first.length;\n        var len2 = second.length;\n        var merged = [];\n        while (i < len1 && j < len2) {\n            var a = first[i];\n            var b = second[j];\n            var v = compare(a, b);\n            if (v < 0) {\n                ++i;\n            } else if (v > 0) {\n                ++j;\n            } else {\n                merged.push(a);\n                ++i;\n                ++j;\n            }\n        }\n        return merged;\n    }\n    exports.setIntersection = setIntersection;\n    /**\n* Create a set difference of two sorted set arrays.\n*\n* @param first The first sorted array set.\n* @param second The second sorted array set.\n* @param compare The value comparison function.\n* @returns The set difference of the two arrays.\n*/\n    function setDifference(first, second, compare) {\n        var i = 0, j = 0;\n        var len1 = first.length;\n        var len2 = second.length;\n        var merged = [];\n        while (i < len1 && j < len2) {\n            var a = first[i];\n            var b = second[j];\n            var v = compare(a, b);\n            if (v < 0) {\n                merged.push(a);\n                ++i;\n            } else if (v > 0) {\n                ++j;\n            } else {\n                ++i;\n                ++j;\n            }\n        }\n        while (i < len1) {\n            merged.push(first[i]);\n            ++i;\n        }\n        return merged;\n    }\n    exports.setDifference = setDifference;\n    /**\n* Create a set symmetric difference of two sorted set arrays.\n*\n* @param first The first sorted array set.\n* @param second The second sorted array set.\n* @param compare The value comparison function.\n* @returns The set symmetric difference of the two arrays.\n*/\n    function setSymmetricDifference(first, second, compare) {\n        var i = 0, j = 0;\n        var len1 = first.length;\n        var len2 = second.length;\n        var merged = [];\n        while (i < len1 && j < len2) {\n            var a = first[i];\n            var b = second[j];\n            var v = compare(a, b);\n            if (v < 0) {\n                merged.push(a);\n                ++i;\n            } else if (v > 0) {\n                merged.push(b);\n                ++j;\n            } else {\n                ++i;\n                ++j;\n            }\n        }\n        while (i < len1) {\n            merged.push(first[i]);\n            ++i;\n        }\n        while (j < len2) {\n            merged.push(second[j]);\n            ++j;\n        }\n        return merged;\n    }\n    exports.setSymmetricDifference = setSymmetricDifference;\n}","/*kiwi/build/tsu/array_base*/\nfunction _(require, module, exports) {\n    var iterator_1 = require(329    /* ./iterator */);\n    /**\n* A base class for implementing array-based data structures.\n*\n* @class\n*/\n    var ArrayBase = function () {\n        function ArrayBase() {\n            /*\n        * The internal data array.\n        *\n        * @protected\n        */\n            this._array = [];\n        }\n        /**\n    * Returns the number of items in the array.\n    */\n        ArrayBase.prototype.size = function () {\n            return this._array.length;\n        };\n        /**\n    * Returns true if the array is empty.\n    */\n        ArrayBase.prototype.empty = function () {\n            return this._array.length === 0;\n        };\n        /**\n    * Returns the item at the given array index.\n    *\n    * @param index The integer index of the desired item.\n    */\n        ArrayBase.prototype.itemAt = function (index) {\n            return this._array[index];\n        };\n        /**\n    * Removes and returns the item at the given index.\n    *\n    * @param index The integer index of the desired item.\n    */\n        ArrayBase.prototype.takeAt = function (index) {\n            return this._array.splice(index, 1)[0];\n        };\n        /**\n    * Clear the internal contents of array.\n    */\n        ArrayBase.prototype.clear = function () {\n            this._array = [];\n        };\n        /**\n    * Swap this array's contents with another array.\n    *\n    * @param other The array base to use for the swap.\n    */\n        ArrayBase.prototype.swap = function (other) {\n            var array = this._array;\n            this._array = other._array;\n            other._array = array;\n        };\n        /**\n    * Returns an iterator over the array of items.\n    */\n        ArrayBase.prototype.__iter__ = function () {\n            return iterator_1.iter(this._array);\n        };\n        /**\n    * Returns a reverse iterator over the array of items.\n    */\n        ArrayBase.prototype.__reversed__ = function () {\n            return iterator_1.reversed(this._array);\n        };\n        return ArrayBase;\n    }();\n    exports.ArrayBase = ArrayBase;\n}","/*kiwi/build/tsu/associative_array*/\nfunction _(require, module, exports) {\n    /*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n    var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n            d.__proto__ = b;\n        } || function (d, b) {\n            for (var p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p];\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    }();\n    var pair_1 = require(330    /* ./pair */);\n    var array_base_1 = require(326    /* ./array_base */);\n    var algorithm_1 = require(325    /* ./algorithm */);\n    var iterator_1 = require(329    /* ./iterator */);\n    /**\n* A mapping container build on a sorted array.\n*\n* @class\n*/\n    var AssociativeArray = function (_super) {\n        __extends(AssociativeArray, _super);\n        /**\n    * Construct a new AssociativeArray.\n    *\n    * @param compare The key comparison function.\n    */\n        function AssociativeArray(compare) {\n            var _this = _super.call(this) || this;\n            _this._compare = compare;\n            _this._wrapped = wrapCompare(compare);\n            return _this;\n        }\n        /**\n    * Returns the key comparison function used by this array.\n    */\n        AssociativeArray.prototype.comparitor = function () {\n            return this._compare;\n        };\n        /**\n    * Return the array index of the given key, or -1.\n    *\n    * @param key The key to locate in the array.\n    */\n        AssociativeArray.prototype.indexOf = function (key) {\n            return algorithm_1.binarySearch(this._array, key, this._wrapped);\n        };\n        /**\n    * Returns true if the key is in the array, false otherwise.\n    *\n    * @param key The key to locate in the array.\n    */\n        AssociativeArray.prototype.contains = function (key) {\n            return algorithm_1.binarySearch(this._array, key, this._wrapped) >= 0;\n        };\n        /**\n    * Returns the pair associated with the given key, or undefined.\n    *\n    * @param key The key to locate in the array.\n    */\n        AssociativeArray.prototype.find = function (key) {\n            return algorithm_1.binaryFind(this._array, key, this._wrapped);\n        };\n        /**\n    * Returns the pair associated with the key if it exists.\n    *\n    * If the key does not exist, a new pair will be created and\n    * inserted using the value created by the given factory.\n    *\n    * @param key The key to locate in the array.\n    * @param factory The function which creates the default value.\n    */\n        AssociativeArray.prototype.setDefault = function (key, factory) {\n            var array = this._array;\n            var index = algorithm_1.lowerBound(array, key, this._wrapped);\n            if (index === array.length) {\n                var pair = new pair_1.Pair(key, factory());\n                array.push(pair);\n                return pair;\n            }\n            var currPair = array[index];\n            if (this._compare(currPair.first, key) !== 0) {\n                var pair = new pair_1.Pair(key, factory());\n                array.splice(index, 0, pair);\n                return pair;\n            }\n            return currPair;\n        };\n        /**\n    * Insert the pair into the array and return the pair.\n    *\n    * This will overwrite any existing entry in the array.\n    *\n    * @param key The key portion of the pair.\n    * @param value The value portion of the pair.\n    */\n        AssociativeArray.prototype.insert = function (key, value) {\n            var array = this._array;\n            var index = algorithm_1.lowerBound(array, key, this._wrapped);\n            if (index === array.length) {\n                var pair = new pair_1.Pair(key, value);\n                array.push(pair);\n                return pair;\n            }\n            var currPair = array[index];\n            if (this._compare(currPair.first, key) !== 0) {\n                var pair = new pair_1.Pair(key, value);\n                array.splice(index, 0, pair);\n                return pair;\n            }\n            currPair.second = value;\n            return currPair;\n        };\n        AssociativeArray.prototype.update = function (object) {\n            var _this = this;\n            if (object instanceof AssociativeArray) {\n                this._array = merge(this._array, object._array, this._compare);\n            } else {\n                iterator_1.forEach(object, function (pair) {\n                    _this.insert(pair.first, pair.second);\n                });\n            }\n        };\n        /**\n    * Removes and returns the pair for the given key, or undefined.\n    *\n    * @param key The key to remove from the map.\n    */\n        AssociativeArray.prototype.erase = function (key) {\n            var array = this._array;\n            var index = algorithm_1.binarySearch(array, key, this._wrapped);\n            if (index < 0) {\n                return undefined;\n            }\n            return array.splice(index, 1)[0];\n        };\n        /**\n    * Create a copy of this associative array.\n    */\n        AssociativeArray.prototype.copy = function () {\n            var theCopy = new AssociativeArray(this._compare);\n            var copyArray = theCopy._array;\n            var thisArray = this._array;\n            for (var i = 0, n = thisArray.length; i < n; ++i) {\n                copyArray.push(thisArray[i].copy());\n            }\n            return theCopy;\n        };\n        return AssociativeArray;\n    }(array_base_1.ArrayBase);\n    exports.AssociativeArray = AssociativeArray;\n    /**\n* An internal which wraps a comparison key function.\n*/\n    function wrapCompare(cmp) {\n        return function (pair, value) {\n            return cmp(pair.first, value);\n        };\n    }\n    /**\n* An internal function which merges two ordered pair arrays.\n*/\n    function merge(first, second, compare) {\n        var i = 0, j = 0;\n        var len1 = first.length;\n        var len2 = second.length;\n        var merged = [];\n        while (i < len1 && j < len2) {\n            var a = first[i];\n            var b = second[j];\n            var v = compare(a.first, b.first);\n            if (v < 0) {\n                merged.push(a.copy());\n                ++i;\n            } else if (v > 0) {\n                merged.push(b.copy());\n                ++j;\n            } else {\n                merged.push(b.copy());\n                ++i;\n                ++j;\n            }\n        }\n        while (i < len1) {\n            merged.push(first[i].copy());\n            ++i;\n        }\n        while (j < len2) {\n            merged.push(second[j].copy());\n            ++j;\n        }\n        return merged;\n    }\n}","/*kiwi/build/tsu/index*/\nfunction _(require, module, exports) {\n    function __export(m) {\n        for (var p in m)\n            if (!exports.hasOwnProperty(p))\n                exports[p] = m[p];\n    }\n    __export(require(325    /* ./algorithm */));\n    __export(require(326    /* ./array_base */));\n    __export(require(327    /* ./associative_array */));\n    __export(require(329    /* ./iterator */));\n    __export(require(330    /* ./pair */));\n}","/*kiwi/build/tsu/iterator*/\nfunction _(require, module, exports) {\n    /**\n* An iterator for an array of items.\n*/\n    var ArrayIterator = function () {\n        /*\n    * Construct a new ArrayIterator.\n    *\n    * @param array The array of items to iterate.\n    * @param [index] The index at which to start iteration.\n    */\n        function ArrayIterator(array, index) {\n            if (typeof index === 'undefined') {\n                index = 0;\n            }\n            this._array = array;\n            this._index = Math.max(0, Math.min(index, array.length));\n        }\n        /**\n    * Returns the next item from the iterator or undefined.\n    */\n        ArrayIterator.prototype.__next__ = function () {\n            return this._array[this._index++];\n        };\n        /**\n    * Returns this same iterator.\n    */\n        ArrayIterator.prototype.__iter__ = function () {\n            return this;\n        };\n        return ArrayIterator;\n    }();\n    exports.ArrayIterator = ArrayIterator;\n    /**\n* A reverse iterator for an array of items.\n*/\n    var ReverseArrayIterator = function () {\n        /**\n    * Construct a new ReverseArrayIterator.\n    *\n    * @param array The array of items to iterate.\n    * @param [index] The index at which to start iteration.\n    */\n        function ReverseArrayIterator(array, index) {\n            if (typeof index === 'undefined') {\n                index = array.length;\n            }\n            this._array = array;\n            this._index = Math.max(0, Math.min(index, array.length));\n        }\n        /**\n    * Returns the next item from the iterator or undefined.\n    */\n        ReverseArrayIterator.prototype.__next__ = function () {\n            return this._array[--this._index];\n        };\n        /**\n    * Returns this same iterator.\n    */\n        ReverseArrayIterator.prototype.__iter__ = function () {\n            return this;\n        };\n        return ReverseArrayIterator;\n    }();\n    exports.ReverseArrayIterator = ReverseArrayIterator;\n    function iter(object) {\n        if (object instanceof Array) {\n            return new ArrayIterator(object);\n        }\n        return object.__iter__();\n    }\n    exports.iter = iter;\n    function reversed(object) {\n        if (object instanceof Array) {\n            return new ReverseArrayIterator(object);\n        }\n        return object.__reversed__();\n    }\n    exports.reversed = reversed;\n    /**\n* Returns the next value from an iterator, or undefined.\n*/\n    function next(iterator) {\n        return iterator.__next__();\n    }\n    exports.next = next;\n    function asArray(object) {\n        if (object instanceof Array) {\n            return object.slice();\n        }\n        var value;\n        var array = [];\n        var it = object.__iter__();\n        while ((value = it.__next__()) !== undefined) {\n            array.push(value);\n        }\n        return array;\n    }\n    exports.asArray = asArray;\n    function forEach(object, callback) {\n        if (object instanceof Array) {\n            for (var i = 0, n = object.length; i < n; ++i) {\n                if (callback(object[i]) === false) {\n                    return;\n                }\n            }\n        } else {\n            var value;\n            var it = object.__iter__();\n            while ((value = it.__next__()) !== undefined) {\n                if (callback(value) === false) {\n                    return;\n                }\n            }\n        }\n    }\n    exports.forEach = forEach;\n    function map(object, callback) {\n        var result = [];\n        if (object instanceof Array) {\n            for (var i = 0, n = object.length; i < n; ++i) {\n                result.push(callback(object[i]));\n            }\n        } else {\n            var value;\n            var it = object.__iter__();\n            while ((value = it.__next__()) !== undefined) {\n                result.push(callback(value));\n            }\n        }\n        return result;\n    }\n    exports.map = map;\n    function filter(object, callback) {\n        var value;\n        var result = [];\n        if (object instanceof Array) {\n            for (var i = 0, n = object.length; i < n; ++i) {\n                value = object[i];\n                if (callback(value)) {\n                    result.push(value);\n                }\n            }\n        } else {\n            var it = object.__iter__();\n            while ((value = it.__next__()) !== undefined) {\n                if (callback(value)) {\n                    result.push(value);\n                }\n            }\n        }\n        return result;\n    }\n    exports.filter = filter;\n}","/*kiwi/build/tsu/pair*/\nfunction _(require, module, exports) {\n    /**\n* A class which defines a generic pair object.\n*/\n    var Pair = function () {\n        /**\n    * Construct a new Pair object.\n    *\n    * @param first The first item of the pair.\n    * @param second The second item of the pair.\n    */\n        function Pair(first, second) {\n            this.first = first;\n            this.second = second;\n        }\n        /**\n    * Create a copy of the pair.\n    */\n        Pair.prototype.copy = function () {\n            return new Pair(this.first, this.second);\n        };\n        return Pair;\n    }();\n    exports.Pair = Pair;\n}","/*kiwi/build/variable*/\nfunction _(require, module, exports) {\n    /**\n * The primary user constraint variable.\n *\n * @class\n */\n    var Variable = function () {\n        /**\n     * Construct a new Variable\n     *\n     * @param [name] The name to associated with the variable.\n     */\n        function Variable(name) {\n            if (name === void 0) {\n                name = '';\n            }\n            this._value = 0;\n            this._context = null;\n            this._id = VarId++;\n            this._name = name;\n        }\n        /**\n     * A static variable comparison function.\n     */\n        Variable.Compare = function (a, b) {\n            return a.id - b.id;\n        };\n        Variable.prototype.toString = function () {\n            return this._name;\n        };\n        Object.defineProperty(Variable.prototype, 'id', {\n            /**\n         * Returns the unique id number of the variable.\n         */\n            get: function () {\n                return this._id;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Variable.prototype, 'name', {\n            /**\n         * Returns the name of the variable.\n         */\n            get: function () {\n                return this._name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n     * Set the name of the variable.\n     */\n        Variable.prototype.setName = function (name) {\n            this._name = name;\n        };\n        Object.defineProperty(Variable.prototype, 'context', {\n            /**\n         * Returns the user context object of the variable.\n         */\n            get: function () {\n                return this._context;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n     * Set the user context object of the variable.\n     */\n        Variable.prototype.setContext = function (context) {\n            this._context = context;\n        };\n        Object.defineProperty(Variable.prototype, 'value', {\n            /**\n         * Returns the value of the variable.\n         */\n            get: function () {\n                return this._value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n     * Set the value of the variable.\n     */\n        Variable.prototype.setValue = function (value) {\n            this._value = value;\n        };\n        return Variable;\n    }();\n    exports.Variable = Variable;\n    /**\n * The internal variable id counter.\n */\n    var VarId = 0;\n}","/*!\n * numbro.js\n * version : 1.6.2\n * author : Företagsplatsen AB\n * license : MIT\n * http://www.foretagsplatsen.se\n */\n/************************************\n        Constants\n    ************************************/\n/*numbro/numbro*/\nfunction _(require, module, exports) {\n    var numbro, VERSION = '1.6.2',\n        // internal storage for culture config files\n        cultures = {},\n        // Todo: Remove in 2.0.0\n        languages = cultures, currentCulture = 'en-US', zeroFormat = null, defaultFormat = '0,0', defaultCurrencyFormat = '0$',\n        // check for nodeJS\n        hasModule = typeof module !== 'undefined' && module.exports,\n        // default culture\n        enUS = {\n            delimiters: {\n                thousands: ',',\n                decimal: '.'\n            },\n            abbreviations: {\n                thousand: 'k',\n                million: 'm',\n                billion: 'b',\n                trillion: 't'\n            },\n            ordinal: function (number) {\n                var b = number % 10;\n                return ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n            },\n            currency: {\n                symbol: '$',\n                position: 'prefix'\n            },\n            defaults: { currencyFormat: ',0000 a' },\n            formats: {\n                fourDigits: '0000 a',\n                fullWithTwoDecimals: '$ ,0.00',\n                fullWithTwoDecimalsNoCurrency: ',0.00'\n            }\n        };\n    /************************************\n        Constructors\n    ************************************/\n    // Numbro prototype object\n    function Numbro(number) {\n        this._value = number;\n    }\n    function zeroes(count) {\n        var i, ret = '';\n        for (i = 0; i < count; i++) {\n            ret += '0';\n        }\n        return ret;\n    }\n    /**\n     * Implementation of toFixed() for numbers with exponent > 21\n     *\n     *\n     */\n    function toFixedLarge(value, precision) {\n        var mantissa, beforeDec, afterDec, exponent, str;\n        str = value.toString();\n        mantissa = str.split('e')[0];\n        exponent = str.split('e')[1];\n        beforeDec = mantissa.split('.')[0];\n        afterDec = mantissa.split('.')[1] || '';\n        str = beforeDec + afterDec + zeroes(exponent - afterDec.length);\n        if (precision > 0) {\n            str += '.' + zeroes(precision);\n        }\n        return str;\n    }\n    /**\n     * Implementation of toFixed() that treats floats more like decimals\n     *\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n     * problems for accounting- and finance-related software.\n     */\n    function toFixed(value, precision, roundingFunction, optionals) {\n        var power = Math.pow(10, precision), optionalsRegExp, output;\n        if (value.toFixed(0).search('e') > -1) {\n            // Above 1e21, toFixed returns scientific notation, which\n            // is useless and unexpected\n            output = toFixedLarge(value, precision);\n        } else {\n            //roundingFunction = (roundingFunction !== undefined ? roundingFunction : Math.round);\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value * power) / power).toFixed(precision);\n        }\n        if (optionals) {\n            optionalsRegExp = new RegExp('0{1,' + optionals + '}$');\n            output = output.replace(optionalsRegExp, '');\n        }\n        return output;\n    }\n    /************************************\n        Formatting\n    ************************************/\n    // determine what type of formatting we need to do\n    function formatNumbro(value, format, roundingFunction) {\n        var output;\n        // TODO: do something with `language`\n        // figure out what kind of format we are dealing with\n        if (format.indexOf('$') > -1) {\n            // currency!!!!!\n            output = formatCurrency(value, format, roundingFunction);\n        } else if (format.indexOf('%') > -1) {\n            // percentage\n            output = formatPercentage(value, format, roundingFunction);\n        } else if (format.indexOf(':') > -1) {\n            // time\n            output = formatTime(value);\n        } else {\n            // plain ol' numbers or bytes\n            output = formatNumber(value, format, roundingFunction);\n        }\n        // return string\n        return output;\n    }\n    function formatCurrency(value, originalFormat, roundingFunction) {\n        var format = originalFormat, symbolIndex = format.indexOf('$'), openParenIndex = format.indexOf('('), plusSignIndex = format.indexOf('+'), minusSignIndex = format.indexOf('-'), space = '', decimalSeparator = '', spliceIndex, output;\n        if (format.indexOf('$') === -1) {\n            // Use defaults instead of the format provided\n            if (cultures[currentCulture].currency.position === 'infix') {\n                decimalSeparator = cultures[currentCulture].currency.symbol;\n                if (cultures[currentCulture].currency.spaceSeparated) {\n                    decimalSeparator = ' ' + decimalSeparator + ' ';\n                }\n            } else if (cultures[currentCulture].currency.spaceSeparated) {\n                space = ' ';\n            }\n        } else {\n            // check for space before or after currency\n            if (format.indexOf(' $') > -1) {\n                space = ' ';\n                format = format.replace(' $', '');\n            } else if (format.indexOf('$ ') > -1) {\n                space = ' ';\n                format = format.replace('$ ', '');\n            } else {\n                format = format.replace('$', '');\n            }\n        }\n        // Format The Number\n        output = formatNumber(value, format, roundingFunction, decimalSeparator);\n        if (originalFormat.indexOf('$') === -1) {\n            // Use defaults instead of the format provided\n            switch (cultures[currentCulture].currency.position) {\n            case 'postfix':\n                if (output.indexOf(')') > -1) {\n                    output = output.split('');\n                    output.splice(-1, 0, space + cultures[currentCulture].currency.symbol);\n                    output = output.join('');\n                } else {\n                    output = output + space + cultures[currentCulture].currency.symbol;\n                }\n                break;\n            case 'infix':\n                break;\n            case 'prefix':\n                if (output.indexOf('(') > -1 || output.indexOf('-') > -1) {\n                    output = output.split('');\n                    spliceIndex = Math.max(openParenIndex, minusSignIndex) + 1;\n                    output.splice(spliceIndex, 0, cultures[currentCulture].currency.symbol + space);\n                    output = output.join('');\n                } else {\n                    output = cultures[currentCulture].currency.symbol + space + output;\n                }\n                break;\n            default:\n                throw Error('Currency position should be among [\"prefix\", \"infix\", \"postfix\"]');\n            }\n        } else {\n            // position the symbol\n            if (symbolIndex <= 1) {\n                if (output.indexOf('(') > -1 || output.indexOf('+') > -1 || output.indexOf('-') > -1) {\n                    output = output.split('');\n                    spliceIndex = 1;\n                    if (symbolIndex < openParenIndex || symbolIndex < plusSignIndex || symbolIndex < minusSignIndex) {\n                        // the symbol appears before the \"(\", \"+\" or \"-\"\n                        spliceIndex = 0;\n                    }\n                    output.splice(spliceIndex, 0, cultures[currentCulture].currency.symbol + space);\n                    output = output.join('');\n                } else {\n                    output = cultures[currentCulture].currency.symbol + space + output;\n                }\n            } else {\n                if (output.indexOf(')') > -1) {\n                    output = output.split('');\n                    output.splice(-1, 0, space + cultures[currentCulture].currency.symbol);\n                    output = output.join('');\n                } else {\n                    output = output + space + cultures[currentCulture].currency.symbol;\n                }\n            }\n        }\n        return output;\n    }\n    function formatPercentage(value, format, roundingFunction) {\n        var space = '', output;\n        value = value * 100;\n        // check for space before %\n        if (format.indexOf(' %') > -1) {\n            space = ' ';\n            format = format.replace(' %', '');\n        } else {\n            format = format.replace('%', '');\n        }\n        output = formatNumber(value, format, roundingFunction);\n        if (output.indexOf(')') > -1) {\n            output = output.split('');\n            output.splice(-1, 0, space + '%');\n            output = output.join('');\n        } else {\n            output = output + space + '%';\n        }\n        return output;\n    }\n    function formatTime(value) {\n        var hours = Math.floor(value / 60 / 60), minutes = Math.floor((value - hours * 60 * 60) / 60), seconds = Math.round(value - hours * 60 * 60 - minutes * 60);\n        return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n    }\n    function formatNumber(value, format, roundingFunction, sep) {\n        var negP = false, signed = false, optDec = false, abbr = '', i, abbrK = false,\n            // force abbreviation to thousands\n            abbrM = false,\n            // force abbreviation to millions\n            abbrB = false,\n            // force abbreviation to billions\n            abbrT = false,\n            // force abbreviation to trillions\n            abbrForce = false,\n            // force abbreviation\n            bytes = '', ord = '', abs = Math.abs(value), binarySuffixes = [\n                'B',\n                'KiB',\n                'MiB',\n                'GiB',\n                'TiB',\n                'PiB',\n                'EiB',\n                'ZiB',\n                'YiB'\n            ], decimalSuffixes = [\n                'B',\n                'KB',\n                'MB',\n                'GB',\n                'TB',\n                'PB',\n                'EB',\n                'ZB',\n                'YB'\n            ], min, max, power, totalLength, length, minimumPrecision, pow, w, intPrecision, precision, prefix, postfix, thousands, d = '', forcedNeg = false, neg = false, indexOpenP, size, indexMinus, paren = '', minlen;\n        // check if number is zero and a custom zero format has been set\n        if (value === 0 && zeroFormat !== null) {\n            return zeroFormat;\n        }\n        if (!isFinite(value)) {\n            return '' + value;\n        }\n        if (format.indexOf('{') === 0) {\n            var end = format.indexOf('}');\n            if (end === -1) {\n                throw Error('Format should also contain a \"}\"');\n            }\n            prefix = format.slice(1, end);\n            format = format.slice(end + 1);\n        } else {\n            prefix = '';\n        }\n        if (format.indexOf('}') === format.length - 1) {\n            var start = format.indexOf('{');\n            if (start === -1) {\n                throw Error('Format should also contain a \"{\"');\n            }\n            postfix = format.slice(start + 1, -1);\n            format = format.slice(0, start + 1);\n        } else {\n            postfix = '';\n        }\n        // check for min length\n        var info;\n        if (format.indexOf('.') === -1) {\n            info = format.match(/([0-9]+).*/);\n        } else {\n            info = format.match(/([0-9]+)\\..*/);\n        }\n        minlen = info === null ? -1 : info[1].length;\n        // see if we should use parentheses for negative number or if we should prefix with a sign\n        // if both are present we default to parentheses\n        if (format.indexOf('-') !== -1) {\n            forcedNeg = true;\n        }\n        if (format.indexOf('(') > -1) {\n            negP = true;\n            format = format.slice(1, -1);\n        } else if (format.indexOf('+') > -1) {\n            signed = true;\n            format = format.replace(/\\+/g, '');\n        }\n        // see if abbreviation is wanted\n        if (format.indexOf('a') > -1) {\n            intPrecision = format.split('.')[0].match(/[0-9]+/g) || ['0'];\n            intPrecision = parseInt(intPrecision[0], 10);\n            // check if abbreviation is specified\n            abbrK = format.indexOf('aK') >= 0;\n            abbrM = format.indexOf('aM') >= 0;\n            abbrB = format.indexOf('aB') >= 0;\n            abbrT = format.indexOf('aT') >= 0;\n            abbrForce = abbrK || abbrM || abbrB || abbrT;\n            // check for space before abbreviation\n            if (format.indexOf(' a') > -1) {\n                abbr = ' ';\n                format = format.replace(' a', '');\n            } else {\n                format = format.replace('a', '');\n            }\n            totalLength = Math.floor(Math.log(abs) / Math.LN10) + 1;\n            minimumPrecision = totalLength % 3;\n            minimumPrecision = minimumPrecision === 0 ? 3 : minimumPrecision;\n            if (intPrecision && abs !== 0) {\n                length = Math.floor(Math.log(abs) / Math.LN10) + 1 - intPrecision;\n                pow = 3 * ~~((Math.min(intPrecision, totalLength) - minimumPrecision) / 3);\n                abs = abs / Math.pow(10, pow);\n                if (format.indexOf('.') === -1 && intPrecision > 3) {\n                    format += '[.]';\n                    size = length === 0 ? 0 : 3 * ~~(length / 3) - length;\n                    size = size < 0 ? size + 3 : size;\n                    for (i = 0; i < size; i++) {\n                        format += '0';\n                    }\n                }\n            }\n            if (Math.floor(Math.log(Math.abs(value)) / Math.LN10) + 1 !== intPrecision) {\n                if (abs >= Math.pow(10, 12) && !abbrForce || abbrT) {\n                    // trillion\n                    abbr = abbr + cultures[currentCulture].abbreviations.trillion;\n                    value = value / Math.pow(10, 12);\n                } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9) && !abbrForce || abbrB) {\n                    // billion\n                    abbr = abbr + cultures[currentCulture].abbreviations.billion;\n                    value = value / Math.pow(10, 9);\n                } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6) && !abbrForce || abbrM) {\n                    // million\n                    abbr = abbr + cultures[currentCulture].abbreviations.million;\n                    value = value / Math.pow(10, 6);\n                } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3) && !abbrForce || abbrK) {\n                    // thousand\n                    abbr = abbr + cultures[currentCulture].abbreviations.thousand;\n                    value = value / Math.pow(10, 3);\n                }\n            }\n        }\n        // see if we are formatting binary bytes\n        if (format.indexOf('b') > -1) {\n            // check for space before\n            if (format.indexOf(' b') > -1) {\n                bytes = ' ';\n                format = format.replace(' b', '');\n            } else {\n                format = format.replace('b', '');\n            }\n            for (power = 0; power <= binarySuffixes.length; power++) {\n                min = Math.pow(1024, power);\n                max = Math.pow(1024, power + 1);\n                if (value >= min && value < max) {\n                    bytes = bytes + binarySuffixes[power];\n                    if (min > 0) {\n                        value = value / min;\n                    }\n                    break;\n                }\n            }\n        }\n        // see if we are formatting decimal bytes\n        if (format.indexOf('d') > -1) {\n            // check for space before\n            if (format.indexOf(' d') > -1) {\n                bytes = ' ';\n                format = format.replace(' d', '');\n            } else {\n                format = format.replace('d', '');\n            }\n            for (power = 0; power <= decimalSuffixes.length; power++) {\n                min = Math.pow(1000, power);\n                max = Math.pow(1000, power + 1);\n                if (value >= min && value < max) {\n                    bytes = bytes + decimalSuffixes[power];\n                    if (min > 0) {\n                        value = value / min;\n                    }\n                    break;\n                }\n            }\n        }\n        // see if ordinal is wanted\n        if (format.indexOf('o') > -1) {\n            // check for space before\n            if (format.indexOf(' o') > -1) {\n                ord = ' ';\n                format = format.replace(' o', '');\n            } else {\n                format = format.replace('o', '');\n            }\n            if (cultures[currentCulture].ordinal) {\n                ord = ord + cultures[currentCulture].ordinal(value);\n            }\n        }\n        if (format.indexOf('[.]') > -1) {\n            optDec = true;\n            format = format.replace('[.]', '.');\n        }\n        w = value.toString().split('.')[0];\n        precision = format.split('.')[1];\n        thousands = format.indexOf(',');\n        if (precision) {\n            if (precision.indexOf('*') !== -1) {\n                d = toFixed(value, value.toString().split('.')[1].length, roundingFunction);\n            } else {\n                if (precision.indexOf('[') > -1) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    d = toFixed(value, precision[0].length + precision[1].length, roundingFunction, precision[1].length);\n                } else {\n                    d = toFixed(value, precision.length, roundingFunction);\n                }\n            }\n            w = d.split('.')[0];\n            if (d.split('.')[1].length) {\n                var p = sep ? abbr + sep : cultures[currentCulture].delimiters.decimal;\n                d = p + d.split('.')[1];\n            } else {\n                d = '';\n            }\n            if (optDec && Number(d.slice(1)) === 0) {\n                d = '';\n            }\n        } else {\n            w = toFixed(value, null, roundingFunction);\n        }\n        // format number\n        if (w.indexOf('-') > -1) {\n            w = w.slice(1);\n            neg = true;\n        }\n        if (w.length < minlen) {\n            w = new Array(minlen - w.length + 1).join('0') + w;\n        }\n        if (thousands > -1) {\n            w = w.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + cultures[currentCulture].delimiters.thousands);\n        }\n        if (format.indexOf('.') === 0) {\n            w = '';\n        }\n        indexOpenP = format.indexOf('(');\n        indexMinus = format.indexOf('-');\n        if (indexOpenP < indexMinus) {\n            paren = (negP && neg ? '(' : '') + (forcedNeg && neg || !negP && neg ? '-' : '');\n        } else {\n            paren = (forcedNeg && neg || !negP && neg ? '-' : '') + (negP && neg ? '(' : '');\n        }\n        return prefix + paren + (!neg && signed && value !== 0 ? '+' : '') + w + d + (ord ? ord : '') + (abbr && !sep ? abbr : '') + (bytes ? bytes : '') + (negP && neg ? ')' : '') + postfix;\n    }\n    /************************************\n        Top Level Functions\n    ************************************/\n    numbro = function (input) {\n        if (numbro.isNumbro(input)) {\n            input = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            input = 0;\n        } else if (!Number(input)) {\n            input = numbro.fn.unformat(input);\n        }\n        return new Numbro(Number(input));\n    };\n    // version number\n    numbro.version = VERSION;\n    // compare numbro object\n    numbro.isNumbro = function (obj) {\n        return obj instanceof Numbro;\n    };\n    /**\n     * This function allow the user to set a new language with a fallback if\n     * the language does not exist. If no fallback language is provided,\n     * it fallbacks to english.\n     *\n     * @deprecated Since in version 1.6.0. It will be deleted in version 2.0\n     * `setCulture` should be used instead.\n     */\n    numbro.setLanguage = function (newLanguage, fallbackLanguage) {\n        console.warn('`setLanguage` is deprecated since version 1.6.0. Use `setCulture` instead');\n        var key = newLanguage, prefix = newLanguage.split('-')[0], matchingLanguage = null;\n        if (!languages[key]) {\n            Object.keys(languages).forEach(function (language) {\n                if (!matchingLanguage && language.split('-')[0] === prefix) {\n                    matchingLanguage = language;\n                }\n            });\n            key = matchingLanguage || fallbackLanguage || 'en-US';\n        }\n        chooseCulture(key);\n    };\n    /**\n     * This function allow the user to set a new culture with a fallback if\n     * the culture does not exist. If no fallback culture is provided,\n     * it fallbacks to \"en-US\".\n     */\n    numbro.setCulture = function (newCulture, fallbackCulture) {\n        var key = newCulture, suffix = newCulture.split('-')[1], matchingCulture = null;\n        if (!cultures[key]) {\n            if (suffix) {\n                Object.keys(cultures).forEach(function (language) {\n                    if (!matchingCulture && language.split('-')[1] === suffix) {\n                        matchingCulture = language;\n                    }\n                });\n            }\n            key = matchingCulture || fallbackCulture || 'en-US';\n        }\n        chooseCulture(key);\n    };\n    /**\n     * This function will load languages and then set the global language.  If\n     * no arguments are passed in, it will simply return the current global\n     * language key.\n     *\n     * @deprecated Since in version 1.6.0. It will be deleted in version 2.0\n     * `culture` should be used instead.\n     */\n    numbro.language = function (key, values) {\n        console.warn('`language` is deprecated since version 1.6.0. Use `culture` instead');\n        if (!key) {\n            return currentCulture;\n        }\n        if (key && !values) {\n            if (!languages[key]) {\n                throw new Error('Unknown language : ' + key);\n            }\n            chooseCulture(key);\n        }\n        if (values || !languages[key]) {\n            setCulture(key, values);\n        }\n        return numbro;\n    };\n    /**\n     * This function will load cultures and then set the global culture.  If\n     * no arguments are passed in, it will simply return the current global\n     * culture code.\n     */\n    numbro.culture = function (code, values) {\n        if (!code) {\n            return currentCulture;\n        }\n        if (code && !values) {\n            if (!cultures[code]) {\n                throw new Error('Unknown culture : ' + code);\n            }\n            chooseCulture(code);\n        }\n        if (values || !cultures[code]) {\n            setCulture(code, values);\n        }\n        return numbro;\n    };\n    /**\n     * This function provides access to the loaded language data.  If\n     * no arguments are passed in, it will simply return the current\n     * global language object.\n     *\n     * @deprecated Since in version 1.6.0. It will be deleted in version 2.0\n     * `culture` should be used instead.\n     */\n    numbro.languageData = function (key) {\n        console.warn('`languageData` is deprecated since version 1.6.0. Use `cultureData` instead');\n        if (!key) {\n            return languages[currentCulture];\n        }\n        if (!languages[key]) {\n            throw new Error('Unknown language : ' + key);\n        }\n        return languages[key];\n    };\n    /**\n     * This function provides access to the loaded culture data.  If\n     * no arguments are passed in, it will simply return the current\n     * global culture object.\n     */\n    numbro.cultureData = function (code) {\n        if (!code) {\n            return cultures[currentCulture];\n        }\n        if (!cultures[code]) {\n            throw new Error('Unknown culture : ' + code);\n        }\n        return cultures[code];\n    };\n    numbro.culture('en-US', enUS);\n    /**\n     * @deprecated Since in version 1.6.0. It will be deleted in version 2.0\n     * `cultures` should be used instead.\n     */\n    numbro.languages = function () {\n        console.warn('`languages` is deprecated since version 1.6.0. Use `cultures` instead');\n        return languages;\n    };\n    numbro.cultures = function () {\n        return cultures;\n    };\n    numbro.zeroFormat = function (format) {\n        zeroFormat = typeof format === 'string' ? format : null;\n    };\n    numbro.defaultFormat = function (format) {\n        defaultFormat = typeof format === 'string' ? format : '0.0';\n    };\n    numbro.defaultCurrencyFormat = function (format) {\n        defaultCurrencyFormat = typeof format === 'string' ? format : '0$';\n    };\n    numbro.validate = function (val, culture) {\n        var _decimalSep, _thousandSep, _currSymbol, _valArray, _abbrObj, _thousandRegEx, cultureData, temp;\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n            if (console.warn) {\n                console.warn('Numbro.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n        //trim whitespaces from either sides\n        val = val.trim();\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n        //get the decimal and thousands separator from numbro.cultureData\n        try {\n            //check if the culture is understood by numbro. if not, default it to current culture\n            cultureData = numbro.cultureData(culture);\n        } catch (e) {\n            cultureData = numbro.cultureData(numbro.culture());\n        }\n        //setup the delimiters and currency symbol based on culture\n        _currSymbol = cultureData.currency.symbol;\n        _abbrObj = cultureData.abbreviations;\n        _decimalSep = cultureData.delimiters.decimal;\n        if (cultureData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = cultureData.delimiters.thousands;\n        }\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return !!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx);\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return !!_valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/);\n                    } else {\n                        return !!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/);\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /************************************\n        Helpers\n    ************************************/\n    function setCulture(code, values) {\n        cultures[code] = values;\n    }\n    function chooseCulture(code) {\n        currentCulture = code;\n        var defaults = cultures[code].defaults;\n        if (defaults && defaults.format) {\n            numbro.defaultFormat(defaults.format);\n        }\n        if (defaults && defaults.currencyFormat) {\n            numbro.defaultCurrencyFormat(defaults.currencyFormat);\n        }\n    }\n    function format(input, formatString, language, roundingFunction) {\n        if (language != null && language !== numbro.culture()) {\n            numbro.setCulture(language);\n        }\n        return formatNumbro(Number(input), formatString != null ? formatString : defaultFormat, roundingFunction == null ? Math.round : roundingFunction);\n    }\n    module.exports = { 'format': format };\n}","/*proj4/lib/Proj*/\nfunction _(require, module, exports) {\n    var parseCode = require(353    /* ./parseCode */);\n    var extend = require(351    /* ./extend */);\n    var projections = require(355    /* ./projections */);\n    var deriveConstants = require(350    /* ./deriveConstants */);\n    var Datum = require(341    /* ./constants/Datum */);\n    var datum = require(346    /* ./datum */);\n    function Projection(srsCode, callback) {\n        if (!(this instanceof Projection)) {\n            return new Projection(srsCode);\n        }\n        callback = callback || function (error) {\n            if (error) {\n                throw error;\n            }\n        };\n        var json = parseCode(srsCode);\n        if (typeof json !== 'object') {\n            callback(srsCode);\n            return;\n        }\n        var ourProj = Projection.projections.get(json.projName);\n        if (!ourProj) {\n            callback(srsCode);\n            return;\n        }\n        if (json.datumCode && json.datumCode !== 'none') {\n            var datumDef = Datum[json.datumCode];\n            if (datumDef) {\n                json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n                json.ellps = datumDef.ellipse;\n                json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n            }\n        }\n        json.k0 = json.k0 || 1;\n        json.axis = json.axis || 'enu';\n        var sphere = deriveConstants.sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n        var ecc = deriveConstants.eccentricity(sphere.a, sphere.b, sphere.rf, json.R_A);\n        var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere.a, sphere.b, ecc.es, ecc.ep2);\n        extend(this, json);\n        // transfer everything over from the projection because we don't know what we'll need\n        extend(this, ourProj);\n        // transfer all the methods from the projection\n        // copy the 4 things over we calulated in deriveConstants.sphere\n        this.a = sphere.a;\n        this.b = sphere.b;\n        this.rf = sphere.rf;\n        this.sphere = sphere.sphere;\n        // copy the 3 things we calculated in deriveConstants.eccentricity\n        this.es = ecc.es;\n        this.e = ecc.e;\n        this.ep2 = ecc.ep2;\n        // add in the datum object\n        this.datum = datumObj;\n        // init the projection\n        this.init();\n        // legecy callback from back in the day when it went to spatialreference.org\n        callback(null, this);\n    }\n    Projection.projections = projections;\n    Projection.projections.start();\n    module.exports = Projection;\n}","/*proj4/lib/adjust_axis*/\nfunction _(require, module, exports) {\n    module.exports = function (crs, denorm, point) {\n        var xin = point.x, yin = point.y, zin = point.z || 0;\n        var v, t, i;\n        var out = {};\n        for (i = 0; i < 3; i++) {\n            if (denorm && i === 2 && point.z === undefined) {\n                continue;\n            }\n            if (i === 0) {\n                v = xin;\n                t = 'x';\n            } else if (i === 1) {\n                v = yin;\n                t = 'y';\n            } else {\n                v = zin;\n                t = 'z';\n            }\n            switch (crs.axis[i]) {\n            case 'e':\n                out[t] = v;\n                break;\n            case 'w':\n                out[t] = -v;\n                break;\n            case 'n':\n                out[t] = v;\n                break;\n            case 's':\n                out[t] = -v;\n                break;\n            case 'u':\n                if (point[t] !== undefined) {\n                    out.z = v;\n                }\n                break;\n            case 'd':\n                if (point[t] !== undefined) {\n                    out.z = -v;\n                }\n                break;\n            default:\n                //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n                return null;\n            }\n        }\n        return out;\n    };\n}","/*proj4/lib/common/adjust_lon*/\nfunction _(require, module, exports) {\n    var TWO_PI = Math.PI * 2;\n    // SPI is slightly greater than Math.PI, so values that exceed the -180..180\n    // degree range by a tiny amount don't get wrapped. This prevents points that\n    // have drifted from their original location along the 180th meridian (due to\n    // floating point error) from changing their sign.\n    var SPI = 3.14159265359;\n    var sign = require(338    /* ./sign */);\n    module.exports = function (x) {\n        return Math.abs(x) <= SPI ? x : x - sign(x) * TWO_PI;\n    };\n}","/*proj4/lib/common/msfnz*/\nfunction _(require, module, exports) {\n    module.exports = function (eccent, sinphi, cosphi) {\n        var con = eccent * sinphi;\n        return cosphi / Math.sqrt(1 - con * con);\n    };\n}","/*proj4/lib/common/phi2z*/\nfunction _(require, module, exports) {\n    var HALF_PI = Math.PI / 2;\n    module.exports = function (eccent, ts) {\n        var eccnth = 0.5 * eccent;\n        var con, dphi;\n        var phi = HALF_PI - 2 * Math.atan(ts);\n        for (var i = 0; i <= 15; i++) {\n            con = eccent * Math.sin(phi);\n            dphi = HALF_PI - 2 * Math.atan(ts * Math.pow((1 - con) / (1 + con), eccnth)) - phi;\n            phi += dphi;\n            if (Math.abs(dphi) <= 1e-10) {\n                return phi;\n            }\n        }\n        //console.log(\"phi2z has NoConvergence\");\n        return -9999;\n    };\n}","/*proj4/lib/common/sign*/\nfunction _(require, module, exports) {\n    module.exports = function (x) {\n        return x < 0 ? -1 : 1;\n    };\n}","/*proj4/lib/common/toPoint*/\nfunction _(require, module, exports) {\n    module.exports = function (array) {\n        var out = {\n            x: array[0],\n            y: array[1]\n        };\n        if (array.length > 2) {\n            out.z = array[2];\n        }\n        if (array.length > 3) {\n            out.m = array[3];\n        }\n        return out;\n    };\n}","/*proj4/lib/common/tsfnz*/\nfunction _(require, module, exports) {\n    var HALF_PI = Math.PI / 2;\n    module.exports = function (eccent, phi, sinphi) {\n        var con = eccent * sinphi;\n        var com = 0.5 * eccent;\n        con = Math.pow((1 - con) / (1 + con), com);\n        return Math.tan(0.5 * (HALF_PI - phi)) / con;\n    };\n}","/*proj4/lib/constants/Datum*/\nfunction _(require, module, exports) {\n    exports.wgs84 = {\n        towgs84: '0,0,0',\n        ellipse: 'WGS84',\n        datumName: 'WGS84'\n    };\n    exports.ch1903 = {\n        towgs84: '674.374,15.056,405.346',\n        ellipse: 'bessel',\n        datumName: 'swiss'\n    };\n    exports.ggrs87 = {\n        towgs84: '-199.87,74.79,246.62',\n        ellipse: 'GRS80',\n        datumName: 'Greek_Geodetic_Reference_System_1987'\n    };\n    exports.nad83 = {\n        towgs84: '0,0,0',\n        ellipse: 'GRS80',\n        datumName: 'North_American_Datum_1983'\n    };\n    exports.nad27 = {\n        nadgrids: '@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat',\n        ellipse: 'clrk66',\n        datumName: 'North_American_Datum_1927'\n    };\n    exports.potsdam = {\n        towgs84: '606.0,23.0,413.0',\n        ellipse: 'bessel',\n        datumName: 'Potsdam Rauenberg 1950 DHDN'\n    };\n    exports.carthage = {\n        towgs84: '-263.0,6.0,431.0',\n        ellipse: 'clark80',\n        datumName: 'Carthage 1934 Tunisia'\n    };\n    exports.hermannskogel = {\n        towgs84: '653.0,-212.0,449.0',\n        ellipse: 'bessel',\n        datumName: 'Hermannskogel'\n    };\n    exports.ire65 = {\n        towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n        ellipse: 'mod_airy',\n        datumName: 'Ireland 1965'\n    };\n    exports.rassadiran = {\n        towgs84: '-133.63,-157.5,-158.62',\n        ellipse: 'intl',\n        datumName: 'Rassadiran'\n    };\n    exports.nzgd49 = {\n        towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n        ellipse: 'intl',\n        datumName: 'New Zealand Geodetic Datum 1949'\n    };\n    exports.osgb36 = {\n        towgs84: '446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894',\n        ellipse: 'airy',\n        datumName: 'Airy 1830'\n    };\n    exports.s_jtsk = {\n        towgs84: '589,76,480',\n        ellipse: 'bessel',\n        datumName: 'S-JTSK (Ferro)'\n    };\n    exports.beduaram = {\n        towgs84: '-106,-87,188',\n        ellipse: 'clrk80',\n        datumName: 'Beduaram'\n    };\n    exports.gunung_segara = {\n        towgs84: '-403,684,41',\n        ellipse: 'bessel',\n        datumName: 'Gunung Segara Jakarta'\n    };\n    exports.rnb72 = {\n        towgs84: '106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1',\n        ellipse: 'intl',\n        datumName: 'Reseau National Belge 1972'\n    };\n}","/*proj4/lib/constants/Ellipsoid*/\nfunction _(require, module, exports) {\n    exports.MERIT = {\n        a: 6378137,\n        rf: 298.257,\n        ellipseName: 'MERIT 1983'\n    };\n    exports.SGS85 = {\n        a: 6378136,\n        rf: 298.257,\n        ellipseName: 'Soviet Geodetic System 85'\n    };\n    exports.GRS80 = {\n        a: 6378137,\n        rf: 298.257222101,\n        ellipseName: 'GRS 1980(IUGG, 1980)'\n    };\n    exports.IAU76 = {\n        a: 6378140,\n        rf: 298.257,\n        ellipseName: 'IAU 1976'\n    };\n    exports.airy = {\n        a: 6377563.396,\n        b: 6356256.91,\n        ellipseName: 'Airy 1830'\n    };\n    exports.APL4 = {\n        a: 6378137,\n        rf: 298.25,\n        ellipseName: 'Appl. Physics. 1965'\n    };\n    exports.NWL9D = {\n        a: 6378145,\n        rf: 298.25,\n        ellipseName: 'Naval Weapons Lab., 1965'\n    };\n    exports.mod_airy = {\n        a: 6377340.189,\n        b: 6356034.446,\n        ellipseName: 'Modified Airy'\n    };\n    exports.andrae = {\n        a: 6377104.43,\n        rf: 300,\n        ellipseName: 'Andrae 1876 (Den., Iclnd.)'\n    };\n    exports.aust_SA = {\n        a: 6378160,\n        rf: 298.25,\n        ellipseName: 'Australian Natl & S. Amer. 1969'\n    };\n    exports.GRS67 = {\n        a: 6378160,\n        rf: 298.247167427,\n        ellipseName: 'GRS 67(IUGG 1967)'\n    };\n    exports.bessel = {\n        a: 6377397.155,\n        rf: 299.1528128,\n        ellipseName: 'Bessel 1841'\n    };\n    exports.bess_nam = {\n        a: 6377483.865,\n        rf: 299.1528128,\n        ellipseName: 'Bessel 1841 (Namibia)'\n    };\n    exports.clrk66 = {\n        a: 6378206.4,\n        b: 6356583.8,\n        ellipseName: 'Clarke 1866'\n    };\n    exports.clrk80 = {\n        a: 6378249.145,\n        rf: 293.4663,\n        ellipseName: 'Clarke 1880 mod.'\n    };\n    exports.clrk58 = {\n        a: 6378293.645208759,\n        rf: 294.2606763692654,\n        ellipseName: 'Clarke 1858'\n    };\n    exports.CPM = {\n        a: 6375738.7,\n        rf: 334.29,\n        ellipseName: 'Comm. des Poids et Mesures 1799'\n    };\n    exports.delmbr = {\n        a: 6376428,\n        rf: 311.5,\n        ellipseName: 'Delambre 1810 (Belgium)'\n    };\n    exports.engelis = {\n        a: 6378136.05,\n        rf: 298.2566,\n        ellipseName: 'Engelis 1985'\n    };\n    exports.evrst30 = {\n        a: 6377276.345,\n        rf: 300.8017,\n        ellipseName: 'Everest 1830'\n    };\n    exports.evrst48 = {\n        a: 6377304.063,\n        rf: 300.8017,\n        ellipseName: 'Everest 1948'\n    };\n    exports.evrst56 = {\n        a: 6377301.243,\n        rf: 300.8017,\n        ellipseName: 'Everest 1956'\n    };\n    exports.evrst69 = {\n        a: 6377295.664,\n        rf: 300.8017,\n        ellipseName: 'Everest 1969'\n    };\n    exports.evrstSS = {\n        a: 6377298.556,\n        rf: 300.8017,\n        ellipseName: 'Everest (Sabah & Sarawak)'\n    };\n    exports.fschr60 = {\n        a: 6378166,\n        rf: 298.3,\n        ellipseName: 'Fischer (Mercury Datum) 1960'\n    };\n    exports.fschr60m = {\n        a: 6378155,\n        rf: 298.3,\n        ellipseName: 'Fischer 1960'\n    };\n    exports.fschr68 = {\n        a: 6378150,\n        rf: 298.3,\n        ellipseName: 'Fischer 1968'\n    };\n    exports.helmert = {\n        a: 6378200,\n        rf: 298.3,\n        ellipseName: 'Helmert 1906'\n    };\n    exports.hough = {\n        a: 6378270,\n        rf: 297,\n        ellipseName: 'Hough'\n    };\n    exports.intl = {\n        a: 6378388,\n        rf: 297,\n        ellipseName: 'International 1909 (Hayford)'\n    };\n    exports.kaula = {\n        a: 6378163,\n        rf: 298.24,\n        ellipseName: 'Kaula 1961'\n    };\n    exports.lerch = {\n        a: 6378139,\n        rf: 298.257,\n        ellipseName: 'Lerch 1979'\n    };\n    exports.mprts = {\n        a: 6397300,\n        rf: 191,\n        ellipseName: 'Maupertius 1738'\n    };\n    exports.new_intl = {\n        a: 6378157.5,\n        b: 6356772.2,\n        ellipseName: 'New International 1967'\n    };\n    exports.plessis = {\n        a: 6376523,\n        rf: 6355863,\n        ellipseName: 'Plessis 1817 (France)'\n    };\n    exports.krass = {\n        a: 6378245,\n        rf: 298.3,\n        ellipseName: 'Krassovsky, 1942'\n    };\n    exports.SEasia = {\n        a: 6378155,\n        b: 6356773.3205,\n        ellipseName: 'Southeast Asia'\n    };\n    exports.walbeck = {\n        a: 6376896,\n        b: 6355834.8467,\n        ellipseName: 'Walbeck'\n    };\n    exports.WGS60 = {\n        a: 6378165,\n        rf: 298.3,\n        ellipseName: 'WGS 60'\n    };\n    exports.WGS66 = {\n        a: 6378145,\n        rf: 298.25,\n        ellipseName: 'WGS 66'\n    };\n    exports.WGS7 = {\n        a: 6378135,\n        rf: 298.26,\n        ellipseName: 'WGS 72'\n    };\n    exports.WGS84 = {\n        a: 6378137,\n        rf: 298.257223563,\n        ellipseName: 'WGS 84'\n    };\n    exports.sphere = {\n        a: 6370997,\n        b: 6370997,\n        ellipseName: 'Normal Sphere (r=6370997)'\n    };\n}","/*proj4/lib/constants/PrimeMeridian*/\nfunction _(require, module, exports) {\n    exports.greenwich = 0;\n    //\"0dE\",\n    exports.lisbon = -9.131906111111;\n    //\"9d07'54.862\\\"W\",\n    exports.paris = 2.337229166667;\n    //\"2d20'14.025\\\"E\",\n    exports.bogota = -74.080916666667;\n    //\"74d04'51.3\\\"W\",\n    exports.madrid = -3.687938888889;\n    //\"3d41'16.58\\\"W\",\n    exports.rome = 12.452333333333;\n    //\"12d27'8.4\\\"E\",\n    exports.bern = 7.439583333333;\n    //\"7d26'22.5\\\"E\",\n    exports.jakarta = 106.807719444444;\n    //\"106d48'27.79\\\"E\",\n    exports.ferro = -17.666666666667;\n    //\"17d40'W\",\n    exports.brussels = 4.367975;\n    //\"4d22'4.71\\\"E\",\n    exports.stockholm = 18.058277777778;\n    //\"18d3'29.8\\\"E\",\n    exports.athens = 23.7163375;\n    //\"23d42'58.815\\\"E\",\n    exports.oslo = 10.722916666667;    //\"10d43'22.5\\\"E\"\n}","/*proj4/lib/constants/units*/\nfunction _(require, module, exports) {\n    exports.ft = { to_meter: 0.3048 };\n    exports['us-ft'] = { to_meter: 1200 / 3937 };\n}","/*proj4/lib/core*/\nfunction _(require, module, exports) {\n    var proj = require(333    /* ./Proj */);\n    var transform = require(358    /* ./transform */);\n    var wgs84 = proj('WGS84');\n    function transformer(from, to, coords) {\n        var transformedArray;\n        if (Array.isArray(coords)) {\n            transformedArray = transform(from, to, coords);\n            if (coords.length === 3) {\n                return [\n                    transformedArray.x,\n                    transformedArray.y,\n                    transformedArray.z\n                ];\n            } else {\n                return [\n                    transformedArray.x,\n                    transformedArray.y\n                ];\n            }\n        } else {\n            return transform(from, to, coords);\n        }\n    }\n    function checkProj(item) {\n        if (item instanceof proj) {\n            return item;\n        }\n        if (item.oProj) {\n            return item.oProj;\n        }\n        return proj(item);\n    }\n    function proj4(fromProj, toProj, coord) {\n        fromProj = checkProj(fromProj);\n        var single = false;\n        var obj;\n        if (typeof toProj === 'undefined') {\n            toProj = fromProj;\n            fromProj = wgs84;\n            single = true;\n        } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n            coord = toProj;\n            toProj = fromProj;\n            fromProj = wgs84;\n            single = true;\n        }\n        toProj = checkProj(toProj);\n        if (coord) {\n            return transformer(fromProj, toProj, coord);\n        } else {\n            obj = {\n                forward: function (coords) {\n                    return transformer(fromProj, toProj, coords);\n                },\n                inverse: function (coords) {\n                    return transformer(toProj, fromProj, coords);\n                }\n            };\n            if (single) {\n                obj.oProj = toProj;\n            }\n            return obj;\n        }\n    }\n    module.exports = proj4;\n}","/*proj4/lib/datum*/\nfunction _(require, module, exports) {\n    var PJD_3PARAM = 1;\n    var PJD_7PARAM = 2;\n    var PJD_WGS84 = 4;\n    // WGS84 or equivalent\n    var PJD_NODATUM = 5;\n    // WGS84 or equivalent\n    var SEC_TO_RAD = 0.00000484813681109536;\n    function datum(datumCode, datum_params, a, b, es, ep2) {\n        var out = {};\n        out.datum_type = PJD_WGS84;\n        //default setting\n        if (datumCode && datumCode === 'none') {\n            out.datum_type = PJD_NODATUM;\n        }\n        if (datum_params) {\n            out.datum_params = datum_params.map(parseFloat);\n            if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n                out.datum_type = PJD_3PARAM;\n            }\n            if (out.datum_params.length > 3) {\n                if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n                    out.datum_type = PJD_7PARAM;\n                    out.datum_params[3] *= SEC_TO_RAD;\n                    out.datum_params[4] *= SEC_TO_RAD;\n                    out.datum_params[5] *= SEC_TO_RAD;\n                    out.datum_params[6] = out.datum_params[6] / 1000000 + 1;\n                }\n            }\n        }\n        out.a = a;\n        //datum object also uses these values\n        out.b = b;\n        out.es = es;\n        out.ep2 = ep2;\n        return out;\n    }\n    module.exports = datum;\n}","/*proj4/lib/datumUtils*/\nfunction _(require, module, exports) {\n    var PJD_3PARAM = 1;\n    var PJD_7PARAM = 2;\n    var HALF_PI = Math.PI / 2;\n    exports.compareDatums = function (source, dest) {\n        if (source.datum_type !== dest.datum_type) {\n            return false;    // false, datums are not equal\n        } else if (source.a !== dest.a || Math.abs(this.es - dest.es) > 5e-11) {\n            // the tolerence for es is to ensure that GRS80 and WGS84\n            // are considered identical\n            return false;\n        } else if (source.datum_type === PJD_3PARAM) {\n            return this.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2];\n        } else if (source.datum_type === PJD_7PARAM) {\n            return source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6];\n        } else {\n            return true;    // datums are equal\n        }\n    };\n    // cs_compare_datums()\n    /*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\n    exports.geodeticToGeocentric = function (p, es, a) {\n        var Longitude = p.x;\n        var Latitude = p.y;\n        var Height = p.z ? p.z : 0;\n        //Z value not always supplied\n        var Rn;\n        /*  Earth radius at location  */\n        var Sin_Lat;\n        /*  Math.sin(Latitude)  */\n        var Sin2_Lat;\n        /*  Square of Math.sin(Latitude)  */\n        var Cos_Lat;\n        /*  Math.cos(Latitude)  */\n        /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n        if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n            Latitude = -HALF_PI;\n        } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n            Latitude = HALF_PI;\n        } else if (Latitude < -HALF_PI || Latitude > HALF_PI) {\n            /* Latitude out of range */\n            //..reportError('geocent:lat out of range:' + Latitude);\n            return null;\n        }\n        if (Longitude > Math.PI) {\n            Longitude -= 2 * Math.PI;\n        }\n        Sin_Lat = Math.sin(Latitude);\n        Cos_Lat = Math.cos(Latitude);\n        Sin2_Lat = Sin_Lat * Sin_Lat;\n        Rn = a / Math.sqrt(1 - es * Sin2_Lat);\n        return {\n            x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n            y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n            z: (Rn * (1 - es) + Height) * Sin_Lat\n        };\n    };\n    // cs_geodetic_to_geocentric()\n    exports.geocentricToGeodetic = function (p, es, a, b) {\n        /* local defintions and variables */\n        /* end-criterium of loop, accuracy of sin(Latitude) */\n        var genau = 1e-12;\n        var genau2 = genau * genau;\n        var maxiter = 30;\n        var P;\n        /* distance between semi-minor axis and location */\n        var RR;\n        /* distance between center and location */\n        var CT;\n        /* sin of geocentric latitude */\n        var ST;\n        /* cos of geocentric latitude */\n        var RX;\n        var RK;\n        var RN;\n        /* Earth radius at location */\n        var CPHI0;\n        /* cos of start or old geodetic latitude in iterations */\n        var SPHI0;\n        /* sin of start or old geodetic latitude in iterations */\n        var CPHI;\n        /* cos of searched geodetic latitude */\n        var SPHI;\n        /* sin of searched geodetic latitude */\n        var SDPHI;\n        /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n        var iter;\n        /* # of continous iteration, max. 30 is always enough (s.a.) */\n        var X = p.x;\n        var Y = p.y;\n        var Z = p.z ? p.z : 0;\n        //Z value not always supplied\n        var Longitude;\n        var Latitude;\n        var Height;\n        P = Math.sqrt(X * X + Y * Y);\n        RR = Math.sqrt(X * X + Y * Y + Z * Z);\n        /*      special cases for latitude and longitude */\n        if (P / a < genau) {\n            /*  special case, if P=0. (X=0., Y=0.) */\n            Longitude = 0;\n            /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n            if (RR / a < genau) {\n                Latitude = HALF_PI;\n                Height = -b;\n                return {\n                    x: p.x,\n                    y: p.y,\n                    z: p.z\n                };\n            }\n        } else {\n            /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n            Longitude = Math.atan2(Y, X);\n        }\n        /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n        CT = Z / RR;\n        ST = P / RR;\n        RX = 1 / Math.sqrt(1 - es * (2 - es) * ST * ST);\n        CPHI0 = ST * (1 - es) * RX;\n        SPHI0 = CT * RX;\n        iter = 0;\n        /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n        do {\n            iter++;\n            RN = a / Math.sqrt(1 - es * SPHI0 * SPHI0);\n            /*  ellipsoidal (geodetic) height */\n            Height = P * CPHI0 + Z * SPHI0 - RN * (1 - es * SPHI0 * SPHI0);\n            RK = es * RN / (RN + Height);\n            RX = 1 / Math.sqrt(1 - RK * (2 - RK) * ST * ST);\n            CPHI = ST * (1 - RK) * RX;\n            SPHI = CT * RX;\n            SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n            CPHI0 = CPHI;\n            SPHI0 = SPHI;\n        } while (SDPHI * SDPHI > genau2 && iter < maxiter);\n        /*      ellipsoidal (geodetic) latitude */\n        Latitude = Math.atan(SPHI / Math.abs(CPHI));\n        return {\n            x: Longitude,\n            y: Latitude,\n            z: Height\n        };\n    };\n    // cs_geocentric_to_geodetic()\n    /****************************************************************/\n    // pj_geocentic_to_wgs84( p )\n    //  p = point to transform in geocentric coordinates (x,y,z)\n    /** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\n    exports.geocentricToWgs84 = function (p, datum_type, datum_params) {\n        if (datum_type === PJD_3PARAM) {\n            // if( x[io] === HUGE_VAL )\n            //    continue;\n            return {\n                x: p.x + datum_params[0],\n                y: p.y + datum_params[1],\n                z: p.z + datum_params[2]\n            };\n        } else if (datum_type === PJD_7PARAM) {\n            var Dx_BF = datum_params[0];\n            var Dy_BF = datum_params[1];\n            var Dz_BF = datum_params[2];\n            var Rx_BF = datum_params[3];\n            var Ry_BF = datum_params[4];\n            var Rz_BF = datum_params[5];\n            var M_BF = datum_params[6];\n            // if( x[io] === HUGE_VAL )\n            //    continue;\n            return {\n                x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n                y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n                z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n            };\n        }\n    };\n    // cs_geocentric_to_wgs84\n    /****************************************************************/\n    // pj_geocentic_from_wgs84()\n    //  coordinate system definition,\n    //  point to transform in geocentric coordinates (x,y,z)\n    exports.geocentricFromWgs84 = function (p, datum_type, datum_params) {\n        if (datum_type === PJD_3PARAM) {\n            //if( x[io] === HUGE_VAL )\n            //    continue;\n            return {\n                x: p.x - datum_params[0],\n                y: p.y - datum_params[1],\n                z: p.z - datum_params[2]\n            };\n        } else if (datum_type === PJD_7PARAM) {\n            var Dx_BF = datum_params[0];\n            var Dy_BF = datum_params[1];\n            var Dz_BF = datum_params[2];\n            var Rx_BF = datum_params[3];\n            var Ry_BF = datum_params[4];\n            var Rz_BF = datum_params[5];\n            var M_BF = datum_params[6];\n            var x_tmp = (p.x - Dx_BF) / M_BF;\n            var y_tmp = (p.y - Dy_BF) / M_BF;\n            var z_tmp = (p.z - Dz_BF) / M_BF;\n            //if( x[io] === HUGE_VAL )\n            //    continue;\n            return {\n                x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n                y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n                z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n            };\n        }    //cs_geocentric_from_wgs84()\n    };\n}","/*proj4/lib/datum_transform*/\nfunction _(require, module, exports) {\n    var PJD_3PARAM = 1;\n    var PJD_7PARAM = 2;\n    var PJD_NODATUM = 5;\n    // WGS84 or equivalent\n    var datum = require(347    /* ./datumUtils */);\n    function checkParams(type) {\n        return type === PJD_3PARAM || type === PJD_7PARAM;\n    }\n    module.exports = function (source, dest, point) {\n        // Short cut if the datums are identical.\n        if (datum.compareDatums(source, dest)) {\n            return point;    // in this case, zero is sucess,\n                             // whereas cs_compare_datums returns 1 to indicate TRUE\n                             // confusing, should fix this\n        }\n        // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n        if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n            return point;\n        }\n        // If this datum requires grid shifts, then apply it to geodetic coordinates.\n        // Do we need to go through geocentric coordinates?\n        if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n            return point;\n        }\n        // Convert to geocentric coordinates.\n        point = datum.geodeticToGeocentric(point, source.es, source.a);\n        // Convert between datums\n        if (checkParams(source.datum_type)) {\n            point = datum.geocentricToWgs84(point, source.datum_type, source.datum_params);\n        }\n        if (checkParams(dest.datum_type)) {\n            point = datum.geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n        }\n        return datum.geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n    };\n}","/*proj4/lib/defs*/\nfunction _(require, module, exports) {\n    var globals = require(352    /* ./global */);\n    var parseProj = require(354    /* ./projString */);\n    var wkt = require(359    /* ./wkt */);\n    function defs(name) {\n        /*global console*/\n        var that = this;\n        if (arguments.length === 2) {\n            var def = arguments[1];\n            if (typeof def === 'string') {\n                if (def.charAt(0) === '+') {\n                    defs[name] = parseProj(arguments[1]);\n                } else {\n                    defs[name] = wkt(arguments[1]);\n                }\n            } else {\n                defs[name] = def;\n            }\n        } else if (arguments.length === 1) {\n            if (Array.isArray(name)) {\n                return name.map(function (v) {\n                    if (Array.isArray(v)) {\n                        defs.apply(that, v);\n                    } else {\n                        defs(v);\n                    }\n                });\n            } else if (typeof name === 'string') {\n                if (name in defs) {\n                    return defs[name];\n                }\n            } else if ('EPSG' in name) {\n                defs['EPSG:' + name.EPSG] = name;\n            } else if ('ESRI' in name) {\n                defs['ESRI:' + name.ESRI] = name;\n            } else if ('IAU2000' in name) {\n                defs['IAU2000:' + name.IAU2000] = name;\n            } else {\n                console.log(name);\n            }\n            return;\n        }\n    }\n    globals(defs);\n    module.exports = defs;\n}","// ellipoid pj_set_ell.c\n/*proj4/lib/deriveConstants*/\nfunction _(require, module, exports) {\n    var SIXTH = 0.16666666666666666;\n    /* 1/6 */\n    var RA4 = 0.04722222222222222;\n    /* 17/360 */\n    var RA6 = 0.022156084656084655;\n    var EPSLN = 1e-10;\n    var Ellipsoid = require(342    /* ./constants/Ellipsoid */);\n    exports.eccentricity = function (a, b, rf, R_A) {\n        var a2 = a * a;\n        // used in geocentric\n        var b2 = b * b;\n        // used in geocentric\n        var es = (a2 - b2) / a2;\n        // e ^ 2\n        var e = 0;\n        if (R_A) {\n            a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n            a2 = a * a;\n            es = 0;\n        } else {\n            e = Math.sqrt(es);    // eccentricity\n        }\n        var ep2 = (a2 - b2) / b2;\n        // used in geocentric\n        return {\n            es: es,\n            e: e,\n            ep2: ep2\n        };\n    };\n    exports.sphere = function (a, b, rf, ellps, sphere) {\n        if (!a) {\n            // do we have an ellipsoid?\n            var ellipse = Ellipsoid[ellps];\n            if (!ellipse) {\n                ellipse = Ellipsoid.WGS84;\n            }\n            a = ellipse.a;\n            b = ellipse.b;\n            rf = ellipse.rf;\n        }\n        if (rf && !b) {\n            b = (1 - 1 / rf) * a;\n        }\n        if (rf === 0 || Math.abs(a - b) < EPSLN) {\n            sphere = true;\n            b = a;\n        }\n        return {\n            a: a,\n            b: b,\n            rf: rf,\n            sphere: sphere\n        };\n    };\n}","/*proj4/lib/extend*/\nfunction _(require, module, exports) {\n    module.exports = function (destination, source) {\n        destination = destination || {};\n        var value, property;\n        if (!source) {\n            return destination;\n        }\n        for (property in source) {\n            value = source[property];\n            if (value !== undefined) {\n                destination[property] = value;\n            }\n        }\n        return destination;\n    };\n}","/*proj4/lib/global*/\nfunction _(require, module, exports) {\n    module.exports = function (defs) {\n        defs('EPSG:4326', '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees');\n        defs('EPSG:4269', '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees');\n        defs('EPSG:3857', '+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');\n        defs.WGS84 = defs['EPSG:4326'];\n        defs['EPSG:3785'] = defs['EPSG:3857'];\n        // maintain backward compat, official code is 3857\n        defs.GOOGLE = defs['EPSG:3857'];\n        defs['EPSG:900913'] = defs['EPSG:3857'];\n        defs['EPSG:102113'] = defs['EPSG:3857'];\n    };\n}","/*proj4/lib/parseCode*/\nfunction _(require, module, exports) {\n    var defs = require(349    /* ./defs */);\n    var wkt = require(359    /* ./wkt */);\n    var projStr = require(354    /* ./projString */);\n    function testObj(code) {\n        return typeof code === 'string';\n    }\n    function testDef(code) {\n        return code in defs;\n    }\n    var codeWords = [\n        'GEOGCS',\n        'GEOCCS',\n        'PROJCS',\n        'LOCAL_CS'\n    ];\n    function testWKT(code) {\n        return codeWords.some(function (word) {\n            return code.indexOf(word) > -1;\n        });\n    }\n    function testProj(code) {\n        return code[0] === '+';\n    }\n    function parse(code) {\n        if (testObj(code)) {\n            //check to see if this is a WKT string\n            if (testDef(code)) {\n                return defs[code];\n            }\n            if (testWKT(code)) {\n                return wkt(code);\n            }\n            if (testProj(code)) {\n                return projStr(code);\n            }\n        } else {\n            return code;\n        }\n    }\n    module.exports = parse;\n}","/*proj4/lib/projString*/\nfunction _(require, module, exports) {\n    var D2R = 0.017453292519943295;\n    var PrimeMeridian = require(343    /* ./constants/PrimeMeridian */);\n    var units = require(344    /* ./constants/units */);\n    module.exports = function (defData) {\n        var self = {};\n        var paramObj = defData.split('+').map(function (v) {\n            return v.trim();\n        }).filter(function (a) {\n            return a;\n        }).reduce(function (p, a) {\n            var split = a.split('=');\n            split.push(true);\n            p[split[0].toLowerCase()] = split[1];\n            return p;\n        }, {});\n        var paramName, paramVal, paramOutname;\n        var params = {\n            proj: 'projName',\n            datum: 'datumCode',\n            rf: function (v) {\n                self.rf = parseFloat(v);\n            },\n            lat_0: function (v) {\n                self.lat0 = v * D2R;\n            },\n            lat_1: function (v) {\n                self.lat1 = v * D2R;\n            },\n            lat_2: function (v) {\n                self.lat2 = v * D2R;\n            },\n            lat_ts: function (v) {\n                self.lat_ts = v * D2R;\n            },\n            lon_0: function (v) {\n                self.long0 = v * D2R;\n            },\n            lon_1: function (v) {\n                self.long1 = v * D2R;\n            },\n            lon_2: function (v) {\n                self.long2 = v * D2R;\n            },\n            alpha: function (v) {\n                self.alpha = parseFloat(v) * D2R;\n            },\n            lonc: function (v) {\n                self.longc = v * D2R;\n            },\n            x_0: function (v) {\n                self.x0 = parseFloat(v);\n            },\n            y_0: function (v) {\n                self.y0 = parseFloat(v);\n            },\n            k_0: function (v) {\n                self.k0 = parseFloat(v);\n            },\n            k: function (v) {\n                self.k0 = parseFloat(v);\n            },\n            a: function (v) {\n                self.a = parseFloat(v);\n            },\n            b: function (v) {\n                self.b = parseFloat(v);\n            },\n            r_a: function () {\n                self.R_A = true;\n            },\n            zone: function (v) {\n                self.zone = parseInt(v, 10);\n            },\n            south: function () {\n                self.utmSouth = true;\n            },\n            towgs84: function (v) {\n                self.datum_params = v.split(',').map(function (a) {\n                    return parseFloat(a);\n                });\n            },\n            to_meter: function (v) {\n                self.to_meter = parseFloat(v);\n            },\n            units: function (v) {\n                self.units = v;\n                if (units[v]) {\n                    self.to_meter = units[v].to_meter;\n                }\n            },\n            from_greenwich: function (v) {\n                self.from_greenwich = v * D2R;\n            },\n            pm: function (v) {\n                self.from_greenwich = (PrimeMeridian[v] ? PrimeMeridian[v] : parseFloat(v)) * D2R;\n            },\n            nadgrids: function (v) {\n                if (v === '@null') {\n                    self.datumCode = 'none';\n                } else {\n                    self.nadgrids = v;\n                }\n            },\n            axis: function (v) {\n                var legalAxis = 'ewnsud';\n                if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n                    self.axis = v;\n                }\n            }\n        };\n        for (paramName in paramObj) {\n            paramVal = paramObj[paramName];\n            if (paramName in params) {\n                paramOutname = params[paramName];\n                if (typeof paramOutname === 'function') {\n                    paramOutname(paramVal);\n                } else {\n                    self[paramOutname] = paramVal;\n                }\n            } else {\n                self[paramName] = paramVal;\n            }\n        }\n        if (typeof self.datumCode === 'string' && self.datumCode !== 'WGS84') {\n            self.datumCode = self.datumCode.toLowerCase();\n        }\n        return self;\n    };\n}","/*proj4/lib/projections*/\nfunction _(require, module, exports) {\n    var projs = [\n        require(357    /* ./projections/merc */),\n        require(356    /* ./projections/longlat */)\n    ];\n    var names = {};\n    var projStore = [];\n    function add(proj, i) {\n        var len = projStore.length;\n        if (!proj.names) {\n            console.log(i);\n            return true;\n        }\n        projStore[len] = proj;\n        proj.names.forEach(function (n) {\n            names[n.toLowerCase()] = len;\n        });\n        return this;\n    }\n    exports.add = add;\n    exports.get = function (name) {\n        if (!name) {\n            return false;\n        }\n        var n = name.toLowerCase();\n        if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n            return projStore[names[n]];\n        }\n    };\n    exports.start = function () {\n        projs.forEach(add);\n    };\n}","/*proj4/lib/projections/longlat*/\nfunction _(require, module, exports) {\n    exports.init = function () {\n    };\n    function identity(pt) {\n        return pt;\n    }\n    exports.forward = identity;\n    exports.inverse = identity;\n    exports.names = [\n        'longlat',\n        'identity'\n    ];\n}","/*proj4/lib/projections/merc*/\nfunction _(require, module, exports) {\n    var msfnz = require(336    /* ../common/msfnz */);\n    var HALF_PI = Math.PI / 2;\n    var EPSLN = 1e-10;\n    var R2D = 57.29577951308232;\n    var adjust_lon = require(335    /* ../common/adjust_lon */);\n    var FORTPI = Math.PI / 4;\n    var tsfnz = require(340    /* ../common/tsfnz */);\n    var phi2z = require(337    /* ../common/phi2z */);\n    exports.init = function () {\n        var con = this.b / this.a;\n        this.es = 1 - con * con;\n        if (!('x0' in this)) {\n            this.x0 = 0;\n        }\n        if (!('y0' in this)) {\n            this.y0 = 0;\n        }\n        this.e = Math.sqrt(this.es);\n        if (this.lat_ts) {\n            if (this.sphere) {\n                this.k0 = Math.cos(this.lat_ts);\n            } else {\n                this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n            }\n        } else {\n            if (!this.k0) {\n                if (this.k) {\n                    this.k0 = this.k;\n                } else {\n                    this.k0 = 1;\n                }\n            }\n        }\n    };\n    /* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n    exports.forward = function (p) {\n        var lon = p.x;\n        var lat = p.y;\n        // convert to radians\n        if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n            return null;\n        }\n        var x, y;\n        if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n            return null;\n        } else {\n            if (this.sphere) {\n                x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n                y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n            } else {\n                var sinphi = Math.sin(lat);\n                var ts = tsfnz(this.e, lat, sinphi);\n                x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n                y = this.y0 - this.a * this.k0 * Math.log(ts);\n            }\n            p.x = x;\n            p.y = y;\n            return p;\n        }\n    };\n    /* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\n    exports.inverse = function (p) {\n        var x = p.x - this.x0;\n        var y = p.y - this.y0;\n        var lon, lat;\n        if (this.sphere) {\n            lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n        } else {\n            var ts = Math.exp(-y / (this.a * this.k0));\n            lat = phi2z(this.e, ts);\n            if (lat === -9999) {\n                return null;\n            }\n        }\n        lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n        p.x = lon;\n        p.y = lat;\n        return p;\n    };\n    exports.names = [\n        'Mercator',\n        'Popular Visualisation Pseudo Mercator',\n        'Mercator_1SP',\n        'Mercator_Auxiliary_Sphere',\n        'merc'\n    ];\n}","/*proj4/lib/transform*/\nfunction _(require, module, exports) {\n    var D2R = 0.017453292519943295;\n    var R2D = 57.29577951308232;\n    var PJD_3PARAM = 1;\n    var PJD_7PARAM = 2;\n    var datum_transform = require(348    /* ./datum_transform */);\n    var adjust_axis = require(334    /* ./adjust_axis */);\n    var proj = require(333    /* ./Proj */);\n    var toPoint = require(339    /* ./common/toPoint */);\n    function checkNotWGS(source, dest) {\n        return (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84' || (dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84';\n    }\n    module.exports = function transform(source, dest, point) {\n        var wgs84;\n        if (Array.isArray(point)) {\n            point = toPoint(point);\n        }\n        // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n        if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n            wgs84 = new proj('WGS84');\n            point = transform(source, wgs84, point);\n            source = wgs84;\n        }\n        // DGR, 2010/11/12\n        if (source.axis !== 'enu') {\n            point = adjust_axis(source, false, point);\n        }\n        // Transform source points to long/lat, if they aren't already.\n        if (source.projName === 'longlat') {\n            point = {\n                x: point.x * D2R,\n                y: point.y * D2R\n            };\n        } else {\n            if (source.to_meter) {\n                point = {\n                    x: point.x * source.to_meter,\n                    y: point.y * source.to_meter\n                };\n            }\n            point = source.inverse(point);    // Convert Cartesian to longlat\n        }\n        // Adjust for the prime meridian if necessary\n        if (source.from_greenwich) {\n            point.x += source.from_greenwich;\n        }\n        // Convert datums if needed, and if possible.\n        point = datum_transform(source.datum, dest.datum, point);\n        // Adjust for the prime meridian if necessary\n        if (dest.from_greenwich) {\n            point = {\n                x: point.x - dest.grom_greenwich,\n                y: point.y\n            };\n        }\n        if (dest.projName === 'longlat') {\n            // convert radians to decimal degrees\n            point = {\n                x: point.x * R2D,\n                y: point.y * R2D\n            };\n        } else {\n            // else project\n            point = dest.forward(point);\n            if (dest.to_meter) {\n                point = {\n                    x: point.x / dest.to_meter,\n                    y: point.y / dest.to_meter\n                };\n            }\n        }\n        // DGR, 2010/11/12\n        if (dest.axis !== 'enu') {\n            return adjust_axis(dest, true, point);\n        }\n        return point;\n    };\n}","/*proj4/lib/wkt*/\nfunction _(require, module, exports) {\n    var D2R = 0.017453292519943295;\n    var extend = require(351    /* ./extend */);\n    function mapit(obj, key, v) {\n        obj[key] = v.map(function (aa) {\n            var o = {};\n            sExpr(aa, o);\n            return o;\n        }).reduce(function (a, b) {\n            return extend(a, b);\n        }, {});\n    }\n    function sExpr(v, obj) {\n        var key;\n        if (!Array.isArray(v)) {\n            obj[v] = true;\n            return;\n        } else {\n            key = v.shift();\n            if (key === 'PARAMETER') {\n                key = v.shift();\n            }\n            if (v.length === 1) {\n                if (Array.isArray(v[0])) {\n                    obj[key] = {};\n                    sExpr(v[0], obj[key]);\n                } else {\n                    obj[key] = v[0];\n                }\n            } else if (!v.length) {\n                obj[key] = true;\n            } else if (key === 'TOWGS84') {\n                obj[key] = v;\n            } else {\n                obj[key] = {};\n                if ([\n                        'UNIT',\n                        'PRIMEM',\n                        'VERT_DATUM'\n                    ].indexOf(key) > -1) {\n                    obj[key] = {\n                        name: v[0].toLowerCase(),\n                        convert: v[1]\n                    };\n                    if (v.length === 3) {\n                        obj[key].auth = v[2];\n                    }\n                } else if (key === 'SPHEROID') {\n                    obj[key] = {\n                        name: v[0],\n                        a: v[1],\n                        rf: v[2]\n                    };\n                    if (v.length === 4) {\n                        obj[key].auth = v[3];\n                    }\n                } else if ([\n                        'GEOGCS',\n                        'GEOCCS',\n                        'DATUM',\n                        'VERT_CS',\n                        'COMPD_CS',\n                        'LOCAL_CS',\n                        'FITTED_CS',\n                        'LOCAL_DATUM'\n                    ].indexOf(key) > -1) {\n                    v[0] = [\n                        'name',\n                        v[0]\n                    ];\n                    mapit(obj, key, v);\n                } else if (v.every(function (aa) {\n                        return Array.isArray(aa);\n                    })) {\n                    mapit(obj, key, v);\n                } else {\n                    sExpr(v, obj[key]);\n                }\n            }\n        }\n    }\n    function rename(obj, params) {\n        var outName = params[0];\n        var inName = params[1];\n        if (!(outName in obj) && inName in obj) {\n            obj[outName] = obj[inName];\n            if (params.length === 3) {\n                obj[outName] = params[2](obj[outName]);\n            }\n        }\n    }\n    function d2r(input) {\n        return input * D2R;\n    }\n    function cleanWKT(wkt) {\n        if (wkt.type === 'GEOGCS') {\n            wkt.projName = 'longlat';\n        } else if (wkt.type === 'LOCAL_CS') {\n            wkt.projName = 'identity';\n            wkt.local = true;\n        } else {\n            if (typeof wkt.PROJECTION === 'object') {\n                wkt.projName = Object.keys(wkt.PROJECTION)[0];\n            } else {\n                wkt.projName = wkt.PROJECTION;\n            }\n        }\n        if (wkt.UNIT) {\n            wkt.units = wkt.UNIT.name.toLowerCase();\n            if (wkt.units === 'metre') {\n                wkt.units = 'meter';\n            }\n            if (wkt.UNIT.convert) {\n                if (wkt.type === 'GEOGCS') {\n                    if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n                        wkt.to_meter = parseFloat(wkt.UNIT.convert, 10) * wkt.DATUM.SPHEROID.a;\n                    }\n                } else {\n                    wkt.to_meter = parseFloat(wkt.UNIT.convert, 10);\n                }\n            }\n        }\n        if (wkt.GEOGCS) {\n            //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n            //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n            //}\n            if (wkt.GEOGCS.DATUM) {\n                wkt.datumCode = wkt.GEOGCS.DATUM.name.toLowerCase();\n            } else {\n                wkt.datumCode = wkt.GEOGCS.name.toLowerCase();\n            }\n            if (wkt.datumCode.slice(0, 2) === 'd_') {\n                wkt.datumCode = wkt.datumCode.slice(2);\n            }\n            if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n                wkt.datumCode = 'nzgd49';\n            }\n            if (wkt.datumCode === 'wgs_1984') {\n                if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n                    wkt.sphere = true;\n                }\n                wkt.datumCode = 'wgs84';\n            }\n            if (wkt.datumCode.slice(-6) === '_ferro') {\n                wkt.datumCode = wkt.datumCode.slice(0, -6);\n            }\n            if (wkt.datumCode.slice(-8) === '_jakarta') {\n                wkt.datumCode = wkt.datumCode.slice(0, -8);\n            }\n            if (~wkt.datumCode.indexOf('belge')) {\n                wkt.datumCode = 'rnb72';\n            }\n            if (wkt.GEOGCS.DATUM && wkt.GEOGCS.DATUM.SPHEROID) {\n                wkt.ellps = wkt.GEOGCS.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n                if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n                    wkt.ellps = 'intl';\n                }\n                wkt.a = wkt.GEOGCS.DATUM.SPHEROID.a;\n                wkt.rf = parseFloat(wkt.GEOGCS.DATUM.SPHEROID.rf, 10);\n            }\n            if (~wkt.datumCode.indexOf('osgb_1936')) {\n                wkt.datumCode = 'osgb36';\n            }\n        }\n        if (wkt.b && !isFinite(wkt.b)) {\n            wkt.b = wkt.a;\n        }\n        function toMeter(input) {\n            var ratio = wkt.to_meter || 1;\n            return parseFloat(input, 10) * ratio;\n        }\n        var renamer = function (a) {\n            return rename(wkt, a);\n        };\n        var list = [\n            [\n                'standard_parallel_1',\n                'Standard_Parallel_1'\n            ],\n            [\n                'standard_parallel_2',\n                'Standard_Parallel_2'\n            ],\n            [\n                'false_easting',\n                'False_Easting'\n            ],\n            [\n                'false_northing',\n                'False_Northing'\n            ],\n            [\n                'central_meridian',\n                'Central_Meridian'\n            ],\n            [\n                'latitude_of_origin',\n                'Latitude_Of_Origin'\n            ],\n            [\n                'latitude_of_origin',\n                'Central_Parallel'\n            ],\n            [\n                'scale_factor',\n                'Scale_Factor'\n            ],\n            [\n                'k0',\n                'scale_factor'\n            ],\n            [\n                'latitude_of_center',\n                'Latitude_of_center'\n            ],\n            [\n                'lat0',\n                'latitude_of_center',\n                d2r\n            ],\n            [\n                'longitude_of_center',\n                'Longitude_Of_Center'\n            ],\n            [\n                'longc',\n                'longitude_of_center',\n                d2r\n            ],\n            [\n                'x0',\n                'false_easting',\n                toMeter\n            ],\n            [\n                'y0',\n                'false_northing',\n                toMeter\n            ],\n            [\n                'long0',\n                'central_meridian',\n                d2r\n            ],\n            [\n                'lat0',\n                'latitude_of_origin',\n                d2r\n            ],\n            [\n                'lat0',\n                'standard_parallel_1',\n                d2r\n            ],\n            [\n                'lat1',\n                'standard_parallel_1',\n                d2r\n            ],\n            [\n                'lat2',\n                'standard_parallel_2',\n                d2r\n            ],\n            [\n                'alpha',\n                'azimuth',\n                d2r\n            ],\n            [\n                'srsCode',\n                'name'\n            ]\n        ];\n        list.forEach(renamer);\n        if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n            wkt.long0 = wkt.longc;\n        }\n        if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n            wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n            wkt.lat_ts = wkt.lat1;\n        }\n    }\n    module.exports = function (wkt, self) {\n        var lisp = JSON.parse((',' + wkt).replace(/\\s*\\,\\s*([A-Z_0-9]+?)(\\[)/g, ',[\"$1\",').slice(1).replace(/\\s*\\,\\s*([A-Z_0-9]+?)\\]/g, ',\"$1\"]').replace(/,\\[\"VERTCS\".+/, ''));\n        var type = lisp.shift();\n        var name = lisp.shift();\n        lisp.unshift([\n            'name',\n            name\n        ]);\n        lisp.unshift([\n            'type',\n            type\n        ]);\n        lisp.unshift('output');\n        var obj = {};\n        sExpr(lisp, obj);\n        cleanWKT(obj.output);\n        return extend(self, obj.output);\n    };\n}","/*quickselect/index*/\nfunction _(require, module, exports) {\n    module.exports = partialSort;\n    // Floyd-Rivest selection algorithm:\n    // Rearrange items so that all items in the [left, k] range are smaller than all items in (k, right];\n    // The k-th element will have the (k - left + 1)th smallest value in [left, right]\n    function partialSort(arr, k, left, right, compare) {\n        left = left || 0;\n        right = right || arr.length - 1;\n        compare = compare || defaultCompare;\n        while (right > left) {\n            if (right - left > 600) {\n                var n = right - left + 1;\n                var m = k - left + 1;\n                var z = Math.log(n);\n                var s = 0.5 * Math.exp(2 * z / 3);\n                var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n                var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n                var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n                partialSort(arr, k, newLeft, newRight, compare);\n            }\n            var t = arr[k];\n            var i = left;\n            var j = right;\n            swap(arr, left, k);\n            if (compare(arr[right], t) > 0)\n                swap(arr, left, right);\n            while (i < j) {\n                swap(arr, i, j);\n                i++;\n                j--;\n                while (compare(arr[i], t) < 0)\n                    i++;\n                while (compare(arr[j], t) > 0)\n                    j--;\n            }\n            if (compare(arr[left], t) === 0)\n                swap(arr, left, j);\n            else {\n                j++;\n                swap(arr, j, right);\n            }\n            if (j <= k)\n                left = j + 1;\n            if (k <= j)\n                right = j - 1;\n        }\n    }\n    function swap(arr, i, j) {\n        var tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n    }\n    function defaultCompare(a, b) {\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}","/*rbush/index*/\nfunction _(require, module, exports) {\n    module.exports = rbush;\n    var quickselect = require(360    /* quickselect */);\n    function rbush(maxEntries, format) {\n        if (!(this instanceof rbush))\n            return new rbush(maxEntries, format);\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries || 9);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        if (format) {\n            this._initFormat(format);\n        }\n        this.clear();\n    }\n    rbush.prototype = {\n        all: function () {\n            return this._all(this.data, []);\n        },\n        search: function (bbox) {\n            var node = this.data, result = [], toBBox = this.toBBox;\n            if (!intersects(bbox, node))\n                return result;\n            var nodesToSearch = [], i, len, child, childBBox;\n            while (node) {\n                for (i = 0, len = node.children.length; i < len; i++) {\n                    child = node.children[i];\n                    childBBox = node.leaf ? toBBox(child) : child;\n                    if (intersects(bbox, childBBox)) {\n                        if (node.leaf)\n                            result.push(child);\n                        else if (contains(bbox, childBBox))\n                            this._all(child, result);\n                        else\n                            nodesToSearch.push(child);\n                    }\n                }\n                node = nodesToSearch.pop();\n            }\n            return result;\n        },\n        collides: function (bbox) {\n            var node = this.data, toBBox = this.toBBox;\n            if (!intersects(bbox, node))\n                return false;\n            var nodesToSearch = [], i, len, child, childBBox;\n            while (node) {\n                for (i = 0, len = node.children.length; i < len; i++) {\n                    child = node.children[i];\n                    childBBox = node.leaf ? toBBox(child) : child;\n                    if (intersects(bbox, childBBox)) {\n                        if (node.leaf || contains(bbox, childBBox))\n                            return true;\n                        nodesToSearch.push(child);\n                    }\n                }\n                node = nodesToSearch.pop();\n            }\n            return false;\n        },\n        load: function (data) {\n            if (!(data && data.length))\n                return this;\n            if (data.length < this._minEntries) {\n                for (var i = 0, len = data.length; i < len; i++) {\n                    this.insert(data[i]);\n                }\n                return this;\n            }\n            // recursively build the tree with the given data from stratch using OMT algorithm\n            var node = this._build(data.slice(), 0, data.length - 1, 0);\n            if (!this.data.children.length) {\n                // save as is if tree is empty\n                this.data = node;\n            } else if (this.data.height === node.height) {\n                // split root if trees have the same height\n                this._splitRoot(this.data, node);\n            } else {\n                if (this.data.height < node.height) {\n                    // swap trees if inserted one is bigger\n                    var tmpNode = this.data;\n                    this.data = node;\n                    node = tmpNode;\n                }\n                // insert the small tree into the large tree at appropriate level\n                this._insert(node, this.data.height - node.height - 1, true);\n            }\n            return this;\n        },\n        insert: function (item) {\n            if (item)\n                this._insert(item, this.data.height - 1);\n            return this;\n        },\n        clear: function () {\n            this.data = createNode([]);\n            return this;\n        },\n        remove: function (item, equalsFn) {\n            if (!item)\n                return this;\n            var node = this.data, bbox = this.toBBox(item), path = [], indexes = [], i, parent, index, goingUp;\n            // depth-first iterative tree traversal\n            while (node || path.length) {\n                if (!node) {\n                    // go up\n                    node = path.pop();\n                    parent = path[path.length - 1];\n                    i = indexes.pop();\n                    goingUp = true;\n                }\n                if (node.leaf) {\n                    // check current node\n                    index = findItem(item, node.children, equalsFn);\n                    if (index !== -1) {\n                        // item found, remove the item and condense tree upwards\n                        node.children.splice(index, 1);\n                        path.push(node);\n                        this._condense(path);\n                        return this;\n                    }\n                }\n                if (!goingUp && !node.leaf && contains(node, bbox)) {\n                    // go down\n                    path.push(node);\n                    indexes.push(i);\n                    i = 0;\n                    parent = node;\n                    node = node.children[0];\n                } else if (parent) {\n                    // go right\n                    i++;\n                    node = parent.children[i];\n                    goingUp = false;\n                } else\n                    node = null;    // nothing found\n            }\n            return this;\n        },\n        toBBox: function (item) {\n            return item;\n        },\n        compareMinX: compareNodeMinX,\n        compareMinY: compareNodeMinY,\n        toJSON: function () {\n            return this.data;\n        },\n        fromJSON: function (data) {\n            this.data = data;\n            return this;\n        },\n        _all: function (node, result) {\n            var nodesToSearch = [];\n            while (node) {\n                if (node.leaf)\n                    result.push.apply(result, node.children);\n                else\n                    nodesToSearch.push.apply(nodesToSearch, node.children);\n                node = nodesToSearch.pop();\n            }\n            return result;\n        },\n        _build: function (items, left, right, height) {\n            var N = right - left + 1, M = this._maxEntries, node;\n            if (N <= M) {\n                // reached leaf level; return leaf\n                node = createNode(items.slice(left, right + 1));\n                calcBBox(node, this.toBBox);\n                return node;\n            }\n            if (!height) {\n                // target height of the bulk-loaded tree\n                height = Math.ceil(Math.log(N) / Math.log(M));\n                // target number of root entries to maximize storage utilization\n                M = Math.ceil(N / Math.pow(M, height - 1));\n            }\n            node = createNode([]);\n            node.leaf = false;\n            node.height = height;\n            // split the items into M mostly square tiles\n            var N2 = Math.ceil(N / M), N1 = N2 * Math.ceil(Math.sqrt(M)), i, j, right2, right3;\n            multiSelect(items, left, right, N1, this.compareMinX);\n            for (i = left; i <= right; i += N1) {\n                right2 = Math.min(i + N1 - 1, right);\n                multiSelect(items, i, right2, N2, this.compareMinY);\n                for (j = i; j <= right2; j += N2) {\n                    right3 = Math.min(j + N2 - 1, right2);\n                    // pack each entry recursively\n                    node.children.push(this._build(items, j, right3, height - 1));\n                }\n            }\n            calcBBox(node, this.toBBox);\n            return node;\n        },\n        _chooseSubtree: function (bbox, node, level, path) {\n            var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n            while (true) {\n                path.push(node);\n                if (node.leaf || path.length - 1 === level)\n                    break;\n                minArea = minEnlargement = Infinity;\n                for (i = 0, len = node.children.length; i < len; i++) {\n                    child = node.children[i];\n                    area = bboxArea(child);\n                    enlargement = enlargedArea(bbox, child) - area;\n                    // choose entry with the least area enlargement\n                    if (enlargement < minEnlargement) {\n                        minEnlargement = enlargement;\n                        minArea = area < minArea ? area : minArea;\n                        targetNode = child;\n                    } else if (enlargement === minEnlargement) {\n                        // otherwise choose one with the smallest area\n                        if (area < minArea) {\n                            minArea = area;\n                            targetNode = child;\n                        }\n                    }\n                }\n                node = targetNode || node.children[0];\n            }\n            return node;\n        },\n        _insert: function (item, level, isNode) {\n            var toBBox = this.toBBox, bbox = isNode ? item : toBBox(item), insertPath = [];\n            // find the best node for accommodating the item, saving all nodes along the path too\n            var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n            // put the item into the node\n            node.children.push(item);\n            extend(node, bbox);\n            // split on node overflow; propagate upwards if necessary\n            while (level >= 0) {\n                if (insertPath[level].children.length > this._maxEntries) {\n                    this._split(insertPath, level);\n                    level--;\n                } else\n                    break;\n            }\n            // adjust bboxes along the insertion path\n            this._adjustParentBBoxes(bbox, insertPath, level);\n        },\n        // split overflowed node into two\n        _split: function (insertPath, level) {\n            var node = insertPath[level], M = node.children.length, m = this._minEntries;\n            this._chooseSplitAxis(node, m, M);\n            var splitIndex = this._chooseSplitIndex(node, m, M);\n            var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n            newNode.height = node.height;\n            newNode.leaf = node.leaf;\n            calcBBox(node, this.toBBox);\n            calcBBox(newNode, this.toBBox);\n            if (level)\n                insertPath[level - 1].children.push(newNode);\n            else\n                this._splitRoot(node, newNode);\n        },\n        _splitRoot: function (node, newNode) {\n            // split root node\n            this.data = createNode([\n                node,\n                newNode\n            ]);\n            this.data.height = node.height + 1;\n            this.data.leaf = false;\n            calcBBox(this.data, this.toBBox);\n        },\n        _chooseSplitIndex: function (node, m, M) {\n            var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n            minOverlap = minArea = Infinity;\n            for (i = m; i <= M - m; i++) {\n                bbox1 = distBBox(node, 0, i, this.toBBox);\n                bbox2 = distBBox(node, i, M, this.toBBox);\n                overlap = intersectionArea(bbox1, bbox2);\n                area = bboxArea(bbox1) + bboxArea(bbox2);\n                // choose distribution with minimum overlap\n                if (overlap < minOverlap) {\n                    minOverlap = overlap;\n                    index = i;\n                    minArea = area < minArea ? area : minArea;\n                } else if (overlap === minOverlap) {\n                    // otherwise choose distribution with minimum area\n                    if (area < minArea) {\n                        minArea = area;\n                        index = i;\n                    }\n                }\n            }\n            return index;\n        },\n        // sorts node children by the best axis for split\n        _chooseSplitAxis: function (node, m, M) {\n            var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX, compareMinY = node.leaf ? this.compareMinY : compareNodeMinY, xMargin = this._allDistMargin(node, m, M, compareMinX), yMargin = this._allDistMargin(node, m, M, compareMinY);\n            // if total distributions margin value is minimal for x, sort by minX,\n            // otherwise it's already sorted by minY\n            if (xMargin < yMargin)\n                node.children.sort(compareMinX);\n        },\n        // total margin of all possible split distributions where each node is at least m full\n        _allDistMargin: function (node, m, M, compare) {\n            node.children.sort(compare);\n            var toBBox = this.toBBox, leftBBox = distBBox(node, 0, m, toBBox), rightBBox = distBBox(node, M - m, M, toBBox), margin = bboxMargin(leftBBox) + bboxMargin(rightBBox), i, child;\n            for (i = m; i < M - m; i++) {\n                child = node.children[i];\n                extend(leftBBox, node.leaf ? toBBox(child) : child);\n                margin += bboxMargin(leftBBox);\n            }\n            for (i = M - m - 1; i >= m; i--) {\n                child = node.children[i];\n                extend(rightBBox, node.leaf ? toBBox(child) : child);\n                margin += bboxMargin(rightBBox);\n            }\n            return margin;\n        },\n        _adjustParentBBoxes: function (bbox, path, level) {\n            // adjust bboxes along the given tree path\n            for (var i = level; i >= 0; i--) {\n                extend(path[i], bbox);\n            }\n        },\n        _condense: function (path) {\n            // go through the path, removing empty nodes and updating bboxes\n            for (var i = path.length - 1, siblings; i >= 0; i--) {\n                if (path[i].children.length === 0) {\n                    if (i > 0) {\n                        siblings = path[i - 1].children;\n                        siblings.splice(siblings.indexOf(path[i]), 1);\n                    } else\n                        this.clear();\n                } else\n                    calcBBox(path[i], this.toBBox);\n            }\n        },\n        _initFormat: function (format) {\n            // data format (minX, minY, maxX, maxY accessors)\n            // uses eval-type function compilation instead of just accepting a toBBox function\n            // because the algorithms are very sensitive to sorting functions performance,\n            // so they should be dead simple and without inner calls\n            var compareArr = [\n                'return a',\n                ' - b',\n                ';'\n            ];\n            this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n            this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n            this.toBBox = new Function('a', 'return {minX: a' + format[0] + ', minY: a' + format[1] + ', maxX: a' + format[2] + ', maxY: a' + format[3] + '};');\n        }\n    };\n    function findItem(item, items, equalsFn) {\n        if (!equalsFn)\n            return items.indexOf(item);\n        for (var i = 0; i < items.length; i++) {\n            if (equalsFn(item, items[i]))\n                return i;\n        }\n        return -1;\n    }\n    // calculate node's bbox from bboxes of its children\n    function calcBBox(node, toBBox) {\n        distBBox(node, 0, node.children.length, toBBox, node);\n    }\n    // min bounding rectangle of node children from k to p-1\n    function distBBox(node, k, p, toBBox, destNode) {\n        if (!destNode)\n            destNode = createNode(null);\n        destNode.minX = Infinity;\n        destNode.minY = Infinity;\n        destNode.maxX = -Infinity;\n        destNode.maxY = -Infinity;\n        for (var i = k, child; i < p; i++) {\n            child = node.children[i];\n            extend(destNode, node.leaf ? toBBox(child) : child);\n        }\n        return destNode;\n    }\n    function extend(a, b) {\n        a.minX = Math.min(a.minX, b.minX);\n        a.minY = Math.min(a.minY, b.minY);\n        a.maxX = Math.max(a.maxX, b.maxX);\n        a.maxY = Math.max(a.maxY, b.maxY);\n        return a;\n    }\n    function compareNodeMinX(a, b) {\n        return a.minX - b.minX;\n    }\n    function compareNodeMinY(a, b) {\n        return a.minY - b.minY;\n    }\n    function bboxArea(a) {\n        return (a.maxX - a.minX) * (a.maxY - a.minY);\n    }\n    function bboxMargin(a) {\n        return a.maxX - a.minX + (a.maxY - a.minY);\n    }\n    function enlargedArea(a, b) {\n        return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) * (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n    }\n    function intersectionArea(a, b) {\n        var minX = Math.max(a.minX, b.minX), minY = Math.max(a.minY, b.minY), maxX = Math.min(a.maxX, b.maxX), maxY = Math.min(a.maxY, b.maxY);\n        return Math.max(0, maxX - minX) * Math.max(0, maxY - minY);\n    }\n    function contains(a, b) {\n        return a.minX <= b.minX && a.minY <= b.minY && b.maxX <= a.maxX && b.maxY <= a.maxY;\n    }\n    function intersects(a, b) {\n        return b.minX <= a.maxX && b.minY <= a.maxY && b.maxX >= a.minX && b.maxY >= a.minY;\n    }\n    function createNode(children) {\n        return {\n            children: children,\n            height: 1,\n            leaf: true,\n            minX: Infinity,\n            minY: Infinity,\n            maxX: -Infinity,\n            maxY: -Infinity\n        };\n    }\n    // sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n    // combines selection algorithm with binary divide & conquer approach\n    function multiSelect(arr, left, right, n, compare) {\n        var stack = [\n                left,\n                right\n            ], mid;\n        while (stack.length) {\n            right = stack.pop();\n            left = stack.pop();\n            if (right - left <= n)\n                continue;\n            mid = left + Math.ceil((right - left) / n / 2) * n;\n            quickselect(arr, mid, left, right, compare);\n            stack.push(left, mid, mid, right);\n        }\n    }\n}","/* global window, exports, define */\n/*sprintf-js/src/sprintf*/\nfunction _(require, module, exports) {\n    !function () {\n        'use strict';\n        var re = {\n            not_string: /[^s]/,\n            not_bool: /[^t]/,\n            not_type: /[^T]/,\n            not_primitive: /[^v]/,\n            number: /[diefg]/,\n            numeric_arg: /[bcdiefguxX]/,\n            json: /[j]/,\n            not_json: /[^j]/,\n            text: /^[^\\x25]+/,\n            modulo: /^\\x25{2}/,\n            placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n            key: /^([a-z_][a-z_\\d]*)/i,\n            key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n            index_access: /^\\[(\\d+)\\]/,\n            sign: /^[\\+\\-]/\n        };\n        function sprintf(key) {\n            // `arguments` is not an array, but should be fine for this call\n            return sprintf_format(sprintf_parse(key), arguments);\n        }\n        function vsprintf(fmt, argv) {\n            return sprintf.apply(null, [fmt].concat(argv || []));\n        }\n        function sprintf_format(parse_tree, argv) {\n            var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, match, pad, pad_character, pad_length, is_positive, sign;\n            for (i = 0; i < tree_length; i++) {\n                if (typeof parse_tree[i] === 'string') {\n                    output += parse_tree[i];\n                } else if (Array.isArray(parse_tree[i])) {\n                    match = parse_tree[i];\n                    // convenience purposes only\n                    if (match[2]) {\n                        // keyword argument\n                        arg = argv[cursor];\n                        for (k = 0; k < match[2].length; k++) {\n                            if (!arg.hasOwnProperty(match[2][k])) {\n                                throw new Error(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]));\n                            }\n                            arg = arg[match[2][k]];\n                        }\n                    } else if (match[1]) {\n                        // positional argument (explicit)\n                        arg = argv[match[1]];\n                    } else {\n                        // positional argument (implicit)\n                        arg = argv[cursor++];\n                    }\n                    if (re.not_type.test(match[8]) && re.not_primitive.test(match[8]) && arg instanceof Function) {\n                        arg = arg();\n                    }\n                    if (re.numeric_arg.test(match[8]) && (typeof arg !== 'number' && isNaN(arg))) {\n                        throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg));\n                    }\n                    if (re.number.test(match[8])) {\n                        is_positive = arg >= 0;\n                    }\n                    switch (match[8]) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2);\n                        break;\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10));\n                        break;\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10);\n                        break;\n                    case 'j':\n                        arg = JSON.stringify(arg, null, match[6] ? parseInt(match[6]) : 0);\n                        break;\n                    case 'e':\n                        arg = match[7] ? parseFloat(arg).toExponential(match[7]) : parseFloat(arg).toExponential();\n                        break;\n                    case 'f':\n                        arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg);\n                        break;\n                    case 'g':\n                        arg = match[7] ? String(Number(arg.toPrecision(match[7]))) : parseFloat(arg);\n                        break;\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8);\n                        break;\n                    case 's':\n                        arg = String(arg);\n                        arg = match[7] ? arg.substring(0, match[7]) : arg;\n                        break;\n                    case 't':\n                        arg = String(!!arg);\n                        arg = match[7] ? arg.substring(0, match[7]) : arg;\n                        break;\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase();\n                        arg = match[7] ? arg.substring(0, match[7]) : arg;\n                        break;\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0;\n                        break;\n                    case 'v':\n                        arg = arg.valueOf();\n                        arg = match[7] ? arg.substring(0, match[7]) : arg;\n                        break;\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16);\n                        break;\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase();\n                        break;\n                    }\n                    if (re.json.test(match[8])) {\n                        output += arg;\n                    } else {\n                        if (re.number.test(match[8]) && (!is_positive || match[3])) {\n                            sign = is_positive ? '+' : '-';\n                            arg = arg.toString().replace(re.sign, '');\n                        } else {\n                            sign = '';\n                        }\n                        pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' ';\n                        pad_length = match[6] - (sign + arg).length;\n                        pad = match[6] ? pad_length > 0 ? pad_character.repeat(pad_length) : '' : '';\n                        output += match[5] ? sign + arg + pad : pad_character === '0' ? sign + pad + arg : pad + sign + arg;\n                    }\n                }\n            }\n            return output;\n        }\n        var sprintf_cache = Object.create(null);\n        function sprintf_parse(fmt) {\n            if (sprintf_cache[fmt]) {\n                return sprintf_cache[fmt];\n            }\n            var _fmt = fmt, match, parse_tree = [], arg_names = 0;\n            while (_fmt) {\n                if ((match = re.text.exec(_fmt)) !== null) {\n                    parse_tree.push(match[0]);\n                } else if ((match = re.modulo.exec(_fmt)) !== null) {\n                    parse_tree.push('%');\n                } else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                    if (match[2]) {\n                        arg_names |= 1;\n                        var field_list = [], replacement_field = match[2], field_match = [];\n                        if ((field_match = re.key.exec(replacement_field)) !== null) {\n                            field_list.push(field_match[1]);\n                            while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                                if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                    field_list.push(field_match[1]);\n                                } else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                    field_list.push(field_match[1]);\n                                } else {\n                                    throw new SyntaxError('[sprintf] failed to parse named argument key');\n                                }\n                            }\n                        } else {\n                            throw new SyntaxError('[sprintf] failed to parse named argument key');\n                        }\n                        match[2] = field_list;\n                    } else {\n                        arg_names |= 2;\n                    }\n                    if (arg_names === 3) {\n                        throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported');\n                    }\n                    parse_tree.push(match);\n                } else {\n                    throw new SyntaxError('[sprintf] unexpected placeholder');\n                }\n                _fmt = _fmt.substring(match[0].length);\n            }\n            return sprintf_cache[fmt] = parse_tree;\n        }\n        /**\n     * export to either browser or node.js\n     */\n        /* eslint-disable quote-props */\n        if (typeof exports !== 'undefined') {\n            exports['sprintf'] = sprintf;\n            exports['vsprintf'] = vsprintf;\n        }\n        if (typeof window !== 'undefined') {\n            window['sprintf'] = sprintf;\n            window['vsprintf'] = vsprintf;\n            if (typeof define === 'function' && define['amd']) {\n                define(function () {\n                    return {\n                        'sprintf': sprintf,\n                        'vsprintf': vsprintf\n                    };\n                });\n            }\n        }    /* eslint-enable quote-props */\n    }();\n}","/*timezone/index*/\nfunction _(require, module, exports) {\n    !function (definition) {\n        if (typeof module == 'object' && module.exports)\n            module.exports = definition();\n        else if (typeof define == 'function')\n            define(definition);\n        else\n            this.tz = definition();\n    }(function () {\n        /*\n  function die () {\n    console.log.apply(console, __slice.call(arguments, 0));\n    return process.exit(1);\n  }\n\n  function say () { return console.log.apply(console, __slice.call(arguments, 0)) }\n*/\n        function actualize(entry, rule, year) {\n            var actualized, date = rule.day[1];\n            do {\n                actualized = new Date(Date.UTC(year, rule.month, Math.abs(date++)));\n            } while (rule.day[0] < 7 && actualized.getUTCDay() != rule.day[0]);\n            actualized = {\n                clock: rule.clock,\n                sort: actualized.getTime(),\n                rule: rule,\n                save: rule.save * 60000,\n                offset: entry.offset\n            };\n            actualized[actualized.clock] = actualized.sort + rule.time * 60000;\n            if (actualized.posix) {\n                actualized.wallclock = actualized[actualized.clock] + (entry.offset + rule.saved);\n            } else {\n                actualized.posix = actualized[actualized.clock] - (entry.offset + rule.saved);\n            }\n            return actualized;\n        }\n        function find(request, clock, time) {\n            var i, I, entry, found, zone = request[request.zone], actualized = [], abbrev, rules, j, year = new Date(time).getUTCFullYear(), off = 1;\n            for (i = 1, I = zone.length; i < I; i++)\n                if (zone[i][clock] <= time)\n                    break;\n            entry = zone[i];\n            if (entry.rules) {\n                rules = request[entry.rules];\n                for (j = year + 1; j >= year - off; --j)\n                    for (i = 0, I = rules.length; i < I; i++)\n                        if (rules[i].from <= j && j <= rules[i].to)\n                            actualized.push(actualize(entry, rules[i], j));\n                        else if (rules[i].to < j && off == 1)\n                            off = j - rules[i].to;\n                actualized.sort(function (a, b) {\n                    return a.sort - b.sort;\n                });\n                for (i = 0, I = actualized.length; i < I; i++) {\n                    if (time >= actualized[i][clock] && actualized[i][actualized[i].clock] > entry[actualized[i].clock])\n                        found = actualized[i];\n                }\n            }\n            if (found) {\n                if (abbrev = /^(.*)\\/(.*)$/.exec(entry.format)) {\n                    found.abbrev = abbrev[found.save ? 2 : 1];\n                } else {\n                    found.abbrev = entry.format.replace(/%s/, found.rule.letter);\n                }\n            }\n            return found || entry;\n        }\n        function convertToWallclock(request, posix) {\n            if (request.zone == 'UTC')\n                return posix;\n            request.entry = find(request, 'posix', posix);\n            return posix + request.entry.offset + request.entry.save;\n        }\n        function convertToPOSIX(request, wallclock) {\n            if (request.zone == 'UTC')\n                return wallclock;\n            var entry, diff;\n            request.entry = entry = find(request, 'wallclock', wallclock);\n            diff = wallclock - entry.wallclock;\n            return 0 < diff && diff < entry.save ? null : wallclock - entry.offset - entry.save;\n        }\n        function adjust(request, posix, match) {\n            var increment = +(match[1] + 1)    // conversion necessary for week day addition\n, offset = match[2] * increment, index = UNITS.indexOf(match[3].toLowerCase()), date;\n            if (index > 9) {\n                posix += offset * TIME[index - 10];\n            } else {\n                date = new Date(convertToWallclock(request, posix));\n                if (index < 7) {\n                    while (offset) {\n                        date.setUTCDate(date.getUTCDate() + increment);\n                        if (date.getUTCDay() == index)\n                            offset -= increment;\n                    }\n                } else if (index == 7) {\n                    date.setUTCFullYear(date.getUTCFullYear() + offset);\n                } else if (index == 8) {\n                    date.setUTCMonth(date.getUTCMonth() + offset);\n                } else {\n                    date.setUTCDate(date.getUTCDate() + offset);\n                }\n                if ((posix = convertToPOSIX(request, date.getTime())) == null) {\n                    posix = convertToPOSIX(request, date.getTime() + 86400000 * increment) - 86400000 * increment;\n                }\n            }\n            return posix;\n        }\n        function convert(vargs) {\n            if (!vargs.length)\n                return '1.0.13';\n            var request = Object.create(this), adjustments = [], i, I, $, argument, date;\n            for (i = 0; i < vargs.length; i++) {\n                // leave the for loop alone, it works.\n                argument = vargs[i];\n                // https://twitter.com/bigeasy/status/215112186572439552\n                if (Array.isArray(argument)) {\n                    if (!i && !isNaN(argument[1])) {\n                        date = argument;\n                    } else {\n                        argument.splice.apply(vargs, [\n                            i--,\n                            1\n                        ].concat(argument));\n                    }\n                } else if (isNaN(argument)) {\n                    $ = typeof argument;\n                    if ($ == 'string') {\n                        if (~argument.indexOf('%')) {\n                            request.format = argument;\n                        } else if (!i && argument == '*') {\n                            date = argument;\n                        } else if (!i && ($ = /^(\\d{4})-(\\d{2})-(\\d{2})(?:[T\\s](\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d+))?)?(Z|(([+-])(\\d{2}(:\\d{2}){0,2})))?)?$/.exec(argument))) {\n                            date = [];\n                            date.push.apply(date, $.slice(1, 8));\n                            if ($[9]) {\n                                date.push($[10] + 1);\n                                date.push.apply(date, $[11].split(/:/));\n                            } else if ($[8]) {\n                                date.push(1);\n                            }\n                        } else if (/^\\w{2,3}_\\w{2}$/.test(argument)) {\n                            request.locale = argument;\n                        } else if ($ = UNIT_RE.exec(argument)) {\n                            adjustments.push($);\n                        } else {\n                            request.zone = argument;\n                        }\n                    } else if ($ == 'function') {\n                        if ($ = argument.call(request))\n                            return $;\n                    } else if (/^\\w{2,3}_\\w{2}$/.test(argument.name)) {\n                        request[argument.name] = argument;\n                    } else if (argument.zones) {\n                        for ($ in argument.zones)\n                            request[$] = argument.zones[$];\n                        for ($ in argument.rules)\n                            request[$] = argument.rules[$];\n                    }\n                } else if (!i) {\n                    date = argument;\n                }\n            }\n            if (!request[request.locale])\n                delete request.locale;\n            if (!request[request.zone])\n                delete request.zone;\n            if (date != null) {\n                if (date == '*') {\n                    date = request.clock();\n                } else if (Array.isArray(date)) {\n                    $ = [];\n                    I = !date[7];\n                    for (i = 0; i < 11; i++)\n                        $[i] = +(date[i] || 0);\n                    // conversion necessary for decrement\n                    --$[1];\n                    // Grr..\n                    date = Date.UTC.apply(Date.UTC, $) + -$[7] * ($[8] * 3600000 + $[9] * 60000 + $[10] * 1000);\n                } else {\n                    date = Math.floor(date);\n                }\n                if (!isNaN(date)) {\n                    if (I)\n                        date = convertToPOSIX(request, date);\n                    if (date == null)\n                        return date;\n                    for (i = 0, I = adjustments.length; i < I; i++) {\n                        date = adjust(request, date, adjustments[i]);\n                    }\n                    if (!request.format)\n                        return date;\n                    $ = new Date(convertToWallclock(request, date));\n                    return request.format.replace(/%([-0_^]?)(:{0,3})(\\d*)(.)/g, function (value, flag, colons, padding, specifier) {\n                        var f, fill = '0', pad;\n                        if (f = request[specifier]) {\n                            value = String(f.call(request, $, date, flag, colons.length));\n                            if ((flag || f.style) == '_')\n                                fill = ' ';\n                            pad = flag == '-' ? 0 : f.pad || 0;\n                            while (value.length < pad)\n                                value = fill + value;\n                            pad = flag == '-' ? 0 : padding || f.pad;\n                            while (value.length < pad)\n                                value = fill + value;\n                            if (specifier == 'N' && pad < value.length)\n                                value = value.slice(0, pad);\n                            if (flag == '^')\n                                value = value.toUpperCase();\n                        }\n                        return value;\n                    });\n                }\n            }\n            return function () {\n                return request.convert(arguments);\n            };\n        }\n        var context = {\n            clock: function () {\n                return +new Date();\n            },\n            zone: 'UTC',\n            entry: {\n                abbrev: 'UTC',\n                offset: 0,\n                save: 0\n            },\n            UTC: 1,\n            z: function (date, posix, flag, delimiters) {\n                var offset = this.entry.offset + this.entry.save, seconds = Math.abs(offset / 1000), parts = [], part = 3600, i, z;\n                for (i = 0; i < 3; i++) {\n                    parts.push(('0' + Math.floor(seconds / part)).slice(-2));\n                    seconds %= part;\n                    part /= 60;\n                }\n                if (flag == '^' && !offset)\n                    return 'Z';\n                if (flag == '^')\n                    delimiters = 3;\n                if (delimiters == 3) {\n                    z = parts.join(':');\n                    z = z.replace(/:00$/, '');\n                    if (flag != '^')\n                        z = z.replace(/:00$/, '');\n                } else if (delimiters) {\n                    z = parts.slice(0, delimiters + 1).join(':');\n                    if (flag == '^')\n                        z = z.replace(/:00$/, '');\n                } else {\n                    z = parts.slice(0, 2).join('');\n                }\n                z = (offset < 0 ? '-' : '+') + z;\n                z = z.replace(/([-+])(0)/, {\n                    '_': ' $1',\n                    '-': '$1'\n                }[flag] || '$1$2');\n                return z;\n            },\n            '%': function (date) {\n                return '%';\n            },\n            n: function (date) {\n                return '\\n';\n            },\n            t: function (date) {\n                return '\\t';\n            },\n            U: function (date) {\n                return weekOfYear(date, 0);\n            },\n            W: function (date) {\n                return weekOfYear(date, 1);\n            },\n            V: function (date) {\n                return isoWeek(date)[0];\n            },\n            G: function (date) {\n                return isoWeek(date)[1];\n            },\n            g: function (date) {\n                return isoWeek(date)[1] % 100;\n            },\n            j: function (date) {\n                return Math.floor((date.getTime() - Date.UTC(date.getUTCFullYear(), 0)) / 86400000) + 1;\n            },\n            s: function (date) {\n                return Math.floor(date.getTime() / 1000);\n            },\n            C: function (date) {\n                return Math.floor(date.getUTCFullYear() / 100);\n            },\n            N: function (date) {\n                return date.getTime() % 1000 * 1000000;\n            },\n            m: function (date) {\n                return date.getUTCMonth() + 1;\n            },\n            Y: function (date) {\n                return date.getUTCFullYear();\n            },\n            y: function (date) {\n                return date.getUTCFullYear() % 100;\n            },\n            H: function (date) {\n                return date.getUTCHours();\n            },\n            M: function (date) {\n                return date.getUTCMinutes();\n            },\n            S: function (date) {\n                return date.getUTCSeconds();\n            },\n            e: function (date) {\n                return date.getUTCDate();\n            },\n            d: function (date) {\n                return date.getUTCDate();\n            },\n            u: function (date) {\n                return date.getUTCDay() || 7;\n            },\n            w: function (date) {\n                return date.getUTCDay();\n            },\n            l: function (date) {\n                return date.getUTCHours() % 12 || 12;\n            },\n            I: function (date) {\n                return date.getUTCHours() % 12 || 12;\n            },\n            k: function (date) {\n                return date.getUTCHours();\n            },\n            Z: function (date) {\n                return this.entry.abbrev;\n            },\n            a: function (date) {\n                return this[this.locale].day.abbrev[date.getUTCDay()];\n            },\n            A: function (date) {\n                return this[this.locale].day.full[date.getUTCDay()];\n            },\n            h: function (date) {\n                return this[this.locale].month.abbrev[date.getUTCMonth()];\n            },\n            b: function (date) {\n                return this[this.locale].month.abbrev[date.getUTCMonth()];\n            },\n            B: function (date) {\n                return this[this.locale].month.full[date.getUTCMonth()];\n            },\n            P: function (date) {\n                return this[this.locale].meridiem[Math.floor(date.getUTCHours() / 12)].toLowerCase();\n            },\n            p: function (date) {\n                return this[this.locale].meridiem[Math.floor(date.getUTCHours() / 12)];\n            },\n            R: function (date, posix) {\n                return this.convert([\n                    posix,\n                    '%H:%M'\n                ]);\n            },\n            T: function (date, posix) {\n                return this.convert([\n                    posix,\n                    '%H:%M:%S'\n                ]);\n            },\n            D: function (date, posix) {\n                return this.convert([\n                    posix,\n                    '%m/%d/%y'\n                ]);\n            },\n            F: function (date, posix) {\n                return this.convert([\n                    posix,\n                    '%Y-%m-%d'\n                ]);\n            },\n            x: function (date, posix) {\n                return this.convert([\n                    posix,\n                    this[this.locale].date\n                ]);\n            },\n            r: function (date, posix) {\n                return this.convert([\n                    posix,\n                    this[this.locale].time12 || '%I:%M:%S'\n                ]);\n            },\n            X: function (date, posix) {\n                return this.convert([\n                    posix,\n                    this[this.locale].time24\n                ]);\n            },\n            c: function (date, posix) {\n                return this.convert([\n                    posix,\n                    this[this.locale].dateTime\n                ]);\n            },\n            convert: convert,\n            locale: 'en_US',\n            en_US: {\n                date: '%m/%d/%Y',\n                time24: '%I:%M:%S %p',\n                time12: '%I:%M:%S %p',\n                dateTime: '%a %d %b %Y %I:%M:%S %p %Z',\n                meridiem: [\n                    'AM',\n                    'PM'\n                ],\n                month: {\n                    abbrev: 'Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec'.split('|'),\n                    full: 'January|February|March|April|May|June|July|August|September|October|November|December'.split('|')\n                },\n                day: {\n                    abbrev: 'Sun|Mon|Tue|Wed|Thu|Fri|Sat'.split('|'),\n                    full: 'Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday'.split('|')\n                }\n            }\n        };\n        var UNITS = 'Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|year|month|day|hour|minute|second|millisecond', UNIT_RE = new RegExp('^\\\\s*([+-])(\\\\d+)\\\\s+(' + UNITS + ')s?\\\\s*$', 'i'), TIME = [\n                3600000,\n                60000,\n                1000,\n                1\n            ];\n        UNITS = UNITS.toLowerCase().split('|');\n        'delmHMSUWVgCIky'.replace(/./g, function (e) {\n            context[e].pad = 2;\n        });\n        context.N.pad = 9;\n        context.j.pad = 3;\n        context.k.style = '_';\n        context.l.style = '_';\n        context.e.style = '_';\n        function weekOfYear(date, startOfWeek) {\n            var diff, nyd, weekStart;\n            nyd = new Date(Date.UTC(date.getUTCFullYear(), 0));\n            diff = Math.floor((date.getTime() - nyd.getTime()) / 86400000);\n            if (nyd.getUTCDay() == startOfWeek) {\n                weekStart = 0;\n            } else {\n                weekStart = 7 - nyd.getUTCDay() + startOfWeek;\n                if (weekStart == 8) {\n                    weekStart = 1;\n                }\n            }\n            return diff >= weekStart ? Math.floor((diff - weekStart) / 7) + 1 : 0;\n        }\n        function isoWeek(date) {\n            var nyd, nyy, week;\n            nyy = date.getUTCFullYear();\n            nyd = new Date(Date.UTC(nyy, 0)).getUTCDay();\n            week = weekOfYear(date, 1) + (nyd > 1 && nyd <= 4 ? 1 : 0);\n            if (!week) {\n                nyy = date.getUTCFullYear() - 1;\n                nyd = new Date(Date.UTC(nyy, 0)).getUTCDay();\n                week = nyd == 4 || nyd == 3 && new Date(nyy, 1, 29).getDate() == 29 ? 53 : 52;\n                return [\n                    week,\n                    date.getUTCFullYear() - 1\n                ];\n            } else if (week == 53 && !(nyd == 4 || nyd == 3 && new Date(nyy, 1, 29).getDate() == 29)) {\n                return [\n                    1,\n                    date.getUTCFullYear() + 1\n                ];\n            } else {\n                return [\n                    week,\n                    date.getUTCFullYear()\n                ];\n            }\n        }\n        return function () {\n            return context.convert(arguments);\n        };\n    });\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n/* global global, define, System, Reflect, Promise */\n/*tslib/tslib*/\nfunction _(require, module, exports) {\n    var __extends;\n    var __assign;\n    var __rest;\n    var __decorate;\n    var __param;\n    var __metadata;\n    var __awaiter;\n    var __generator;\n    var __exportStar;\n    var __values;\n    var __read;\n    var __spread;\n    var __await;\n    var __asyncGenerator;\n    var __asyncDelegator;\n    var __asyncValues;\n    var __makeTemplateObject;\n    (function (factory) {\n        var root = typeof global === 'object' ? global : typeof self === 'object' ? self : typeof this === 'object' ? this : {};\n        if (typeof define === 'function' && define.amd) {\n            define('tslib', ['exports'], function (exports) {\n                factory(createExporter(root, createExporter(exports)));\n            });\n        } else if (typeof module === 'object' && typeof module.exports === 'object') {\n            factory(createExporter(root, createExporter(module.exports)));\n        } else {\n            factory(createExporter(root));\n        }\n        function createExporter(exports, previous) {\n            if (typeof Object.create === 'function') {\n                Object.defineProperty(exports, '__esModule', { value: true });\n            } else {\n                exports.__esModule = true;\n            }\n            return function (id, v) {\n                return exports[id] = previous ? previous(id, v) : v;\n            };\n        }\n    }(function (exporter) {\n        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n            d.__proto__ = b;\n        } || function (d, b) {\n            for (var p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p];\n        };\n        __extends = function (d, b) {\n            extendStatics(d, b);\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        __assign = Object.assign || function (t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        __rest = function (s, e) {\n            var t = {};\n            for (var p in s)\n                if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                    t[p] = s[p];\n            if (s != null && typeof Object.getOwnPropertySymbols === 'function')\n                for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)\n                    if (e.indexOf(p[i]) < 0)\n                        t[p[i]] = s[p[i]];\n            return t;\n        };\n        __decorate = function (decorators, target, key, desc) {\n            var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')\n                r = Reflect.decorate(decorators, target, key, desc);\n            else\n                for (var i = decorators.length - 1; i >= 0; i--)\n                    if (d = decorators[i])\n                        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n            return c > 3 && r && Object.defineProperty(target, key, r), r;\n        };\n        __param = function (paramIndex, decorator) {\n            return function (target, key) {\n                decorator(target, key, paramIndex);\n            };\n        };\n        __metadata = function (metadataKey, metadataValue) {\n            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function')\n                return Reflect.metadata(metadataKey, metadataValue);\n        };\n        __awaiter = function (thisArg, _arguments, P, generator) {\n            return new (P || (P = Promise))(function (resolve, reject) {\n                function fulfilled(value) {\n                    try {\n                        step(generator.next(value));\n                    } catch (e) {\n                        reject(e);\n                    }\n                }\n                function rejected(value) {\n                    try {\n                        step(generator['throw'](value));\n                    } catch (e) {\n                        reject(e);\n                    }\n                }\n                function step(result) {\n                    result.done ? resolve(result.value) : new P(function (resolve) {\n                        resolve(result.value);\n                    }).then(fulfilled, rejected);\n                }\n                step((generator = generator.apply(thisArg, _arguments || [])).next());\n            });\n        };\n        __generator = function (thisArg, body) {\n            var _ = {\n                    label: 0,\n                    sent: function () {\n                        if (t[0] & 1)\n                            throw t[1];\n                        return t[1];\n                    },\n                    trys: [],\n                    ops: []\n                }, f, y, t, g;\n            return g = {\n                next: verb(0),\n                'throw': verb(1),\n                'return': verb(2)\n            }, typeof Symbol === 'function' && (g[Symbol.iterator] = function () {\n                return this;\n            }), g;\n            function verb(n) {\n                return function (v) {\n                    return step([\n                        n,\n                        v\n                    ]);\n                };\n            }\n            function step(op) {\n                if (f)\n                    throw new TypeError('Generator is already executing.');\n                while (_)\n                    try {\n                        if (f = 1, y && (t = y[op[0] & 2 ? 'return' : op[0] ? 'throw' : 'next']) && !(t = t.call(y, op[1])).done)\n                            return t;\n                        if (y = 0, t)\n                            op = [\n                                0,\n                                t.value\n                            ];\n                        switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return {\n                                value: op[1],\n                                done: false\n                            };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2])\n                                _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        }\n                        op = body.call(thisArg, _);\n                    } catch (e) {\n                        op = [\n                            6,\n                            e\n                        ];\n                        y = 0;\n                    } finally {\n                        f = t = 0;\n                    }\n                if (op[0] & 5)\n                    throw op[1];\n                return {\n                    value: op[0] ? op[1] : void 0,\n                    done: true\n                };\n            }\n        };\n        __exportStar = function (m, exports) {\n            for (var p in m)\n                if (!exports.hasOwnProperty(p))\n                    exports[p] = m[p];\n        };\n        __values = function (o) {\n            var m = typeof Symbol === 'function' && o[Symbol.iterator], i = 0;\n            if (m)\n                return m.call(o);\n            return {\n                next: function () {\n                    if (o && i >= o.length)\n                        o = void 0;\n                    return {\n                        value: o && o[i++],\n                        done: !o\n                    };\n                }\n            };\n        };\n        __read = function (o, n) {\n            var m = typeof Symbol === 'function' && o[Symbol.iterator];\n            if (!m)\n                return o;\n            var i = m.call(o), r, ar = [], e;\n            try {\n                while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n                    ar.push(r.value);\n            } catch (error) {\n                e = { error: error };\n            } finally {\n                try {\n                    if (r && !r.done && (m = i['return']))\n                        m.call(i);\n                } finally {\n                    if (e)\n                        throw e.error;\n                }\n            }\n            return ar;\n        };\n        __spread = function () {\n            for (var ar = [], i = 0; i < arguments.length; i++)\n                ar = ar.concat(__read(arguments[i]));\n            return ar;\n        };\n        __await = function (v) {\n            return this instanceof __await ? (this.v = v, this) : new __await(v);\n        };\n        __asyncGenerator = function (thisArg, _arguments, generator) {\n            if (!Symbol.asyncIterator)\n                throw new TypeError('Symbol.asyncIterator is not defined.');\n            var g = generator.apply(thisArg, _arguments || []), i, q = [];\n            return i = {}, verb('next'), verb('throw'), verb('return'), i[Symbol.asyncIterator] = function () {\n                return this;\n            }, i;\n            function verb(n) {\n                if (g[n])\n                    i[n] = function (v) {\n                        return new Promise(function (a, b) {\n                            q.push([\n                                n,\n                                v,\n                                a,\n                                b\n                            ]) > 1 || resume(n, v);\n                        });\n                    };\n            }\n            function resume(n, v) {\n                try {\n                    step(g[n](v));\n                } catch (e) {\n                    settle(q[0][3], e);\n                }\n            }\n            function step(r) {\n                r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n            }\n            function fulfill(value) {\n                resume('next', value);\n            }\n            function reject(value) {\n                resume('throw', value);\n            }\n            function settle(f, v) {\n                if (f(v), q.shift(), q.length)\n                    resume(q[0][0], q[0][1]);\n            }\n        };\n        __asyncDelegator = function (o) {\n            var i, p;\n            return i = {}, verb('next'), verb('throw', function (e) {\n                throw e;\n            }), verb('return'), i[Symbol.iterator] = function () {\n                return this;\n            }, i;\n            function verb(n, f) {\n                if (o[n])\n                    i[n] = function (v) {\n                        return (p = !p) ? {\n                            value: __await(o[n](v)),\n                            done: n === 'return'\n                        } : f ? f(v) : v;\n                    };\n            }\n        };\n        __asyncValues = function (o) {\n            if (!Symbol.asyncIterator)\n                throw new TypeError('Symbol.asyncIterator is not defined.');\n            var m = o[Symbol.asyncIterator];\n            return m ? m.call(o) : typeof __values === 'function' ? __values(o) : o[Symbol.iterator]();\n        };\n        __makeTemplateObject = function (cooked, raw) {\n            if (Object.defineProperty) {\n                Object.defineProperty(cooked, 'raw', { value: raw });\n            } else {\n                cooked.raw = raw;\n            }\n            return cooked;\n        };\n        exporter('__extends', __extends);\n        exporter('__assign', __assign);\n        exporter('__rest', __rest);\n        exporter('__decorate', __decorate);\n        exporter('__param', __param);\n        exporter('__metadata', __metadata);\n        exporter('__awaiter', __awaiter);\n        exporter('__generator', __generator);\n        exporter('__exportStar', __exportStar);\n        exporter('__values', __values);\n        exporter('__read', __read);\n        exporter('__spread', __spread);\n        exporter('__await', __await);\n        exporter('__asyncGenerator', __asyncGenerator);\n        exporter('__asyncDelegator', __asyncDelegator);\n        exporter('__asyncValues', __asyncValues);\n        exporter('__makeTemplateObject', __makeTemplateObject);\n    }));\n}"]}